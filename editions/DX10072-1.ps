%!PS-Adobe-3.0
%%Title:
%%Creator: 3B2 Total Publishing System 8.07g/W
%%CreationDate: Thu Dec 07 14:18:54 2006
%%Pages: (atend)
%%BoundingBox: 0 0 612 792
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
200 dict begin
/BD{bind def}bind def /ED{exch def}BD /LD{load def}BD
/setpacking where{pop /P1{true setpacking}BD /P0{false setpacking}BD}
{/P1{}BD/P0{}BD}ifelse
P1
/DPROC{15 dict begin /FontType 3 def
/FontMatrix [7.47943e-4 0 0 7.47943e-4 0 0] def
/FontBBox [0 0 0 0] def /Encoding 256 array def
0 1 255{Encoding exch dup 3 string cvs cvn put}bind for
/CP 256 array def
/BuildChar{exch begin CP exch get
dup null eq{pop 0 0 0 0 0 0 setcachedevice}{exec}ifelse end}BD
currentdict end definefont def}BD
/DPROC1{11 dict begin /FontInfo 8 dict dup begin /FullName 4 -1 roll
readonly def /Notice 4 -1 roll readonly def end readonly def
/FontName exch def /PaintType 0 def /FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array 0 1 255 { 1 index exch /.notdef put } for def
/FontBBox exch readonly def currentdict end dup /Private 8 dict dup begin
/-|{string currentfile exch readhexstring pop} executeonly def
/|-{noaccess def} executeonly def /|{noaccess put} executeonly def
/BlueValues [] |- /MinFeature {16 16} |- /password 5839 def 2 index
/CharStrings 257 dict dup begin /.notdef <118f1453a4f8df53> |- end end put
put dup /FontName get exch definefont def}BD
/E{/exec load}BD /N{{rlineto}bind repeat}BD /R/rlineto LD
/M/moveto LD /CU/curveto LD /CL/closepath LD
/L/lineto LD /SC/setcachedevice LD
/FNT_MX 6 array def /FD 1024 dict def /f{FD exch get setfont}BD
/MF{FNT_MX astore exch findfont exch makefont dup setfont FD 3 1 roll put}BD
/NP/newpath LD /ST/stroke LD
/ZAP{setlinewidth 1 setlinejoin 1 setlinecap ST}BD
/SFR{gsave eofill grestore ET 0 gt{gsave ET ZAP grestore}if}BD
/SB{setgray /IN true def}BD /SH{sethsbcolor /IN true def}BD
/setcmykcolor where{pop}{/setcmykcolor{1 sub 4 1 roll 3{3 index add neg
dup 0 lt{pop 0}if 3 1 roll}repeat setrgbcolor pop}BD}ifelse
/setoverprint where{pop}{/setoverprint{pop}BD}ifelse
/findcmykcustomcolor where{pop}{/findcmykcustomcolor{5 array astore}BD}ifelse
/setcustomcolor where{pop}{/setcustomcolor{exch aload pop pop
4{4 index mul 4 1 roll}repeat setcmykcolor pop}BD}ifelse
/set3b2custom where{pop}{/set3b2custom{dup 0 eq{pop setcustomcolor}{1 index
0 eq{1.0 exch sub setgray pop pop}{3 -1 roll aload pop 6 -1 roll 6 index div
3 -1 roll add 1.0 6 index div 2 copy gt{exch}if pop exch 5 array astore exch
setcustomcolor}ifelse}ifelse}BD}ifelse
/SCM{setcmykcolor /IN true def}BD /SCU{set3b2custom /IN true def}BD
/FCC{findcmykcustomcolor}BD
/colorimage where{pop}{/colorimage{dup 3 eq{pop{/srcb ED /srcg ED /srcr ED
/linit{/rdata srcr def /gdata srcg def /bdata srcb def}BD /getrgb{dup rdata
exch get exch dup gdata exch get exch bdata exch get}BD}{/src ED /linit{
/cdata src def}BD /getrgb{3 mul 3{dup cdata exch get exch 1 add}repeat pop}
BD}ifelse 3 index string /idata ED {linit 0 1 idata length 1 sub{ idata exch
dup getrgb 4 mul add exch 3 mul add 8 div cvi put}for idata}image}{4 eq{{
/srck ED /srcy ED /srcm ED /srcc ED /linit{/cdata srcc def /mdata srcm def
/ydata srcy def /kdata srck def}BD /getcmyk{dup cdata exch get exch dup
mdata exch get exch dup ydata exch get exch kdata exch get}BD}{/src ED
/linit{/cdata src def}BD /getcmyk{4 mul 4{dup cdata exch get exch 1 add}
repeat pop}BD}ifelse 3 index string /idata ED {linit 0 1 idata length 1 sub
{idata exch dup getcmyk 4 1 roll 3{3 index add dup 255 gt{pop 255}if 3 1
roll}repeat 4 mul add exch 3 mul add 8 div cvi 255 exch sub exch pop put}for
idata}image}{pop image}ifelse}ifelse}BD}ifelse
/SOT{/OT ED}BD /SOB{/OB ED}BD /SOCP{/SOC ED 0 SOB}BD /SOO{/OO ED}BD
/SO{setoverprint}BD /Y{/YY exch YY add def}BD
/D{/STR ED XX add /XX ED NP IN{XX YY M STR show}if
OB -1 ne{gsave /IN IN SOC OO SO XX YY M STR false charpath OT ZAP def grestore}if
ET 0 gt{gsave XX YY M STR false charpath ET ZAP grestore}if}BD
/sv{save}BD /r{/XX XX /YY YY 5 -1 roll restore def def}BD
/C{/Y2 ED /X2 ED /Y1 ED /X1 ED
grestore gsave X1 Y1 M X2 Y1 L X2 Y2 L X1 Y2 L clip NP}BD
/CS{grestore gsave}BD /CE{CL clip NP}BD
/BX{/Y2 ED /X2 ED /Y1 ED /X1 ED NP X1 Y1 M X2 Y1 L X2 Y2 L X1 Y2 L fill}BD
/TC{systemdict /eofill get E]cvx bind put end}BD
/T1C{dup /CharStrings get 3 -1 roll 3 index exch put
/Encoding get 3 1 roll put}BD
/BEGINEPSFILE{/EPSFsave save def /dc countdictstack def /oc count 13 sub def
userdict begin /showpage{}def 0 setgray 0 setlinecap 1 setlinewidth
0 setlinejoin 10 setmiterlimit [] 0 setdash NP
/languagelevel where{pop languagelevel 1 ne{false setstrokeadjust false
setoverprint}if}if translate rotate translate concat translate scale
translate}BD
/ENDEPSFILE{count oc sub{pop}repeat countdictstack dc sub{end}repeat
EPSFsave restore}BD
/NEGATE{[{1 exch sub} /exec load currenttransfer /exec load] cvx settransfer}BD
/notEPSF /showpage load dup type /operatortype eq{pop true}{dup rcheck
{length 0 ne}{pop true}ifelse}ifelse def
systemdict /pdfmark known not
{userdict /pdfmark systemdict /cleartomark get put}if
/CPS{/#copies ED}BD
/repl{dup currentdict exch known{Encoding 3 1 roll put}{pop pop}ifelse}BD
/cmap_font{
findfont dup length dict begin
{1 index /FID ne{def}{pop pop} ifelse}forall
/Encoding Encoding dup length array copy def
currentdict /CharStrings known {CharStrings begin exec end}if
currentdict end definefont pop
}BD
/map_font{
{228 /Eth repl 244 /eth repl 252 /Thorn repl 236 /thorn repl
 220 /onequarter repl 221 /onehalf repl 212 /plusminus repl
 127 /Euro repl 128 /ff repl 129 /ffi repl 130 /ffl repl
 132 /Eth repl 133 /eth repl 134 /Thorn repl 135 /thorn repl
 136 /onequarter repl 137 /onehalf repl 139 /plusminus repl}
 exch cmap_font
}BD
/3B2Pagesizes [
  [/a5tray      420  596]
  [/a5          420  596]
  [/A5          420  596]
  [/b5tray      499  709]
  [/b5          499  709]
  [/B5          499  709]
  [/a4tray      596  842]
  [/a4          596  842]
  [/A4          596  842]
  [/lettertray  612  792]
  [/letter      612  792]
  [/Letter      612  792]
  [/legaltray   612 1008]
  [/legal       612 1008]
  [/a3tray      842 1191]
  [/a3          842 1191]
  [/11x17tray   792 1224]
  [/11x17       792 1224]
  [/ledgertray 1224 1008]
  [/ledger     1224 1008]
  [/a2tray     1191 1684]
  [/a2         1191 1684]
  [/a1tray     1684 2381]
  [/a1         1684 2381]
  [/a0tray     2381 3368]
  [/a0         2381 3368]
] def
/IG {index ge}BD
/SZ {sok{pop pop pop}{3 IG exch 4 IG and{dup where{pop cvx exec /sok true
store}{pop}ifelse}{pop}ifelse}ifelse}BD
/IS1 {pop /sok false def /mediawidth statusdict begin /measure where{pop
measure}{864}ifelse end def /medialength 10000 def statusdict begin
/setpage where{pop /pagemargin where{pop 2 copy mywidth 0 eq{mediawidth}
{mywidth}ifelse pagemargin sub medialength 2 copy 5 IG exch 4 IG and{pop
pop exch 0 setpage /sok true store}{2 IG exch 3 IG and{1 setpage /sok true
store}{pop pop}ifelse}ifelse}if}if 3B2Pagesizes{aload pop SZ}forall end
pop pop}BD
/IS2 {/setpagedevice where{pop 4 dict dup begin
 /PageSize [5 index 5 index] def
 /ManualFeed 2 index def
 /ImagingBBox null def
 /Policies 2 dict dup begin
   /PageSize 6 def
   /ManualFeed 1 def
 end def
end setpagedevice pop pop pop}{IS1}ifelse}BD
P0
%%EndProlog
%%BeginSetup
%%BeginFont: BG-Maths-Calligraphic
%!PS-AdobeFont-1.0: BG-Maths-Calligraphic 001.000
%%CreationDate: Mon Feb 27 19:23:53 2006
%%VMusage: 120000 150000
11 dict begin
/FontInfo 14 dict dup begin
/version (001.000) readonly def
/Copyright (Adobe LucidaMath-Symbol used for uppercase characters, Adobe Kaufmann used for lowercase characters.) readonly def
/Notice (Copyright (c) 1990 Adobe Systems Incorporated, All Rights Reserved.  Lucida is a registered trademark of Bigelow & Holmes.) readonly def
/FullName (BG-Maths-Calligraphic) readonly def
/FamilyName (BG-Maths-Calligraphic) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -30 def
/UnderlineThickness 60 def
/Weight (Regular) readonly def
end readonly def
/FontName /BG-Maths-Calligraphic def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [ 0.0010000 0 0 0.0010000 0 0 ] readonly def
/UniqueID 4057312 def
/FontBBox {-78 -290 1339 855} readonly def
currentdict end
currentfile eexec
e8dc61728071abd4d5bcd230c4e186dce095a0ca84ffc476adfaa82124268e60d2cc570c
5f52c10ed4a85a71ce8e5bcf26aa13b27d7fce1cc0c72c3b848dd5ffb2d56d06a1920fad
e4ffa3b35336627e9ed1622c1f9652956d4a424488b4c4ffda9936442bbe0ca749700ae9
8a2bf964fad088f0cc64b7c1d76742f25e90e759aca624a321402b1d20863faf5e04b86c
1ae66f450b1586041815e52f13d2ae539f1725d11489898a83a05fe04d6d14bce66e2cb8
55496ec301a39f6baea5645c3bb28d512ea3d9daae2532a8ff7f3b2d8201ccdb660749a0
4064eabd7029d71212882c0cad9f221e484ed8b6b52c05176bd3678e2e3f5d0a0be3553d
96d1781570e26dd7b0749b85296b89c554623801c3d0ffa1dac68bfc8905995aaea775c7
4ad4faa7832735180eb256b86afce306128b9ba89d893dd8a385166ab9ac34dadc7b751c
0477a87bbb22cb7528d3bee6ccca93b9b69d647ab1699d49856f826f983d53ec9e598240
3194dd48770d73baf17b00574a2c9552d0d78ee1279106c696191253271d6c8424274315
836023d36852f6f99f964ae1fabced32a7484d57d866a9a06cc935c928129fd0b06a81bf
09d6409f35d182ff87bef820572805520cc39965eea2be85a9153d6a3fb2fee6c39bcf0c
becc3e94da5bd51d236454a8e8fb29b246b7e358394b06ee47aba0798e235360503cfe59
f2a65c381bc49e838829d96b97685aa797b09ebbba446c4917dc29e239f3b607e5d7b0ea
2f3686ea925a617a948466fb4669a12c0f131806cda2dc6263c58c2c4f21dbb0d7e0cea2
768e0c4b8897cb6f24f7dc268ec437ddba6213331a0849d14f192bdc2d91090e6374ccc0
a9d23827ed009732e4decb38d031cc434cd51082742e2b0fefb5e7cbcf7140f80b32824b
d9909d8c6219d9a5acc2dcba32115fd84e56ec940f6ce107c44182fb2173517e5ccf5eab
5be233e5f169b1600190e9c619330c00337646e2ec56b0a90636018db04b01b1a020f25e
2be2a62520bf5591dd5cf6b37da5502247c41eddb0b6e9efa1db4555c8f1f0b74261da38
408186f7906aafa4de924211169e7d418bf183a1f3ee6ddb45a9b019bb149b821d364565
75d6a12113f1fa16e4e0eb3ec89015fcc891fedcd55369ba22b1f64400b2e8ad658e8e66
08c0a90916bb13e5b3ee852e6ca71ddf36fda2e78fd21ee4bc56589f8be49a08aa2428d1
271a53953d75005082d6a50ac447e30d2724cb70caa16ba34e52c7f4e58afa7851bb8d3a
be0ae8ae245c3de928010c4237752a05fa14ae5782c58509fd523b5b7b7fb3001d491fbb
f7930e18323506c65bd371f2d55d55ee443e2deff4b90c59647bed155714d35eacaa2aa0
3703999034fc171d49c7932cd3ad6b0dfce1710d27f536d4595777d791642b848062117c
f9abc29ab045af50d98fc8562ebceeddd4ac43afaeacfda4826bc7eb5fa02267e56afa9f
1d079d89ddbfd72ace7885c616f9234aaa666f74fbca65f60d3114cb05208a78bea76b19
62df1dab64f1dd6eaa919164bae5f2ee5c9404eebe436d0fab5460a55d79164bdacadc40
0ac42d0295a3cda825bc5d3e8b360f8a1ba39777050b2e127ff4e65f0b179ffbd2215731
424430c34a942605bc20f4c7f3116c31a30fbdfd61962953dabc0afbe0afe81bed3dcb7e
bf32f844f99574976e9e203eac58da864f37b44c4028a38999e1ee7a4ac3d9e23cfc216b
a20a8a2442025c429ff861822a321e7d929defcf30e4ab2f194386aabe0dc1d717ad160b
f9be6b5304b4063042fd9cb495e054c7f0939eed61e276da16646465e7b14c9302a97e59
dc0937a3e130f7da8a6a04964c105608c8a84d5a3ccae9d66717fc33b2045330e0163201
1072e747e2e7ee994b07ec0b05ba050247bad57f5645054c409691e769aa24efa33fef7d
02236e48f9775f360be1f6daae5d2ee7b365f35e13c28ccff09c9f8436d155e8418d4145
a08967d72bc0b79ebe941f4c00c90ac087dee55362629b8132316d4190b03fbd0f327fa3
8fb79d0a3e4bc3086f5825f0e1a2504c1ff452450daaaede6aa6426dc810e56fdf788e8c
7f5c299c61d9aa4fa7de8ac6e219b4f1f6734d712dc153c1eb8d4eb1194b743bb8695796
17ac13849cbe4847fcfa4e0dfc88dcb4c0593813c559f1f78c006927e6197323e3210832
f4b1e4db33249bf194476132e044083f906698859cb0241ff7c7b4d05759067ab16d9ae0
90aa253247d260f4ba93e1252e5161b667023cf92f66c0f20d6f978c6b1a4103a7064eac
7703078de2d0d59dac6a45f609534145294095da49a1175c5c589f097adb69259bc13afc
6f659457b45b5cb51d9d9436d4250dd73e0061bd75826d49dc6835662a22dc7c78515fb7
b821f3f55f5e00cc29dd641b6880b5ae23788110bcba0c3f90093d9a670ae7ff9b1d0822
18be46abba57fb336f21e4a7db1cad3c86f9eaf0c27c26cf15d8e82aa924217d2ed6435c
20a37eebcd460c6097fa2469d50ef0c3244f9924a62d660ef6452e36342eb5f2e853b7aa
49713c8d4949628e623a2a6d0a2cc356b0113c0407f7b6014d7c216c53226211b1ac8607
68a18e688264d55c157f8a409ceae5ee8107605e6e7e870e5a0b57390be56e7770a5c50e
ad1be18dfe573c2ff39db9e47c0ed8ebf3c14619204838cc52c6a69968c303362c04b549
51c26fa87fd398637fd64b12f348c9e46ee749739a727428e81b37225f392629c9c9dcbf
d49e353b55c8bd8d099b455df70d95e3644135360f3446b66cf11bef95b45df1d1ced11d
a0174ddddd7c9c7ef9ef98af363edb82cb81978ea22d1ec83564467f239e97ab6dfce569
c932b09f0ce7b99c3ebef0b23227f28697b1e1a213f59041d7ab74939a1ef502c287aa0e
3aa8caf0800b44fc13b395c0ca60cdd6afc50b67e046489a59fdc57b472474e007acb9e6
b08ae39bf9cdbd4b43cea0f2385741479ed9ea05474d3f661ca69fc573240593cc7ef6fd
5a6b55100c3922ff73709ac81657a0a9f10be1da66ec77368c4aeec7cd96c0f0a2beac29
b9d64f94050cd732c7cfbd75babe02930aa1679cc107e3f36452310e3f18394e1ee73e4c
458c690e34ffb390f22992e30610ca3800169f55c1a8fa19c6d197345242688951212339
f9bd0b1c0514825f33fcca14c110cc5c9cde4057a0b30c6590a7982c54d5ca04d4e8e3e6
c4bc1132a1697dcd00507d08486fa0865db36deb37e6a004d3f7bc2d89412ec2178c1793
23ae6889afb2589cf125d41a3dff9c6d98cb563003ad313bed20f5d88c5956109cb4aa10
b3b16b9cf59ba71099562da419c5ef10f4c26e5a27238d59d3dc4db54326255f62599a38
831892fcb49ef99c3300f4a32a9127fcfca2bdb88c0b00115d4986e393dfb5a848a38f43
3fe8322e0fa90b15a88329836f563137475ea2e9f7cd573d1ea8cf569b0a27864281e0aa
48c2da3b413c85705bffbc7678b4fda2a9d8dfb2d51672d7401ac28a747c1c355b5d9b5e
b7a2883ded73a5a5e30bcfce46d7d379c417ee8d5f2f1b7e7e6091a18903066b58d4414f
fbdbfe657828d30137199d681f60e7e452cdea788ce6a6f9d0b01ec696fdeb093b5bd14a
836860e12067679513783a72c898bb8e4191e5e91f3a579abcf231fc10fe54464d2b1e5a
d17f5922721dd981639e565666157041faa77784ae0ad31ca1d5cc45ba62132f606940d4
1a2ec4533ee60413b5eff72eba648d5b0c0812b0e59723f88a052eb856f5e668ec9986e0
9a692a6bc0e1d98eef9a0e852b7281d5cbebb240b961faf6284361d7b0db999823474d35
8699824f31978a0e9582a96d69a7677c2eed93d9113dfc3c778a1ab0de0e5c501e20c65a
f0c964f9ab70b7c3c280913d9a76967e77aab128d750350c6aad958ade919a2962b24a47
d6e7ecf330155238db2d45e97536a56b7d6f523c4b86d344c38349f060cd3edbe1fe77f1
ba4d510f0789083a829adc426a2ad16597f288acff66f008cf483a280fc022ac7c5f71a2
6100c94cfc8b112082378429e570e2ffe546ca76247497b980620f2cba39f44c1754636b
2285a0653b1657fe359f33788dbb94706dc41624ffc05948941551cc3a91c003b2ebf472
b43013da37854c343ff93da252e5b4e086cb55ec91a5e6a8c9c9238380899772cd8a3dce
d4f3328793d120fcd9cee8a4442989b73860b2823535dd9134da595120e968378089d9f3
f5fee05c631031e179f7d65cd06dc53262424e9dda23c3472dd9349d882f9cf6e28bf010
8d0e3f0c163cf68abedbbb3cd694a66694ee1210d8bf27c0932b82a879ad8cb38d40ac0a
5e4bb6dc24271dfb17122dc2086269049202026bc9e1d9d1346382187d61bdd8dc8c469d
e872ce7999d5471be87ce84e3a1669374bc24efa955fa57696385e1c2cabffaab0f22d0b
deaa094ccc5535c56a4414567e5df17a2f41e975a1247337049fba1b8109f797760af92d
833dfe2a463966c1e25aade3e6901512bec2db1ee9c2a59130b79376a4b32746b4ae8ba5
04c6078c7775d6d3151371aafffb9f088cf16b995b540289d5fabba9c03eefec632ceaef
aa25b6391a2d7011fa55ec91f8a00c5aae3d3108aeb8dc28029992f0f27e886e1dc337ed
5999b20ad57983abe7c67f52401f64d98ef90de2004eba09fbc23298213e1e9ad2dc570d
2874794b78b9a50a033a7a7eac6c7f08bde761c4599bbc593dcb2009a661dbb3cf84b31c
d77da1b026566fae4d10d5da10041d333319b8bd376e46520551e430effdf6c6a27d7a0c
e26bd50552f6ca7d0131f7529a6e092ae117bcb2a257bc3b1db715f55254338c223986df
c5d2955b28aad55298db24d7a19a2aeb13ffaed6a5157d7191dbef8035bad8bfc00746e1
e10b0b5da3c746fa14a743405567928ac131141d5be8895e43b115b30a8b3ba158f3bfe2
a1ad998ef31e6e834ced06584f4d1eade48b8ec690eb04c213c6a6f9283a27274903d0a2
e06de0cce27e3c0abfc4e1af7331a631319a77dfd3f663d31ba9891da10891eaaf57b474
6c2ca385a2cc936be990653d2f3d54a7ef595f371cd7ae6286a5fb0939d349a538263b73
f0fbd108534a44836d1b445d701e3d80c065c08f86ad8b9cfd57efaf74fe183d4a68dd5a
50ba06c55c158a06cedb4f4e46b1cc8a052c25138b32e94a25a73a9aff427acc734124ca
000034dff2565d094dbc300a0a2b477a4eb8b8deddab129be66821aa4a5e00b2b627ae84
04f5b3c1fd35167fdd439c8a7ef3e12febc2dbbbbde42924296f81e0e77f5933d6b24871
8a458468186a4633ac774a6473ec764435657b4d97597f666ae47e8ab45291210ee5dbef
f8cf51c27682cf081e74b8ddee38b77ab32f571af61780b5fa1fc4a2a6b9c98f44563c54
05bb81353df8bf4337d587d77d8021c4af5c5c92948b5eaa59ccef28f93e5afed0c7da5e
450244595895981165819809f1d4d430dcc75388769bce0073417cc18e31160669e10adf
20f88397e43ff7f86a3a1958dc76511981e93a50e78521d09e88fd2ea41779e552eb7fce
bf794cb171bf9dfee2b5a1981e8c9926d7fb80b79c21dc6f2b241b3770635ca172915927
b5e8fbf2b0740872d97f60681c2b0a3e6830e7f9295f44b5fbbab50e617da06bc35c939d
350e028460063d897ea609d00f4e306d0b34799eb0fa6a82cdd62cff9d655f3e4d2ed700
f6c08c665fb31ffb6faee948fca77085c9a47053afe4feb825c68b11bf8408aba59a2c47
1a676d0c2eec2c367b78d3ea76015668668527df8294be88af2d206859ebd9d0c185b3e2
03e3c0f23df162d39b0459a24bb2b557b9db6c8ec78c1c52cd5ddbd14c982ab7bff99f0d
f6ef1f92ebf7775d56fd900680c0da6cfe3a4090bcc55992ac12e7db72887042b1c54a8f
fad545dafca08f582d004b77ff6d354f214717af3c1f53ba1ee389766e67d172c79b4713
38f8ac0b43caa028c84c5f8d7c8e2d9a104038f601d156be4c265be50bb5c9473b31d213
186d09fddc458d03767b923957a0455dfc3ea8d9bd6c3268b1b2bb9b4c9d065355a0d538
a0f3ed3a79c63f966ff2602b09ed32db9b7e575122f08f2c33e8892bc9eb375e39805415
cf33b6a9f44d5a9b196c04915c8f1a746be7ae551714d2cb774a98c9d46d17a69b309197
4b267b761097106bb95ebcd0cd8fdc1d38dc9c5f2e64ca55fa14c3440ca39078e67b49bc
f741c22fbc4ccbc154d6ea75ed259510dc5e8524201b355e3219a68587c0ae2054904f6e
88996eeacaf39db74125f83f090c0e5829e07857485ff1d8213025747dbdf76be0e1399a
02de8028ce1e5fd7e7d336f56e50825ba588c2af40fd56ef1b196ef9bbd47f2bee2904df
615af500c71d78fe6d5412b5f19814ce17ff5738b5796a9dcccf766b4f97a68134d68467
23a1704b6964f1958df779306d3b9a309282d672ec75eb2c6ec5de7040866adf37024049
9dde000e4a91ff293c6006ee87e591cef3383a629b1748040202f9f0b483927e79f8b9c7
daa20996f7be32ddd0e4973b23aac7cf3bfcd8f40d12c0e7519719c1cf71f78438b1dd66
08558b83cde389ad824be75b75e31c56ac1f3716a47248ea33c0529a721f227778559f57
812721661d900863e3a09ac3adfe3d00dbc680a11561953689fc3f5d8d5c2526a928c213
67cddb25442c765d251f4f4d24f2daebd28b531978e8b6ecd7ac70ab550c1a6134f0e116
2b5ea8112d37db18f9602fb080c4ae63632c720d877e0ced579f427719747915869e3d9b
e207464be851adf87d1ea34e1bc33c4717e9e09be9bc47b26a7a2183cbcffa426fa0f4a7
8a8ec604e739fa6485311b54fb351f20c8be4e523913032e1187f6ac1932d116e42581be
ef8a43eb012973b03d454e98bacbc1a62b723b4b3e630e2703a7bfdd46eef18dff776669
0a85b0caee44677cf11e3b05214e58fc60670c7b1497b768049ccada211c8a26fd5b6aa7
f9602fbaa34cfbf6be997936ed444aaa544df44117e6ca5673ced0dea00c158231213b8c
29b9bb894fcd7b646d4134fb98e5d9c61645a2e3216184205bb887b85c79839d207d6664
a18146a71f22af58a5e107c304c6d4e04e428b7abb44b8fc34e77f875352fc9780c87fa5
0ed55970a20a1d812f8f7244d94b3bbf158a5cdc0a8c06a6a8e61f64c62cd691dbee12a6
1d18e5f2e3586672d6104774e15b26c5bc4df9f6c9905ae5ec2c349fef5eef8cefabf3de
ffdb2b5b8e47edc0bf85d940e9afcaece36bdec3dcf30ce888ab481efe2953813dda5e04
23d90cb53d6ec590f2177842de84472693c34218d274d5bd172451521628a06473fd0e50
c8cf274e41cb64b015d6bea6c0f4a2176fdf1bc883d0fca5d536e6626d6ad4e2a34eabd1
2720c863b862830969de32ed1daa58cd212274551d3ea025677031596c4c2ffa0e2272c8
039bb11b2ca2581d4ffac7918ce99feb7df75a7ca302c9b5605e47d6bb209a63a42151a8
97669bba9fdcc1b2518062f459615c6fa638efc5a95cb60dc5fc939688c12e840668770e
9c5d08b5d18f91395171cdd38c5268ecdffea7fe758dbdeb316135577536a3181b10feca
9651b861d24ba833827a8498de49f60cc2d1e12aaa33ab99af85a5d9dc5c92df57869302
dc36d1239f234639eb292c7eb4ae8f8107a34c799b4928654c1006e76a83e553b6d48500
a04d96b3e6d1f5ded58b8e19d8afec1d2b7557d71ff4ffe3a2a10e2bc0fc609d7e812ebe
f05dabe1eb3e34b7e16088ca61bb2641143730023f147b8d46e6b50bfe0b8a8adafb8105
c2c6053a84972670b87c4e4caa4d6d8364724addc337c9d8e2386a18f2bfbc759506e446
2520df9fd399affc53eb565068ccfe3247896c35e0a8e3d5b529616d5f85c9d9c0812be0
b1d82db5c00de8b119404e57b1f1e06f7a11a1a7a0e7fbafbce20eef16fec9efbd4a226e
c6a9e404ec16b95becc6fa1ae5aff830a872ab5483208e587f072f852b0369e7496a8931
1db130df011ce29eaf56f7e644a05c8219b64a40154cf090eb8b9c54ef5faf5472995583
15c54590afc6c51ce1b5b8801f83780e65beec65ed1c26ec65b89f2fd09a2ee486f074a4
dc6e5729d88a0411c8dc791e9fa43e703d0d62cf91b5331fb803fe8d224369b0ce440ee7
9440c1e41a4687b12d7ff3896f968efd8a0b16ee978e5f102fa4743eb0bce71c7815004d
e84280750ebe8cd4b1028e7fd86b9036646cb5d771d69ed0aa07369b877e260af45c6655
4343670bc7f2fa11f80a244e98790891417deae7bbaae71b67e962f0e67577e30263a2d7
25ed6ab0ed9b446bd4bd938eb4a62bed0128cf53a451fe72e3879835cc55af404bfdde32
aad677790840ad6369b8fca491b67573390310521c73dd26916e7ba9783d455a738c0ac9
d8763291708b164a32f313909051166c87cff622d2432272bea2be0a564ab7ea1f7966f1
e39f4bfdd5755834bfd3c285532c9f4c9a3a67573fe1c3429e4f581182cbddaafc9ffd68
8420db7672d87d688ead11968ccf925823e1c97c08dcdc113f839435d3a03ef27fb11fe8
4bb97ff8ceeb9004f6c45eb2b27d969089cf53647a3d4d28381aeda7946821b28487fc2e
106a3a263e61dcc030abd239feded2fb9975371844d57ea9bb3f5e2a25691bf2bf3069d9
2508078195eb2ae9e7facefec44e128f24792e9e7164b5745a2f767ecb7cfd8b497b0f16
06f6ddf42295a3945492b7e32fefb0934e00ed951a7fb96c4400d162e50d95fe827ebfa7
b64670d98ba8a0285511cc5480da051fa858c3a2adc8921e392ed4d877d6199f459de6f2
7daaaa7639ebf9c8e790971dbac87e5c6cb163c47028820e15e6f34d8b3bfbf18c01336e
3b8b094c17878daee96425ae7624d5042bbba221c9b629f7bb877bbe2dbb276b241826d5
8d0c593bd21947fc2b9e7aed20b6602071d53562240e0d52077e53b5c2e9eef412992a1d
8ee152fdb78e90dcf9a16a231fd7506c83eaff87431db39bc9375d40f29156a5270afdac
563bc1136e6c7de998bc3981a4587ac8499e22891c2555eed37426d1e8036d5441ba88ae
e878eb19b2f43282a290ad8812571c14baf1e50ba1cc647bd8d07e393c52eb6dd6fc28dc
af5f6a59ac35d2635c1dbb938ec6d6b8f39e4569f777dded58d200166113834b517b704c
c12b3a321563fff8c2f030f1bc9f03cb8e601b05b8be3d2ffd7d9dfb96e1e8ff14c58638
a8a62509361ee9d59079ffe279baf4f5b172d660d2dbb356db55cb4f42e7a884cb200796
6f034fe509149020dbf82f00bc7210f9bb12b9044f57dea7c9b6fc2012b53307b5508e7b
d336ae1a31601611827028a546a7fc4a3adfc1ad37788c4af44e716ddedb86a94084fa8f
8a4ed77165cafa7a27e850a61f465a74a7e550c6e704df61553b42e76805d7f59dd30ad4
e73f2d4620f0f11b730de25869f5785f2da9331e5b41ac925da09b6c86969961aaa17181
8942cc28d5fb2ca904bd6c8850b51775efdf23f8e8835a7cf64823418419347ab686a37d
b74f92381ce2df755fd5d607139f0d4848081f245aa1abfe0a700b27ab54a5837a3c9ba5
f84a9b5a566a68aef3e09154bd2aa7292f4e424f1f837c5938acb25581dce30951550e8d
65150a700610f175a22fbde63cebda2688c624f1423f4597a8104d4c994c3b1722de5004
2b97d2fcbce1a31f51db5953eb0f4e3f53b85557cdc85b7a54ee8f40034de9362ff7c090
8a52debb8b34ba76dcc2d588200ae91e0ae30009484d39c833cf7ba6931b7e793cb8ebf7
ed6914185d5d845ce904b00fecf06f6d78ad004d4bddf2100808383b49f1ff7ae7517181
851063607f05e5d7f0c6171fa2d18c11a44786f6e94cf66df67a7ce76bce6b9a59ceed9d
67d100160743fc3cc2728f6c86a3c745633b4c8e2f0066420fd27bd8263861708082b33e
72e9c093938b134c42a9f4f05a8af3493241ff7f2849f719d739c003e935a5a832eac8f8
3004358a6ef191f54693a58bba98ae98e9000a1da73d890d9adf1ba0e99cb7b3b8b7e345
aaf1fd2b5d398319c3e954307a9c293c6ec1390b6338dd0a7a1cb2e03693d3e52976178b
c65c4c5ee2d743adfdc454a702e9a968d8280cf684072c846c2aafc6582c766420690fa8
11c287047ca785761697756c80c79ae3681da6d59f3d3d6e06d8b4a4757d965545b13f8b
598df69eddc3d8fce2895b4dd8cadaaedf13b86bdeb7fdff93a9e8757457e1b9dd10bd82
bd920c29500fdd5a8ee679acbddfa80b44d6140fa07b0242af59a2b1d56332835a9cf71a
29c6b1ca4b23b666dc152b6266d65ed96afe92ae10197d1f4d306d52d99592a5a26bbcd4
ebb396130d6db60df38181aa49ec0e5d6256b639d995870c22b5de2dc7fc3f21365ca62a
b4cd6f9295946669d48ce0241ae5ccf16f5a4df19041ad17f34e776823a8128acfda019b
0aab007414426e4766c80ef4cd966738c226d63fe67cd7a631e7391b4e97b369fc82f0d3
425a446ea207a8798fb3cca8b82400553f53b5f9660f2ac38137abd73a9a7a03d124a7ed
d2455691f5eb4ec26c12cef6642a87829ca6327379d66b2326f4de199a0f9b0fc02753e9
2c2e174611e82361496362996a933f71323fd77fc5ddc7e34b93c09525324898e441188d
4c8c788ef4348f17283720281b946d62f6838403b59363e73f164cea96f58d3de5f50b2f
bd7effced5bea710547333c2686e8eed5ec06fe23de38110c23e8eb11f846aafab9a1f3e
da501efb7ec2e6ba35ddd9a8f72e06b3077c786b7421e74cf647d85bb1d5f6940a9a66d4
4ae93e46062500feb6c4e0c678499f54586f3c4c7690b50fea2f951e70a6b9bfda6d1a7f
59de40394819dac6ef811f6d24c18853bf042a5aad97b520aad02ce5f9feb26f26e3f11b
a9111c8e70ea190708fd78aab41fa1a67b785dd086940eb94f6ae834c364154287fe53ba
34e5d99877838157cfe11383ab1aea2c4d6ebbd081f21f6451292378196949bd923ffd0e
123966a5bf39da3b62d99ff386694a7f975d542cfe9b7d01d68754a5a3cb33ffd32df939
a94d98584cdbbec44806408bb50ed08041a3abb5a1c7ba45c6f3f6c94deecd53258193ee
f30ad29277019e73f6357936b46f40cb17ff207351d45445c0d8d30f06e008070738400e
e0f84e4532080c0351e21e768ea4040c6d615e806de59556f9122b43241555e0f2f1f1f2
0b714ab8e76c22b45f06132b1331f5dc8a6fe2e3f8c7787ad7ff5797a7421a0a702201cc
a26d396dc0d990da46e272980074cb3f91822f0a58c5d4468a99e02b970373c340773be1
682d01be264b82c5f5b7ab72d5d1b589625890f38846ad8a56d409be8f1f1be80ce40412
9b7feb8f39e3d757003ac9c711bb9158bd5ca9e4f3d380049349b27db6a9e7332ed6afea
27ea837eebbd18126bbcf1af2c7178a774c4380ed5d1fe34c60ff9ea10fe398c2a0ec408
6e19f1787cd30e32fb8974858c885a2ca715843e2f022ab87c2ff3dc4dddb22eda18b11d
f211e6f0b812f6bf53b0c59c43b60237a648b8a0b1152bf012edc68d055cc25ba06031ca
ba3dc55cde285db36cf7fbb62cd30716ef617c73f1e332bdf1578130b299b7d7bf02d88a
6fc8ded79c691f6b357223082146c42021765ca9c58e25c3f434bb6fdb2d499f6ba08721
c9ce18cc11249f3521aabc6b4c30cf2ab8a2a8e606ca34a71558875f853b27572c90ae6e
8d2dc54e44b6bed1cd5b1155f3530fb2376a1bf35c3eb21baadd52d01bb1312e70b25a57
fd45d1a539cb61bc6477f6e1f30b9aeb857b53d327918ae0496091615b41a46cb4a2375b
caf157d09271f825b39d56a79f57d77893646e2883676c7461fe87334b68301eb82e7f2b
94e11de064029102982d5c5da44cdd6772bc9a5ce0a277f078bcaa07ff5e01e0c8aa71d0
f49c5b6a82bc6d6082cd6a65c0182d384517d13151bb4b281be540f65d6dc18082899a2d
aa739af6f4713f30773395a5f3fa913df178c44627d2757dcef9d68b8ce298579df7a6a2
5cf0c41d0bddb18eeefce5d342c77a62e0541247cc6d1612c8e570cef0db2130b85d6820
25a22546bce4492bab75c270bc76fbabb3bd32681484f9ac756319a8e845f8bbd8ed9545
5a7b679b5bb6e9fd930d94e794540a414212fd2e318f76172a9e5f7a5b79ba2a3a170005
418c6de3b0eaf5cbab0fb53d11c838e2372cac6d7c2ef1eb8a84f39259eab4ab271c7674
6f9c882e4375fdb8dedd2640a43a4b8294e1c7f5a931129b50c1e7634a40cf016e3b0bce
1d69f499f934aaae33eef90aba25e35232de93f4ac61bf848de3948004d316b803785d03
314ae96f2db1fe3544cb19205c34334c04282232b84fdefcaf6db11df936158c4b6629af
9f90d181dd3d89beb5a86f958c4ca477b84defbcbd45d5a455e38464d98d97d7e845ed01
a4d5db900d7a85f7c6b05c4a5a1d21e832c8eb16c2dbe9c831de33c1339a964b493f38b3
2af6aed10c9202454fc960353de3c2483737e6131d39a01b2f9770d59a80a88c934b077e
c87851bf519c285a245685eb1c53e0a0d250b3be6d670e614d1ba25ee482889d2e688d2b
b5d8fbdb468f912da493ce4d8c469681a6f4ecdfe207c0428a742b293e562333967f88fe
dd83748838edc551a23990fb04991098ced406fe449e6dce2b8c7357195d59f95d42d0e6
6881192a07caa0bdc923f2f081692a55b0363078bc47004c340a5597b2da3a6db8d94221
d8ca9f71216ef15b3880b38a38f16f22b79ff5cd7b36670ee130eb09a6e75abec33b2ff0
0a592205db34521d16231d50669b1ba84953dce44232c987448451c6f15be4b8d1521f34
32134f7d56b82914fc3df0f0931e0a99b6b475de812ca527800e6e8c5081cbb18983e7f7
80cdd4dee75f94aea16d336a67162d11ab47f0d01bda7f27c55221975ecebfe12876ae26
d74aa6e78703e358a79363312766ad8db2bd5efa98b025aabf35fb77a646b11782a5aa93
c3e68b3f256838a4d29f58a2c27d57639998e14359435fffd36618d7ef46d6c07c143fc8
e9badb2725980218ab807356143c95d5a81d3b052dfdf4a964d839c6f1cabc41dbcb8bb5
0673b7b56e173c45911d7213dd4ea6351bbb049512479f8a5f13c3d10ab43204941cde43
982d9019ee7fb218289fbc9019cd88c40b5bc7c005ce45e7dc99aa0ad940bfe44ee20595
782e3c693aab1a6b66e2b62ebc84670cb18f09bf46acafbaabedd24000010d98c99f72f2
625e57a6a83887f3f64edccaa337c1fdd098b02ce93d6601e3ba12904fd6be1337654c0a
ccf4ff60b5bc2aebb4dfb618e7b64fb94cf4fbe4b0ac070f3179af5560742ca2804fbbd4
c734da8ed1daf70efeb516dc2e0d868bd7142803b7fb1f044728bfd1805f6dc341b37ec3
2a1800ca74f6d84c436ae4ce492d56d6b1e8112c4e9e8cfe65e71336e9faf55671285625
0cfd450438ccbb3fbbd3a77b48f4582b9e1c0c8a04a5ee99af72788ee16443a721aae724
d101078e3de664f0006e8bbe1de55e62d61180bdce77b63ee1bfa319b1b4f142e15001b3
ae0c58282e9c5610b984969c8d31427a6a601bf131e91a747c0850a64d01e0c2f0066ec1
0fbcfb7438d09eb917860aea7f9ff34a0ed5cd0951524cd875eeda7566a8c52024f2da62
bfb1156c6306cf9fd131967aef6f11d6b3bd864569ed52aa4b0223193f1ebde1b0dab242
1509b127e447d152bddca51fa7c6407daee831fb2457c0573e04fecbc43f9d26e09d71d3
20b490dacef8ecb7f7f6ff462fbee00bdcfcafe9461917a42203210280be7f8353716b2a
cd80f97bbea0246098685953a724f1a20d1dfbe16a273717854bf3b1fa49ea127cdc9d2a
b2acd11839d8c191f63bc3ba6b609fbf53f2df6179921d1381e9c02a64fcc79973c7770e
60028da13d876c20d581e9c280da79d2e7a14d9262476b726b794beedb90d3c6008e920d
dbb0102292eaf51d7b517c1a06f4680078e3ccdb7e3fd145175753f287aad1dcffce9a9e
2197e050753982c0c9603ce1f9a09462f54fe71040bee987dfc7d21530026c4faa7da91a
e89283583331d7295f639797c3e7a36b5b7093daa521a8405d3fe5a355c109e69b9ea5ac
6b4fca813df9787a77331f21042f15c213be1d8d9ff326a9a0cf1782de9387540e7c7a16
217f4f9cf25f9fdad4b0a266fb147b6e6904af7c5f198eab5a0ad0fabbb2c3a6580c400c
a7176f52b085f7ba0af328f4a96aeeaadb433dcf9849a566af9c9f59b74d151bddd58a78
4d6f4ce3a84182bf46f2aa8cb3f3864fb1eee7ef9d003a647c16b2aad9e6f0c5fd962558
5d47d6391839b0090833c5fbb0dc3554662b3525bbebfd4d2ac79cee85ca2141d8970870
1737d303ffccf78493ebe57706850be0b545bc002dd3452015e61066b970ec0c309bcdad
21842661a5efa6f22b325bf4819f1830abe8ef0dde13e6c24ad519a575b6840299fc54fc
3d6c9a8c1c1fba8478aa1227a752537ace343e9f4b5fa92a8a9ee8d690af25ec5d717277
25a30754c4e90678953da911a2468be0fb7905dd77e68252f92f1286b5fb2a819e482f78
d378b1acb93e6e89445bb29efaa0b098a767800e40f87c1575a819d98129f754b60965f0
193a306983b5e3bb4af2cdba4385378a0449f63f7f69d8eb1845e57ed19775fbfc7e584a
f76a60bb851defc4c56ca2f33e8f973c30afbf66277cba9115a64681e3f9a2a35d5e9137
a265fa6e5fd21bc587968ac189598c8fb9a5b899398239d369983b93ca7c5d7ac89a747e

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont: BG-Maths-Calligraphic
%%BeginFont: BG-Maths-Extension
%!PS-AdobeFont-1.0: BG-Maths-Extension 001.000
%%CreationDate: Wed Jul 31 12:22:40 2002
%%VMusage: 120000 150000
11 dict begin
/FontInfo 14 dict dup begin
/version (001.000) readonly def
/Copyright (Remapped Adobe's LucidaMath Extension font to conform to 3B2 TeX CM Maths Extension layout and added missing characters.) readonly def
/Notice (Adobe) readonly def
/FullName (BG-Maths-Extension) readonly def
/FamilyName (BG-Maths-Extension) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -133 def
/UnderlineThickness 20 def
/Weight (Regular) readonly def
end readonly def
/FontName /BG-Maths-Extension def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put } for
dup 0 /.0000 put
dup 1 /.0001 put
dup 2 /.0002 put
dup 3 /.0003 put
dup 4 /.0004 put
dup 5 /.0005 put
dup 6 /.0006 put
dup 7 /.0007 put
dup 8 /.0008 put
dup 9 /.0009 put
dup 10 /.0010 put
dup 11 /.0011 put
dup 12 /.0012 put
dup 13 /.0013 put
dup 14 /.0014 put
dup 15 /.0015 put
dup 16 /.0016 put
dup 17 /.0017 put
dup 18 /.0018 put
dup 19 /.0019 put
dup 20 /.0020 put
dup 21 /.0021 put
dup 22 /.0022 put
dup 23 /.0023 put
dup 24 /.0024 put
dup 25 /.0025 put
dup 26 /.0026 put
dup 27 /.0027 put
dup 28 /.0028 put
dup 29 /.0029 put
dup 30 /.0030 put
dup 31 /.0031 put
dup 32 /space put
dup 33 /exclam put
dup 34 /quotedbl put
dup 35 /numbersign put
dup 36 /dollar put
dup 37 /percent put
dup 38 /ampersand put
dup 39 /quoteright put
dup 40 /parenleft put
dup 41 /parenright put
dup 42 /asterisk put
dup 43 /plus put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 58 /colon put
dup 59 /semicolon put
dup 60 /less put
dup 61 /equal put
dup 62 /greater put
dup 63 /question put
dup 64 /at put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 74 /J put
dup 75 /K put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 81 /Q put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 86 /V put
dup 87 /W put
dup 88 /X put
dup 89 /Y put
dup 90 /Z put
dup 91 /bracketleft put
dup 92 /backslash put
dup 93 /bracketright put
dup 94 /asciicircum put
dup 95 /underscore put
dup 96 /quoteleft put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
dup 123 /braceleft put
dup 124 /bar put
dup 125 /braceright put
dup 126 /asciitilde put
dup 127 /.0127 put
dup 128 /.0128 put
dup 129 /.0129 put
dup 130 /.0130 put
dup 131 /.0131 put
dup 132 /.0132 put
dup 133 /.0133 put
dup 134 /.0134 put
dup 135 /.0135 put
dup 255 /.0255 put
def
/PaintType 0 def
/FontType 1 def
/FontMatrix [ 0.00100 0 0 0.00100 0 0 ] readonly def
/UniqueID 4081341 def
/FontBBox { -20 -2778 1398 849 } readonly def
currentdict end
currentfile eexec
e8dc61728071abd4d5bcd230c4e186dce095a0ca84ffc476adfaa82124268e60d2cc570c
5f52c10ed4a85a71ce8e5bcf26aa13b27d7fce1cc0c72c3b848dd5ffb2d56d06a1920fad
e4ffa3b35336627e9ed1622c1f9652956d4a424488b4c4ffda9936442bbe0ca749700ae9
8a2bf964fad088f0cc64b7c1d76742f25e90e759aca624a321402b1d20863faf5e04b86c
1ae66f450b1586041815e52f13d2ae539f1725d11489898a83a05fe04d6d14bce66e2cb8
55496ec301a39f6baea5645c3ece22e3585258ceecdf55fb7e233e928d28c3c571815ee0
d4696bd4caff2016faccd955fef7a54e273082f3e2f4e3aad129bf5a95231802b8b0f85d
e2707785f36a52e8ffc80e3b9808c8c662de17fa318860a234dc7f5162089148c01842fa
27dacbee467c7c1fca69153e6e7f1f68ecf5dd1e85ab1662317f8a2893d04f6637628c0e
3f35c2b907175545e609d9e0a0e904ce433037b73d4950457cdff0e8f3e20e8de2a0e222
44a3742931fd049b6d6836baf01aaca68bae65b7ad2208875ff3f8a38b693ee3503e9c74
599a58d75539f69ea10c2c59dd236cb3df1226846fbd018ea9e8a1afa2f6290960fb5ce2
c10cbeb331f9229c9df240d48e79ea82aaf8e2b17d8b703dbc0eae8706a0e6ce8ad8d0c4
49aa3fe919e55d2d84ac54092cf8dec4540275a0b455f3e764076eb64de7b594c2de77f2
24f1a507e262e82a3297c8db8ab70402a52f613929d845b815edae3d144a10d98a4d2137
5ab0c884701a51b32a38eb1f2e5ef61a6fe1885c08bcf2451ec64bdeeb751a158ce8c738
0c52956fd167c6814f80071e7487324a76cab3605724d4768bdf0191a9c50ab53b090908
d1b3c0c64e4debce21c92ec1b51b649d6cb49fa0e8fd1d1f75d67d1f98236dda60d7b0aa
4db5baa64ffa78a4689f7eaac752c5bde9238ebeef4212cffd4fbf9bfc042156c1c4c03d
374f097dbd90ae7dc49a057557adcdbbef5081f1357000ab52200b16be00645ff85c37d1
70d1b4f5438ec56d123006f14673490fd901730a13cc502342f4a538da197b4c9c14b9b0
5ab04fa2cd81c775564cdad75ceace8668ddf4a24c84c305d1bb9ebceab5ffbb2ddb00c3
bf5ffc0d0a486797ce6d8b4e4e374bdd011eff0c6a4413dec320dd0c3f669f2289a2afc0
4eecd71f6b0171d362f0fe0ea32b22d1f5f23d34781bda296e8d3263c17d68f41c3c2798
0f2af75a63f696c2a6e6f630b124fe50cf2fe1b286bf9c9617cb68924b2a07ed5bc4b9b3
6e9ea939231d8d9362ea43c1406e0b7819a0d24a73b5f5e5e9dead5359f4d6832398160e
4b56a08be1ef71ae36355fff994259c8f887e07bac045d446dbcb617a9d643ce360b127d
33e24b9f11e767074c6e67a25c32dd18946f7d1a7e375d668a62c5ef7e45fbd18b083f3d
bec3460df1ab5a314a5310b8b07f739913e71d73cd6e4c2c63d0853394cf578ecd8caded
5f6daa59f94b030727597c2aa3ec46f65a01b991ccfc0f8325f9831f1b090b495a92f291
c00933c518d181385071a962370b6fd4804d5825b8e06d46a26c3c6b16a3a628d3331e8c
330714eba8069ed9812ed13b953bc299bc1db7f8c358868442a1a41e843cb0ef44066601
e91abeed9e081b198fe7b3a20d984bec4c1b86d3bb595f4008360956a82aa577dadf8057
f7e24ee6d23d77eb829fbe3ba7f54bfeccf471ccad9dc2d9c3f10174accb83b5f5236ac1
b979f8950e486c5fbf8ffbc9a901397b09534c39ec9e30dc8b85ceda82e799da7635047c
27bc35805f9c7e6a4d3e37835387e757fa0eefb73316b6b426ab579b8292cc6f6f39f976
e2d39aa72cc2337735884f0d5719b65a092b19373099b049939f1b045412027113239d20
5c190ac201616e181bda7cb78dd328d6950a98508c5131424f59aba1781bcd257f2a988e
a3ed51750bcfc2978148ace7f326f1603845f494b382ced4c786c0c457a800638f2c3f4f
ac3c0baa5c9dfbe89705a8f7c8f7f02f3427ff9143b33b1c0946c6a1ef7f4b825b637e2d
f4a4db3fe6632a7fae26c4bcf2e7239d8b56b3ada9d5972e4a9fa3acbe56e87d527191ce
ecb6b152012a4443f9090e58834af0c16e2f390e40c8cba54a0313723bb22f3cf4ca85c7
b1ed79b3497806b2fd1a3d1358d0bfbeb2515a49445824f9e09353e6c6fcdde8d7773d54
3041122907c170a6864b54f90dfcb8410b6fc2e98b39b461e11a129d635350a3807d328e
7b3573e15bf732113d9d15b733a1540347108576a0f4c9774dcafefd12f5317e64adf875
3b133b8114590aeffdc2d0bc3243f70f800353488735dd24d3a98cdbeda7a39aa7c5d56f
bef261b8dddc3a71e6575b52b81deb3e4f1445d551f667f119f2e8250064bfd8062a0861
84bb93bd147a639fc5e322ff6b03ffa5c02f4f9455fd8e784b2f7742fd478a3e35885969
0ea00ae4b779effc4c47acb386942fe5d54169bb204db20ae327eeb15c8f5d916fab715d
4b62ece5f073872ee34e9d5ae52538ff36226c351a35c1435aa373a17fc9afeb6c241c5b
b7a6c7ea274f250211ef753a2e09610049110a722f61df76c1532d13c0d887dc775a4d7a
bf9a8eb1a6e50fde55d9542b6e9901661c569e5900e98c7da14ba9894c3799a3aaa8acf6
ebc186620361b654edc9b511d88e0a533856ab408ad7c80d4d20e72deb989fdd5141d27d
a125b538c4f9f77983ef99e3301a0c02a4bdbb63b352b5e4baa981d32c387e279fe7ef33
91ce03f153d10c8e991a7352799d0719d0187015328aae4365d04782d96f62a121dc826b
13c5a64c7fb893b1dbc6012f51e65ca7f4db1fad383fb462baf96bdee5bba2cce1a3e346
0a276f1a2b81e19e389c01172278de3548fa67363469cd8d931fc36202fe0b0a55f25765
eb2cb8d2a17f785acbd5e868b6e58145ec20b89c620bde2318504be5a270823256e8d83f
8ddba04965311b3a99296fa3a360d063e8bd3005cabca54305c17fbf7de09f9c3c051dea
8d021c69c7244c5e34ecdc7b15ba7aa38d2b9670c2c0460490938b1bb056141a8a680ff1
95bb531f286246622a25edb4b7fdf9f79c0505319bd8a8ac23e7b10fe200c11b9e0244fe
3886e433e7f9177a7101db8700c06abebb7331daeba6acaccea0ddd1ade711794a6da8ef
5817264b7d44c65c5f56702c9e9f16f371bcad6bc0508dcb3d7caf0e47bb396221d50069
3b5b30ef8ed406a0b88ed81e16e28e33fb466daf3b94457b3411530d7379923bdf46baa1
b8bf206cd9ce1914f4d49bd251225b1e471529a9ca4ded0a18f8573097984df5572146fa
fd29a0643a36f0919f8770d1c69ed090d8de37f0d618f2f3405ec05bbe7003f31543ad9d
60122413ce4ecc196a4b4887982471765ee3d6fa369f30bc930bac7bc102fda651c1d8a2
fe808a67d48ca62f847cf1931234a5a1d0636520ba5e7be1b1e00b226cd6480a3f77760b
24a0b77f18b56a746b06b5c22c5cd8c83acada814f95d67798b4cbbdbce01b34e9b5d6d0
3b81d52b77ffd2ea96c7b224c4b0261948f356a22297d1d6031bd6c609049e5b4d754117
7afaafbb7bdf4572fa7b24168eda1acdd2ab01a88a707f6d856bbfd1aaf65b1ab21db1cc
2f292634f7c7d6fa717c0bd6d387ecd2f7975e566f68093fd7ad7a79d437e4ed6986ad65
0ca0066309f46b077dd36f6c8b52770dff043bea5fd8e91a4647a1781b89e02caf4f4c18
b01d859d41a68a999e20c6f8a886b0ea2d1ede4a5ffdb51799102e700f86783672ccde4c
1f23b15b541ba5fe8714edff43b31b743e793127ec2796a130a244e7a729fcd37e7f4e1b
74c19a7057c8f44d5f3047644f8f6bc09adf805285c2d5dcfca8dee8ced863a70303e918
476ab67af7b72d08bf45061e781e52ff165eb396c9b0a1a1d5ae25dc66f9d138ef08c1b4
63b40949e8aaec6ef208764be8b3fad23954894b554993afc74caed256696b887bebde72
ae90ea7b9dbca762312f7919edcfc81ffaaa5a99a230eab918d5f0cf1f7459982374e3bf
cca6c9878ccb9db08ef2fc0f62178d84681311d81ad8efcdc3b831c7049b87899eb05e25
10820398f425f1ed9e6b7dc7eefaa39f023c7f03fe65d4891c05e0e3b8ed69dba8a3dbfe
43f0c17d267f7a68b803d470adb013d08dc4c3e479e16f0c9425c8053fdb4fdabbb5a0a0
560984c1305b0c806218f71315f40570fc87d19998863b0e1cfa0159e36021c4640c439c
e8a6cea02b053e37519b951e74ccaf2c99d3997991ac53d7365df76e932b7f72d918dce3
2d650882ede91d7f1270c9e3f077422bf9fec02752338316e21124dca184cd2f39cf6b06
ad51cbac5465a25fa20df1641efeb327c47b2c793114b77c14ec2142046ceda593185251
53337979386fea3e8542780de9f8f5b52d6ed7e7da5b5d116320a2b4762755fdbab49d6b
8477bec3dab5c9e04283f48d72bae3b56a95ec004e45976d784c1bd6cd4a05ab353763f4
8705d3b89a94d1ccb5fd89acb6256d3265a2bac9db6d314add0e36b339b711cc24b1e1db
b9412573a5113df6727d7445f3acee8b29b50c61141f12a7e55d95df04a8c7a32f42a6ff
586da7606a411d2c9ac9085985880e6ad945cce2d38f8b13cc271e055fbc7664dcb5efa7
0cd3c7ad7709ba9331a8f6fcfe4207344a585a4a087cdbbfe1848e53184fb7c1e2123188
e9f9b71065bc8c37d515f175830c8c85bd77b0b2d20257c9080ec1831308008bc408ab5b
ea9bbad4dcf8d1e31e5b9d335bfa20310cfbf027572f40f9bf30ac258d5add8b73d9a737
3619ab1aee1ec3800de63dab02f0773dd81a9e849e0b69ba01f13336200e8c6adab34b98
7a5e5de3058464ac16ce9faf2d5daf08999c9a55ac2528fe582d3bf6bdcac547422b2245
92d54a492321572a6939a799a162471aced5c44a63f7dd8464ce04728666e9e68243002e
7c0f2138f0e9108b913e2bedbcb765cc56ef2447e1a7f0d39b745be8ec244985441dc519
3a8dbd8542d014f1708f69e1b56f1902b5f0d7f17fad822827aa3c791aebbf8874d658e5
fb19335d1d3e5434127366837b9ded2eb07faa94c2a79ad2eca506ae76c573733adbaae7
8386d32974528b9de435c0a8ae8a1ccb3520c83a246f1bd9de41d56030603b4d17da6470
d1990ad7ea6b579decbd1f0f27cb203c9f19dcbcbe98540c36421a33546199e82fd3f9c1
cfee557dad5859a53093c3d597ed8936e08229b516eee42ab0b453aecfae1b4ddcec460e
cbb1fea3b181a5d3d77dea420f2112d533757ee4f85f6dfffa94f0a2a7baf632f4dce584
5bfdce79b18e5d0d88007169143e2ea3a0b76e4c147ce80d6fb7a4faa35621ae08de69c9
edeb46aa963384753d75b160e2a141ff584b93995525e04ab5a258b830b544f0cbe6a991
e87fe9e7b86ff9c8641fadc493ee185ebcadb724008ce6f28a09f006741a6fcf159c5e76
387f520380805d3b042f0a312a2bd77d0a2daf468fbcd6d0dc58bc87ac038d0b5cffc324
c227254109b97d3d936171407344af655453f13da669330574cb3165c2aa8c54bf8d345e
1fea1f9e54a620b87cd8ff27dd8de4ff3b59285f64d7a70c0b5e4a0d61febbc440b234b0
cd96390a45309ce74ad4286ec8ea02b5c00abbb5e4dd6622ef23e71cd1739bf240e6722c
7f576dd6e6efdad87f9d844f8fd4d455a083d1d0bfe8bcda8aeff3ef0033b67656699e23
0c88820c38ffe0d0860c210a913a90405bd0430135bc3aa1dbb53a0291dd2fdfdee7dda1
6eed3427d39cde4136453ccc9712b2ffa2100dd633fc1b1379044c1f94e24dd178e17fb5
7ea43a60c1d91a248855a1bd3f5b187db2c26feba46c02be526adfcfc5662adbaa2e0a65
d723b99e984be611f060a57df4939215ba699711e2b0d3375d6228767ea32222367b18ae
ddccdcc18b10a4c63828eb111f97a7fb63eb2ea49c2b26251778dba47167459352eae786
6f7be3d307c7726372e32c35860bdacf9b57dcd4a74eeb23f59ec3aeb3150d7d4b46d31f
f2aa3902671f7061b7e0434db7ee76c526fa22e970fe07e921f95a3e3490383b66378367
5354bf577aee48e6a42cc5f44d228cb3303e2a252f2db2be4056b61281b4417432a4cba8
65c248fffeb9539786b0d97618e8bac4ddbbc0b1cf133bffa926948c8df5bba266b6708a
214e394c4526b94fa449b0bcf1db8f75ea30c6cded767a18d4b6cfbad256ccf5c21250d9
a45316069f6726bc495fa5aaf9ca48316dd91f11d4330ce7e4d40d1d13c33fe5017189b8
24f68b178ff026297e2f7676c6ee0922d714cfffcdaf7869280a1a5c734eb8d1edd4aa5a
0c0d41ed0cd3285603c58cd1e3c0aa452d385cfed946ba5ff5b05173f4b44f5da6d19f86
354810894a824622198d9c5c1a9b0d4c7270ba87994d829108e36d256c72dd3c1ff73641
966b86943e28cd5245f2b1f91dd70b74e0bda38e1cec11a443b6a96177762e8e49049db4
ecfde73d1b94873effc5dd34023db90638780fdb4e100a44af62b51019b692a8ab984212
1d6def99f73f51f156e11138193fb086704ca3b4897e9a144b431277f5bcc3c7c7fd4a93
c4f8c3936a8d6c8723d9caac69233eb058e33ceef3cf6c6399979b502499a25dcd0bc8f3
c208d77f5efce4ecddbb49fe7602ccdfcad82d86bdf8ab58522f1704cef1a8651fb1ce0a
07745d22986df133c97bda55b282701cb67e558d51f7561ce65d99f7bc7286cb1a33bda9
ab55536a8b83614c2bd478515d3b88e9639c89e41b335f9967fecb8e99f31f2b65399235
708f08f2bc03daa2162f19a039157d35fcdcb7dfb078dbb869fa4d19c7996f0c1e756b9b
48c0bb428e38ef57ef590815d2ee1b5780aa4728624015de0e528bedf3a9705053dcc085
70ab6a6cc4af1bf36028323b0517778538364de3554659e970bdd9e9a3d878ad8bd2642d
0b165a862e408d0df4924bf4b2454c2dd608b6ce2c4ce07dd0f4eea4830a0f71268bde14
c4162ba3e6f565553c4587ac83a0da04f4056ab893d7314648a90060ffb10643e82ed809
0ed673875746515fd734afaeb5548fe30d12c7a2ad3228289dbeb98d8095c7b95b084e36
aaa9f77d691e9a95b63ce8590a4a978685539fd6495d4ed2911ba4240d8566d5b2896dd0
64a3c5a2406b01ef4058d8538e765bd2d3cda6b6b8372f17d66226812448eb8b07a77dd4
dd237cd4c8c0c9edb8e479ce336b7579a1893d67fd65bdb4be09de2e68c6aaf015b9c96f
1fd8b944469991b17745c62e469befd28af4e6bca5e74d75f754c26dd0268a474ab7dfe6
e5477cfe2da4b58fbbdd9f2f207ab0930df61e481f319bf67686daeaae5ab34f3662c28c
a03a20187f3560d675a14e71af259e6315780bae8a6f55e68ac217bc77e3a4c4a7bfd28a
563a48cf24fe9e306791f9b1314cc90f73a59c9a6ea43e6035a01760505b366adf2d1ee7
33a7393d0ffbb90a039930d6e316f5bdc8fa59f8aa04fd1225a1ad52101c69a554f1f9cb
7004d20326ae0121fe9b16ea3d1384f13eaa41016c66051593762833a5520cbefdcc2318
d937ba464b842d5cfa11d998b7ff90fb372b44385f0e06fb4771a636ea74392d7192b010
9e1887142270ec620fe6ec6716248d3c67633ce36e1ff7bbd28e4e8c00f78cf6683c5829
19d2947b6c3f016865b4837703022d2e89e83595a03dc42a4a944bebbe11144efc19875a
eb5a7bca25b6caafc25228ba87de6b5bb33fc6ed4e542cf2d9649e26caae911fd11493f4
ec0258a977bf5bb17f35aa0d2c33fedde1f62f33272a55561f43a921cdd34431927c5406
cebb37f8a1bfc8e3eebdb3a29f860232b9cbac2093425824496d58ab4377f22712518b89
68e68df0b1b248e29478569f48229df0bf72d80926918034bb51fb21d8632c3f40dc7fb4
563b3eb96bd9c6956573ae210ad1b7f4d012000a9e9eb09b2dd69a99826083eb5e42c423
ec04931543e5f3b4322dc63417226b6324ccf0a68a3af00e72a93a466740f4746ac85447
dc16fdfbd22dc9ff12facb8e625e774edf3e973c3feaa54361458efea06d6e2c4b7a1620
4671579c5486d6804445425dfb98a4b882beb8bc032398e792efe2cf5672b1d2a90a2ee6
b9eec53d0709122810a26d1f10fcf25b505e1ef9cbfe0962e3fe77d479e3b01c7440211b
37de3e5f36651b006ae4110a09b5ae2236a5ef4dd623e691609eaca3d8b56bf462f417cd
82b86cf3587c01f53bd07c13063a85765d8b15cd1ccd05ab7970aa635430c1bf3de58e3e
ab672ed9b6c0fd657b8066c296a5c9b1d0b8504b691a5534b4a73f606cccf00f6ca78a2b
7cdbd2b3dc705046a9ab7d1d1f66fac83862ae7c24dc80be3164a771e70ff4e02e100e2e
7a0fd712fc75d14e7266d9ada6a92a10c631fab09ada7961c18e1114a37befc01e71df03
a8e0692a4f07c5b5f21eeb9d2841b8f38129f078664b6581799839d96e3b3b9adce7dfc1
8a37e6df5fd4b599c42a638ecbb02927ce9cfa11c06f1bfa9484598c68a6a987e931c072
b40d7b4df37c888f43bcc6263ff84d07f99d4a16f47def0c5be6d7d1ae412e554e14ce7b
f104912ee4413321af4c7996f3ccb8cdb17a85574912bbcd966e70f2f49d4f533ad7091d
6db78c08bb6657845d527c92aef1f9bdedcba13110ef5a105d6d487fdd8865d4a9d13437
8234a90e26968815e2981ff8ec81ed498faf5086fccbe9a5c9b31dc8c1d55f3f83ac662e
96aaa78485f647966d88cfea27bbbb84ce209de2afc4096602810e46f578cdf4ff566649
e8d85cbc56c2b21ce650977c158be6a559a2a1db8b4df207338962c82c354219bc9a719e
bd3975c5d9b444e228d5d77fc8a014e3efc0c6dea711b5fc12d08ce6e475213790d13a47
80b24f69d75f3271d60a16990e44eadfc0d5cbfac35a181edfdbed24f33ca5c2b0f29091
4c672c7ac4360d7a7d418836ac49cf7948cd29096a9637d8985bbfe120dda2197bf8420d
b87aa5eaa4c8c448bac2caa18136a2034d28e32fb38e8d96557240a596268cdde665b707
7d7fb94fe62c6361d4b070bd8b68df10d9df8b9b944908ba13ca373a3c65c9e3ee1ee0e2
4d30d19dd5f4d8a27abae7cffd49af916586998cec4ca6a967b427f8ecf64078d7b71c2e
8ecc955676169593718472e3760f20bb55f6a91b5ace1bb105ff429ee3f5d3993ff153fa
fe2032c9a274c6dd388990502ae4ec6038c74e2db70e138a95bd0dfd90e8e984316f0de0
dc2563f1dfb069dea561f9ad1e3d05da8960017910273c4dac7c6e2d88f259242c449958
50cb608104a40dc10f0bd5568a83de2069f01725b8691483e88cee8fd1a5a59587ee22b3
dee7ece8b4503bba625ba208c6486e4a26af3ff76a62ec02a7f5d402ad39715683af23c7
19bcc97417d945637131be23bb87996f6236018dbb9443a9b79380c401c1605a2e7f4b88
d1c1b254560b76dedbfe0ae0ea50a2ac24e149083bae96585ee327a718f036c34d9f65e4
c4b2994f89e49dbc4461687aa2b6ae79507ee6ef0006810dab48e58671cd16e120e56bbd
414ee3869376c2c37231439d4494eea1cf3842da2906ad3350d4906c3416d8ffff8fe593
b18cef30634d742e951e0309b3750dde64c488e45a8bb3dba7c79b7ab245f51283d2dcc8
2254c38d47033e5c17a3afb54211b34be833019ee2bd4226d934c906f04ab5b3b7675059
87f3ea5c87c19c6ec5bc2070f966988dd864b0648192a58824af6b18e334eb0a134ed17b
36cf1018d40fd87a6604f5e0bf9891782d103166013207d484f8b82cb11c66c7b005a243
624ce1d279f47145e967d8c09b18406c851cf12cd736ad4b358143986460197945277a2c
3e8ad25dcaed9983ed4274026c3a9b0c7742d90b249652221b14ef46306388d3d4cf053b
f9b7433f5dc94473a41b680791fc6c099cab662a465dc77fad4281c2c9a9078097fd797e
2bcb87848f57d76b2a2ab39f4c9ef3caea50c8c5a6a6a3b739d29210e709da5e1bf27d38
68f202826d7f1d06344f3b0355e855ce26edbb0ba63929a94d8cffd151f0fa2a040d7604
269efe5a632e70b106878ca67338f8606d41353807eca3fe181c139d013093afbcd29ecc
5669cd27a8f5679c8f3b269c7897a58d3b46f4be897795dc685c236ea7b04220125642aa
ef9494e136c445fc70a484ccb565ee54e4274e1baabef22b49815e067cd5ac26d52db047
07b0c4565d391c021d96d8f65b209dcb048910c2a3641106fef78c1470c5fbd9bb135e3b
38f41af0b7a37ee0c7492349b69af6709555666e41bac8049dae36a3910be830d0e67e7b
dfba6c986f52724e614cdc0d1327782bc22b14fbed7dff7c53e0a34f75690be7be973639
5c514a712008a9b4e5df7a3ec6c173dad11c1d1b1a7c0bf594283079f9eb89fa137e37ff
330f57f26d01ef0da5292c6e0116fedf97b205003e896b1879f5bdda3adc5c78171e7d5a
32ab591a0c3ea61f76746104d68b46e145d46b845183ca748d4a2a3b9c4bc033050e4bcd
17cf03fce8ea3f822660239b7885d5792df9028829ceb9f923a8b7e8877414e6b07313e1
d5be8f062f122ee597a70a14507a6703cddb4c39f448cde44de36d4544e9d772d5778c97
1434d41e4f8ca6b03534bac137b40ffe16e43b3682f7f0ad12f82c9fb5b64551299de9d5
bd20d65ff4df62dda44a452408253a644a3930562a9430a6cb6b2cdf4d250aaa071e1cd6
51349bbd66c25f0ebe7f2eb61f0193b0e3fbbac84088a328aca0ce3d3632b4886995615f
16f3e8a36d21974cddfa567845d69e8da3149391fb9ab055842f6ef6c26567ffe2f33c17
a481e0d4f7172a82b18698b721a8a370f23d7ab4cd9ea1f5b8b3b675bb73955b3db65c80
9e7191541761e0d0c45da8cd74aebc93352c72ad38ccff33e8ca4528c7c3dc1a13e5db5d
80336b5b193c00a2a903722c93ae1bbff8b2fccc13db7510a97939a54b9199a298548ca2
8da0b168b36f80b211362574cac5529a115d9f2c365e255aeebbc2f41ab1cb206247ebf6
e5a3320e0527141efa35e0cba1818aa510976b0e0bfeedce3f9f4ce315723c239ebe6715
076c6ab309344fd8845b2ed4a544b627c4cfe70c2fdc3aae3706510b09fdd7be5e0f15f7
24cbf3eab33c5845b0793a01a0c12824cda36ad19976ca055e18fd3a6a431a77b05038fe
39cbb3da14818130914bed8a27ed5cc261d303ca8aea92d593a37100bee460f3aedc2c38
f0c6c8abd12a81a627462772dc121abf59b85716f9f7556a165019fa790690e93ec9692c
661f4dadaed22f17ecf5d752eac0a80588b8e1ece9d6d5578d9b201e2f58a80d8c4c8074
e8e480b49edd40759b0cd3e0b7c4a7eb70e12c6571a318c4642e433b17d7e0f934cfa84e
44f69655582019cf6e702fadc6fd0295e57227d083d8ac4e6b29a22030033a6c651c2e0e
5fb8a8ae9f797f528bf5d28825f8ef85473c4e96840cb4f62e4238a61cb56710c0737b36
26dd1e036c864b03fdeea665a2305a4d227089892702a6f8509948d20bffa7fc10bda419
38185f2c2fbe6e27c6998ecdb5cedeceff44c3edf78ad7b90db15acd5fa4a631659bab1c
5e66640ead07c2ca5843ad12c02c55b5f7c661fa55d9fbc2782d1d214b9337553cef5331
2a57010ae23e1c9632e59869c1d4b16ac4f164c2750137b6004514cc50dc9c0ddff0af83
b3c62423a782770c67bb6df1f9cb533f8a0291dafaa53e93acff2a54d54c7f7da01b79e5
b78394bc2e28a2cc5485df80fa6290bd737c53094fd1f4f90bc54f7a42425e6a40f5bad9
533179297f57409542ba147cfab39811fc1e85ee47c40a57ded277c5cda03b83de06654a
aa2c1eaea885e86d0065853f1320fd11915fc3a1a0a93beb91c0a8812c8b9cdeb45c10bb
efac1ef34e56325462f5184e4e15e1221c6a75d3f256caaea42fee9bc468593bf57573ea
cff75b35088cc27f6bb982b3b76319de212d0de5ebebaf39595094237a959eda7cc1d016
5339245115fa83becca7884d906f4164682772fc338264819407fe97029c11b1ccac0791
5a32033f5f0bd1274d1db346b07e5ce3ed960a145b8fe7b22757504866eafd4b5cae87f4
00466ed1fa875dfa3c407a047d73c55fe434a095a74a20d237e9949274c4374752a6c851
06f9ce73253fdd04a2ae3de25e973a022d3a35605d9f0edb9ddd090566c23316555ab279
87b6d05a1c0c613aa458eda9c5227254d991ffc0011ca0842405000106e6b8195aaabdb7
38f1996a3e334e35304ded052921d4c711b3eb196b2ece987297fe3ed9093e9ec2be7a3b
af134d8766500259e2413b0919ecdbdfec22a5c12d6f02f2cfc5a62ffd2a0ce94a391683
9b2a6b4e61d5df4382da78a2defb554feadaa1b8cbf778d778fef409b3380a52843d0543
8528b18cef4bf82f8b776d06e96d6a0bdeb496f40472eac753e7bafccec07642e516e852
0580f33cf4b7abc5484770ef06f29f3ca00c8b2d3ff0d7e521e04239cc02defa801694c9
a1f328973245ec00b8db704764917454c5e2021cc038ce34bb0af5445748bd0470a70cb9
b74e9752101ac4c3cf6c3f5e6a63f84949a2ba89f1fe17eaa06d7ea41035bc090d829c2d
a855d2b7a067d521f44417158f34d1d1e4e73c0d5aa7b2f3e645a66bbdf1b8ce39435efa
64c3789b68506df5df49c2c25c5c996b1eae35b2717f9e237f6dc2c92d40737e72e59622
bd40a646db87d96e7f360654472e016b5fdb0eb449cc73efc0d4652c97f5a1a3006ef402
d60375a9de2524e725330d8ef5ce5e0561ee592ca3417c120981127bcf03cfc0df622441
075f0c963a95e1d8f44d5e9b2c8077dd15715281292be7338ac8f7a977047096f2a15b15
6e1680b4988bd50d1ee298ca48afcaa816ef2fe5b37fefa82fa6acb35369b5f408b51828
d29b1033fab779aac23341101746f58c39ce82cac19bdf95163dcf3074d05e92fea0ebc1
8dfa50e03b6d907de70a3c60f0e3803a65027ecb1baf2f9b7f8a9cd2f6f20abd03fe802f
0d0398ee2970be4bcc3ea277ff4f8ce6908fbccb9d9a4a73f55622b6e68e561c2640f17a
bcba3c55dd6a24e7a7e759b5f12f86c908f67b1d9c00d45f13afe312988c32fb782f485d
16d8ec4fd7d1d13e9926b2d3c33d9b1bc0fbc52a025090a014d4c3795d1c3a79633a1a95
0dec58711a4e7317627a6ec70723f59933b8570a2d9a3acbe8f7649338ee3fb252a5ace6
017d8e72dedb84529f8af57fbc8e61f75012c40b47826f1ef820ffd7487c23a0197372e0
12106e003f2eeab10e880846896a852a1a22b9d1c223dbfb3af8beef62c3a1a942904163
193e667e166598bb2b6f61070987de2bbdeab54ac4476ce0172a902fdf022b9382904a0d
21f6b6ad1aaf9b3d9297376367d13b33b0961e212d1158a243799c1eebf9621ee3442cf2
0783602d9dbcd8fce9f6533fe997f23c81a3408de70365764c9e2febe1aed99d9ae7816d
f27cd9a3b7b5c709d46fa038cdacf562bf77fe662506a7a70b6deb73136f6703290b0cb1
f8da0aee42d96e263881137f464161671ef6e9256a68f007326935a996f3347b0ffb1e20
af456193b4d37ebf34615d96eba5b74f21dbfdf5a7881e5b8ffcb8875fb1d886dbd32fc7
ad4d2b891ae7cd3c1c62fd83003c891f93b8d8a563d3f16751506608a2cf55b3fd439da1
a53e5e46b37a8f152e81d1e261732fb1ae354255de35a19991a43c8179c1d7658e0246f4
dcaf56047ae1f084ae1709aa3490fb8eb9baa1cbd1808efa962b6386bf000db507fc6f95
14a7e8b5b895ec0682c944daf52119159840c971f7c61af209c49d6acefe14c489d21d72
5cb59586c0fc33ce4b0cb8101f7d69c1b79d2b550c5c78497b07d5d525d58a0cdaa494f6
868da6ee11ffb035a3a39e1434f995b4905cb3721f0a872967ce4ea40ecb10181841fc46
93addb8694ba8133cc403f252335bf665247996afd96b45ecbe96938f7ec019e340a0d2f
1a31f84b609f9fdcbfb9d3348dd56d996dd973ea3b2989d4f330252b7f6d45deaf6d43a2
de0ad9506df3f774e210b14780c5cfa81c0359c65e011a429e3da21817ea146b05c29646
fabdb72dacfd486eb61e3880e302d3451d72889910d82dd8e660203398217f2d7534c579
186d522fa7ff353d49607221496923a310329e0d0c6a42e21c0ec806fc217e2824fe6e6c
5db8e7ead26f621c7648182f050684351e8a69d2ee6beef573eebbb279ef7ff2cdb8fcfe
8c26221280e48d0bcb18201f3507fae3888f6fa64fd2d5fd651e32af690112a744f21fd8
e131c5b07b6685b964aa6448cc066387b6c253adf08cf264751e5dadfc80e826a8159653
bfc7cc2df11c73c90c26b6cd0efe685932a69403b4d7a75b3e720b18117d9bf3b1915892
7f178cf5f6f768a6ab6d32641fe5c73e5f51ae0dd22451f98be8814e77f4d1dc810dffbe
d0ba1e4d7d8f3de2c529b7921ca19cba81195a5aec49aaaa28e445a979ac71e04775d88f
7c6fae5db54dc27be438c89d22898daf268fc2a214610e5d3a1e1b01d25c13f5a230861f
946f672d628e209465130b82ab4ec6191a19b92fecae9453db6cb0d2e1f3dbf7ad244f8d
eb80018e157fa6b82cec0912298032756929d8ec10c19d1006d7e077973405e8d67cc582
22a92a7354ce8c2158fbef56b12b2cdf1f1111eafb33d497325ded353fc91d808e3a54e6
67c0e47450580fa09c4575cf2f9ec02d48510eb0f8102c8041395c87fd2e525ae97f9533
1645c918caf32fffb754826bd0ad48ee671027da23c9087bc2b331b90e7a2a8449f58da1
299981a0a3c03805bcbd72953ca8f847ecc482c333a6e68d4a02868eb82fe73a3649c99d
6998588a84807dd861b5c2868e5b1980a28047bbaec5fbcc170540b86827acdf656f847d
7cedfb0119b074af0a9f0ca7d460b822b394218481bf19fc951ed44e3ae3f08cc3286793
db99dffe8fd3050f48ce79ae92262f31ef1d7ade626cec99848d02ac3ae69be1daaf1d43
2a898f6283b38094420a69083466e8a4f546e78f170c6384ed0e0d45452ebeb8e2b1222b
f70e34cdeaa859f4860d7cbd4eb10baa18f3e8dbde2f52cc4b536b452b60a7d9f295c6c0
99d501cb60b1d374c522c9a29aea212fc8a5b9a0b74610033d8af3c5fd5a97fe805e588a
eec3983741b99f0d8d9f067d2f252794d6f77338df46a99cfd8a5d02129712476c7f7239
64bccd159e1839c6602827bf48dac3a5159566a2ae328a398562e2d702eb83e094cb58a0
199345b17213fd6d9e238f0979a4d076a129463d0cf5e3adb9d4c3ac64187899a007a9cf
c9477a0c8e0e1898400d34ab84be2697de0baeaa2f8a23ebc4a13f0df93d0e4fa5afc3aa
ecee289580098121a8498aec7a82abbd2cf46e75faabf22449402ca49098a430bcbcf5af
6b070c5c7e15e04f41b9cae988590b4152e92958fddf0fba6b8177e2407d22af62cb32d2
4429adfcfdd7fef04a9a0ee8dedae2c37d73b671b893660574bc0d05197170c48d84b665
037b64bc7c4bc8d3d4d32596ae5c5045fefc9782aaae415f072f7bcf2ac874a80e0171d4
88457c52830ac97b7511aa81213f69b1d5ae3a0563a4ad7afdcaf528623e675caf75133c
382420bc777af51b12b9b13ef886a3575ea9f9b60df2f32fb26cce30e4f05c697dcd495f
4682865814a85cae45c84a153d8aec580520e8ab9f0312df8e6b729414a31895e6dede7b
17ecf8c4e54fef1bfeb9d7f875ad1ee0487822e01dc7d4ba6835000a8103391f6c4f4d86
8d6958a283295675f7270a488b9296a620acb0c7883e34549c90975c3d048d82ba56caf6
ab7b6b92d846c653a6b833c2df352b730d16accd176aafa662729c30c12cd32c6ce4d299
59c1f34049ce1bc9f6552eb96b66c84af9f08387355c8e66c528c2f64d277eb88d8648e1
00b8b7bfb0cc95203ea029114fdb147a514cd05c56818ac3b2372daf009734b59e1d316e
3c4a6332000209821e9bcf50d50fd0099428283473a15349b6ab3b955505d68b44af3aa8
f81cab6f319d8aae71a4d73b5a870235abf55f5030e1a588b17332c6a17c42499c7d4ad7
4e44ed58c144590074b8ecdb1ad6f328c95d7c9a2bff052cdef27dfce1dc481332dac949
d8700d889863a13f499138e5c98dc56b092683c8cb7b5c6635943a6707d0107e24cf1eec
8dfa1dee47bb39799e8fe7df726ba8c619bd6083a621c05fc401875e17903c0ef20802e3
f38d0e5e8cc11c89b0e86e6b302556585681cce994283009f88ab539643df7ba9f345c71
cd6520c335cebb36ea2004ac5912cd7ca2f3f6aa07bf12984194c23b247b522f73b76866
7bd7d40de9c988231f74d3f1
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont: BG-Maths-Extension
%%BeginFont: BG-Maths-Extension-Bold
%!PS-AdobeFont-1.0: BG-Maths-Extension-Bold 001.000
%%CreationDate: Tue Nov 18 18:40:52 2003
%%VMusage: 120000 150000
11 dict begin
/FontInfo 14 dict dup begin
/version (001.000) readonly def
/Copyright (Remapped Adobe's LucidaMath Extension font to conform to 3B2 TeX CM Maths Extension layout and added missing characters.) readonly def
/Notice (Copyright (c) Adobe, 2003. All rights reserved.) readonly def
/FullName (BG-Maths-Extension-Bold) readonly def
/FamilyName (BG-Maths-Extension-Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -133 def
/UnderlineThickness 20 def
/Weight (Regular) readonly def
end readonly def
/FontName /BG-Maths-Extension-Bold def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put } for
dup 0 /.0000 put
dup 1 /.0001 put
dup 2 /.0002 put
dup 3 /.0003 put
dup 4 /.0004 put
dup 5 /.0005 put
dup 6 /.0006 put
dup 7 /.0007 put
dup 8 /.0008 put
dup 9 /.0009 put
dup 10 /.0010 put
dup 11 /.0011 put
dup 12 /.0012 put
dup 13 /.0013 put
dup 14 /.0014 put
dup 15 /.0015 put
dup 16 /.0016 put
dup 17 /.0017 put
dup 18 /.0018 put
dup 19 /.0019 put
dup 20 /.0020 put
dup 21 /.0021 put
dup 22 /.0022 put
dup 23 /.0023 put
dup 24 /.0024 put
dup 25 /.0025 put
dup 26 /.0026 put
dup 27 /.0027 put
dup 28 /.0028 put
dup 29 /.0029 put
dup 30 /.0030 put
dup 31 /.0031 put
dup 32 /space put
dup 33 /exclam put
dup 34 /quotedbl put
dup 35 /numbersign put
dup 36 /dollar put
dup 37 /percent put
dup 38 /ampersand put
dup 39 /quoteright put
dup 40 /parenleft put
dup 41 /parenright put
dup 42 /asterisk put
dup 43 /plus put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 58 /colon put
dup 59 /semicolon put
dup 60 /less put
dup 61 /equal put
dup 62 /greater put
dup 63 /question put
dup 64 /at put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 74 /J put
dup 75 /K put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 81 /Q put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 86 /V put
dup 87 /W put
dup 88 /X put
dup 89 /Y put
dup 90 /Z put
dup 91 /bracketleft put
dup 92 /backslash put
dup 93 /bracketright put
dup 94 /asciicircum put
dup 95 /underscore put
dup 96 /quoteleft put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
dup 123 /braceleft put
dup 124 /bar put
dup 125 /braceright put
dup 126 /asciitilde put
dup 127 /.0127 put
dup 128 /.0128 put
dup 129 /.0129 put
dup 130 /.0130 put
dup 131 /.0131 put
dup 132 /.0132 put
dup 133 /.0133 put
dup 134 /.0134 put
dup 135 /.0135 put
dup 255 /.0255 put
readonly def
/PaintType 0 def
/FontType 1 def
/FontMatrix [ 0.0010000 0 0 0.0010000 0 0 ] readonly def
/UniqueID 4081342 def
/FontBBox {-32 -2628 1384 841} readonly def
currentdict end
currentfile eexec
e8dc61728071abd4d5bcd230c4e186dce095a0ca84ffc476adfaa82124268e60d2cc570c
5f52c10ed4a85a71ce8e5bcf26aa13b27d7fce1cc0c72c3b848dd5ffb2d56d06a1920fad
e4ffa3b35336627e9ed1622c1f9652956d4a424488b4c4ffda9936442bbe0ca749700ae9
8a2bf964fad088f0cc64b7c1d76742f25e90e759aca624a321402b1d20863faf5e04b86c
1ae66f450b1586041815e52f13d2ae539f1725d11489898a83a05fe04d6d14bce66e2cb8
55496ec301a39f6baea5645c3ece22e3585258ceecdf55fb7e233e928d28c3c571815ee0
d4696bd4caff2016faccd955fef7a54e273082f3e2f4e3aad129bf5a95231802b8b0f85d
e2707785f36a52e8ffc80e3b9808c8c662de17fa318860a234dc7f5162089148c01842fa
27dacbee467c7c1fca69153e6e7f1f68ecf5dd1e85ab1662317f8a2893d04f6637628c0e
3f35c2b907175545e609d9e0a0e904ce433037b73d4950457cdff0e8f3e20e8de2a0e222
44a3742931fd049b6d6836baf01aaca68bae65b7ad2208875ff3f8a388fd8646c00dd444
ff4b4e62a87390ef3549eb038e3301acc7b24bac0f1e55479d43708220c2bac381bbf60c
34544c70fb6f54aebe58c13746e42c7ec5cd75a0f6f2236687767aef5a96ed296c845d1d
80c9b99a6222a76cf014e45c131a8d31337d052d0928af6bc55f63ac3c2bb7ada76d5a94
ef2ad1d02d5eee79835bb98a1ff37e82df5ad448bb76be666dfa2cf4e3ef0c2cb0f5ed25
9e3fedb6a91c12a400260f1f2853bdb3af7a616d7e092cb43a32c53881e9913157eca72f
529e2f70d5a658aa3f5b3b030493041765676d07502093536059693910478da1bc9ddfb9
04c176f991d925a992a4f4fa8dbb3cc41ca7b99e4138ce45a2433be855882fbc85c8c8de
94ccfeaf3cb5fad4a9a9e8091ca0a060e100a54237a3c53f9b74b1226e266f1081a80f6d
1a2cda151e01ea167e6b3af1e38157be56163e33e8fe2dc617fa5724cd1ba9a65bac70af
380c1c328d2e2921cf182a2ebd85c9a49dab2072a240aad79a252f3566c673d4feaf498b
b779e96e41987d140c1a6738e4b1349e1bc2f22667c101c02486d26d8ec33b141e5b8373
17c5a74d932ce6312523d536055d8d4f24d524e3475a83c73b216642aea3a7ec4802fd2e
3f4a46cd11179a36bcbef0cec8696e41c8865fbc23b5473cbcf721f638eae6da0ca53dd3
8776829ab85b16293356b55ead93147c8ba3a1c5fd0f0a5cb370c33795e51aeda11b9374
834f6fae0f99301cb1143db7a1c97eb518f3eca99a14f2950b9cac41a84585e86300ac3c
dd387688863bbefc12857631d23d371250f4f2d842d232ee15866ba7ed7796320b9a0a28
ff9ca10ed929eca1eaa0098fa98cce045e23a2f14ab1c4f31a564d512e2794e2a10ad32a
9d488969a792c26a1eff2da2e9b4cd260ed388978c41ea0d53ba6615cc18d0bbab6e8fee
f96c3f8051d3ea55c168a4e0d45c071c7f04d2abb8917e61432f7827ef4a0268a783f99e
b006a86a20bc9a089ba049ec3942975556dbc6436a491159c2afaba3c51a04b2898a8c30
20f8107b876f2da3a6e8f3543ef63a50d0ff52001e575bc84dc39e116491fd586a829d39
9c5381522f7ebfc16a9f4e098d04c3009c142cf39abb36421920e259670274a73fa436e6
694153488eeadf75a9efea084664032b05e3717c5ebe8c72de06520983cc560e5d5b952e
68a6d6b6205bd1669446428d1d51753fb3a115b551d3d85a9197e000c168b26e019f48c2
7740c30e1696412c95afc2808a24c27b21bcadb1484dc78770e584be3d9a8bb348dfca52
0528015d0e6b98e736546e246748240e99a440b1324ab0c465f4f2deee0c05357c5d5ea1
72a272155bc312d04956f72155c2ef745dc112d1e88afd03437b0264893e9deeacbdb47d
4d84661e6e133ee40fac1c22210fd94ccdf5b7b2ac0fa0b842a7d7c588d759d0f60335ca
872700570f226499e81f41956fddb125f68ce81aeb72d2883022233b284e8a1a5a2d001f
ff894e6a582ad1d634b153c77df4e6c03caa579b83a96cca8c213617c1d47995f197e5c2
81194ab5df25228545b110a4ee8d383496ebb9b57f31bce9387cbfb0b13d84a18f2595ba
97eb632b69e50ce5a2ec81170f71b93a825db6eaa982b30f4b6e232c326449126165f377
4987afe41cfff79241cbc5c5dcf467b1484847cbc59f5960b318c1ff61a1c46f88410c8b
715ae78b963b23cf1b6d229c684dd13f1567009b35fbd840348e0c8890d5ec76ee64bec4
a403dbd3a0e23117373c55472e91ea2eae837003cd45fdffd42d90cbb97ce239de2c8ac9
8fc52284a62b733eb5893c296943c2e785c0b4d4b2e947fd86243ec6c5c2757f34155b0f
a46f6312ebae33d251000ab3f5402c462210592a033d2bf95725b118740fe0feb1700aa0
57a898bae970112d7266a5b500fb636c1a9bcf20b495446df40172836553e42c13dcc4d0
18787a178e8946261bd61c83909635676538bcb4d9f3a4e363c692e93f5d5abb4f13da6e
f1d77023697bb9247b5d62d18c0991ba777f570025cecef3067ae283aec1cfc288fd26b8
477d98c687b62082d43e3020ae6ce00c507579887e88d0c105e7a5dfac52870f0ea19d69
3165f527af5b6ea5ceca8b5822270d38b639753e6a683ae6f88365d212ed76745a11e321
1b50167b79906c659f45aeef480fa8e0b079dbb3ec64313a5d6c56aea6d52e4af7eff0d1
14b27f4891d264ac2388666a75c7f2afb002455d4533d1b25497c6e125b10c67190799a0
c550f50fd7ccc50c130be3fefed8d643263dccde1f469c8c86fdf4cec50f0a19daeb4f3f
f560e90254943017ca58a8e00f2418cef5ef225a1489e7347db1ebccf616c416a15291d7
e963efd88116e47c201a549da7df2c5e61252fd9bf2323ce72663e1e003c4b073bd97dda
94eb44da066506909d2c7962531995107936f975ced4240f2bd8c84329f9c07a9c2bf3d9
e1c72040df0ca69439e7f05cdebbd48cf0901e584de95dcf1b9f6c10a435e74c492669cc
0d64e326512f7cdfbd7619b6dfc6935b363cda127af819f3c593a7cb48deb2b5725a9891
6d3a10d196e03d79adb66ac1733f74136bcd69464d94ca7592ebeb3321b43f5afa169725
696a8bdbefa776a33ecf54002897f43cecfeac7b1fd2ec46f70d1762583a54dadb0365b2
c95c1a16c8301a254ed26638ffbcff3c9c796defeef4cbf36eef7e9270933dbac929cd3f
391081bcb879444d1803e8d0e8e657bed7052c7e6782b609a4c4c749cce4857fe5b4730a
b45f2ef2813990c5c9a32f4003092b7596de5590b575d74518d3f18e2d1039262341ba90
3ca1501a044877b8fc22e643ba2c2f19580e150b60afd1e5c19d7b8e6a3aff5219a150bb
0ebf6f2343211c7fc9056eb4814b8f3b0bd1f0e6b98ea36567411b4c25b00587bc85f102
0c847702ac87a8ff127b81de06fb74415177dc352fde80840697d94d4f78b7a8b0938fa4
636d7e6b12ace060822d33016abeddbc6954525f8de17252888f1f62a073d4a291019cb5
79aca370a3b5ab93f9895fdb37cbed55252c7f274ebb5c05c5b4ed91456244e8e0df87c1
faf6a9a7e7f2c5fa909d373215db2ffad56c33dc932594591b065b0ef90d7f8ac3049e03
b2299662ae3fbc16419fa30bb7a86e2f88b513ba7e5cc60e49b23bcbd1d92458cc181bb2
726d11dc070e3193e96758adf41d8c18bc37c7b6e67764d7ae72a1528188fe440265f7f2
1c3657f0f52ad15634f4e57e6e7296301ce29466332da61440facbe110851f6a697da991
a07b1833576945baf7939c243f5240278537c69fbc6f4139f8575b950b93e7f3812a243d
7c941931523562b716172b9a895f0a11dbc33bc7e0c4ec962b70915e4b3f87cd5b7bce53
2f46decd674bd845fdb4012ddcc8d380becd0c89ebaf1a392cdb26c0888a7f39652b732a
7e50f3c630dd9995d06faffa1c0171ade78f8c84c09e00e6332e53e02223db811e9e564e
5a362676badbf6a77d9d7a3024712744f55816df915ce9f6fc86031869dbcd5cbefdcae2
452e8de762253dee9c1bb847532adcfc4b4171fe836fe55daae75212cdd9136f67952f69
aba3002d4dd16eaafd333c8f0884f51aa8e4e1a132c68f88216148f92da63e3ff004dade
a7bac14be4b5b9973aebdb7fcef5ed013092c7abace56f3c60d1a0b45c42c29f405dcf99
3cd7d25677fa86f135824cbc5865778c5783dc4dc4bc1a4cfe098b15d405473df1a2174a
717de92a33586a6902e4547a495bdb2d61506aa6d504b649ab3d226182b996928d20dc6b
acf62f7ab9f6acad1685ea2092266828fc1b1b0fbc5073b4db337395ecfe5f6ca42be289
67079be631311c39c5658bc76118c6c478d67043ef15a120bfa0084f729c5b9ac8189288
5a367600c295f468d3d9d90685194649a7740f5289d7b9db34c25aaeb0b23c0901a51e89
9bd6b80408e259a50f1c164982719ddef3b4bcd0252f0ae9d83a79df7120499582d316a1
804e0565e41a1196e34215d82c1f1251ef857f953217a8b50952c9897f8cc6996cf317a8
81e2cc26b7a5ccede60f30d15e6fbecca5b9e4082fc53c562ba7ec34777e3cafa5f9abf0
08156f953ce800a6c48505722e2abf17217089cd6f78bac8bc052fc6651a40766b73a0b2
35ff147eda79523931bb711efd1eac827eea3c0246bc4fe58b5a3c464bb2348bc17d9f14
ab9d3bba08cdfd2ab0b8a8f4345931bf4292cb813fcd878ed879dfc88bff1c731432a611
9ed059cb01d552d916ecb40759f1f04b08f0a04c8d926c7de5459ea4a61e0d33a21b0c91
e196a04b696258ab5fba39fdf5a9f47fb302620c7e4a0fad9565404d796380ea5d4988a6
45db1f0696cccc1abcbf96a2d32fccf0f27bedd506b9c1a77627a0e97c63ceeb8801e251
f9df2d85eda36e17a473e330cbd884b873074a7e303fc52c60776100272ab9931f004481
b0840d58a25877ffaea8ab4fe0abc4d5058bfdc67405f74f4c255f371a04be26091b9905
0d034ce24757db58a82a0cdd74151790387b9c2f44c641f8a8ec968ad57095a1fb4325a7
d87b7735a04ba2023883b727195224a66693a18bdb61d8250341f8410d4a1627f0e65bf7
8eb16c78cbeb4106804c8f68d89905e9278ccf2c3a368380132c796cf38a0803d2c3af5c
e03543534ef942d65d56646deb3d58ea568d6d2d1d8f6f31419e0a9ac1748e4b8ad73c8f
c3ae74e4aed33335fa781dd6fa7c6b60d667eb1fda565bfcffae1d6cbddc490933a7b996
c6f6aa8f1011969ca8391ad74b04076c32646fce0fd1f5ff54b61a84845b509fffbf6e22
cce412f9a3283dfa1b999f72fc92cea35e3862f77cbe34d4735ca0a4ca26446b9a78bfdd
0acc13771c6771b7cb0e88028dbe321cd41936b718abc722cc64d117b327a6aa4de7fd22
08e85d967df2b80e6d90ea526211586d19db9311dc8dc8fb5dbb4b949c6a608f02996147
5fe51f761271824e99788cd80b80d5d7aae0f1760b3d9db47364fd622d4dfec326ac441e
cceb70ce1880509f014846d2e2b53cfb0fa812f0ec93e96bae357eebf236b4e746751718
150f0d05b24c41f0f2be85ca6f242cf1bbbaf484014ade7d5d5c13e10cbc4a4cc8401230
7fe1d1d4cd18f7fe6e742a50e3e8a3902fcdd1303325de4f9a89154640dec6d25ecada60
98361868f847a713dc8fabdd25b3914f87db65c5b0eb54cc1d880171ea1279c9cec05926
4231c1b6ff1601d2086b5624e77a0ee8a8b714d5f39afd15c9d62fc229ce1b508a5fcd3c
126b727b97da2f70054dcd3e6e396f71bf1beee3a5931b33e841ca46a09b03eb27b5d75a
355a40f9af3047a4111ce156fbc7db19859ede14ae23c63d723590dd9690fe2a97edf64b
0d2040bac7ea82b6c2fff8f73868b10daa4c8eedb3734a09c32a9cac4c7e635e1a3ff9f4
f1997ba26fafd551c2dbc8644d7d8eae40c14cec2c4828b651948ce77e43d1229e2d7425
e0a56ac740b00f67ac90dbfd803812ef978e519545a2a6932ce0c5256ae9b854feceaa65
ae89e557dea07d34ad6dcbb552ad7cdee705a8727d4a4dffeb696f0eb7e7f01dd380aa0b
d47c5fdf0e9497862d649d3a3a57cb08ca8238d3c0c99a4136b03f29e7a1029bc9b6a27f
0a570dde9b83b56eb1c25de35b4827b52d468eab8f61d1ba3dd65375bf6f8e7a79b0175f
c0b153e65ab33b0aab1be91e3cd27b5ac0f40f1ef8ce3e335441ff7ae64c73c449d63835
7b099c6f487bc057bf42a3527971d8e5cb4d703575ca4dda34675bbc10316f5f2473fc40
4390bb2db0fe81a022f14a1b5b9d2b020ce95f82649f774f5843e2d90ff6b5521c65af86
01f6539f751dc7f23ee1a07cd45ae912998d259ca3a0bf76a4d8a0f20df1d25517753d0d
0fa21672a63f0f5cfa1a243da2fa19930a7d3833f95782110d0b4fe073d5aed69bfd8f7c
7cde778df7dc48a38342b6cfea1731ea8d7eec503c98b40b05c8a0e87d576f2fde2b003c
bbc2f1af017fb6f6b1c3a2582c7f753116a61f3d7ca9b87d71db1815250921d08fc2d549
2238db31cf9e377f0dae761e8cd82686084ce3748c759715e61f059d49fc72615b990743
403280c0f431c1fbeb503d60c576c1d1eeebf755b6cf988ca8ca1d366392eb70e1fdaccc
4fea747bb813b4e098f90847e99b67c1c8940ca7af8fbda93b28885ea76e2b03acae193f
6d30f39cd65dd364ec7c99888be0fdb448d9244d756d24b8c86f4b90351407f7e30e85ee
0cc8aaf089267a187d6ef63a22b2afbc11e5c3781ad8c3ee4d3c7ab58712d4062e70e38f
76abff897b820936c6af36c484d9d79e8f7c982efab73d1d794ab87c03e27e8293d40f65
f6abd32ead175a465a67f8b6f377680c326652361b7486ca8103c2df4981dc3b3bd20935
e56bda3117b9649aed053c9c1d88d2673fd08157356cb2ad76f42bb5bb4d2d810bc9e19f
b14c20720083490f490b08c84a19b5ef5fdf819e9d35e880a1eaafe2f975ef3b725d5a5d
4ff0c0094fe194f8dda60c15a7e7172aa340dcf089675d77f8d679b14028f02396a84872
5f2acd74c015d946ff01b26320b47344bc1e26aa3b4d381772b238d32f2ab455811c4348
c321911965970243561b3567a03e3cb01330371d035738b28b52ae93226e92c6a879ca50
75598f124f75c35ccedec01607c9ead725beecdc5293ed640d8685b61ecfe43c6a056fb3
c26aa5688769ce746d58d0fdc7ad781dfe4a4a73583ed71d2ad7175252997b14648271dc
62661f4ac4a6179ea34efa05d2b43431fab55709ce1ebf3e8df1101b763d85ff3bd6b241
5d496ee7d111d2359f182007b3df02284612d055c56ee17dc28817f581fef0e76e4766ef
0265f9039130dab98a1fb45d47002d08c865f79a99c6b6fe8c0af98bccf76328ed0d7a87
cea23219cb890087519207835424199d0b4b4219494d1118da22503b78c23867472c7d67
89a71ea3dc00440887f538d501daaf3f8c367c6b448915f0373d48efe5b353bc5c325c1e
4563ac16d8e1dd2224bab74fecb1c6fee9771d6d86ba3b547183570e445f59a6947b5e90
1c7d3faa7d86d4c0a05ee28e5743b4cbda6cb1440af32f664b5e2960d1f4fe69606f8df7
29d6391184ef251b514b8db0d97e794cc48e178607183522e2d6a7f71b65ede1333b9a13
0621322ef0f8169aa61b0656985c139eca971160cc48a0b836d85f6b06c7b2321c3c2557
35a98c4b10952fecf018ea67593328e8b56cb81f4406215f8ecc289a9a8468b4319e1cda
ce9d01e19bfcabbe2583d92d9a5adb59f205fb3d82c575242605e3ffe26755e8ef631bda
00eb78630e47fb0a6ba07bb46d9da68699e5fb3e9d533c3c74cb104a46493b301376bf8e
f13bb1c69604547b096b629096ab1418e9ca9f276d2a7bd0622543428df8a9a97c1a3620
4dffa0cdfe4f03b2bd5d91beceb65d4ee2e27872bf28243bf6130cfb3e971a4d6357ae26
38c6531f1e70cb3c0198e686f4030385afa5546d6717ad360f87c026381c298e74fcb42a
4501e140de8a3cdf2f3a752b19d9f1c8cca1c1f20e014f8320afb4bf6b78154f622dd812
05d537b672cddf4d0442a3f22a1373c0d6b97e04f821e33a2cacb17c2de3a804de4d3ba1
9ebab71abdcee0215e0373286f269c5e9d79612a2d4c25ff9227e208557928dff037c03a
ff634055a70e46a2301128f21cd87e6712abd8440267eee343a15a8a1d29da8cfc067b66
b26aaa4c2690dba87c10b0cd89b48c301142e1b0208f3b68ceb8055d32dcc774aeb45a25
f9d2933a6644b517d790f59b812ae98362e959e019c129e16d3fc90420433c259ef27c86
bd39c114ec1c6232571b875b7dee08094505ac204d98b4f7888b7b4adaf2f3b3373c41bc
4052c86a4f915bf6c3c8f69e47aeb072d2924ebc552e916257c45d6d6d684668802663d5
95dcb8fbe4cab11b627d92d485293cabcd83fb44050b7b6fbde60e89d6e4f56e55ba36ed
c595f84c8d141dee2644ccdbcfa85a1308c1e3909e859c70d49a9e21ca66aede80abc8bd
827c0aeeda4d1073c5bdf9bc2b928e2988016b97ef539f5d4b2a687e4b45e5bd5703eb22
4aba9e812d2072b7d793d4863fd87f36d45bb0a426d97b187d03faaec5310f942a4ffc82
9b4e3603dc1eda5ccc005da549a71f6cb73db3f8c9a61e24ec05bf0bf56ffc7c4d7430f3
2c2792cb763b2f1628b1ec31a40a9b68e559143889716c5267066f1b580f34a0d20bd728
a44379a32d78335f919d46086dbb23eadc54c015f852ed7e38aeefb52adc4ac226ceb848
f1bcda3624d751265be02fae60a625498123eac4efc2f1dc2ee551a0a1da0e0e4a40d90a
a7a4020db0d99af9a1a8bbb7f8a0929bb102db80d2922446ee10142c95338e335b092269
71cddfa3adf8d2e10b91365ee3981b87b70c20f038ac82c2c4a6734aa4dc35a0fec5330e
c94c42a318c66c788608b628abacfc3f748279df1ca5b7638ae1fda86d4e0261ae441742
f3269306cd67e4267d8fb848e1a9f0ba2fa43c62044df5f16ea3de7e75c8fe91d65a5d70
92271ceb34043333ca448790a2c6ac73ec7faa4d74f31bd55d923211634cbe3e6837044f
e80ce2b2b5c0961f81df43e18b61ea48f50573369beb67830f9b3253f069d5e5014a80db
3fea6b17a0b12c86f785b76483165ad99f2f82b4623b3ccbef3d7b5728c90a3adf7f006e
ed725cc140907862c3b1a73379a1fb63cb3157dfd29467ad243bfa421f2fe904585d1d4c
00f23902d9469791abd3b85b4677b3fb4f6a8acdd20ca3ee05ea9e8b7edcb4dc581bb3ff
9a974443343b81ea39476130a53e36209da20d8124bde89f1431866f5fe61ba066c41bd8
bbc362daa8d54a4e73c982482c4bf39ec74142548e5cf670e963191e20778d58189a3b06
9c48333c2b0b5c95d7fb3d866b15c6bcabc8cbfba929cc2dacba48fade2d1287b1e2de41
8e76a393a9d236cc52a4354524b8bf4900238fe0c1501565f02b83e757abbf02a9fe5784
fbd539572aa3ee33d25c475f1e23340a8bac6606515ad616e7dc775b46f1c0cc07c18a68
965ac42c842665b504f1a98031d1c451c9f61b4d3a8077f71ff5fab96e1169024779e3f4
52bcc3d9861d10de40c492c07f13b0e49f8f0af9bae301d961e07dfa1ed4a16e0a490361
53184ff659a7104e8f81048fa82967f60ea3ccc08668d14e0ed2e05f677d39f7da821194
8366d6d906e6778c5de9e0f7fd99b593158150eece4b6638f7c95fa3aab38a1874021f22
2ea910dd0b804f890cfb09aee9c849f8bf88706778c936faf45c3155175832010c40dad2
17d73ea0fe153ced371fb98b0559c56f9095d2f649863fdee2a33458896830baa169c52d
7b096de206d202a50ea895fd31d07d5b3b344c06f747fb9cd9d72f45b058c3ff6135af8d
a8e5d250ea00f8dac0551122bbd9ee1010be5b6a6dad6f77142553855c7f2c49f7cb6904
46627203460f22486fdfb871326f30536de9b41d89f8adbcea5d4273eeb9fc08d71e0cd6
50c38dec7ed05aec60eabc0831c6edfd13ae723514e3838cf8ec98f5eb7ff5c6a2ef1f77
8b4320e9ed9a490fbfef7eab6b416977bac80b9dc93ae86d9dbde59ddc3fb6fde02124bd
a0063fbf55a271e84166bc16ec267968361dca8a4be08e741ecad3beea333aa84fefea14
b5a9dbaece843c90daacb00fc5c0d3f0057e283399f67cb6a443f1a5239217e480916785
20461f7e5764f8fd6d8d289f428c4327b717648b356793397aeb0091a517a1639710037d
075bdbd5706f563d0369a5923644d9ad6e427ef2072a898f8d8e23e51f93130dbdfe738d
42c9a9b8988af20e9fa411a36a6812c421180c7cf2e2981018b32fc7126b796701e6bbae
b514f12aecbc884aaa8028c0b7ca63088636f63b9fae52c026bec7c2ffa23809e41dc12d
4e9308a34e7bbf97c3f611e05d3df698f7d544b60693ab0b45b79f8eabbd6b91143419f1
897c666e07d5a91395fbf8a7de68974be542a60a813cac93edb14bbb006c31dc570d5664
fce0a946dbbfe29d97ae5d1f1dfd9bf5e84ffa2e92329bf186466989c8d58bc51ebdb581
3fb42ed7eb83127dc5b91e5e884d002862a453375020b7c066b1402ce7ed1c14d3501878
4c86f4d3ebdf3a46b4daa6e36ef807c79a8bad493353005326eb3fd38729c737e3995392
9ab788122fc37e468a8496b43643dafd59943ff6e29e4a6c004823667ae4d6fb73dc0e05
6c0996088f27179bf319134ba49a4cde08f0a6fdad21c0f58d572d46110d016c34fa8b39
e53630c39164a63b454253e800bef69ee59123a1dac99d17ea09dc167554785013fe4e4d
623a7155a8021b1dcb6645c074617aecc7f6dd6521053033340d3a34f6d11cdc6e31e600
33ec3208a7eb58eba43f5ff2b2f2f7f59239dcd49de3ea7a1cea1679335cf9c9b7bd5d53
a3c39e4c874a7baa3b84145a1cb8a3f9a48fc70355cb3b4a70f401ce2732062c2bcf75f1
097ba2b74904d8eac5490e72895274583077cc344de92989c3b39cc35bc39666ccff9338
8a6761c02fdbacd89e242e75528e514b850bc61c077f953733b3d3ea5b6ff6d4d5059725
deb4c96eef8ddaabdbf2a5f0c71a03a4f7e8316b184e6eeb6af0bb5bcc227bc621a6c6c6
26db65fc745473e7a963480fb42cf444bfc8b966890bb349dc76f18a831ba9eb807cc2b3
aafe7c6bdfe6613786a7b8b7d51bbb25de153f19b3e8ec20d916bc529f08fface9fce4dd
456999633bcb70d7309ca87470b7cf2c8f7ae05761844f57453d0b6319c2f77d41bcaebf
e5225dd4f0af4931d8ce21b6544644a032abf0c76492e37f35fe5f0011aa3f5fbf61e9bb
dd367b15cfeac4bc2c468887b1bc4ad122368d05b6a347635dd347d0c460a2d3764694d1
ee3d23d582a12fdc90b70abb8a25a7ee253cf7a9427adff68262adee6eafa93e3ef95696
f9d61bc0ec59c785b6a517a686359476aaad7e97658d9648c8a3a36eab8d9267305c2aef
7f50827d922db5f0e2dca9d3c61e76225d1344b963f359c89fc65327e631a80d1c062c5e
2095c9313088ce42d715507c5e2d9fea4e89fcf6264a2d9dbed5ebfef7da3fe31b042859
4073b3d617be6704ddc965776ca0edda3886c0e4f2468f197585b340397f8b504ecde3c9
c14b22b519ff77fbad323cd2b61cdf2d8cac800d8e461090636687ebabccf59468c81d97
d0784efa2b9f8e5f287d35de81984989e8135e0dbfa41c3e332f1f32ad3071f365aebe87
8e72ed451595d48aa009149afff4571bdcd75a2663c24aa544afad26eea196f38a46466f
2c075bb6b1599152e59a4513605f1d7e1e165ae3de4a3617f9509267d7c9bd665ba6dcf6
4219e1ca3531bfdf32de494efdb0ed1c254a0f05345a588e26b1a17f763817acfc1353e2
248ce1ef71ae36355fff2453afdd55e473fbbcadf53f49d5209799a4886a9c013cfcb555
c505f530730fab0dfdca9da6c9e03b486f033a19a9f7a5c8f6ca3e99623dda0c4dc4736c
7413be8307982475bf16841c5d2fe524243b56156603d242857f06e0df68a32d679142a8
abd400d937a0a3609dd627cfc473bba9c9e74ef70d1383c53ab42c0c940cfa02aa4a6f5e
fb8ba2c442fc6c614c2090224a464e76bd02f7cadf11c9126300b7e849e677c0106dfa1f
ff2d16868690088f6880156f76730bf0c4a97540a82f1a23e1ad3687b8dc8858cac8bde4
351438a594a416f1420cddf8c77acddc77eaac075f5db80498e8e24028aec6cf45eeb7e1
2d50da942051fae0035e5bc7a813c8e42145171d41791c62e0d4f71c8ae1a01375301f5e
f5c64e16c5b65bbe07a51197896ad52ce403fd06e0ca1f290c82124069834ca4071cbc94
8ffd37f05656d5dc9a0af327320d2df74fe5c7275628fcc50953f742ece5fd2f1bf6132b
b2fb895eef8fde31cb183c5cdcc1951eb8fb6d1215721c58ec97c856965f4ca90e7ba253
5b439b1eafb76acc98130dda338ed5cff4bfb9e4271a28eeefc7e70224dc16aac09e112b
60e7b3514418cd40265057dff49de7014d28e67740aa379f3f91edf2a303b61fc5d438f9
f62beeec964bdeddf76b68417189be0ed553d9ea3a6f84300a85bc3d8417ca284e9c6e96
79d0e07da10f5fa6b0b204f666aa296c5bc33df8e195a89e36eab1d12e01d8a2ca69cc94
b698d1ab781d5a039c73eacb87b7a9c9e864ab6791c6548e7f2730446cbbd6283ce1810d
c868038e1e09cb69d3c2939c2a5bdb55b62290b665b06822f2685718670388a73522e369
504e6a60c6f9977928d1f239dce17195631351417ed5148bba232d00e447a49caf3353b6
3cf7dffa364c60a329a0428cd8721484547f8541c889b8d6dcdeb7552795b84081dfc7e1
9cbfc96f040665d39125ff4e80f60d3eea33f5d76d065042f7850bd8721177274ee8a00b
96bd681abf3f75d40af422d408714523553de0a1a5fc130e820f25ce74a25fcc9430260c
4afcdbd69eccdbafae6bcb5df324927afbc3eab10b28540772485b7c0f39ec5087ce7988
266a6a4d8ef2d44eb8fc57c2ce9ddcb447f88d579be118e3e42297fad56a4755900212a5
cd9c57503e1bdd7a98fab78d093f0cbb795cba3e04359f3c6c65535676be1d3da4c5f675
4e764d275f92fe49961980b958f271005e50c47f532ccefedafc3abd56f7cdf96c1af8ac
da4b948f47b7ae8809394d80b8d4e53fd44e10ab879ff07e5095d24ee284ac6d14c24012
0626f5fc8ea9671ba3b5794b4855ad00167c9279440a92a6bd977ab391da02017c935a8c
78f871684ea983f57edc3790cd961e1b5e97ba1000e2af9a44c79157047d65824de7abec
3678b290c8d3826c1701608172b9dc5a6ab4d01d4cebf874ee744b459993dcd5d18dca37
725e527afbee7a27f3fbdf9481855d6da9b3fda2dd248b693d22f12801c62b749109bfa1
1253feee4a4f40db0e3bfa05004535ddb18dce5597c69fcccdd8aca6ceeea0e19fec52ac
64d4a3c873bf36a86d2a0646b7de31db5ea83a7f345780ddde6222438caab282c001376b
a6f93b49f3f72d681e0903c9cf2ca689573058268e8186fd947028df1a36b233dab50e70
12800b4c093ccb05e64e294a10ef616f2e3f7dd3779395aeb6c6fc47e71e00e262fedb8f
4cb1de9e7bb1b93b4fa410bf629ffa0f5af89f044e801fdb788f611fdcfcc256add3071c
172cc6fd73f099039299abe0448764cc0942ed6cd4188bab063dd6d024708445a0d19b20
4c7d231d48d71c1b860e913e28f4b4c64fccff67f3382258594f9b8a8c91d57ce04d5e7f
320738b5a726daaf3cd2976d17bd8d7628f72e55a187bc03d4cdc4fa2e281c884a024815
89a5ee91f00b911f0278f1214d862cba42281890b9cad1d6fcd90dd9965e7fe8b9c92bc0
ef4a8338431ce2989f469f2771d5766dc9fdda54838ae148b4959f48065428e94dd1753e
1d3e17f935ae9939c896b04544f4db3ba43dac337c881a87e26bf101e781a125c1e111ec
db1c5535ce4e498accf99069c7093ed95461dd44b46ac95aebc4bbe6ac45e05578dce593
0727546154bde231fa4ccb35aa0823d1fbf69875430ef79c66ea0bd070457bfd9a166309
463ea1e69833d99dc4789bbea504974f62b7c7a02e9af5b0e732028b68635de5e00d6efb
ce4bb52f42e5955fb2242bfb1d209ff8319125905b053a1f7f1235601007c8c2c08df871
f725ff49bd54e3c524b8453542696b682041ab57b1803b09cc36fbe06be7fe4202fd4cc5
f070265044e51bbc7003bd0d581dbef4ba7921f0001132b5edaee61dd63d0e74a95f0b01
e3da6e0c14e8d55907193d46b07c8221d8f4b296f33bafa37d982d7fd765f0a861831986
9d851ee892ed6e81dc5e6c24e56de4d1bda0e23af905d7689262040f639243bab334c8db
55eeffa7aeff596b49b76e2edd48aa124d91143f930c6661a1cfd41bc4ca3fe37b0e3547
e982e531ef0eaa039ea8a7320e53ca97929045af68d473ee4cb079c0a14936b5da9ba9a8
6dba7c948169e6fb810f0829677fdf2b8dbf81c83e36977ac8a633c735d077f91e8926ba
e9d2daf9db5a1447050491705a3a697daa9a6a96c86b6e208f795dbba186d30ded7e2b5e
5a65fd1e17089aecabba9169995c0ab9e6283c9f34f6d9f4ddd3030f2ef5286ccb100dd2
10c9f785802b3472003dfbb3ce64d69a0d8587d39d167033abf855b0abe4090b009e135b
3b65cae791db6767a48f207e9da675eef47c24ab90174f2b00b369b158e05c38118cd3df
86f1e3168654e070695bc0f72a50a28dccbc90a2cfe259a5b5a18210c7d961337a5742b1
ed5634dd5f1dad19bbcf0d36cc71ab365edec8e5ba36dc75eda40f8c5489209bc7854b9e
c74a90541c7104f595edaf82db128f1c860fc735dcf78d9e7a0ab62f21bbc4607976a39f
52768797a75d22c93258a2644fa922cd45a131dcd840e737b2309f98cd33a333aa40d8fc
5ecde50f034060e7f183d8b5dcacf1466b9b8b9df6f98f20e79c28303aa03b21a3eab343
14d92d180f2a39018b9acfde5f3935d8f8a4e0fe0e1f79367de7d87828e353bd9f892926
ee35a08137dbeac276911ab1ababc2d93a92f295ef5a6f9b29f0e2a8a9858db05a6d495f
a791e92503889584bcb93e46486c471d7c7de14bd1afa3457ee24b3dd4c915dafd8e00f1
35982e327aed4d6bba063c6b6d9fe10188823dbb1521d078948d2c87c270ec5af98680f0
180a7362c561f80e6baf1b16b88886f6cd64ec566c6a5f4b6243d45c198c4c01f2a6716e
89b6e5b92511298ee200d677a37b695fd62f37680cee9ff96c6f35f45f8b463c85d1711d
c39e70a0d9e58cce8f347354ce14a959497898a6aa8db63e45924b4be7248279d2b78251
ab448efc939c77e2244e5cc8a25c731626d0ef5a0a2a8ab5e0eb8de02d1a1fef06abc6e4
1d929a667fdd7306f432e9eeb0c30a98a5748cd3b6f94a02f62b6fe7f8d212e265446f45
25c2e5b6c736e885d035722c33968bba3f205be7529226d0aa5c465cd92bcda46f76483b
8b02b527e822e9f000634f108cf1fec22b269b302eb1e33b47ded97a27619ad8e6736cd2
a05e48dfccb1358e4350192eadd680ef24c54a777fd59eb64c4553eddca06bb001b272e3
ea83676a952b653462598474f21d5ef2c1b1f14e4c80e51871754737463401f9c6d438fd
ebfd97ed9946a1db0848dbeada21543ea6fd71d0ae3a769ad5210a20d5b917f96ba2cb97
b164b37a69ea23d9a3be0d494a34f8a69f11cc392349c1fa0f0bd9a99aae24b155242223
78c7a7fc936f16bc4839a3634ae12b69952d9e47de656ac9cfa3a2eeb5e035e6fc42e8ce
53246091460dad4bbb32654ffa860f01adeec409bfe55f07116f618e5bb63475954762b1
cebcd951dab128e0f3885ab8c9723e53802b533a99506a611906a7856f21bc436b2aa667
b26279c36765e99ad08f1c9f929d91a3017b12026936a955431c5c21197ccc06ed2f11a8
d09faab90ba7c7e480bfe9c9b71b216d8e0ccf1009ac652241f5fc3e0bb0772676f3adec
0b430c7aff0168c31d3457a7ab0d9059703ac58af503870c23ff5788295ffecaa358f5c7
cf2e434f2852e86b3c506a5323f39b7ae8cae17e041bda4a06633dd8ab023f73d78ed27b
f8633b2989779afb03a819c1d7e8cc69e83853c033bcbe12c11de0434a3ed1380519841a
5e696b1292cc830b504c087dff008a4aac7e6e7172875d6144f0ef4a6402ecdabb053650
a1f62da0474ee28fbca2434467c88c278dcce2818400695aec02cf8c9b670c5c239e9fbc
315346b1af333343953616d3b8e3f076211495a248a4fb0f5905afdfcea92e26fd0e4ab1
9f87284b5f111929a6c44e1c102f77a19359581e9b8055fcfaf619c2d3fc2ad384dfcc6c
b6db8c0dd605f6f6c3b7701a4704c7868f959d646620a77fee64c79fcc3d7a1c26a7d85c
8452b6a87bf537e78bb9ed592eddd7e4249da991b1363e3c71588cf94fdc6a2d69e68ece
81ba5889efb2551b89e94bfff4baa5e0b7e4d1a7a6125e734de8ea8992204db45135d521
319174345d1617ce57d7fb5c10eb0970290480d5b1744c7d40d51e5fc03ccf68c7979ff6
17ebf06fddb6b47791df94fd9bc482cf6077f6f4dc825aa69d2e12213231ac84a334c89a
18b985b847e83c067979602fc05fe35d017172e7b34d39d63ab54bb7a8d74fe8d787f908
fe1883ef327a46612981f79177377e9f6c1748bca13d5189054896b500c21e708ea931dd
1d
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont: BG-Maths-Extension-Bold
%%BeginFont: BG-Maths-Fraktur
%!PS-AdobeFont-1.0: BG-Maths-Fraktur 001.000
%%CreationDate: Wed May 15 16:09:51 2002
%%VMusage: 120000 150000
11 dict begin
/FontInfo 14 dict dup begin
/version (001.000) readonly def
/Copyright (Fraktur alphabetic characters from Adobe MathematicalPi-Two.) readonly def
/Notice (Copyright (c) 1990 Adobe Systems Incorporated.  All Rights Reserved.) readonly def
/FullName (BG-Maths-Fraktur) readonly def
/FamilyName (BG-Maths-Fraktur) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/Weight (Regular) readonly def
end readonly def
/FontName /BG-Maths-Fraktur def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [ 0.00100 0 0 0.00100 0 0 ] readonly def
/UniqueID 4522674 def
/FontBBox { -9 -232 998 822 } readonly def
currentdict end
currentfile eexec
e8dc61728071abd4d5bcd230c4e186dce095a0ca84ffc476adfaa82124268e60d2cc570c
5f52c10ed4a85a71ce8e5bcf26aa13b27d7fce1cc0c72c3b848dd5ffb2d56d06a1920fad
e4ffa3b35336627e9ed1622c1f9652956d4a424488b4c4ffda9936442bbe0ca749700ae9
8a2bf964fad088f0cc64b7c1d76742f25e90e759aca624a321402b1d20863faf5e04b86c
1ae66f450b1586041815e52f13d2ae539f1725d11489898a83a05fe04d6d14bce66e2cb8
55496ec301a39f68061e5d3645bfde0450bdbd838150b99c0e0f5bd80e993674bb9af3c9
d528433ff80485d8278476a735a3139807536aa13ecd5a2aa0e0a15f9dfed794f996397e
841459780c35e0e0ac9774b2042e75c3e6c64acdfbda66752d4136f096afa839a72736c6
672473645a552bd1dc3efe2a7623ae6eb49ef150f2d9ef28792f829bb4b132cbd7966991
542aa2c3a3296c95ca18fd3e8c9ff9805dea1f44b006676c8ec8166b4e16fa4c6886e831
3bc173d28e1c191abb60b4da7f2a795c2b0eca5bc2c7f8a97fab4ae151e3cd23718d39b9
702c51f403237bd51fe4d9626a3d0eba406e229c1f1ee2f0c99ad9d9e179dcc58beb748b
397f8072c60adcd730913b51d8227a2fbab9754e8fce38ddc5b2d296fe64a92e0e52b116
4087ce7f7bd75781efea8066d91b818f9633065d63312798e0e69535213cc558d9c1de20
5d4724c77f3b4623884ee9769b485d2da2853cede543fb93aab19f3049799d5d617c18ad
c1b31b3b93cd26f691ac66315070d06de4cfa84453251fdff457d3de9b6aac8aa2e02c66
9bbf809f06c1f62ac6c175b2277c7f7dcf4477e5805e4f8544a60f637594acd6af8e6da6
799e80e2937487b0705768ba37836f67f03db6ec06ac5db3e60fa71fe23f651028de8adb
79b21b709db7e53d763e158bc8a24e1d3a0df0bfc1c10786d708b1bd0e095c033322ae75
e7702e58285b7c850a18e87649899413bf13fef957bacc936da51b36fe44500567d4faf2
5a4455d560e91127267eeabcf2c657035027ab4e51a3b44184d463c6f91b49379799cf6c
220bf54c4bd24ac3ae3fb2066090222f73567e7bd5fdfd7a53b11e3a3f74324653d6d7f9
50fbd16e0f86fd001f42a36b2a739f22c52f735246e20d29279ea4e47c25c329fb902b82
5a97f858ce5bc3df5846a73b2ccf128e376226bac78d75c8ca79d75e8253ab404b52a8d8
9fa5b8566a218088c01940193d448d2d4fe8174948c4a15dd02ee1b4de03660294a30a8a
76c4d4b4c55fd5a0cbb5fb07ac154482ca19e312e98686ed7632008080f65f515c667e52
951651905bb6d6aaa40744a2e997eaa9f19e3b3664fe32c0807616e31977c2fd319e273e
5d03d9cfbc76656e140c8892d37db902e1eb3faa16a0dd3cf26baba3802cfbd3b38e683c
4685cb77f51aaa719f66308657d61c80aed3896976138ea5625c9d6bb66bdebf20dd65e8
f87271daf3fbd972f090923274f4cdc2324e6c8dafe84b8a06f4f71a4e4fbc23283032e1
8a90993651c011b181663ac70e197d2317bd3ef40f523a700d63454d339d892a79b2cf1f
e3e520583d02037902ba9280bcb1cc54480a9b3585226931079f7d1a2096377378ac0c70
dac17334e3aa0fd5dd2b5490527b00c02541fa2b35fce66a0ea33826da5ae8308a322854
ee77f6e0807964b17a0f7c75578409a1d8d4f1f5c92749ccd81c5be2491325a4082353c4
12e4ee0e03b25f96d7196c2d03d1954c51b2f31a4053e69f16151f1eb53a67448ce96ef5
bd50c82663cce27d951e76432a1fafe3a082bb0b3067b3138c6227fe3f62a03adee87acc
52423707b3d90ffb8bd3740147379b67d55b608a00905312a1e618fcbf28dfc1e87a99a2
71df2dd25ed3c063ba240a748f735e9de2e105b7d70229dee49086d6e79efb4869a48004
7ddbf61926ba3bdf4a5942a522d9ca78e62f0f2ff4905b93bfa36174b466ebb84f447690
85c127f94513da03dab2d23fad8f9cb4d8c98a550e0c7cf86f536e7260f901b0ea3e83c6
34e59faad306b685e29e337fae9459324f0f841eb50bfc3016381148b2e5622d63c392a0
540509b5befc3b10c3e038ce044975bca58374739435b0c2a0f57937eab0562b620c0c76
401def8b01ad5e8b804ae066378b3de4dc9ff469aa0684f12c359e20bab06b740ff1eea7
f5af0a3f146e44757b3e54610821cc0614f28ebf9bbe3306e94ccfcaf12ebb5c94310d93
be7844f4250af9f0a064a393695f258452c0a2e4f6bfa2912c213d3e2bdc3c50d93201c2
d07baaa020747adae056f5025222db9164f112d9b32f4dd9e24d516a77df5c74035173c2
a6caab7a813d2bb164fc73a8521f47c12db19f30a6bd82b21d22d12319420e92665f6ee0
373260e93b572e7c5b20e42a309be79c530caa9da590cb29cbc2995b99026ccf4bbab195
af323395e1cc397a906176762631fbbccc122f9d6bd935da280604056da3ad7463f09f73
566a1619a94dd7da9f0254b89ad79a454e32f6d3ec673738b65ef0a3c0370eaa76fdd71a
9d6ee74db055d4053e602a3dd159042d94536a4e3d3deb1e633f42e6733bd6c02669c463
7286d6ffc70ed0a32761df76db714414b59cd3813a42b7b14ed368065632ce2570759abf
9be72579d754ed5d8bda25be549e133ebe99d9ff762fd2c184cb6b4b8cfd7e37d981f5b3
a4132a47c259b1b9be4400e025112c774149c0996e8520414b4bbb08832e9249b87b03e7
4b9d2eafe08c467e24bf79f27e06b882cd6b2f8b27474e4547998ad9630a291693516038
9015c7069795bfc19a15fdeb4436194153926f0e616599c72e0a6afafe29a244f7abbad7
0525a6117c13e2c7c5608b24263ebc16b520a173d1a1bbee7f03b9647225cab65b18b728
c787f5c617ee7e574bb75bb26c936d14321f03e6280d958029ef4f687183d52de6f885b1
b976423852f69593ce368a9aad665f960629ff426a8a70c225cca4a962f850d51e1f5f65
121df93d73916d64b174ce4e66499b078eda6bce38a6c6392e57f3f5b848063c086441aa
9c3590e7fecd8dc3ef317c9aacfd28f1a394ad03183de0ad478fb433e526a10cbcf62a3b
4fb60dd6563df68322cd6cb007a2f4726150364806042670219534c1f224370dbeffec75
3ddfde62a6073fab45a5be98ec70b2c99c17f3e0c98809a458f502ea2b74b758aba39bcd
dc629bd2642e4fe2603d51d3cf5efd4f98dd0fe1e4548533f1a9b5f2b888dfb9595505ab
b564199bfcf4db0d269032fec456a805434e0b15089f6f61fb471672ccc5493fd9b24ee0
989ca4fca01399d18734b1bb889d6a2f68f6f7b48aa5080f9b16677fabfb042775547e0e
40259d749145c218ee22c01b7aaa1ec4f83c9a6083f4cff4bee564ee69a00fccab6d8e98
b801371e96285092d7ac1119d580cc22947c262fb1b70b76de5a2de9c0cb3b1efbc6ee58
d73c447d8c7c0009f180bb3aa4ff9f66fedfd8e23b1566973f403ac9732e488a2f482e6d
b29eeac5ce41eff976e4eba1cc5598706833a51a7e506093b10aaa31f1abd9631b36497b
d3d47431ea17771488238f7805633ecfa029b46b175481af556ab09cfb96c4e16ef7622c
1d4326392894b0c8b8344ad2ac88d321942b49bfe690a9555062b2482c83144e626c19a1
b13f8fb839ea276f393601070845fc81c66e2c4e33c42c3dbe6b02da6c7321bc44c5fd10
2dfee9c247ca8e072076f4eb3b2aca6803f8d834800f024e38a75ef2a8634135d0b00b05
fedf5400009c4e2a632ad1406a76f2de899d16789648b97707bf8600b377e74a6ccf4663
df72850ffbfcf8d0cf75db08e8b80a8da0137967ea8204840f1cb3710d9d057a5c23c030
8af12396d773a8b6550a14abe7bd619e24ad7a046d7ea95983a2904c1f739c433286cbb7
d96f4e382e3fca2d0177ad56ea9ab25ff9dbf4eb4671ae412ff50d5bc057ee463309c6a5
3164d2e5ae8173a207a908025efbaf8c334c21887d20dae4384806b595d87f9929363626
cc5137b0e7982b17f58c78bc90d336fbde33304a2511c52a99d78e216814b617bcc9bc4c
3e9a0517c478130b3a269473aea6b6fd254c6496ee741ad7de8e93b24b2258b50584366e
e7cde47f375a737e34d6658b59152681bb3c590159b792dc55109e472c8048a8c617e1cf
8b2e02d52f5f1bc01a3d07b6e9ebd03ed7f10a228084ba6773a325b5cf6c0c216537d37b
c217cb1c1019a7588bd55ffd5cb7d2611767077e787f2ed589022feda7391024e6285730
bf9e34f6382c191dfdbf816ec153673200ac3822d332bf9d89c30a4e61bc063f76ad1c10
5f41cab8ecfe1d6e375821c7c55ce1fb143bf4c234f764d8122fe8597dcc5b9ea3766956
29c4491ca49206b2dab993b5821f65a7b7fb3f3c9387df17966882e15605a65f1591900d
6223d4536a3bf855735b5018040f920c5b4a1a7fcc459aa84638b70e5c8ffabd956c8737
d401d08a1d817777647125c4760913fa630e9a1ca24c8c609f55b6cd19b2edbdd09f4b77
4edbc1f519d867f1e12310924ed66a08a6be41b3f0e9bbbea22e78885ee8411ce7f13daa
42054fe52bafff05c09b65e63726abc2d7cbea41b9d87b96d8c61da9a8f26f796253b902
4ae6e8a8257f9e6b3cded813e96f7d02f1bcbc91081bdadabffb247cb9f7cb5656f67dbc
02b33f66268b07ca011434d6db0fc1fd212fe8c27b8f8dda595abd3df032e84e3c3f35fa
7d903810c4b894e85df9655608ec1d2af172bf51c8c2d2e61144b5b276d0cee5b653cec0
5e6366db142bc2a2d2bcb31714db76659afa707b0c42ffa3dd34589004a0dac5d004a545
7a454220ea3a21a1d6206d59bcefe8fa3229fcb479ec7a58c51469dcad2f0c478e2b8dbc
9272c44810c91842331eb4aa6096d8add539fd70cd533a84433e647615f5a929d89e253d
096db34a0e77a761a1c762168249177803c62fff7e929b1f5285b74612f5c3ff6fe098a6
f36e48f2c901ec82b2113f2282c9d2ba7c7a9643685642ec92cf041b7ac2f439c5b09b84
1357f72b4ffb03aaf1f0e2ce37df9cb235a0bc028aec77d8228b3759c41d2c26c9a8785f
f067762b0f4d815263fd846df3f7542bd492996dcf441033f5218f5ee4ec5a3b2ed45987
3f71cd43b27cf2a1e49a1ed8b5a7fde0ef3f0143f480d354eb79d0c2f6669837e5f284a9
957f49ee3a5cf8ea46c95a1ae7ad7ffe9a6f5e1f85dc500ef01d8bd391cfbfa1037ea323
c49bf08ec7bb1c5818505c73330f6d6245527315574266ac20bd6e1ccac6a1b576dd4ee1
3258573d9c80aaa8e91a2cad6268799ad9bcb876c4c2e77241935106c2081109540effd3
2cc31a8c91fc8bd8ccd83830ec66e1dd4c2d8deef8f8e73d785f534822dcea8ce8450a56
7569759c21e5d520528466bfc8edefd63af4e65a6c4cd8d1445b4aa03ebb3217e7cb80a0
3f9a8e57bf8272e78dd9513b9b771b6cb9a15073fb04ff90cad0de202b8769bb598068a4
c70ee6a3f4181e5a50d024c30a93dc4aee5e5adb45418fb026705bfce45fbf2608ad8ad8
2283efe0382d74ae5669f63c81f39ad01c5a9af6fb7815e97fb54f9b856fd68189ddbe00
4e07854fef62a816502168958a96e83e7903478c9a876712be5d736e5a8f3a882f289c59
bf7094f820cdf4f80d0a2c58792d4f9afc55d42080d9f3216056d2e48cc6d30c0575a715
ee68f0f8483d04d1a06e059973ed1834c6fc0e0a056a32cd28fecaa6c560f4fbd15a949d
d214d039cc48472a2b4d9804374a0f93bfffca3014f2fe9829a8eaac97b27498739ed255
879634626a15f0e255c7ed6de75cf1c282090be76caf1419bd382a086e673fd722ff48cb
88ce6b73a266c091057849ca88cce41a83392515d8d48da7eac47ab754add9471bd4bbb6
b6a611f19c8c9b3f8883e31ae8dc47faea42d4cb2dc6af65e410c568cc140784cdbe145b
61bf687a7e4f24d9259db2c0251a03f59e8c2e796fe1437364c1a3ee64aca4d569d36429
b1bc03fc2df0b102132b24cbe11503cb176cb0f81b2c4da1d454498bc2757be8dcb59407
6a634eccce650c14376dac2b6f4628d0c368754e07e0705040fe7833b5d26a4a6b766209
2ef6af8821cf0505f21feb0a272eedeea22ebce6ae7129b9d2f40d95f46b061685d07c76
d87561cb4fcca93a3850ec1a871e2b972cef30212d3b47dcc8b44462a19383dac7f9ae61
f0758f8bad51484c3d90493fe5d9ff5bdfec0762e1c360def4d81509cefb27726987e1b9
caf18436b457e442330ae3c2389ab5136e100ecedb55183c8efa2a434966af6fe003c8da
93747cdf12d1adf1b7c69d7a85d01ad31373be923233a9d4c5df585f491f7b1bbfe50a6b
bdd1cf0b82a9d297ad2eb57e67160caba6c8af376a307476b395c5ce2d771278c3de4adf
a62a4e54df163e9162ccf3ed63ba422dd50e76708e91fdc3879216890829f6d33a76165d
4b3a0f6e795a63ab3179eb81645379b9bb788584e4c195de777a6bb0d3906ec551028421
55d5365439f66cb93e27351009b55c9387dc06cba0fb840b01f60dd39c662f28a334334e
d12f27f648604a6bf76b96b47efa41047319e396307634c3f8b5e1a110c09f758a44f6a3
8e5a415f42eb1bc1709eafa8034291761038cd0fa1bd954d2ac4c58b79aceff067c58ea3
caaf18965a8119e75a2709f3f8daa6fb53b3ea57791040ed464cf8edeb4e9d94f38ae1fc
0081b6b0f70345be553bd659f08d59fdbcc35e562717d180d3ff389a240470706e6b4fba
a459858a769c5b07a687774e15e92c4fb38ce6768d5bb57013f246ce2c158ee7a007820c
db00218a0e150f44d28ad83733ba96ab8474c2064302e618988825c29d155c7ce5453166
0c4f97e893585172457b391e85178cbeb2e75b2f5f12a93fbba3c2b1342a556935ea009a
04573a9426c52fb6a7e1cd85db288d112714d68a84e24cd3e58e85d48cec4e3cc933ca6c
b4b98dcd618fa8f65d44d3d986843b885cc5d8a7926f9b37bfa57d83acc23e85cc5f43aa
e1c97e67da43d43915414b854e9e5ce73a4e6c2f2f49f87a08873b795c009364f817d78f
f4d3955b762b6bb2dd2fd255063f11fc4a87b347fb08654992aa7d6138d95ee6433e3579
d124ea9e045f83a66eafced208bfcc5b81c105fd4e8c2fc2be740b1f178142589265d39f
7a6204b1d714e9042199170accc88dfd73d0b817f0976b8ecca9d0b6016e196d53e65d89
f5a694446983680711a01fa042ff933062d4ef6cde7e810ce26f4e1bb574feb776a19308
df2ea9c3895fa068258700f9745b00516065cb485c2f77c3ceb17b0157134b3824a3c296
1cffc2ea2655e401b5837972ec375dc0eae864c7e9da51d517fa6f6eb1565abcaa573cda
c40e509884360437937e34171207ead1352ab103eef63813d4e716e86bbf18d3dc1a7a51
ebe897b28cbc335e94cc791f0410418acff21766f9d584bc9a9496050e8e0f6d5e5d7ce7
f48ca2b850b5a4c5e6cd11c6c878d51202a20ed17cbf3108a6a986603334cec4009d58c6
8779d8c984e3fd435ffaf99f01785ce94ae270dcf457af7630b1a05f2ef7057c13e59c71
91c170748d29f307ed3d579e4efe72efbc5c34fc8ceb3a4897f9e12e33bf5c1bb50af63e
ae4768a51d87eab21d99f0a7e74a78953006fe4222b9bc504d2c3c298a309ccc59b84c70
5134991e5bc7e51d7a5fa82851eb67c2647a483026ed32a9646d61207e60e5218ad216e1
5a70b6bc54d96bcde6e46d3b0948bea177108a738b5a9eab4bd35785a262ef89fd324ec6
ae8950d8bacaef647852e531cf181f08c8bacd28cb110c58a33a2f741324a6859987aee5
b5055f9f0a5d2ca04e009b6c8278ec847583b780d4b84c094a09ea5dc4dd792b82dc2c91
ce1c31737908a386b37202662a64396e497dfff061eb20688cc7560a77aba78801dfc016
5a82f2b710eab19d718a40b3ab65f5433e67b4c9e6f0939b573e0b69177580d3de821ad1
1d8b63c64a9b96335c46673138882a26a9a7fc9fb8b2f109da4e3ff960fa7a322804383a
3f3850b43de78769a77b51a76cddc1aa4033bd4602046f8f9609e93df5f89a263c28c2ba
14d3ba58a004fb23919842b9cbc55ed76a5360604a9e3d6181db36fdb2716e1885e66dac
eaf1ac7e6788cd3dbd69d9831c3718eac3ee964b1ec6d77aeebffb378572c7d53199177e
39f7509091284e7f6b9eca4db79385996e654e42afcc4d04fe6936b3ea6605599a854812
27428245ca499e2713863d84cec5f402bba574b244d63b3ca3d885d7c1eefe6acb7123b6
467ffa82ceefcf836b1b7a7cf9abe4f593c67a7baf9ab403fc598fe5f26470df9f6a2e34
10f89e6f6f39f9232d43a65c5d87d93301dc7882ad4005a703f30aaafe1bd9a5cd2320b6
3a7c00111a5b55070b4e6054d561f81fa4a1a0cec6c240237dd70e52a93beca0b3074155
e7e7cb9442531567649545d5da2bec5819de4805e8b5c559afb07f20a1dcb8bac41167ee
546dc3ec97c3a872bd940206f3706790a51c8120b18aede82cbc3c5853584a8aca3a2478
a8e414447cc46b4603afd60b190f0de5e742500f9bb6edaddd6e05e572af969d033af14b
6e540bf3f3bc4f1f09efaeaaa9b1335af7bbf000679005cf6415d0659a3a066287cb738f
8b8ede343c35133d8976acbac47f6c219cb2546fc7dd7ed7b4647a38e557fa5a784129d6
981d5693583de526cd47fae08ed361f5a95983f26de5ac64c31c0bf6a28efa33cebcd7c5
d787f9725d79f236561d0672bfe2e6c0ad6e9a2c58e29c887762c229165002197baae872
2bfe252f243e3277ffcba620137d302e0910605e71edb70d82af89981ab1e4cd46a24362
5084cf9de494946399a2f103a822e626e41251444ce5dff5dc38f5f9c18db42cdc2ee50b
0521d6fad27ab276eac6dc41b3461b25ad4e4a59fb1c697caad3630aaf0a1300e8043f7c
f3808ee689e49a3b84caa083fb996ed21842cdae03e126c586ffd8c6f1d568e5146f0e9e
b4f3c0eb898a1a186c978d94106e1e408a2f0fdc50e14feb5220e74b1cd7078c1b2e8a9d
53b9efad9745302be5a40e4906e604dd84cdeb5f251c6b857b2c479e5eca5910c38c2f8f
9b7e9012e3b91417a7725bc3b12fefcf9916e3f61995ffee9fee019980c9ed8afb7460b1
d1de31d3a6ba0d3b69e1d81e30acc75a0e453c4f5daaba867eb80bb109706c34dd53c20c
6f2f65f6e06fe4724a9342e270d0a678b066505c9ce0336bcd7d33c975b7187ca5e1935a
5a3198de347507c2559f28ecf38d4a08097c42a88f6e72508c3d790d6986c65dfbbbf6d8
71dd971da195f7f1a6db020ac481daac1e3b86f8cc80a78e2a028d5176e450c26e1f3694
2301ee7954c9b227a2b0118a7be9bb4cfe7a499a73c4c2d6ee89e22b313b934377f76143
037c45c4bbd6281fe6d0cfaaf07343cd025fc69eb5e56346494536e13b85558308234cca
817853328f0ac5b8711deb583981f751a3139b9e74b8d38b10d034dd1480f14941a203b5
d27906cab9848e773f96c573045c1414e2f6fc4f3fe01ffe130d010a1027205170eac363
2d8fb2b6f5bcb4c4a90bf7a578e35409d287b8b2d2812c7b87bad8bc506630f89d4ba1a7
6266cfcbf0d10bfb50b483135e44bdb0a5aee83f514f7e90a7e83bd47b805b5b7b889bce
055f1304085fd6805c12d950a07e39ed50e02fb2b2d4b3d62347b2c13bc04646f293adff
1bcf74a53fa1f72c39bf79414fe0fad7c2ebaa7d27d262984041f9da08455712473b5f65
660eb4aa15aed2443f6f28e6975b4ffc475757876b25656e08b7db2692c7d86b5a0d5abe
43a2e2016790da9a3808f20d5d12f4b4edee469c5462714dd25096888b9bcbfa622dbc05
ba52d886f15f2d093663f5cce54b4ee28632bd6675099e2a40d2e46f6a9988e5e4052ccf
cb37916cbc1018bd9b666eb9010b51347e017d93a1fd4ff5824c61830a4f1919b49d7074
e30bb7603a74baaf4b531a028ccbeaf96eb22bd9cd2a39793deeb517de98192bcb50c30f
fbe865c3cd44491364c48fcc19a87b6ed0ff0a860430ad1fdb507005dc161321c46d2bfe
7dcef5dad6c09ad07d936a848b10aa156c721caee140560ae60c37acfc012ec79e9b7950
3c2d29e994a56f1c1737262608534240066faf38936a73be2808f7529480b0c3a701e75b
5c538fe8fa0f1e7a85be3c28c3b6fc61ea7e328c95735279a73b2623192ffd4a66458eb5
22a9962e042dd92f8d5241395b9da5e7c850400ec9f64f4a2ef62add0e479fc852fe77d2
cc0123c6094d186fcee66fcc1da52388232bb8d9db56f5dafab8b97ba66178ca1b86ee77
3b777c1d02b2e8b5f72ee3bb4a0b0903d07e1be5d95fb21aba5fc86bafeffcf0e1ac4d00
d138fbf2f498ac883599c2550b246170914c125f61370adfdcd8adbb28c361ec60df5d27
2b6d409b9410e30581d98bdb9a0fef4c7d1d06c7c5c95c596cfa5039d9df3c7ee6787ef9
9b4ed9d612fe79a548761f847a375a9d526c1a59247a3c87b87fe29236451b0ee3b72dc9
5d3950c14e790b77fdee13e2a7465e420b84defb30bebf5a7722512fa8ebb92891c542ef
a1de9a06bacbe87ccfc1c871d189189f7042c78329c54add46e7c5bb078d3079cebada77
f9847e91eb05528de01e8a9dee02b32b34b7edec81e57eb499f1afd43ae54f3c61819ced
2ebd0e8190ee81ecb579c8efc9a8ad3b9685b982422b51daa87acb503e68cb1f6f1fe7a8
9f9108c3521e742a20dd88fb7ab2e0b15a2264c9a3bfa22efe086d9d347f1cf8b80f997f
7af78e7c64bfe404a2c8faa2db8c04889b68e45fc104ad758259a51752d7c8d906fa4e11
8600bfe4159ecc01e80e54376383ebd3d596bc7758dfee68bbc6f364e889c47fea280b52
7747f9e2b40bb41e9d641c2cf4cb62d3cb0bc5cc64468a486d6b1a568cb67703ffd26e28
a7c1dfe819782c26358e6d1697ce54de28fb8fdbe157606d9628de7b5dd7c075f41a90ef
c66c40503d16b3a3574679765f36fc19fa4ca414d103b7b0cdf7ff608e8c7093a8232cc1
97c866f122c3e7a6bcfa76470c42278d55514cef214010ec27be1fe61da326ed6e0b1b64
36cf735020c6ab6867be447ba1db876fa70a4f4075ff8f5d8fa57523594916ac7cb96d97
09ccbd8a0f4766bdd477c7a737a3fe9c01d5da3754ade4addeea5f81582b8073a128f5ea
f29b4e8cc71f5368cf06e9a3a549bcb530fe4a1f1f973b2ea3e6f99eb788bf74b21dc509
52c874befa3fe76932d7a44777b1e6f0f51ca5f85fc9c1bacd72736fb07bec52a696fcaf
23aa8136eacbcec744667bfc6008c32ae4abdbb43488fc9bc89d78445367a59799970276
0efd07bfd0fc2b282ed3c28f002e4e84e060ff6e08a9f25a59cb146eaddf78c20b4de1b7
c049d6e45c6e1e81feb53ffd84eedc632270532c54bfe60c280b62161a17b8efca1da1dc
4366710c5491a2c1f323e46d24cd3cb9bbb822c4bcb8fd51f6241f70cfdba73eaa699392
226dcd9449008b33d018e6cff3e085eb0ba46f856b71f267a431d7b0f42f49f929a00523
1d32b7f0b2c21788feace18cd3a3b53ab5381aac92bf3243f90bf227cfe456094ecfefa5
d4dbfc3e6643d480d449794b529dde4cbb641a17eb8327fd5ce31eb9a193fcc27d54e2ed
5012cdc4d00301575f91282a03a215f8b7154aabda10f8b3a9a11372385bc93b22ff86c5
436a18090cbe3be7bbf64206e4fc5196dfb950d1a13ef4c7a1edd7d723195bab8bae43f8
6988d616550a2c6a06399d0c4c60fbd6a401cabd5e7fed8194639595315443bb86d33ce7
c1e14d6ed44aa83fdb4695b080c87bc91ba43b8847010eaf8fbb3e041fd2801202f8b8cb
4910481eccfc1400a490f5f7ad2f913d32d1c6aa87094445f7583affee397a5ac7080598
60b2554183a8654fb576c819234a8a0869a5e355000e2223fb5af926a600cb169d680185
dc0dba97be974ca4c7b79eede3d2117fcec9ec12b56f9ca8239a1fa0185c06b8c4a735ca
3e6189b00ad489420bfa97c44ee362773a7da366a9be267fff337e2edebb4e5f7b79f313
c408ca549a6d5065d3ac72163de294cce92b94628f2d881cb20388604454cf9e07b6aa11
33101266dc6ab6289b6666b6c888e8c955cca49d74efc3c435d266446983a1c4f0baf4c2
a5280f9ee50646e1a1881ea6a33920cbc6394259d4b3dc3005b26aa4214fa1ee61e4e06b
71dbe2a86b7bdf96428b200d7c4a6d64da3f3999c41b7b2f7e6a510319455bec0c207516
3c358c084543125601605ef7ab7b48cd8924f4936262acfdd2fbdc9f6cf733f11a52cb70
03391925170fa111dc583303d22455e36f4ce1211d91a96459c175a754a0947e2e44527f
ff6983f574f341a6fcdacd1c859005bb7ac86608c7fec49790d64a092e29330727c98c29
999b07714e13e475a22ec202f80c28b26a76678089c737f52bc6e6911c1e5e91ba3d38e9
77f6c54e32e3ff6532d299bfcdcf53c9ca75a2c7b7de1bb14cbe71cd5e08fdd03a0ed0e4
f71d91b85efe18a2615385efa3b5e22f7d580e99c3ce59417334dc51d45351b87508686d
ffd0b8770fa4e11b68f40bf403418f452c32e1a963d014f1837ff63fb5edfaa8837b18ec
fb009eb5511e8e3b0a72e6d797c80ed10f5b8d153da597a006113ba1173d9313f439d754
475d1272cbe556aff428d9112279462906c020da9c888b59c4049c46579bb67b0e3174d9
b0df90edb3baec9b2f195d151f3ad295ee8ab8f880d6f68265d0e3e766b55f9a693a5475
f51705ece9da65cad78a495f56e701c3830f1ba2ba8816a89c5d8d82bdfb0bfb3681a07f
01f25191a503d086519251a3e3e0bba8e19e515eef908eece9b829425685df52c1129810
64b55abf6c0b3e4b4c2e4b1af46ef98ea186902527302bffe3b15835afd3a5a32a5e0754
9b662d7ca57034deb3969e542d95d0decdf5e163f1148a117049e9a02ab2fa1c5cb873f4
dc0f05b89aa15e718c536c0e665ee3bfc18e15d20ed5f69296a8f1452251a76e80155b75
e879fb16d761161b1ecab559176275fc5afdc44c18f3dd044a6632efdf24f036a709458a
1c8df0a9e39ab169c1e4ecf2edc17bb1249e50e54481e43667d7e5da3048c82ca73d190a
b053a0c9720511e94428d98f6b847972097164436a53887592e46ac7b6781574a3e4d2f4
d40fc6f6a20b92709c974e85f043be7af633f377f52284de8c678cf10a36f13069b8a53e
751279bd8795afbc40010badf8cb3f784f0bb244aab6d310a0296f17f834f88f856b5e95
fe3a2586e06f7e2c6998b638b0fed8cb216299a908600802a7dd0588b7107faba9f580e5
814e24edd07cd659576ea7c853227f8ef03d25175b143943cdc8a188843f7aed47e52c6e
92d35f7b0a9ef909f23e88cc155936fb45d37b80c0f4a67151b7e886ca1ee515de23acd9
bf89d435974732a498841217d7b0d954d0e8302baf242ff7092c132cfd47ed9e5b96e8f1
79e8449e5705684b9a89e2bb57f42afd120ad080192cafb074e86768770b2647450a17c5
a02bc6db32162f2d9393f754359bb710b328f6ece256cd465ce1690a72de7d0d546a6a09
3762816dfe810c4da5ae70a979b6362692c43f53675a3e28abbc9922042ffeae80811400
23f7bc4f3f202ee072b3de7080de985cf8757cf83e99b54b9645f950e43563bc3cee2fe4
94c9801746c6686cdc219cf6821e4619d91d88fde810efb37a170c54a5325a79c0402a4f
36cfcd22ba6e5a5695f9ac25bf12a357f0b12ec891a3d77c3e4acec44f8bf9b3c2b784e4
9acd0602ca0149c8eeb744fdd4b7c6f6769897939a6dfa41fbfee49187b035c8e7ad978c
631865df005ac3916a77f5d71f46b7842407eec230792ef6015550ba27951ce40368dd2c
7a4a6e47ae23e2ac19e3150b187c8c823253d41a8c109b704995fbf766f0281db837a938
94de7e9aa12d0611a6a8eb47b95d7fc744349eddad753c90bc31113a42cfa1eca1d9738b
5c90b15487329d403a23544eaf237a5fb4278ead95eec0daaa0175dced06534572858820
4fc2ad8007bb936b12d8dc89a804385a72239ad82396db0110f355e25c66263d3ecdffd9
6c91dcaad734f44464252ab403e71499b81de7f6e145b71a2323f7c65793774e620d926d
94695196147bc3c202ba8b4cc2a1e74dc8fa52c8b11c762b4b285b010eafe1ea7de670f2
a7c2daaf5d4a27bba2d890ae9f2e19bd7ed48c45435a2e2f1b7f53ffa6f8207c8d69dcec
24b1516a83bf894680ea92665bbfc3e8add4838f1b8659d8bf5695223a500b057535019c
3bb2eb7ea6a555d5a42d4743491eb3e059d76a56e20d8af3f70749998e7f761e2b350e35
350c887d8de66b8d6ecac317cb2ef420de97212ff30160b8f87c75f695de84a74ea1db06
486332e427808f08a60091e8b031e6edde26044f76ee134fb19ae39782d7a5b72e881021
6072450d7abb11ced13fcab23e368f5b109b19a8300a1c85f67ec501c3be7f16970eb99d
507e7e6c3f9a6f423c37336aab36143305d367d24298c43f0ab8d958acb0c274e782062a
683b6f90d4314249867d848c1573fc04ea0e6d2867ca83ffbd39a5bbf4619f114ebdd5c5
80d8038746420bd0d54cf1663ca11f6eb9c4ef5e27b18a64a9cbfa01732936365e4030c3
d7a6a03809690c0d548864edd17e0d397086c61b35bce0c9c04b3cdb37fcd7368c9fe67b
50d6cb8151ef2f7e899589a8d0f86ff964c15f2bdc0bef2571ea816b605cfd0191a61d44
8e787cc4b84fc92693b84707ade0e3e1c035451bd8241bf857b2829c6881bef6fd642d59
c4a9f69d55e2becf612cf36ded9555601dc450105594726b692bbe3ad894ed08b9bb3cc4
2c27c6c2ad9ce40f25002ce9b67ed4c4a287d023f2aeb780db60b27fa1950d1bd16e1874
c475a8f436bb2de1f2294b7a79501cee6100543792ff1067e8bf1e507af881dd1712b4ba
a7011e26fbec9cb229b049ffcf0f606e3b4a40603be750f512068c5798542b464118c7aa
8a5d934734c5a8c161c8d17082ad59041ff21085d4c2699238a5f0e93c586824f36949cf
f31d7642892fe2d0b9c02a06ff022476674efba306fc6ff2f351cb0c13b5e3e7f8d8e9c5
fb059fb7078ddd76ecdba0b831acf83bd82ea624199bdcb3b1be87c52b8f9ffb0320921d
c9d1dfbb62c387a968581a0c49647577bcb2e1d59e859c66e55ff77f48ea02b7a246b399
399adf8e0656dc24c6199f067e01d8953fb3a08197d3294428aba406d8ac26f834e36310
8ce2f2199dfb1cf2251f02156897e77c99d9579ac386444a8879829cbea4da21978f9ee0
391446be01cd17ee71301a66587199c5e9322facf4ed75a03cb752ddc58484a20e961119
d3e4e28410c12451a6926585e7e75de23f45474a1ae9741faa3ddd4354177b009b356561
52767438a6c8e1931782012bfcf653bfd27bce0f851b15de2035a1882d4761c372ad6bc6
6d281ff5644fe916297ed92b78b34fcdd3982daa8764942ef4e3069833cb9e4779918079
117721a86d3360f1681fab830d82c0c711e4a947cbe83c5c4e8c52d87dd9a130bd1b8629
c505bb24f2771d32df3c732521b1644a7d0c380c3a58cfe9a427709d29612193585bd01a
22ecba761972aac0bef76a3cf077a9fe4e76b6dc53254c838649697153dde5cb678291f7
57bf9918f811da3e59ad0821933dfc3b789be92ba870dfac691f37376263c44ee71a0fa1
ddaaa07b1ef8546665639e69c6dc6c10794b42f4f976118cf0624d13d2f1d4e97630d0ed
c3da7173acc2c30dc2c5133c5f5a76785d6e8b939e3ceb6bfc1c6e9c2e9b0044b061c67d
c7985b94518d13f7f554bff896f789dfcac51417621f8289cc29210a6606ca476522bf71
40be48042c997fbf576f243df693074bc873e7781e40cce9295d604f8009e07c6ac31043
4a17a4da81c10c2f77be4532076b0f008189124d64a1474bc962a565727a46b20ffa7931
2e7ba4f20eefaa4f5f032e6a05274cf64cac8e79bfed44b4532175a41ac9c027e0b40216
9d791b261eca9ea92b205935e1a5bc305ab84dbccc796bf9870049ca0ab6927bc1c9b7de
ce87464a8bd05051f5e46f73efec6f3cc95ea9dda7a85e20670e6b729e2f8b7052da8705
552fc544f78e9067f1ea70d48fb93cc143c334dfef0ed2cbee7eb8d7c14baee239575923
d0b4e98e70f75fdd30980a489741ac1afec32eb7f1ac49cb77654697c09dff54674264e0
60114487303d326de7f7fe7df7836c250377004ed841b444708a91033f86795227c4bb70
c88c50f32fced9b885bb70e303b14ceab95436e538b5a62df797a5df51f10a8d69d5a81f
a7079f625e8b6618c976b79f652922b267830f8a878c601a6ed45c9484508fed4199dd3d
36f624e1cb1164e9557e5ae713a6638f1a07ff54b2e78c89a265738b3084ff9991b9e2d2
b8db65a29758ef2d6dc62e7b81ed2c923c012e24c5a78d03aa844083ff76827938e5715a
cc6cd7adae68043e59f3e34b0ec50290bfb847c8ace839b77baefdac6a652b8566542544
a62983c2ca63b50df884e2bb2809b1b1889b25dd9e27721ebe65cfd90864ee682109cc01
646f51e49bf324f59b56a9cef6d2aa1a8598c7f49c3c10ab2efa8b878e532fd77b064ad3
90b0b0f7c4267205ffdbf28fd76203e9b16d087cb2f1415364a35d3d3390b2e6ca5a2619
cc9b2a70e3418ce1d82081effd28f7e1df2c6844ff6cf6527d22180b95104dc7f848446e
987827f7d2a002e4809bc39680c5209f529394ab91cfb52a5f9bd3be93442751ca74df92
f2607b68742191238d9bb4c8dbb9fa61dde5d9351615622a9940e9d4ab62f552b84b2e05
ead65d0101a2bc57d1ba7e45ff35def27312e7a0a7dc5a9efb404a9a2da97554c33514d5
d26e108641d3283142f74d79428afc28c23ffef2953716ebb5b0bc98e56687b2e130a2c5
611927694ed98b223a61a8ca2a46998299249406ff875843937ca883c2fca2c642d3e805
298e33c6c61c79731c38b99fae1940e60dd1dec8bb5cce960ef7fb765a286fdfd768ee99
9b4c21cb2c920560f08e188ff56127844f658f33f8a1aa172ce3cd40366988b3e99eeb1f
e9e3f2932cf672936f24e3537b92e30e4e2e181b8cce775369093f9e3f52ecb65d73513d
a5dec80e89812007e53306e81524dae2a448316aa62e667973e03af6b3d46b6e507ce1c2
cfe80f32dbd0713f7e0216749641c2ff106c7675f6160d09df9393588466c062524e0b59
c4cd185c73bdc68fef5c6e92fd690da6a0bdd369528cb0a449182552a72a3fba1409cc93
88b186e22593af9e6286d773bbed4f09bc2a69c9bb5afab9a3a8c3a6d0438ba6c7d64771
f8f06346b21cc28ee03b2ea3957dc655a2ac0c74a5d71900e9872a4f44f52ec33085bfef
f341b034de12917022d043fbffda1104872975c96f54a5a6fb47c933b9d12b648f73a2fc
6484ce462898338edb4610b5d36bf48eedaa7caa1cf55bfa6e48e8ce68d02b215deff920
badbbd0191b5f3ca4f52711b56dfc575679c75c343feca3988b5eae151a426eb8cf3c83b
e5ff7f3c97fb63ecace7f2108c3f4647b72265f330bbfcde0bb8433e65cfb01415502fd4
860f7b6ec4f2dbd0cde34b0a6285f2fc09aa42d1ce9a6af99fe03ad809cd0f2110d29b8e
22545739208787ff5116990ae951e26b42ab42468dc59027677fe139c13bf746c9a5c263
42b834dc59082da80117243a5da53eaf7a2ca4cb703b62e2dddd0f522c33c6609489d777
74ee4c3899796cb5af1529d368b8f4e9179061e57b6302ca0639724bc68c4001b2b8806f
c5153a9f77390127cef08903
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont: BG-Maths-Fraktur
%%BeginFont: BG-Maths-Italic
%!PS-AdobeFont-1.0: BG-Maths-Italic 001.000
%%CreationDate: Wed Aug 07 16:52:44 2002
%%VMusage: 120000 150000
11 dict begin
/FontInfo 14 dict dup begin
/version (001.000) readonly def
/Copyright (This font contains glyphs from Times, MathematicalPi, and LucidaMath.  Assembled by The Beacon Group as a replacement for 3B2 TeX CM Maths Italic.) readonly def
/Notice (Copyright (c) Adobe Systems Incorporated, 1990. All rights reserved.) readonly def
/FullName (BG-Maths-Italic) readonly def
/FamilyName (BG-Maths-Italic) readonly def
/ItalicAngle -12 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/Weight (Regular) readonly def
end readonly def
/FontName /BG-Maths-Italic def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put } for
dup 0 /.0000 put
dup 1 /.0001 put
dup 2 /.0002 put
dup 3 /.0003 put
dup 4 /.0004 put
dup 5 /.0005 put
dup 6 /.0006 put
dup 7 /.0007 put
dup 8 /.0008 put
dup 9 /.0009 put
dup 10 /.0010 put
dup 11 /.0011 put
dup 12 /.0012 put
dup 13 /.0013 put
dup 14 /.0014 put
dup 15 /.0015 put
dup 16 /.0016 put
dup 17 /.0017 put
dup 18 /.0018 put
dup 19 /.0019 put
dup 20 /.0020 put
dup 21 /.0021 put
dup 22 /.0022 put
dup 23 /.0023 put
dup 24 /.0024 put
dup 25 /.0025 put
dup 26 /.0026 put
dup 27 /.0027 put
dup 28 /.0028 put
dup 29 /.0029 put
dup 30 /.0030 put
dup 31 /.0031 put
dup 32 /space put
dup 33 /exclam put
dup 34 /quotedbl put
dup 35 /numbersign put
dup 36 /dollar put
dup 37 /percent put
dup 38 /ampersand put
dup 39 /quoteright put
dup 40 /parenleft put
dup 41 /parenright put
dup 42 /asterisk put
dup 43 /plus put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 58 /colon put
dup 59 /semicolon put
dup 60 /less put
dup 61 /equal put
dup 62 /greater put
dup 63 /question put
dup 64 /at put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 74 /J put
dup 75 /K put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 81 /Q put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 86 /V put
dup 87 /W put
dup 88 /X put
dup 89 /Y put
dup 90 /Z put
dup 91 /bracketleft put
dup 92 /backslash put
dup 93 /bracketright put
dup 94 /asciicircum put
dup 95 /underscore put
dup 96 /quoteleft put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
dup 123 /braceleft put
dup 124 /bar put
dup 125 /braceright put
dup 126 /asciitilde put
dup 127 /.0127 put
dup 255 /.0255 put
def
/PaintType 0 def
/FontType 1 def
/FontMatrix [ 0.00100 0 0 0.00100 0 0 ] readonly def
/UniqueID 4119201 def
/FontBBox { -169 -217 1010 883 } readonly def
currentdict end
currentfile eexec
e8dc61728071abd4d5bcd230c4e186dce095a0ca84ffc476adfaa82124268e60d2cc570c
5f52c10ed4a85a71ce8e5bcf26aa13b27d7fce1cc0c72c3b848dd5ffb2d56d06a1920fad
e4ffa3b35336627e9ed1622c1f9652956d4a424488b4c4ffda9936442bbe0ca749700ae9
8a2bf964fad088f0cc64b7c1d76742f25e90e759aca624a321402b1d20863faf5e04b86c
1ae66f450b1586041815e52f13d2ae539f1725d11489898a83a05fe04d6d14bce66e2cb8
55496ec301a39f6ba632f50529a6e1e9bac11d86dfea0f879aaa1c3630240b88fcf2194c
533d15eb0740cfba64ed4727752c28688f126dc330feef50cb22b5b455e2a882dc3ce335
f0cceb8a51a1e8a5e878b762ce73f02a7b9a7d866ee53dba12a94c3726a72405b9fb7d99
598c91c0b9f8996a2b310ec8183a8242cff2302c51fce5130a99785bdfae93dbb0d19fb0
df470e99ed22158b491852f6f7e17234b47af1ca28724f6579fce2053317c915fd987484
1ea7562781e984e6585ff4efe7d0a2751ee3f32749c3aec7675cc8d18b5ada2f77fc2e73
8a05883f1c95421dc75d0f9d98c35c18e05cd0c9c5762fe7d89d358b3d81bc067bdfdf66
1748dfe78cf55d2908d46274db6836ae21ff133c6b974467579c3542a6b80b52988a229f
6408c2735429dbf403af101c2b26b40c014bf3aaf8a4053327db01964a018a4fde6a060d
50650c74b2dc6736a9a7c7c651bf12dbca25f246566eabe947017e362af92cf431c96115
0f24dd704617e5d936b60bf54a981a0eae0a2e0829461cb7f60c604550504b21567662f3
2f3828d058bd5ae1151afd5d6d4eaa2611f92d484a912e8a410d4ed242eb8c06024b9812
5b6c418a84f0002754da9a44ec1fdc09b35a35803cdf8068da43bc80b69b5e964d3f7569
a3407485a42da3d2d0ea82aaab718bdf735ade9d227dc86377930e7c83229ad410f90570
488b0d3cacee474df023e585b90032a3df64ba8dca13be53720f09a2f065a3df4d009100
628cc677237d0196c0989e6603d3c8c24ad414209ae131423d2b92a5a0f27a97c663af9a
3af4f5277ba02e7f6bfe9fa13ba59989abd698eabd1f42a700203c5dbb58b8aed7794e9e
9c753fc9777008a60f4d446552360571aaa602abb97a88fedee6aaae0bf5fb6f3d8b0fb2
8bce6447c643f6e1c81fd3763a3d51e3771ec5cf139e6f8b837b24882497703fc5c3e21d
5eeec184a3c6a1b32af36a55b392d2451253f50644d86d083e1f06d7b4826a2f31f6cfeb
5505fa3bd0dfdb5237aa4fbd03c9adf497a2ff97f7bf507e6253c3f6107a42014998e8e5
61c133e2cef19f996477a763c3260f0d026cbb042f41ba2912483852c6fa2e3efc4bf4c1
902890bf9d32b1acf0515f5aba2e9dff59be6e6b89d1c890589c4e862bb2bf75186618ac
a5d1ea5dfa6487317852a7a07aa5b4a21ee5524e81015c551ab5a8d2d20117f152e5d14f
74205b280fd98627890282bc3f6156c989bdf2eafca29b63eca4d483ce5004d5adb8d8e9
ee0fc6a8ed412f88bee480c30a34a7fe7fbad8d01b1c4e3dd12b82646dc5751646575338
f05308807dc699942acd0b4da68aabe36e50203c4c64485ec0c43eef7679b81db4e88d81
ab02413a24c4fb5cc4df7c63ae87196e484a65b89631a8dda7a78d039d027a06dcfb17aa
6a483a3cbd47f6387e332f159d9a540590e33ba7d3611850339a9a68e58cbe677e45d53e
dbcdec0de25c2c44d4535065f649cf1e7be454db4c599d34a473c7c9372cfd5da786a007
d47146602e70f7c8a6467058c4eaea5ba15fc1bebceefd8ef0bca74ae444cd55975d8028
905f1b6f113150a98585e4b468dbfaedccfbf71933a1154e3e18e71a5caba1b64e0117f7
8dd6fbfd3e0e63385c0714a3093e1c4057b0799798106403b67c890a3abfba529de342cd
2926bef3ebec6f8b4adb87ab035deec3af49c072a531175c122fccbaecc5dd359b42be1d
cd1781f2fc703099af425986632bace17ca32c8d92c9d6fc13b6399f6c3de59d87a9f97b
fedfb53f40a66f1db2e521a4b5d79809d211852cebdc1ba5b86e4e5f27cb634c42e37ce1
5527507cc1c0c4eaf906d8ff984f05d3d4f36feb63fc64e94ca1856f68fb65596fd04971
859ae73f6027bf95a051d090932e086843b8fd55f2f55f42c2e0519172b67f794ed95b51
5ec3643ed6234d4158121f61c32e816ec85947e5baa804b563aa12f66d5c88e46ff20c75
31058d210a8d33b8c83d0437a0e6e409b167a36a1cf9bbb0f0dd3b95cca984d99153701e
54b1df79b34ec2633a4743dfd82b982e65122282cd0eb0305c51ebab5c1abaad8fe22bbe
6912f89b4cf736371e3a88a692db57fe87fea70151e485338c3929060d7c2fef66c65f83
13a072e746022afffb619f3d1964ce352cdcd69e43beba2cecfa96ff865905eb7093090d
43f4a0a87aaa1cdd5e780152de4ee0e2235752b06a1af2480e6f551bb364ad099d79ed3c
0dd7fe1b3d2ae1d710784481c30aafbf4b71f5cbdc35bb84211fc570428a694d3847da96
7ddd7af10c7bf976872f04ad38433a8d180ec4e70ad02ee8bbbc70278fdc836b8c814e19
c13f7e0d9fbc2da375ca19fc677149fc090ccc71d290cbb141e45b8e0de1411d233a9a67
3808bfbaae7f1fc524261ec6a0ec58044bbb24fb590d394d5eba7eceb7a0bc494f03fd6c
f7828b8dc03c56cb855b806c7e62ac6d9b871a10beba6d3bc1325102f74b1f11238e2086
d60b0431b714824bdbf4e9444ff62397b97a8d2f5f2fccfafc48891a3d3ef9fbc7385f81
6686588ae62b97e65a7d9dec8880d44b51820158d11488b8e5d5e4b896e4ba2ea38dad9c
84b0278b771f08ab4267c528856a19868edfa916e75cd3d8580f7dd37a298b937eeda0f6
a1e9e4af8f7bcabad733b559720d058f8993d17bd5158aed1704c6ccfa49dc9ce06d49bb
979178b6d889c7ff5d3194b48924560131a59479bb58891c97041a33464fd6bbfadb68a6
238fc070b2f8dbf28eacce1fd5765bb976c6598e6a36660219c9b6a25215ede63bd9d12d
1ebb00ca9f8e3df623311d0262aeb8189d5d6a24c3e54817bccfc6d191a3f6c388996f7e
9781168a21f2eeee6d916ef0dd998f66d9b86749690f9cb8dd51133627bd43b77a76dcf4
0c7fa436527427092f0ae61c070bde7501d14c418a1ff717f191dd2ef18a5d955ff1c5a2
6d202f62b16b515b69d1eb71d2bc900efdddab405cc109838b64c4aef83efd903e914e44
60fbb092194f6833e83248b4d475a3f5344adcc2aa4a406269997dc7fb1dc062998e036b
d62db6e5f100e9952dd99952f857b1a0e7d7b3526e4847d53056f501d92f7d82f01cab6d
9e0ce74fdf6e32a84bc756f9cfd8cc928ac31cfb694b649cee6db4f15419e0cabbc39394
f1916e9f91e81e6035a2166b31cb6caa0baa16401f4cbfb116c6bb8522054aa4414fa88d
98232924507c0b3e5aa53030fa9a6d60bd972c8fac41dba7691fea33f703820d6a6edf83
70d0e80fd883f86c38dc6f28eba1dad120e135240233ae8be47b5b40fbfb5d8644a62c19
23a1656a340b1aefcb59f373977dbab773ab1786a760cad8bbe020a933e090fc9e958c52
17b774336763ae36ab19651cf89bbe4ab1429ea74952485a401c5a34e6b4ee2d96cb8769
6347cc9e6c0914c51a9d58301ef47464ef7132ca9a0afd9801cea8f038959eab5a535e6e
9faf6b1ca77240af0e24e7c888a15f714ec2cf4c1fc9716ce3ad6bf4d67e57725ac164d6
884282f538d79bc14903208541fe5c8c94fad67749f16b4ecd03f3b93a60120b81b94a2e
d350002c5f0e0a734a9499baf5adb4d306f72e5d3dc9284ded9cd5d2e39fc1a9b96f2d11
9dcf1c412d1d7a9451d616e0fc42679641f4d1defd7388455f1d0aa9955769d81d67623b
d5dc0ccd8c884d4698ffd7a26440010c3cd1b7820ec18183c26844b7c3f9ad5bfc526607
7c19e547b26d2e9177b73728c4b76080c0675d78cadfdb298ae2951831e9e36b649ade78
6c98a6b37f3ede4fc09abc0a6bb96b0a6c3b5e52ca6ac03e866632887a0193391a892ce7
a0401485738db4657b476a4cc1bce7e60945f3b783d4d637a291be6265dbf04ccfbd1aa8
2801fc6a837b1696a4b840f8b2dc995ad2138a5a3ff357541f356519ff0bd1c7eaebe05d
3513b9047a172488586b9dead30c147c99a23d52ea27a9814c54352dc2c748fb33d02079
6db33be859bf16167504f520a361519bb46da56405e542b1a80275783f84fa4be2fb350e
eeb10d7d87822453803b3a1ddf2d90194330df68342514f5f4467e1b1c9552e301bdd88f
6deff95face7d7af80611c6b97e50b0b676fd4d287aed4ae7574ca1c780bfee5994fcf4d
ff4cbad5a91ecdf0e91ec743e89c927a67602a59a33650ec086d68ed061143dc589c8c42
38ca52ab42187b34b4f4845bc9cef420b04619c5c5a4f2ed14a5f6c3460de83e1d6af1da
d6e1fb5913a51e837b350b54897ab0b48d669615a207a601bf4f7e025578361d8388a009
e0f86730eb9e3b92aff242cd4e5d24fb84c3510b1216438ee9298f316d5f4f08fd24de99
d4af2f1bbccaf26d52d250660272b7c7415990b14f99c3f8f3e6aeed2f80dcb0dd633a46
566409b52223025192e1990783272bffb92ffc08d50351316d7f4d9c42caf66238dd51c6
5696b265f75e5e30091d340224c28e2fe435c191bdb923724e8693c7f62dfe9cb0a3f115
8be29be70730e0da94ac22a0f9edc88bb9c6b91e2fd71a3d605976a0e7477173d704935d
c774d179e4026c546f2fe7a7af6075a0c25f67622b39cae5f1d736a3ae9fea28812aa4db
adf630777d972e14a436883ae90b9b6a5d84f7009ae90d7d1722fe385a1fd4228bb26524
b661db16f86bb79c2ae6ad279e262d5602b09e79e515d2d87dce72ecf6b21c3c0a394331
7bd4e256cfda1e9718a24c6c3aeaa43a7a7b1f4b2727cc128a9834bb1ff690741fbf81db
8b95d55379fa1e4f7c95bc97f374c0fda27ce8f323cbbc448078d7457a63b7b1cebd8cbb
0fbcf0d30f1672561013662d57c14cec2413bb626632af6b876e185345962ddc8987126f
8721fdda81d2c91e6b1055b83c70fd99a169ae2cc8acef84842d8dcdd97bd6ecc8a51dba
f789046a9dd4b54b28d4f7dc5e7fc9cb36ce2289cbb654e0c6924aae188613e9b224f0a3
976c22ea48ef79b29147fd7069777f4b01e53897dc5f93490eaa8b39283cc7188011e9ac
795230141ab63b01a9dbe6f9c6f8c810722f49db7e11c3f4855c9ddf92e8f71c6c8d4560
dd7b536de0c84116f88619a19eae05f98854078a472a7909e8e8028a3054188d0b3b8180
809ebfb08788cb81ece47a5f814a3e35a2f06791ed50ee75909b23151ff114e8dfcb060d
f1cf4c41777b21a14013c571a0b46b111c91885ab8dedb5b26ea09f75fb8f64fdad4d008
5b2518540b92b8c5eb7ceba61a4eac2cebff5fcf4e6c1b7fb1cec34e7a9f12a53624d756
99167833a7903666e1a7499222c4e66a083615fda137af943cb610424519d60616e2e690
0e1c8af5b57aa8b9fc1bd43f8214c755e3d5132179f92f3cae9132c37d9851f25072df5f
55caf591ca786ff748bda237bf555a3f5287fec5cf44d56e7c4346489ab013f7f89582a4
5c7b04966c742443c620a83e1d9f7fb3e15bd45e879d2df51fa0e6989b5d05d8d46a6293
b8550177cc0cfa217cfd472e68d274e7960454f2fc464767257618c1485664a2f9a1cfdc
38e054cc0504ecd98522e53a7e28d5165e060c880c73c6bc409fdd6c4b04781a03e646a0
52cef9c1924f951ab05fced4632ff575b0a414cf6f42240df0bba2f3705a3ab3f3b89170
7db912a70ad5f5ffbedc8e582ab2086427c4b96c0e289b773f9a3b2aba1a6b8ee70835dc
b85e9bc86e9480e830e21fd228391ccca268d1b6b6253b2d4e11e05d083f25e7a8f1dcdc
d9dc5c5cac397a480c0a8825f8d3860eea603c3dac280e6b40769fdb3a9622ed6f681dd6
be4ddaacace79f18a06a3096909a942deeb5058bf60f20d40c61c963758054cfcd946135
f9d1d8b592e1f34849b3a0573116a7c90bf1d0226a2029dd758646f85145a65112c14cf2
cebcb525184d492bd44dcc4a98025bc163db0779742df167437dcfc9e39dc870495cb122
c742978606df6257d559ae856a5db9a2ffb4fea36b8c36f10806f72b3cff49d7237541c6
52b845ba60b3d3a2d94f6552b9cb8fb78c418585a85392132947c45ea0c02f909fb28815
f20f71c07e97828c95bd08c106b2c90488c4113fbda2e5d5f3a09ca99a8ffaa792bb12c0
bbc074e160bf4c5036f61a6c32de0b1b77b346b590b0d4aede9ed55ce3939680b25156dd
f826acae7599f0b343333891f4074f47935c14693b459277f3600d375a09fcf8e9f588cc
05e2735fb7d5ae23c7d580fd6ea4ce4821a2905d45639566ae8173ed7cc3877cfbdaba2e
f6c425f73154df5342e77a4ff735bcc705e2bb11ea14d674117e712d3fd59d369318b8f1
eb4dec8ff9901ec7560ee9f1842d813f553e06a528f8b9df26f5a1a7766d3d5a65fdfbcd
006c060ffcd8e0695b11e66d010cb09724d033f24347e20822ec08692921b895f2805bbf
be5a9ef4f8672f6ea6ffb052f7cd632df49eb476867142611aad27a707e07b1d5dcc4ea5
2fab7ab5fb70cc73a35197cdcf316664b631352b2f1d86d61a479880f9beb17e13cc8d7b
298b7a8087f375176c2f5f719344fb08d34acb78c73899b843418bdc4d434f57d338cd62
ec6f6def6ee4fe9d026cc9e6c08955fa118eff51edde0d2212469396c9cf85f2d45651e5
67cda402f3e1584481256d39d7ce0dd8ae9d68e7ab074f01a5d857b6fac22817ff48057a
3ace78268af46f77ca7fc26f6ac96b21e43a72ac4210ba1d799aff387a32bb13044266c3
5caaa2c22cdeda052cf72b2efeed369dd0ff3c618ad1313237f24060f98fc3b55456f9a1
a9bee459e0a63c30c1e3344d054120d9a82e564359e786bbec32d46e2af0bb121e0dc1a1
52a7370d7b42a1d08c7caef82ebb5892c566fb1375ec376a169e4f8d8afc91ce8fcc782f
0cc7871798bbaaea1805c852684c3fd34e4fa4d7b27d2e74fb632c56eabf8c3df49f2134
cf0989e41b335fb21aafb8076aaa0447dc14f07cb2a08c4c355ffc966e9d7fb6522d8be8
c2458d93924212b4a7e4134d7430f5123f784df03fbe36923cc1966dbaca96749997bac5
414aadb60a50d29cd29d036b9577a8e065ab276dda1b889221a8177d569e27b42ef2456b
7355824542ec2bd3b85af046bd110f05c0fd13621cc8a1bdd9b9a6dcaaa8f70221bbbc29
2f7518512b8eaf6800eb4f5ad1a5bf14d79d1a421b2ccfe14e01739d09fade26d3cd2d8d
5d872166ee9d947a5345632cfc3d562a372a99dbdf89d7e3c8cf79227a2cd9056e5e944c
7a23103899c9755550218d037bb23a418da6102e95336fc045bfb304becb73df570f1193
19b1200da466381eb7677d2d442f2de4ffeaf7b6788fd9262eeeed511c5152ac922ce824
e497948492151a2345f1f1e650f024d7bf916914bbad4d7b48201aa2e09ed9e893c9f6a5
b1e7a9e7387fd1f540df9e6eaed99884de2531c922f98d3a0782541d36cacbc713537c46
2b074ff4c18ca8281c7c47d05c4b5be6735a51a5125fa690ab5b68fd996499ee6020e522
63f84e4b553e87069e1ffddda01c854178f95fde66564a202990fd9de07d5141b97c170b
e896727094f6677f958b65da8982838aa82533c60874257deb833244de07040b737e4514
e814f7204a5acb97cfe6f41e3a3ace007fc82611c3ba7593f7c00c4253f4500fe4357287
631b1d7723871b1cfbb8433591941acc1d67f5b67506f14958eeafdc4ba5d761a543acff
7d67affc826772bd363828ef70e218419194e3632837559718f79e7fc6bbdc40c4afa53a
b523ad7a7f53714ed5de07cdaf98b2f12362351f5a0b7df0afd22ac1d3ab3b5172108669
943534a75fd098d8b88fce74075055eab79af2b445a6d61a72ff53e190621ea4e354d328
b640e33eb5750173c09563955a61a92764abb8b7eab0d1eb2e7738091d05b46398263e60
48f7db4ea6c18b6c7359ea3a22e49167e108ebca81cd77d3ac402303205e67caa667d134
d7bce7f99cd07fe4031feb3a1f77717f923eaf805a3a9c89836278ad4ad560895e998a9d
8905dba61be1af2efc110daabb670928e22d34bd3e216a00ae7e783cc1259f978e4cce88
aacdb869d7cc5e7683d882cd6d90b4d3a3b32738044a59ddbef3f9d1f53869fcd96a010c
9166755623d61d5682cc1ca095c3d3265284cfdacadeb2a1cfdb722c8ce4e5b9fee7e059
b89401c17ff91f05620bfa6ae79646935370ae989611f1bc66bb8f858a194816384f024b
eba7ad9c77fb922a3ca63f259f8bdafbf07393e4c748df637efddbd984ef0a7b2c10bcee
bbe867b1402553651550301680348b840106cdfde6cbff21d71fa550c907b2d32ba18a9b
bfb95ecb51df6de00bc6101b67707be350e4d82233289c6a6e4fbae7be44453c3b705b4e
20cf88ee11e5f9ba6660d84281daf57c2ee584d8d5d0a87b4f85167485a0a2d1b1ca60f7
6723f7df676913c1aaaf7a8438c9e462ce45ac409dc698cba8d5ee3daa557f9643d47afa
276b83dfb6a36af9f102057c5af85d3063a5d4f4ebfb0c6d058e04cd42594893251c9f44
d6a586ee7ce46ce251824e0c99646dbf6f38992cb90f926a29ed4581d21bd3dd89c03126
487e098bbf60d4793754191b40d48e96d0314087c28e8c1bbbf1d67da6159ff43bd6dcea
fa90d66692529037a143646e4bb2cb7cdcd39fd93a111f4a98b63fe62c70b9a28226b901
793a28201544feedeaca58836280e022747830fc3696138d48e892736f3812e15d6a8298
8f2bdc51bc253bab5e03466878f5866b92e838dca4c80031149d20c6d33682839d4e0346
5388fa8fa3a595e27dc4dd6719573d5d4cb583d2fb9612a2e67c13c96632a2f538c25e94
319d49109dc2346093eb0210046437ad0b12ad59ce9f64efa8312dcf28fa2e7e55f02cf8
fdfbc163d0552b88dbf8fc8bf081545f5ee8b77b00a249f335bcaf3341e58e4553eb9670
073f52752bec50ba865ebcbf7dd5ec9b5d533396474c7a14f633810c19e2133a47717869
8015e76ad56fc5545076588bf74f133946770be4b5a8ae6fc6ea55987486204f86509d69
c21cd597a186d4799bd154acc515c577eb81fe19c3a27eec5a0b27e79005ad038c21fafd
052413c527a40c5f845edf438e4f9d6539553125e0a2f11050844d3c21c4009109c0bddf
0cc41eaa1e5aacd48f2f4e1a9bb7e938f1142a05d9dab4c1c12b862b57be5409f12c0fbe
821c63dfd7fe0808774e16806d5dbcec3386c2182df9c86582ef928686f06cfd4b709532
444110eae26ba8ab59ed8435d35b601b791f2832c0119f8df81df2e7dc7d22a3d3bd75ea
e997dfb15c3ceb374f36a574e94fe1d00f8c1abbb9c8824b55d6e0cfb58a0c6fcfa2b9ed
6284297af75ceeca6ea49d1d6051c05af35676b564828e999e7648c696b74ae58d00bb31
924ce8967627283fa672f2e19ca9e0927e083b968eb3cedc2d5a70dfffd87393b20f36dd
b71b24241892555388537b9918206a0e7dcb44520cfb2160f1b2075c2b1c38767c123943
1fd33bc98d04a173cec9ae72ce0f2d6b58c31c3956853e019c94c0999387063fee63002d
b7ba384231f6e505bb567a1fe8fa2c021462fbb9d4e5c3c131d3703962a85fb1e49a4650
a577ba9634669266af124a3e60c3a3497892eb34971f3922ad960035c64f47483256c128
2ee920e8b7ef1810c0e35f811e99e04ee5b46febb89ac3fd838aa0981c6faa16e84ebd0d
7726cf4bd9ba21c9d191dbd2148c8b78815fb476e314c5098d16c947f0c62725ae8cf7f9
5d9d7ca9c57aa1166cf3a21ce454b7758c38ef9628e3c978ff21619dc7ced00b856f2a24
002fdd5e942aa0fce7359a7cfc903aa289573674b842ca905169dad88aefc84b113afb9e
2359d1f7e51aa97b47def4c1070d733243df87f3f6301c42894272f62123ce38b30334eb
5af655f8c91f7454261b3c46719d6e531da78abd081c63ce8d99a877196972470864c93e
302d30566f2cbbdd4151c0ee52a28001fe3ad67845045d9b8728d22a6072fe59fcefb4fb
a783fa29cf4c15e212d40c457d7c67f3a351d56d144d07239e6f86ede6166a4e094c66ab
321afa3a6e2e35d59635746268705abf16a41154df6a67d41549ebb25f6cde2257078f34
55fa689c11c2136a2ce8c46111e913257ceca0c5ed00323b3c7131ff4c26c27ace0348a0
6ca054c3264464cd67d47e49c6adf41f5e794c3e9e89021a70f126c9f1883db6b714deda
5e221fbb2fc66aac1c8dac0593ba3dbbcbcc21438ad864c8852eaed4c67f7295777c876d
07d3110727d74c7afefda0de76b05bbde0b732b506aeebb594586566fcf9b4ca8b61f5a0
8f72ba233ca1cd76d82b020e3916ac0d845a5d0c2f048b4751479ecfe1bef55e75c486aa
38d070525f2a5635c0a44377ef1402e16f051fcc131a07726a26aa62edf2cda86cb49551
39b834e8decbd8be603ab87ff764610f8d7b28a59a4e547a34dc8de31a03d3cc5693dea4
c5270e608edbb7abedb2c4e36df944b695360c2556fa5ace556fca79c64313c63f2e86e7
564e5cf334b5307cbad32b5b3943668d839f650a24717e8ec7520889c21305276c35182a
c7cadd66940553538ebc7ca382460a1fb0afa0dc9557d3e99b5b26292b9727c6c1a6a82d
905660acfe4cacb9854e8c952399a44568edbcb33dec7a68d76d1992364f01dbc4e6da17
d6b23894bc40d9ff7d59529d4ee4d6e37b09a858abe40076996df2b9dc4cb20add85a5e3
47b489794ce4abe58647ae42e496482d40470331176ddb6d4a19db11067e5c160d4825b7
1ec0075d135639585c0cad6991e2f78034dfd9c7c89798e3f8c0ef8de23e319c804cac48
362e1eacdc9b46447b055119dd9baa414c90ecff63207daeba78539aeccec43a9059a450
a07501df9a90e5bf8c33f5b3586d23aa83342a2d41e9e7f2fc90f53f2a3b04ef4864d56a
3113e2a013814952935fa8c46af255c8af7977848a07c9236023d0e1bb6c0fcb35bde166
ed61b82386c470fa7810322403f98c3a96185fb8b179c861265eb3613a36a8916df1992b
aaa4a41a893e820395a553b47f7827032c8b57b261b33571ad6dd91c55096987e683a8bf
17885d87c75e791b107fa69d15a2cd866600078a5d5361c85a25fb620d07156c48d5591c
5b2a1f49fb7244f717958499ff139fdf92003ede705861944a444552d774e861493bc187
1a8cfe110dbf8489bd80c3ffbd1c174e20b70bc48c69da360024bbb5466b0ec982454139
58c37b900c2da3a662cbb1ec9bc12fb08a42f8c0ed105cae585038d0c0c13269d9eee733
a3bd98c507f8e0a18c57699b2cf97a98fbd8d459ac2420d3bd0622e8a29fe4a4ab12d083
40c34fa91699668779b3dfefa075cef7da72e072da25359d1c81fbd6d4c2ed9ea3337c7d
33d34510b7b8772702b8f75d43c170fffaf06519f324ffe13a41d7e813be0ff7d46d4751
e4d388d0bbcc0baf71815fc893299e12acf7c6aa8158e6c3adb8244b3ea8d6e21adcdfed
f12d77573a7322d4db001d80cabd33df57a2ad72b2fb1f3bfcf1da01c527bb4205cea73c
9637ca0058d798a83ba446d26ec162b02738a0f7e3444130a0474ec825d1d0da0ad3ca45
144dcad4f529c9dea93b8964243759d3b26e48a7127ab8b492ecd79ab5b86b0bb4daa018
68fb075a1f4248b25423b2c5dc6e5e937422bc5a46e2f8e3cd75679bf269382bab1af57a
2f325d653649f9b26412b154ed8db203dab7f4b799f6725fa4b9788e37a821f3f2788f4b
bc90cc1e9f35f1e3a269f24a862c10e8be3c1ff2947c00965655c67daf53b0dee893b626
a25695c5bb124b8d22bec03d064f8dee66089286062e75e9f7daea85201c56bf837a3c34
d0c1caedcb5fe0869c12feffcc176fc8683b7b472b5e9dd0b9646284ee4831807ccadd7a
66435c30bd93fb0d3d386bf5273c75c025734d5fc0ef006a4c2caa2b9d78633c45de0f88
4b78684dfaa80acccfabaa6632f83cda755b75a5d983a4ba2c68e7df8dca96e06b861e20
8bce07b5310e6634fd7516ea2b4badbc6e9cee4d329a466df4145bd2abeeae2ccf10ec53
65a1bfe2900e385a6fe1eac4c17e7f001582af429a745a2bedf8c80ae2d78b1d6bf9dc06
5acf1ab208d5b0e002796f82d9e1df5da536f16e91be22bdc0639415da64c7d66abc1318
a0a1b9acbe3e6fdadbe234b7705effc8154b7ffe29b2fbcdb3f50725284162312f6b8cda
b1e103d34cff57b8882afce2c647ff5c4efb5c02ca8a58e7f3186fb6f42c3eed87929d4e
f3e935ca99aa54861541cd52634e3a6c40db20e03c3ab33bbfd4268cb56bbe6465d4af48
734dcca7b464fb0dc165fbe4c43818d15d7bf319d46bfbb077e8e4cd0a248a5081aa2730
e4f01b89fabb2172efb46a82a3536e3f5ad7bfd71e9eb7f91ee042364cea51b6e5330e86
d5fcc3b91d2c21acef405ce4ce583fd70b9215c9471ec87f7f4d3b94ee5d041afe2b8f34
e36d6b9541a0f1b30b62f4403a7263ed731dae5385f28f53d65307031de24c50d0f41acf
669d0a05f5d705785296ea0e342ed9677a05358130f84971eb0a48093a5fa0faacac331d
59d6117a21065bf4f00ba649110bebff9feaf394e4736ff1d1f5eb4acda2dda0ea915b53
8b6fa50a03063a65272ca0445ad67f59dd1bad3f1d69bce6d90ca5a7abe30e24bd0c5cdc
bc7af6f492d3a67da42d587a0d6ea797e5432306f1f35aefc974cea96faa1d879c5f240b
178e19e81e7b8d96995c1df0baf88225b537c88b882a7b2282309fa53510095360999a1e
46db14858a6a7c117edb0db782e8de198b83448e8aee908919b4351ca85f70ca0b146f18
cd6e085f3b59e365adabbe4fe0e5145d046cd5581b5538ba89e361a95163badafa7a66e1
de070beeb425d347914f021703d81b62c2af6022b7b9d654c073f410341c4f2fa9149578
5a759c1e8560e730bbcb17935b1ed8b6ac3d6b824d859a271027eea88d5c38f2ab4603e4
b4756b2c4fbb120d7ebc68ad4f93722685596e3db3cce1d792f137cfb0b715739b5db0e1
5d2c3d9bf75a8734a972d756e52f3e3df1cfc0a5d79bce256668a99e95c42da622e2410b
6ef64ba1cbde9919956cd8b1abbac61ff5a5d2655db886a2f9a63f57c7a7a4ac10dd6e0b
7de926e523cf7d2b35242e22044ef9ef6791405712bbacf7e2473f64afd3892779a5b640
630fef9921aed579f4b6c9f11a2837563f4bb8b2f4f57ec2140379b207c8c32b06bc5058
ac9055dfe2b4045f5e5c1746e3a3a0fee56b28fc1b1b0fbc5073f17c3d977a30e8f07818
552a31fb6ee1b95170f79cf074c65d1f289416a540ee9fbee445d8dd019137159f1a601d
c8414bb39cc4f510719b39bebb83f58ecf2456da69e5748bbd21c35d168a10d23a5111bc
6233ffdb1c53d5b01f22bcba4d84a9256818d044b902d05b8c1f88324172e35e15acde06
432ff309c96ba95a4d373fd239f405023989e4ebafb693cea0f1542152cd3bab3b7f3a01
6b555838c00cb6450a1ee8d7c5f6a4a8df5ad73e7c95589d911653f60131bc8958256d5d
ef9c170bff3e91a0cf3e5b1945a2dc0344314245c9a0fc8eff629d16f1dd33549f1d7b42
8d47a5023fb9eb802a3061050b10a6168965e39a416dcab4e78b7c7dc48a8f2571afb548
581954162bdb0864e83371d7791b5c4ead60e12445ed8eeb747eb6aeb58e65c7ddae5afb
c94defc8c5131dfac448abadb048412910898ab9a7dd3c336eba5235646bac736f50d63c
3677fab75818be140bd338bdd34dedbfd3088b9bc5429209f66a700148b719bfd0cac534
4a8db34ad2522bec0e76b8c9acb9bfc94c17035d3bb5978d8da896e06430e6fd58ad47e6
0fc38d69f8873d07c8564c1a5ecebfbb84d5bff096d6bd9edc594ed9ddd0e43e501d7997
302b74c09fde07fa6d2cd3bba72de98586d8f7018c2eb757af70ef446cd40d54ea8f9e9f
f440cb31750c789fca2449e7b36b090c9ce6cfc535acdf0325dccc7348587a5e78030df9
dea667e64700b5285cb5f667c8bb5cca4e3bad9ebd0c6a0ed5b5f73e7936427b808f819c
ef708efc505751b157b273b92518ef65f3d4e0b22a328c1b919ffce1217f3ac839d55c5d
41a7804fd04f8da3b3c7a631dfd779f9dc65512f05b40897fd554265b46d88fb5c2249b8
d367b2cc0f0442fb683f85bf645c92a77a31fe4414a9c775196b9aec0163c23854d874e6
bc1a5d810e269e74be4716d7fd4bda28f1ffa14032f75383a47c72b316dcbedfe4778256
4357edcf6f4943acf95438fa028400389d1580a3a14e0258f737df46e89bba27210bb167
cfc9bda769766cecbb7a66f213d4260b1bc0d02dca846ec6fab68ca1f723f542de462e36
7ddccf04495944875438188c4fcdc58202ceb7c89f8bc2b37cdd6bf205ac8663625309dd
a15841e1d57bc13ea8629db2ad01030a5a4ea6c27eddb6960ee80982be0bc120451add10
ccadb260848cf849971c069f5100f2bc3a76ee4f62d93574e9f782b8ad43264a2ebbb900
743430d59ebc49faa74cb032fc9a7e43b5e1f78abfd8560fd2da1c1e942630f1d157c1f6
bde7df78a72698c2b84ff91c169889c0a79450768f03100678511f0d0051c73c3d8225ef
99344749e6ece9095cfdd3c34d121b929ea30eec8dfcf2a3a4f8980484009eeab5e28d57
57542e0f8c3585c0c219da936c7ae0ba2d894173a8f00774cf16edaead3bc35b54e1fdfe
21b686e75c0df7013471a734b074e810394bf36366c861c3beee4afab5863ad2ce5c977a
1356c8031c5f37e7f61266a04fe1ade5d36f075b57b615a86fff20524ca968979194c9c2
116fa7c9d28a45a10f1efc75dcb4ef3a051a2ffe4402cb7b02ea47698576fdc07a7d52fa
fd8f753eff036d5331313ff78370e4e1d7fe1cd275c7fc9742506d411cd09307b8fd0f37
a42a6bf9f8e59abbcd606c2ae99d2b56ce866b3c818dba355a2f1c11770bfb23e85b4fd0
94f10e92db84123775914ddea87d029d785326d5f92c74a4187370680bf1c1f81bb08686
a35f192f1d23232f4b81b043789a63a4f560948bdd0affd9284a75f2c5360fffe0fba562
394b07971ce833caaaa116a7f57b14f7f1bfab0ed2ca4344d08f4c6708ea0409711720bb
59a6b69be737d6b323ad208b5972b5835089ebcd23bf56d83306524ecfda69ba6e9bcffe
40f539b388c0dd7add5fe55e27d1beb6d32438aba5f012fad83947c0d30f7b38caa4e892
92f3b1bd589f143366d9dbf886388ebcdadd53630de672a63da71ee5d313aa8f96f2784e
6c44c1ca51a97b978aaf94dc1d9c9bc68ea87cc9193fc12b60e62ac5240b999123c9fb8e
4cc006843e86403c5df625ee3286a13dc2e768a44cf842b71f92f4a267778da5a162a4be
0ccfcbe7d92b7e6b486a8ae8342bf3c9f3318a7fcf97d493dc87429b013579851050bc98
f98a3904f0340dce82eec90e69220c7118993e31a21b11c1a48bc748af8171016b1f58de
649329817a28546e667dc62529b8f6932ad966a03262e735d9bc9e7e053dd43e24c6b1b8
03137ecf1dc6f81a9a8f39b15bc18f368203d598bf7f004ed937f39df7b8d5e38bfdb4ae
51c8caee0e9fefd891215dd64aeae58e6fcd89582754ce75cc9f6e534857312026ae6fc8
8bfa7b85b5538922fc520391c79dea42a3a72e73d6d92f7e10fe60e6fcab267829d06156
949558fcd5b262d7c181f211a3f2cb09530209ad99078bf8b9be0bb50aba45f74b25018e
7753a8b19f2827c6784f670c8283fad732a972910b0ae290b4f53c75bf40018d4e4768d7
8f0361b03521c1dfae749996bcf6842dccd1b12f7aa2083768875e3f692f5b744d7f48c9
d22a42d34d501615a5972927cc99731c49cbc746c636780ef1a7e942a41da3a51fa9c53e
43fab12700deb62b7fc022988add3aa92195211d5ca5da166def4872535db5defdb4f201
8a3e921ba998e9c5b8b2868c3ad4b7295b46fe54f42c0fc9c2f0932f34d9aae0261d91ba
59f393cdb0338058bc7d65aa63369cd7c916486818a97b6488eba1e3d0f2738aa9e226ac
8b0bed27635738c840ba59e93ce0dddb97de369dbedf8c15c6495fd5d123fb30b98a04f4
d5165724c4e592fac6aae1422ab9b4fe840cfdbabda731dfb8d2d93555db3775bdf61cf1
546132aa2313db55d13ae9a5d67fef2d67c52319f663ef0836a474536d65a43d1b477aaf
6fb472bfb707fbec2a4b871c5cf6dc14761fd585fd5d70670b1e3b275eed6e1b8ea08cc6
075eafd98191670932cda02c0e61f48e4e29650d995da9187b1ee8fa48dcd38743650b52
04a22758752e33fdc2016d10e7169f76a871b51e1872ab4ea2ccc0db9c7badcee1ff9dea
52faa8882ee0044b8ea76eb5b951158483c5af7ffd3d4865d0748e9f93af142033cff76a
acbfa0bdb002b9e501085be96e8c297dff5e3da5057fca6f8300183ca7f0d6280ad5ea1d
29f77afa471acff8283b2aab3e3f56fc45a2834067aa2ddc7831d0631bba9e4f9d0fa886
d274e814a47d0b3e2990d747f50bf88b2da5a71c6a2b55f2f1bcdaae5aa39b0d91b74e36
20dae0185d0c0f70cb116ebbb9916ca8d80f618de8592c4f5ec941457b6bda2e428c5770
109c570ae13da1d344a5c5aa266d94b868c70c62f71ad490dc30af9d07ee646247acd78a
8c4066d66bc17bd1e2355d81e825be3af7be1d487dfbf653461f6a3619a1d49be1402176
659379c2b6e6b7822509e20d945fda0b0e662df3a421e3ad95f51041637e385c0e7113e1
9b224c2e8a51e61869ef8df22647602ef703527be5bbec465bbe94fb5a76cf4b889a7552
bca5ec4d321498cdf92b8f56f93ac2531fb4e151af2a04b033e88f60c4383e2c0c30f422
3a9ab3393087515f8e0f5cb44413d6fb1b8aa51f77b8709be384f3098ecfd56feb1a51e1
5f63381316c1b3716d17307b0ff75a74e38329ed936e53d5e70baa0884912d3db1273773
98f4c3195d4a4d6d48af96ff8e4a9aa1d76e3b31c350e2952fec5a11c8e74841fa30ca0c
d61d551caf8d492ba3cd2495ee8f42ab0c1193396e41db98689327564a21d551c7153152
5ff16f56e849fa3b25016ea736bd12f5257b580156f872ca781ec64850885016d53be8d7
5dc5abd1637dd18b60f1c8cad8205444b07c302bc74bc785332eb46d0e5705594e9377db
a06bf7becdfc59979769463e51c238d7226fc6b571d467be367f4f00f0a8c0399eb51e4a
ccb054d01caef4e653c4b49244baeabb1597e8972e79b17f14adf3885e168f659874ad98
f0b99a126cffd24a451a80d9489b0cbbb809b57d729c41d7d763dea1243700df25f4b06e
9b2ee09199c313d365b101aa58b1d9436193ced6fa91e50484b0f255295fa9b2236b8c05
4011c99b90bd6f6b3f41d82ea3994e25bbb8ce574d078af823a98f90eb4df2b772829d3c
1282128d0827313821e37c6b5890f68c3b1bb6caecca3bc5bf4ff5d0a86debe64dc7a770
5da7a8d4d8dba03c8cb8058be0a00150e2584b8648d2f8cd5d29b4ef818eb115059a7f89
05b006b542e1314370f767d2e0841ac0a63a4fc19fb4c3add4bbb6c15791fe45c1b691f7
094cb3e8eccc301e3f6b5e39f2646691d2225ed6d9c65dc4dbaab7cea6074200ba5b47e4
372cdda67346301ce62d9116a023204218cb2d9bc4a41c69d0e922808885a3166fd8263f
c4119d035efe1887fa9f6c209c1257cc37df3be90dec20f27f5475821cdaa61b5bb0b24c
854674010a90cc4211a55161e22dd14ddd61ea3b58402c1f6dddbf7ea94d165693eda0c7
da0d412660ac67416002ef32893a415be0049fd7c05745bbb07cdcde368658731694c76b
ea04719dd07ed9ac2b72025f5393449f4a01f175353fd5b63e262a0a295944a21efc5ace
2209f5cbea4e81ccd3307ca98f4b0a3163f8add992086ee6235068b247ea0d62317abf3a
124163b06b4966770e42de8eb6c79de6de2159e683cd3d2ebc0ab32c7d780a59c15273a2
e9e6fdab9c3ab133ff8c8317390867a386916dda5b0698935c86e8516071476093842d66
660b1b9e606ca4f82ee13f7bec7b5621be1b3c6dd69ac388a7201b6ab29dda22dd5c74e3
15c1ca046908f42f0817d630dd95e3fc2ca8de1e2d27399477432fe8e97eb589e6e581a4
f15aba30dc69ef829d84a1d9baa09fb5135f1d2e6b350d8f9987a6606505e51f02c6b4b0
3cecd18ddd6e0f852302d67d1552570bfb1ddf80b2d77308278f20e3c0a191ce93fa7687
35d5b72ad7de42b4d3a3da214a301524c69915e6e7fff7803b07be3979b8942f96b84b50
66ed9eff7983ff10d39276da566fdd9a164dd354bdb971175e59da64ea21021e30cce4a1
fb15576d640fffb4fe5dbe5b0c080fbad3a4bf14b6a41802a55fe32ea92d9fb586d1de5d
312eb038e0e6db51f5f69dcdbeaa89536eb174eea1db140fd3167ffd43c68b808564f9d1
f73a06412ccb1fdde3610eef0c96315dee242e18d9022e6bed0ed60e95f1f263f1974dbd
520e917094261e3ea3d231dd21e6840f390077730603581b90a3c1d2f8fc0f0952949faa
5b3c07665bfa4c3a2d16043a46401b11cf67f42700a84377336ac6e20dfacbc2942f491b
0779782b13b385d31e11118026e57d336f9cee724b0af63f4d6d70d2253c2628007d848f
bd05304a84defd97ee02eea3b51e3fb48edefd84271d9fcbfd0854c7b2704eade8234cd1
ae0aeb1531946b4a0707f8b01845077e9931027c7c5569c4f248e9cd4b0de41d77b2144f
3ab357007424642ea51c67486adf4488dbac7659ab5c18ec33858e920d1404a51ae9c6a0
87f26027f3391c7e7fad571905ef1a96f50d518b0bc2e97f070248ca123ad2814139d238
afd1bda8dcc26809cbabc7c7f3c27ff1e6b4d15655429824d0ce9b12d52a170d16884680
85b8cf565f8ca63ce5746ca2da8b3db373cd178bc154335118ec9fd57d96cdbc03cf6d4e
9a326b36aebfee88598948bbc5e8ed7e1498b519cf409c0986651be87f6877959f98d597
a958c1a3b693aee2c826eedd5f3c2e09d185abb12ae1adbfd8d7176d910b7e2ed244230a
e332f4be1100ff18603f792d4b63434cfe98efd304fa76b90b62363067745dfdb593a873
a2b428b828e7ecc346534cb72ae215dbd273f1502d65cd43da9a38b22eb5cc01adb4bb06
b5861493ebab1c043b446847f1a62125cadef10f3230dd931713875de7717bb9e993abd6
8ba3b69b2e1a98ce57a2a42fdcd283e6814410401e8d78212569697903014e626126fdaf
4c8bc15e341cca9069574f9c2ed32dcb3fa8fd0f19c95df3edb83053c9eb0687b69f565f
7eff8bc76b7ec1012a289b45c53b4244e34039f3fc700888cb9f7d15fdd27302fb20fddf
821507bf64287ce10887c0435af7e4ba160fc4389e070b10b9f705d5960c2affcae5f7d8
28c450f5efe9e05aa5c9fe9a158dcc4e63e903b004ce72f7c9edf9ee656c168093e7c8e4
04819b843e4ca4df7f297154940530505ded15ab272d9f5c7783768f9b25e2a6820d2187
14076258371108588f36c63a4d2e29744bd0b62792a2c4d57f56709b7028229907a009d7
20d71605e8b66c7de860d059c628e90b7b3d4d6b4df3dae85186d3fa575c12e173701923
06d1733723543d9316481ea2ec488c017a1b9dd28c865a8255c0c4d308f24a92dfbd0574
7fac0e71a2439dedeaa3cd1330b1c32a57a52a7284d95e1954b490267dddd84b3117a067
df13cf1cd9fd37808bb2cb45bcc3997d7583d07c7bc8ad32241fa5656b85981ed64d2013
447f746c3de57d5160e7ff1f9cf678a9338acb9f72e8f8e449b74b1709f42defdabe58f5
decb0a2464cd5afe9f12fee2390ee693dca9ac49089bcc71547a6cafb6134a41dc4e33a2
afea3d45c5e06bf1deda0733984fcf5b7ec75be25fc6de2ee1416a657e6ac51fcff3b8e5
99ee16de42064fb69b739b505056de5b08d3353ead8dd9077ed48b95cc419504d0e00012
b41f8348ce42161a8893e181ee89a4892e2b2e7d49ce5722c72843e13a8678e13aba5580
0103f8c87deb698cd84d38a2d4b951f961bff7533a9a2c2cfb9e491aa5f8835b1b3c7889
01299bfdb763cfe1622aefe9daff098e1b77030ea0fe3314a8d61f755c70124c7156e02d
259cacb7a50bee803fd403ed111897f3649145603511b27c370280a282b3ee22de51c069
9cefb39e8aad55dba39e614492699a01d9252502dd4d91025ee83c4eaccffff6602194dc
e797a8ed16b5f30b64625e086cc86e64c8fe692f6fcfd3930b48066c32a34c555daa6a21
efe860adb5c2c4ae5f6c4bf76cdf6e64f7682c5745022fab60b01d8692813c93a18ddf49
0e6837216a287db06892d9ecc250fac7d9261483c6a2755cfd78b85d665c6eadd577b19c
428bce4932f440c630edb9d2a72a0338f6ab495cf767661021a8499db21ae4e77c49b968
7d87ebb4e418689ec59ad7c961a5610b461d8cf8eb712ced736c59b21342867e8a1340d9
7935c73feb67da3747a9c39a054f41f52e502a0dbd5eb2b7bdaeade6c4780e6c9885753f
84c2605e8f8f32c6159c81a8fc47b7cb35b5ac59f70ee1a710db17232e1f5a2aa2318d88
c93e3373f4e1369a503902fa4ecd768807aceddada5c5388afe17315ec33ff9927703a2e
cc7d71dab97d18c15f5767a774e0607ec4224eda78e5a602552ef25fea393a77ba8e2658
c392ddd67791a0dcd2b567e223682a239c939d85271a29dc64bd1f5ac4c9f66a695f3a38
584f483b84f5ed1bd7ceb0e785c45798e26532483fbb0b3f2607178b0704984c4d576ef8
6270befb51042c20c587ee0c1f647ced3ada797cfb0539f7f6166e2bf697c669e92bbbcc
f1c26f13f959e5282d6f0b580e06ac96df3f208181c4f229fa33387be4d13947bcc19fec
9218f0b8b34bcc10a5841175fc2e164dbe43118b4d68aee2d3641ca0413c9774ec0f362a
0c3d110a1a06c92e2d4c694d8c53d30ce0c233023f8a8045d98b90b66a0e46bae2963399
eb030e18fb184949543239ef5a0043ebab8ff60d734b789655367ffcae082db22bfa48cd
6aabb2d8791602ed30017c5f74a8ce4094c5f48496f20e9da93ed08bfc2cee8500058fea
d5f928768cfff1ff73cff247ab92c6a5f9897eadcbeccdd7523f0955a22a867f15067d13
a0a79d1212ea7f983a231de0868e8837d7a1b3baab3ab0ee38b242d69be45bd27bf7c8f0
41e5c25af24c7ed450b8a69518f11672143295e844752639f7125518c40e91feaaefbe7f
9f0c6eb111c74ef383b4a9bdbe7fab256cc28766dff15f45142e8f4465aabf48a04022dc
cad2f1831dbb029bdd856fa7c70e61ced92876ccb521f03a3a93f694ce9bea0e0ca3dd16
75e1fba6afbc1b74dd60306e4d115c3fe4fe52a4f9203d3dfe28ac726ee6606421f93a19
b1ae4605005dd344e2ea51fc784b23d69b1f5de1aef516263aade234299f7b11bf0bd8c5
fe5a4ba3a60389ba54dd19c5a10e08524e7d27eb5136bb2aaef1385ce9bd8020752459b5
1ffbfc1fd200c34e36f5faf4e2e89cd1ffb3f1ab49dbf137dab3274745a52c3fc94b46bb
18723a236adccd07593780abb9da7d0eae300caf23dae32cd14de5ebb117bad91c503c46
fff2d583dd211742b9e553a30602dc22b45ae95cd5e3534475b6df1e4b5a0ae9ccf80f11
de9d02cb75ffc1acc32ccce78a0490873078778a50a902cdc2a56a506a01d4a94ce865b5
023b2fb218647cf21d9854f30ecd290f7cc54e52cc33b9bb71d6f40adc526dbb24c2c6ce
fcb684f7bf5345c1f4cf45accd98b787787e21c744bbaf25b86e49d36e7e4640541417ec
03f2b8d3a3b92e1e32e7fb9c91df78731a83e882fdc136da6347486123382dfaf6f93d3c
395d414200f008434ff77d4661df58659e9da69d2de382bec9ed9bb44c19c796c66f6107
9e64a1d53a190b4e9c7352310f6085dd4efd15ee41df23e7eba254eeb78e5f72d46ce798
087a33b471aae8a454eec0ce16e35812111cbf715dc0a93e5907cbaea23d3c8fa8027326
34d2cfbdd94e3bf1560ff008969b9e1427019f70bb34ed532fe5641f0e301012f45aad05
358a833f53604de19c1967d4fab0f6625eecb0597b6f9ef6f8c5b1e3d5fa9207ccd9d884
48ccae4ca25b52336407dd8572d7ac04e88356c7128c7e2d655dd13cc41c943a8d16bb00
6fc12084e78045b6482003ef01af7f9e5d67d952c498e52f324b97769bc4ec2930ca65ad
5325f21d8d5e0632f93904ed894dabe1d8e613728a773c3c3cec3f4ff67c887741c09394
8325f7496505a709d36c259e951fd781c2905ca08a667133f27eff6a2f6b031a178e2b14
0a33815657cc7799d2ff3fae741c88b4761b47dc3c87dccf1badf6f8245d17019ef61793
0cb368193dd13b562c6f52b45ff7fe907672e04d5fcf25f2e706219ccfb612cf43156d56
b773ba22f6c335c3abfd2ebcf074013c4b0e36d79c35e53d50c3dbc3608e7792d2c7d2d1
6ce65f2e5dc8655b1166604cfd34ce373f73b71f8b55711ad2aaad72cb24b99603a67b4e
31105ac0b2be224366e70f757783cc84904756f26d170ac628a3b5e652f6466d1e975137
d0052c3fea4048c220573ca1ff11f31c6e138ce402d7124e4bfb096bcda3237a7f1f66d7
2bf397b35d6e64435a38839da396866c1257130209368d45d1d6124c0173d2574c58546c
45e6a4ad6eff7d9286fb15f5fde9a4c19e0f11079cf09e19888f92b270b39eb5ef045613
4110ba1aa033639d79766308567b1cbd0dbf41c42f7b90cabe52b1918560b208ec74919c
145f15988c5f07abbded8d4747cca74f00fb6abd8a0ef5da50ab8b5ee2ce8127ac9eeb6e
2675865918a4c615e5c15c535235bebf632e324c8d4fa7175ae40f822bf047a7571b59cb
1c713a923a13ea288732bfa470ae69260b6ad52ff02bb075bfb95d54c08296fb2c257c0f
69d4e176aac7a97fa9a62594ce1bd8676eba94e8047be7f0dfba0a4572a99220797b6ae8
7a0fa06213eb671c3cb456b85107f64be72448582bfc8664f6114ecb5e83a824fe2034ac
6ceeea05ef2aff78f23b872d537e62a82c7d12b7361f3cd6d6b71567a7eeb69c246d7801
a4f68f02fb89d844e36b54e6f571600ceb198367c7e448b7e8b7dcd91d14a280d555c859
cc68f1ad77057cff01d3553afbc905fd3e6331e99f4b42c9d26df1f71154d869c93a41be
5db78171f14521545dd9ac65324dc58a9d20909485f211a3723a76beae2633350c02b0b4
4e0937b47f9bd89d47468bf80583de59502bcd65d05942b64228a9d424bb17b9b30d8e9d
4618b5e166ea5491d3b3416384775aad7e16f3c6c958033ff3cfe27b15ba1ff9e035f2a8
440c2f6fd78ca3c0e421482ac548005db776e6149a8567e4e6aae684ba3e955444e4e9d0
b87e70631e91cc26b9330ec4a9a0cb568e54fcbaa50cd11040f864ec83c2b636bc0a2993
04e2f03dee99417be7ecab2edaa86f5874fc9dd90988f18e6a11ee2795a1e8458e9f3143
73d25a4e5fc7d954a2a5c1a5359c18339a041631610bc118f65b9f44399eddaf9fe09ae0
559f6121c6b08eb87cce6113cb6a219f12453b2b3dd6340ab8615eefee21cbd2b84b92aa
f9fdba56b052af93157702b8cebd69f8f705daac23e2bcc588140d1b3323a645e579a20f
d2318dab8cfa0f362bac1cb7fdb904e04867e48a81d82a69bdd4f3f7ee5ab3e47fea3acb
13876bd2c3ff8989362003c7d7fee6d774dcb2648d521bc9eb8cbd353a78b9af453bb180
7801f8b289e490322cb1eadfc50897b68a997336964be74d7ddeda71794d76b027dd9c5a
90ff05db1a024e7b4dcebea6e8e1bf3039f5d4afc4a30d9b4d55d4bdeffc3e6edeed7ef9
211a4818995c0990a2700277de3fac57fd8dac4f2c1214493d043878ebd931c474b46cec
af118a53234869c3058e08614fe35490ee8d4aa431150d71c6e22f42acdfba8fd5592f01
c9fcc9af606e67ad6deea0d71545f7b6bdb1ea5efe22ef56120be6f5889bb664e595b6e4
285bb4add95a271354ab68873a33e3a511637112d1af228839c8d14f40c09d3dfbfa7214
4af1bb713ddcca30dfc03edc272ba97686e653563f2ed9d2fe2126e16f2d54a0947e2e57
abe3fa5f3c95ffe6ab823eb6ac09c5158261e1bd6b773cb9285095623961dbd9f60603b9
e4a1096b51ccd3d2d83d9e29f2f63d183fed425619106d3fbcc41d8ee8c264a3f9b9af13
56e5972cc99835eaa39b9c39df5b5e184ec9ca7497ee567ef16389ea8dc1fe9a0714f8c2
c6afecbe486fd5a78a5e100d0ea419f71da4e7e4155628191fd2d445799501f4e7acc193
392aa33f1e1ba47d41fbdf0cc41a799814646cbb461bc0e2a8623af4572fe4aff470c8d7
7fbe73253ed4c9e765396ee4fac087691b790c1a5eee25bc4eb5e1f2d49014796d604f25
5964bbc09147bde748be48856666f6934ab990adf7b12150c1b0c285590b3a6abca80684
2c86846e957c99cbfe2ccc4412419f6916f88cf30de7c6a31c603f7ad708fb09991096e9
6fa71edc4c122682fea107a0cf8dbcde98c5c6b08c9733ba6b1298f871f1058a80a0849f
14daba6fc7efc3c1898b1a5667fb613e94e77c8850e9e97b3715bc594870bbc168011ae9
5b34ed9a762ea059715a1599fc523a7e91924a2eb877202b6a0440ee2dadafc2f9d8e90d
8a5759bd96fa72b7343879da1e81a82c493d014fbdebde1f6c2c0194fba45fdd1e07af3f
0dd0de305702743d4cd0d0906e96cc01b30330abdb2dbeba18f68e13e483e22aad363faf
76310b81aea9e977c8aa49bfd8f2cea69858740f82fa8ebd2ab2bd7c3418a585ca3fd9dc
6213c736863f29202b3b639ee79973e2edaeb91b9ebe6a4e15ddbb931a1a122361170dfe
9b4501fe4b54a1d662ceb2a0d7cd00c0bc1908cf38eb6f3a38cc6fa69ce3d7859170aa37
bbe679790101d1b1a78bef440e842fede565f6cc1a371e3f2f1c80a06b1e8bfc6c871217
b5f9b9efcad1e7653ed03b2f683f551c3196b71c6304cbac692f1ad184b9d60e3781b9a3
ebe96d879193d5d87b1eb276fa08b5e8159e759b341e3bceceeb108ce6446937774ffb6f
66e4485ee08278c5f9928e3ca060293414a2a29e7cad8c52be5821f718d3fa09465d73a0
44ad8176eebc377390e684536902dc9da1290a14801a404f9cb46fcf024f2e9239c68d64
3c2a0c460080ade9f5812b0ba6fb9f120f24673150d5d7e8dcfd8eae13f5f926de2598e3
f26f5f7286a3e5748511b672e3b411298a682d4bcbf2c92a74a91fbfb4004a5af2688e06
13ac23a200482b208be1f1333c798199593fce18bd6b0451880396849c380deaab56dd7f
f2319d2bf1ee413da7cd51d7a3569958e0016c182d99d5852d687270157880aa1e2b4a57
125ddd2fa66079ace4bbb8889c21d676891f59cc8881a702076fdda3a3a198f8caf3da1a
eb6cec0ef4f1288d27f5c9aa9caf7697
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont: BG-Maths-Italic
%%BeginFont: BG-Maths-Italic-Bold
%!PS-AdobeFont-1.0: BG-Maths-Italic-Bold 001.000
%%CreationDate: Thu Sep 30 13:21:39 2004
%%VMusage: 120000 150000
11 dict begin
/FontInfo 14 dict dup begin
/version (001.000) readonly def
/Notice (Copyright \(c\) 1985, 1987, 1989, 1990 Adobe Systems Incorporated.  All Rights Reserved.Times is a trademark of Linotype AG and/or its subsidiaries.) readonly def
/FullName (BG-Maths-Italic Bold) readonly def
/FamilyName (BG-Maths-Italic) readonly def
/ItalicAngle -12 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/Weight (Bold) readonly def
end readonly def
/FontName /BG-Maths-Italic-Bold def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put } for
dup 0 /.0000 put
dup 1 /.0001 put
dup 2 /.0002 put
dup 3 /.0003 put
dup 4 /.0004 put
dup 5 /.0005 put
dup 6 /.0006 put
dup 7 /.0007 put
dup 8 /.0008 put
dup 9 /.0009 put
dup 10 /.0010 put
dup 11 /.0011 put
dup 12 /.0012 put
dup 13 /.0013 put
dup 14 /.0014 put
dup 15 /.0015 put
dup 16 /.0016 put
dup 17 /.0017 put
dup 18 /.0018 put
dup 19 /.0019 put
dup 20 /.0020 put
dup 21 /.0021 put
dup 22 /.0022 put
dup 23 /.0023 put
dup 24 /.0024 put
dup 25 /.0025 put
dup 26 /.0026 put
dup 27 /.0027 put
dup 28 /.0028 put
dup 29 /.0029 put
dup 30 /.0030 put
dup 31 /.0031 put
dup 32 /space put
dup 33 /exclam put
dup 34 /quotedbl put
dup 35 /numbersign put
dup 36 /dollar put
dup 37 /percent put
dup 38 /ampersand put
dup 39 /quoteright put
dup 40 /parenleft put
dup 41 /parenright put
dup 42 /asterisk put
dup 43 /plus put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 58 /colon put
dup 59 /semicolon put
dup 60 /less put
dup 61 /equal put
dup 62 /greater put
dup 63 /question put
dup 64 /at put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 74 /J put
dup 75 /K put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 81 /Q put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 86 /V put
dup 87 /W put
dup 88 /X put
dup 89 /Y put
dup 90 /Z put
dup 91 /bracketleft put
dup 92 /backslash put
dup 93 /bracketright put
dup 94 /asciicircum put
dup 95 /underscore put
dup 96 /quoteleft put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
dup 123 /braceleft put
dup 124 /bar put
dup 125 /braceright put
dup 126 /asciitilde put
dup 127 /.0127 put
dup 255 /.0255 put
readonly def
/PaintType 0 def
/FontType 1 def
/FontMatrix [ 0.0010000 0 0 0.0010000 0 0 ] readonly def
/UniqueID 4561676 def
/FontBBox {-73 -212 998 773} readonly def
currentdict end
currentfile eexec
e8dc61728071abd4d5bcd230c4e186dce095a0ca84ffc476adfaa82124268e60d2cc570c
5f52c10ed4a85a71ce8e5bcf26aa13b27d7fce1cc0c72c3b848dd5ffb2d56d06a1920fad
e4ffa3b35336627e9ed1622c1f9652956d4a424488b4c4ffda9936442bbe0ca749700ae9
8a2bf964fad088f0cc64b7c1d76742f25e90e759aca624a321402b1d20863faf5e04b86c
1ae66f450b1586041815e52f13d2ae539f1725d11489898a83a05fe04d6d14bce66e2cb8
55496ec301a39f6ba632f50529a401d5eddee58eddbfdd4ca91c9fc5557b88e8581ee08a
733b950496c15d61c0d4dfb82507b74fa8b39ef10562abee3249b804e6a0630b88851f8c
3b5a099dd8c17a305aa08d6304a768e66888f750d663b7281813ef059a2f06d2b76e59df
17e3516e5b0f66eeac5da609d11ebdaf7aa7e013051e5a1edce749bc821d793402b43db5
9a4881c9081e6acd9b8132316d44739c41cba11e3bf3538263c5f4289028a37772bbb8d5
9ae4ac2d365b6541df07e4c46d1548bc84a5ee413bdf80f632b36f5bfa389db894f1c2b3
4178a6121f4b00ee81e49806952a8429bd1dff802f20af03ccea31c4bbb0bcaa50619617
b82acc8b60aa20aeb5cf025f45b3a95d010846af1a72680d98ed466fb24f684863556b30
c7e810ec7fb0f1728f6ea66e63591a6117c96202662cc599749b15e460d81445c843f8bd
adfb5efb2ac3e9e1a9360fddabd861435403590c5a2064f12ac014dc48e402679be2842b
f92d19710f145648fc739c22d106c449ab5e8c464a0067a5b7e98525a674b366db6e2c6c
649355966aca8a648b2e615b4e222e947e8a3bc3729825fb5f5382c8e24ec1e8e5f00aa6
4018cd1b2f0dccbd729b4513d85123fefd005d5edc65fd3ca4052f584ab6da0bd39cdddb
84a2fa002ae6e2d90a8944fe9278e0d90ec1b2fc5230819ee3def1d4ace5e7f0323ae196
69bc47a7fa38c10777f1bafd121263c83862e8565c0c8841278107b313c20ab8be2c5f4e
91c40910ebb559b16bbc12d4674757597beaec109e3d524cf71d66f9e219b749395e3ddc
ad1dd9bbc9322a48aa7717cdb0ace987a091f88c5d01f0a75311024836002cc84c46ea2c
d2e7c342fdd2b5fc5b4132865cc1a1c7a6ce09b01bfac86f7a4d3d1d779955e6c19b51fd
81a1e8e94a32d820058ec384e38c8af905acce0f2be9b74d6b8d32fdbda5e49f3579a30a
afaf3305e640375aad8ca69a0523447aed4464cba7a028835f21dbc39ba86a4b31cfbadd
2ee235399d8e760588cd97359cb5ed20159331210755df14405ae140ec53446b798d8038
dcfb23fc980659115f653a26842ca904bd6ce00611074254e52bc8d9d55e576cd1645e14
915ef2b391890f0498bffab77bbc1d61d6a0273ef9df4182c530d8c598f2097f825ef6d7
90f0d34b0b72039f7c1cc9c91b81cdbf858606089f6800448d0db626761d328ef51460eb
5c9df8c543f4f0f7d07fc7d6c1784398a6bf57c7717540b21774ae2874ae733348c25eec
bdc7a815b3f0b0315454e8dd69a2e5e8fd2d27878baed92b8e2d80fd2a9b29a48714a699
a904d01b7b6716fe145956b1c92dccc4209814cf669c4a42ae1f1346dffc23cbfdd472e8
7648010cc9a8dd9bee572c36ad98aa8a48dfc3233509de3f3ce53187232ab9459412d86b
3fc32b2d6a1e5e6ed658dc4becb5c4dc13b15224ac14a58e41e68e9d3788370a9f535cd7
23040737370c3e6f90642801e016b86171989d500ea1b1ac0a231cd6a8c9955a6c700988
655a71e7f21eb685de4578536268221ba9ad0abfb4b26718b0867d93bda644ed6692c5d5
6d66b1fd1db3143c8bee8a4186a8da9b152e230f94246e9bf63e2b707e18b763344a6068
5391ff86cd3c491f875100bfd5ab8d48a63c6ed0aabef7524ffed091fccafec04a540868
ea77ee18e19277fc141f44cc0bdd64d40dc6e201bb03da8e9c0554de15af18aa58ae61b4
2753845736842eeba204e56c773953a52444d2d6b651dabaf87a896af8e1209df0147292
d141504de1aca77df20b58c4bb4a007e79ca9668f6d8c8462db78026b38842fcaa04c779
d80ae01626771f0ed95164fa776ce3f56b6d021e029d27244db778928c9b94eb6c4fd131
06f6b0688fcac01eb202705e8a7830115068db8568cde6db3bfa1be1df7633950244a763
3f6171e6622f02974b579b8b3e2b8a337623829b03a47c79e0a2f160ad8c55f277c749e8
eeab6bc53c70ceecad094e6673033ea66e89084dcd734c5d2497caf0df39a8b473b05e46
c6f45c50980bde1479b953dbb1f3b87c96435b7c5d16a09cea02ff05b376a97ea082137a
62c0c8288070cfc9cbfc8c73ce1f61fbb6874e387b5b1906a2933aa4c21ec8b05ea1ecea
72e24879a0a582a3d787ed3b1b729aac3f4fb0cc02aac0d419ee3a3114daff8e7c5f3fa1
0604b9e88d4cd43b46456c07e2059575de4c667c339e934e7024ae5eda73f970188c6d99
98274fce917fcb50517756f68e9e74cd43cbedeb94bb97e265280bd97b97f3ebb0550281
295da1b5698d4154a4787c724a18cb78894596defbed159c36ad6b1b76e42bec47b18d4c
4f8cf0ed817fe15e54d975154b1eef936c095ac171966dacfffeb545e06e5ce5172bb268
262e772569216a64f26f5906df8ade08ef0676bd025d257615b2d6dcc73b3cf9a33057c7
0868f7a8b789ac9a0a6a4276da960c98ff034491ab783b892de63428232986a2485de8df
9bea57ab00b4fa0b85bef361434a99b5d258b509267d9ba441f95180d1b905ee95ec8133
f7779f4057e6e74aef8da43602039525adfe14a405311da5d6ca1c5039a656520368e6ca
9b2c547c84dcce9f3d97e052ceb8ad484cb898ce1a5c327de459025bb2edee06ce2003c6
f38e52d621b3f96165d0d90614c5cbc0f530bf9f319a7574ae4cfbb571375e26ef86d3d8
49bcd64ddfcc14cea444b3f31ae1c21f210c74ac30c3cc71e067230f1676df58a772e945
a47b45bb60f0ac68aa1eea073a83e31a0ef3de6ecb39036aed3c78c5a2eed97ec95d7d71
6aa51b8d1a1608b7ce2a2469414869a3eeb6d68a9b25c252c436e3bbd9a2134829e939e6
8353a55c3bc9ed89904a8f34606071622b5d3d78a9868200f08d1c67d76bc75ba8e627af
c3768c250b1ed429eb09e7768f50fa48d662dbb62be2e316966b294242fd60723394c60d
b55b92f4d6e07b8a74fad3af15c4aba88e5bf7508bfa42723f11b8f97e30abcd5aeff738
3743444f97c9eb065c699644e55fe0fc4e30fd95d36abd82cec3938824a0da3e57643dc8
4cb08deedcaadf82f2e21b9852e5f373de5a8532acc961e060487f3934ea10eb883cccdd
6836c8474390eac128ce8d2ebefa96c357437c56a01b72aa4b48806375b02e5261020563
fc0dc9f3425ce2434d4268705d81d0658543266403f779a0ddbfc13047a4111ca0fed1c4
fad3e71801516d988d0eb0803aa90cb0a9dbb8caed1a23dce32994c6c0cddbe14c9f3d74
4aaa5db3bc5c03f16774fc4537399160e109d99c1edc582fa0d556dc0fa1060229eaa711
28d44819cd05a740f854adbd56b2a8b4cc8726ae2dbcbf35864c69116d96c8ab6009d0ce
b641d46064e1d7930cc7b419021240eb2df09f5b4d13facb8353eb92711d2bcd6a7fa63a
db74f8a79c3a62d49a9ca6cfe3faeb5d38ac0aa34e8cdc4c7704ad58a35bd50ad4959b2f
3b66a47d3d81d1d41c2e8c3711c3585f6e7895cacb4583f21a0a5f191bb5d6691fe07fad
2b087bd0d87bbc00b47eb9babe0a86d1f641cd5d55f43d0745d0554be9cc6926ac70bbd7
e396065f7ef5b2404e60707c35a61290ba08d0a6aeef93f65c18e36a45270e45fb3cbd0d
c34c14c7981e9cf8a10d5a4e2b757780a11d7cdc29af8de3ecbebf42d2596da695a5ea42
b5dbe234489c1655b5b5741ff9a6a7432c2520b908afcfe412688f5718846e1dd81a814b
0a31f8a7abc50658b352bb9c2f2ec092adc1c7aa3f13d190b891ccbfc1876ad6e8aa281d
bbd877cd64f541a3593f08818706b0ec6bbd0080dfe9c79c8300a0006d05e2ca6bf4024a
2d657d654372baedf39911bf61cb87415e6ac4f5807ae5f37750eaf77b05a0cbdc4f20b8
a0f57c19703cc4d225a62348500e2ba5d499267745892b3f105e29eafd737a08c22f2771
fc244330568bc6b59399ce413f7bead8f12395109fde1fd2c27d63d2df9b01e9e45d5e34
86d8eb79da6f76a74f4fbf20d2211f1ecfc238cd1e1a4328d8d79337d8130cc11a866ea3
70d6b8e41a8822e5b63142518dfc52d9d75d266345918a428df7173c583559b2b7998932
ea3a4f2033f2753b095130d7097079dc68f8bfe1c3abaa32f7a88a654d106ed6f8409b5b
ad1970c688d20473a08eea3657898e2cd58f59d75b15aabeb8d80273fb798afcf3476a47
b5806035b4c91c8050ac79f95b7a3e7bbc412ef9b2444d418fc05aa4dd5e8f627a353c54
c776f192f66aeb729f7167ad5f800a6a34eb2791632cd611cf20c599a9ffdf580cabde27
ad107de0320b3e165284a1cc9ba2501aadedf18c0b608dc19692289de8e7767eadca5bc2
2d7a77bda2bd74af6ea061168c7d184c7e430c917c4e92f71527474d7da0712b4a039a18
a2381a5fd1357417572760704adbd64b917b9613eecf6da87139c50055499c4d47d08193
bd97826243944b213d007a34e563357755d4b3928859a5357fdc005bf788816c33080b63
b61f3a821e88defb72bc5d01868cebb51b687b41470e0d407cf0d3e959a5f14925f71738
bb83eda9f3c8e1dc79fc2178bcff57de29ac42e546099b8ee887906ff9ba705dd8ed3cf5
86282983890c9da4d4966fd31d2e4cbab88abfba7ea9e88f9b2997af6332515df992f039
b74dfc6ef506663009b237731a3e089b3dd58fe6936880c822a82877da63ec9fcb90ee03
c2626742e846e569905fed1fc833ef1675c25aff05717c539fa67fe658372c95a1c6b472
611d8bcc8453fe208d5d4496d664b7cfa0d2848fc4e5da9650aa898cab569f531ba43e14
067e0319c65a5c35f0fdff0830e9d4f3433694c249e886418b3acbf6f1c2c384c965a5bc
8fc74396fbc2e93c9186922ee9e8a8fe149e0d6a5d2e0a809e0c9b73a899c4d2b9e4be7e
e9a15275ab1e508c7af342fe63c7cbfeb4a09a9f680f599b80b0e83ca062c06d9287a7bc
6028bc36ec6dfb01fa6ee9126083fbaacf0fa4bb96a38c7ce00876aa039df6dfd00243ae
008d11f268877981d2957b2e938b9a4f85f794bb741d77e1b57ebdc01b9e419e6b1bc256
7f0e19ab1a6e45e414871685aeb5fa67fc1241fe30828286096bd1c09d725143ab67dcfe
52d9d8e2153887286d759000bada6f0a8655e26589c70d4bc59aa66bb9d27b70acfc9bd5
472b9159d6bdb8b9e208d869533e0eb9c83f9e2d56b6a123b868ad6add71c69f4b466492
e2df50a537ad40c40fe201002ea2d52cde7d8ab76354e8c1826d336b00cbba171c92137c
4e747b561f4b43a3fec6b1307698c09065e2cd66b313aac8129ad2391c4a705854b5264b
ed0683d1253915edd77dec7d9976b5c75aab0c215e5cb2607cd64dffe89e47e0a15a0649
43f8c6795b0462189c1c08f7bc9a4b3937c48c8790d346976c507b7c0e1b433a4aef3b62
0a4c5df9658cb0448939ab962cb9d066487d6fd113e6e35dec065a56c0e9df26d02c2788
69ad5135fc835dd2355c32a6f9cbb5eb42ec0b1677c03e44930ed8d842e713ae2d071905
4f819410c2fe66b7f155ec3ed3e70d89ae115180c96cb9338f89e140961f5566816a6820
afef014022a747edab715de9bbaf93a5cf5b65b0a585beddd83404c96d4e3b74f0f329f3
07a64b19fc96a85bcf8b5eab21f2f9ca584045fb0384f484e813ad5c5f96d164262e35fe
341106a9cc0e568cdaff64f044ed5952ff6c95650f96e2cb25a649bb4d20a2eb1270c9e2
719d674dc0fe941f3d8c5af78b5c179bd7c2d5d3e31e7b810ca7c0b072e600371a43acc3
bff84288e906e12cdaec50a6b18aad9b992234adf9a193276fe26a441834322ca9eccb21
eeb7f4299473d962c2696584cfec6eb177d5c654a97825a0db7b7cd211162c0208626b3f
4e11b61d3bb7cf17347a0b2225df7ff4f5d766deaa265a63645e936e4e93dfe14d64b829
e4fa34b615fb6aeec1a5d12db637c77f5f869e0f681d0948294dce9472e067a5bb37c8cd
e6425acf266699657499928d774e61fb0d29db76d9714b970295a1ad05cf3242f5285b90
c3f0f2f4dab4e4cf7633c44c8da345b1fb89ac639ed4ed2280b29f072b05c08668cd58d4
7c4d38f1b338a60e2aff706a986b4959367c1bc9e16df860a205f38613dbc395d96dd9ed
12c0c7621b8909315b959813034acd9db8eee2b21a7e941548b9c442a20b894362f155c5
e68ebf4b453bec4d5c5e2b08b0eb0228c7e9530c9f95e70c3811de57ddf35f8b59336baf
12f41792374a2ba034a26df61e2e23b88cdaef39a289bf4332cf94e087481faebae6bfcf
11432419885192f00ae73b622c7ab17b7549578692d0dd9fcd126b4a317ca608e7cca2f9
7db3dae8a1c6282b73324df96c7d6dbd5ce12a3f603f4fe71aaf516db4fbc492d4003606
0009764d4ae87d6c47f2b7e5c249aad4b3bed49c0c2b9701a8acfcf3fa305e531a89185b
72ec3acb99e970796aaa77fad873e53597d9cf578c867db3e6069521b9ef66c2648507e7
ac2000d2e7c73200043e31c5f45f8467dc3ce19b6eed6ae48b4239a9b504cc39dba90dd1
33b2818d50d5763328734c0f46840d01f767fb9a6b5a74c8b46013ebb9175425b3015365
b4860f53d9ded757bf0dfa58aca651f5d092deed9e7b49015365d721a4ebd88fae98de15
746eac8556be51b1a2c148e0d1b9be9705f6164e00e31a4c7067ba8501ded68187550de5
d20ea81c5bfe599e9cf7bf418f45a61db2361917e21de596c0bba82602aa3f0dc5bd2ba9
2ad7a616393b15dc26cab11159a37b60cc3759a33cce5ad020db054a64dde3d31da66a8a
86e617d02fe8a8719b28bec4ebefeb4215d7bbfd82ab45d2cb3c868dbef19f6489e70447
01b00037ea57129c155142112a7392a9e62c64c8a05650f6ff4924d6d05ead98366d57f1
f2a2e0a9876ef45642fb7c752b17ec1357c302c5a5a09edd9ae405f487fe62dddeece0fd
4d8cfdf005822a83c553c700357de553fa3b7d9cd6e4eef5fb0d0000694e1c234e7fda96
2878fee6384914f53cd547c52bf5b1774b6b1988fd8651bc4c495f5d4e9328f2162f7f57
de2e579b0ab3e87e34e45d9ffaf3f458a0c483ba9c0b0b477a849b3e36c2fe28195db25a
ac662b001e6b7f6b9fcc91d726aa39f8607715a0ab731034f638ee2c903e0c57cee5d9ec
7eff9e260fc407a885b6114548913f9548088dd52125c249341d707cacdcae852aff2fbe
464a025cf8e5c04dad92f68ba456e9fc393fa8e78b38eb49f1a0d2e3fa83c911bb83ccc2
c21a71363a39f280a2da5a792acbb9f1256db0f850b7332e88b387b9bcb2ac2db8fc37cc
d8183ef9fc691210a376c67a6a9c10f8ef11f189e5448e6af40a5dde0ff6da38ed1572be
a02029a87c0b56653a2a3b9b1a59e2d82771d381eef8687a1fb700f295201f0737d7a77f
13f218315cab8d15ced6ce80d19c1a405b0ef4b82971b380af1cad7c635f47cc57805f09
eeb808610e6066ce03e97db5c7e590480c02b557beda8d63fb85713e59627784df78091f
02fc29ffbdce554f6df1eb9664149498733f9d3f6e6e67ba6892671594b72f9baec8c84b
d774c58ebbe23553a0d34e66d779bea40a5a5a794fa6c0acaa9c154f12c81e10eb2d71ee
04b0cda620e19ef104df57ab9dea91ecbd69b350589e7671a84156e37c5cf8a50e6f3d3c
4a07fb84849662fdcb6c0a37eaedcb7603e66c2fb255a96dcd1c98672c84ffeb3a2f2d1d
055ef193f025c556123208245142287ff2cd4d678442c1aa94bc8a5ff75517261a18882d
39d64dcc2987771d325959356a86e0d6204b2dac9c830fbf743ba7e5784c011928035cff
dac8e9bb14928135c91312a4d06c8ee08d72849f6124f2a571c55925c418ed182e8b69ae
dc0500317c31e84524c8494d292c9f52c70760ae5a727ec2cdeca27e4608d29ede6f33b1
9d75e03a060ab95134fd0aeee81078b1d58627b86f463f275fdafd697fdfc4eb3314f826
e11a6f13cfcbcab30e25dd46cfae6d83a5bb7acc9d980891386ab41793f4f0f8078f3251
f70e3405365877808f3ab719cf66ef7369f5a75c5c768816d8c6e67e65635eaf4a9d8ce5
38233e251a8e56d791bb41944b66c739d5ee997dc0129636cdfcf64ce9155685388c8359
8e2727fa5465a2ced287392e1319af71117d0721c6d8eb22690e50afc11ebe484330f3a8
98ae2f126bb7d7003c5ba6bcabafd8fee4b5e90eea87aa8e3fb55c0c4cbe0f1de4cdc94f
1975151cbb60dc5fe9ffd2524ea0f5bd327fe92c32a12506f4b2d24e3a7223fa1ed76c1c
db5bd33db82af194a84ed09706e13a6fb5a258534cf3902298a1d106e3aa621fea87f367
93d83d8462fb51f7b0ae53fce6f87b87a191458a6c7aea0e271629bdad7ebe3b1092ea47
a2e2ae92f99dbdf15c4b3a308dfb03ae4536059841e361876fc818ce443741307780aca3
786187d18e3e19110d25acec66088df0d0a5c1f9fbc1caaccc6baa02e507b91f7f6b6bee
499756d042ba8f244dcf23735f519bfbb1abe96e6b1d6ba215345ee94aa56814dfbc4eda
7bc17b487bae8bae047e4db8f4954bd7692d802eede292e8cc8e6fd841b130115ece0219
9e16ef87d001ac2623f7f96e5ec8d27eca0261e3297b8a584556dc31e6751e1e4554c929
63099d18321b21558a435dcef6283ba56ba81d22d5e1439e0e1604dd65b69df8cefdf18e
414f14afb969660186bdf547d6bbfde934876f5d59557bd100d4b4b4d75644e6c2dd6ac7
946e6e11bd46e5a3ad33e2e91431452d71196641f40365b1c290f466ed6f5236f3e99c69
d7d51c7f52ded5d981781dd8e3d53cb7cbfeaa6542b44998af82e67fe8414707b82f7132
99c81574111fd74c1faa5d292a51ac3dbb199e3691742636748b48a4f3d56f1b15779a4b
d381e2080d57a8b31d3ce0ed6b32491122ee59e32505c1ae35f580090099b1531ecad12a
399f74c8191033b4aac76a22ea960c5691de98c6b8dd91a74f9f4dfa942c46c0e5511bba
a5ea98d1b8e1fd56a74737b81830384a9b16bce27a3db51bcbe7272fb5a7786f42fbe153
3f72c933313fda1fe0aefae4597b744cb5b3b76cf7d0df266f4fdace491c9629a263ae14
0ca654533ce88ec0a58f7e6aabe65b09131afbe5db2645a1d2bd43911d28b849b688c911
0f664f5ebef269a6b68d35539478055991f3f0b065697f04f27e729fe71244b6f0354e1f
0ebecce9e287a675f3ab1bacfba744216e2540d5bb9716980dda8f6437706964e8b9df0e
336e6e6b28cfafa39515c4645a97b2bc45d8c09ffe6448ed88f2ed1704cbd99d8445a3d1
f6e6ea0534c28205d6b9cebd008ffbae503b7198d1eab4adc2ef64f171f1e7aca71cd6b4
060ba15a78282ae61b2a1b93d6693f137df4d047d58e49686b45d9e3dda5805837e326ae
fa7bb42beb613bff1d3fc6ec3a05d22e0185d57e398efad5c14b3d2d0740038278b09bce
db603cdd3a8c6508a55054c8dd9c48e2a9795d1bd179041a796293830acb54bb2aff672d
3f879110fd0a0b6636d5fbf8be44fff3ffaa6e23377c17927222863c5f091d13ba5146b3
7749ac2e832e93027af51164788da61aa2e6728b99768a9909e5440fc751b5b0c1dd80f8
f9bab43995414eacd8a151085896ecf8aeaa12ce2bdd129cf25890d061d1abf3e3aa8cd8
13c7f56446a6adbfb366a6df6857f234758607af5c5533e5c982d2076619a611ed483e3d
d6c97f0802c74c89b56309bd5c858a1a00a665b4780a4a975ade39026eff387676eedaf9
a75299a2c2cee3c7ea76ca223cfe9c000789b84b4d7a359a3900d200324e77e5c3ed5917
94938722f66eee4b5fbdfed626156a17a6037f8a0bd9e331386a0f3824e5864346d73962
998496106f8a539f88fd6d7a0c02ee70db29080ccb3dc39f1acb73df94cfdd5d977966fe
77f8f17a0261080970173a4f28cf6c67b8a81659a9247f73c8141f6fac484abc1d1b0ae2
022832ea467c03a8545a92cd9ddb2582c5d69b9f6547ab232cd7addb9f37293338b9ad63
74006ba090ef4c3c99e453a7ad621c567999dcf633b6c874757f77d8ce6bf00ff2aa41ec
13a040cfff092ef0168348310f05c93a8b61196f943e70b16e63bae67a54aa50cd7557f1
d9d80757ef08c76ca8e6da8aedb7151ecd0006ebe5d7dfdfb96fc51c7d33e2ba6efd66e3
b1406d598724f599fc2a27d75c4d4d2ae786b4631b3355be72e7e88abcc0e843ee80c530
c5daef5665e2b288cdbdc40a42ef774191a99ffcfef1cb87582211a5de37a1e68f9bf3ed
ae5090e9a4f4bc1bc68845a8a2183b85a2598c9413a7e51d32d513de888946c246fe2840
8213643a353ef29fe877b2e18ec2051714e52b2d126e1776ed23eef3f2319d113585da24
e259c0e45299f78d554aae28c8a8359599223e97a979d9adc546a42e01bf7fe6923cbd16
2426eebbeaa67ca7072ac987a31476e1fb53f804aba06d43a1220d0ac4848920caffd84e
d19128f72d7bd77537b87082c33be123814138cce821e4dcc6482d9fff9f30c3499ac3be
eaf9e9dc96a305d8d9c1e5e562cf6077f6be5d89e183aa70065c9284af036ddf5d4f47d3
7b79c46d3b27488eab2f1fbd6ecc809703df6133f78449d01989c457a99b4ac7e88ded49
18d73ffcfa9bd634218ac64d3bae6b6856631d78b89020e1d813012ac991718fda0919ac
d7866049ddbac8d596ab31256fd6dcd1d4d5d7e01dd5a4061b87a10720a344c8c9a864cd
eedc902a6feffd6d424896e1f7472ba8a0aa7eee61fa61feb5715d45b5bcb2abade5588c
283cd98e732f1a50ca6809e72cd2b1dc3a169b7bc19d2a014c5fc477169a392544162203
9faefa96cf96d87a21c3672a053fbcfc690308674017548e7a4a963c88a981e341413c06
8cb2633638ec5dcced8584067492b395ad4922cd4a7b5e209bf7acf8194456d4631c3ca7
dbcc100954d5dd5839a80e17c15a97173abb9db69b97eba1a1e35c1a8fb81e2f9a180be9
f28268c2ea1db661cacce5b93fd38d8bb490ce75b559b829d52bf9b2321cf00a0b8bf7b8
dd660dfa8f8a15275fd984d44cbfc50edc122d95fc8db7b8632ef3346c60c747c4fbd71e
949e2283de859caae544c61b204607bf307997ca3732ba59ecdced0a950b86becdc756c8
f87c9fa2e7302100df10d4bfb65c20fefc0b37268e5b820e4243645a72d67950babb0936
68cd451539cccee0c9b578e41a9bcaba9811348fe2ce94eb788e5960d77d02c34e0020ad
40e02234e3f2aa237e502d4c398a6ed5bb0b03aec495403337204de4b2f901ad6e6d61b3
210ebe058e335ebcc16d54b95e63080e64debb6c80a945f1d4e787b6250a6519eb03fd9b
6b2bb833cd3f4d3ddf7ffa8562f0f471c79dbe37c6d934250bbb396d63ea43e974b15490
a6fc9be1cec19fd3ac4a53b271d68478fc68333d0ede531f8c3bd108728ffee615322127
9de7988adec7c7f38f76d43a5c3dc5b05463830110a808065ef6e6335eb8466e449be6ca
408727615d2fed51fdbfafc5328287dd37467cd09fb15c14eff41a84e680a9d3f314346f
6f2b00a45967f697ebbc224e2237ff78e850217e6c4b3a034c39effd166dbfb07bb046e3
88def3ea1f4e7dfe0a4d16f61832774a707e3e776b1058237045e8e257d4d6b7c0ff997b
fa5fc2fc8425a872acf9c7f430a1e2e708ff4665571f3e84b51e0586ff52f0ad59a209d0
32061497ab4385d9903c45fc466bf538ba98678eaa72d7849b0873abf51badd046c38766
c1637b3fbadfaf0b57a5ed91b9c549ff43c6ad0eb0918ef29b451924c2f887be5c0c6f2f
e3d85cbb3cda856a141506385538dc5ea8365bedbc09ceb546cfc712ba6d8dcec5f99a64
b33bef85e76b9d0799107d1c7b58f0b3a72123408330733cf2a11d6c61cc80d14f2e87b0
c25fb8c967795d17a32de3c28f5923db00e09d3221bc42469e0c0abd8303d4ecd32c95f4
045c2dc32e274c91f3c389f798473f6a68135141973bf0aeba9549e44cfea9077674d891
eb5a098d706ec34478b73f175127a5fbbbc17a410acfa54e9f2cca41fc4e4abb5153ae7e
f7cdf97b89e9cbf77cfa122d3c1a4dc4e5df19b09bed8b124980f94fe27e7062c53f12cf
8f36b0410935b847ac3f4ec9c6708faa6642770bb16d7142fc3d21bca87c8730bc3eaa40
192bea07bce035611e7f969abf65c8d7e05ea0dc440ed4e770e9b5187a4dd46904834b40
40d8c811b5e96967baf3e26c35a674d7a5e9af8f7e15cdf2049d851433a8dbaae2e7718b
168d04fcf0dbb2b549e39430163a9efd15e1d6d41ddfed88e9599781a02e4ccdaf1d29ab
6c133f183ea6307bb545fcc0ae19036ec746be5ee7ec155407c5197a58d438950f74b17f
b5437087621b99d3782e3c7c3029af1fa44ef01ae729164f465dd09288c3b21f806ea70b
5326576837ad5879bc43733118a8f9e9c5514be5729e4c4a38c015c39614a1976eee9372
961f71832c9515d529e6f79c47a1d2fb159925f23f3caee9abce54f24161463cae166334
4112618396708c8b67aa592f0b7c749c1017b32733bb34cd2cd704d1e8f084af237d0593
fb0630aea5ed556dc91eafbf8fb83874304b5019d0670a0b57339142b202be4e03c15f47
e8ae3556cb1df157f1923c1ef2d1cd45e109c952959b6da65412571bf415171de1357374
a857da9af571cf1aa05938bf904132ba86ba73d8382955b615245f9f2d40cc3089fb9798
12471b6c89e8758b02ae13d3b9692ed31513cf257b881211f25596269665bed9d15154e9
2dc61e532ec10af99d1a982e64d660cd9b52aeb48d0496af51b0d7ba36c72c85cc44cdbb
ab4f5c05aa6971656130dd9b7750e2350677b88e01179074d69fa90e5d00b1d0359838b2
832322828c301f7f50817a2e5f2fabaf13426eb00cbf3f3ad5190d436c903c462dc44bf6
879576c66b1342805617d5f5313c53ec6ab42b677c4e6590768534f7e8e571e7636cbe17
28d211b17b529a59538d677b3b965fbb1cdbb6c2887f329ea9908b9575b50b008837dc3d
2e7b1b5c87e265e088db4a51e15835e9060fb5cbc0fa7884c06eee558008ae046e9ebbfe
3b90a8fd4b019eb388ff357d5ed5253eb539dcc487505ff085db551843bf5a86df35c041
94052dca7aa68f91a4adfdb7f211e876c623e88b11a4c581068ad847fd684bae19a277fd
d4a0f21c73a1643a5b54cd9c60d62ad5066f88c09bcca5150c13dfb4d1dd75a37f7041a2
1816d8346f8600a4b71a8e86409cb044e19d3abc9aa4020a44b840ff96aab5dd71f42ed5
0df1fe97b31bfbd94ce0f403983dab024355baf79b8ede140ca93407af0ee1dc372b4731
f3d1a9e1cf2abde1a94ca8db15c5ea2674596412cb9dfd37e12c586b06a5874dac24504b
1a4f44c5d16278c6f3c22e3c016a69e66d0c4cddefa35b04fb2a922fbab69384c9e734bf
556fb1069c77110e9f1016aa786b92a400d377ec1b96488df602cb22887542c8d5090d36
dd05399d5e3b9e6db3fc85462b9483dd8867764b332dc47273a85c5697ad2e1977e4be6c
c91025ccf4f052c26e5e17f441822fb74b5998d6ddf7e313e27f491e86a447abef3d5cf0
e82d188e62272a2561889971eff3142cec398202335dff683d089e6a4715a76a14e546ed
7eaba298c868e09c871edd0e148ffd2536e304f7516ccd996f91f10581a8d69847868fbe
c867af74e97be0e4c33f3ed17b74fb7e2c8835b4aeb6b71e9c9e792083070f4bf7326a1d
41005b501468f5ea64cdc6311728f531e98ba1b306297d6b53d519b126f5f1e1fd481d4b
942aa6b0e5a721fffc08786d2df4eee55a991bd0425812ec6b3cc16d5088395638637d29
331beeca8a856ae40a878bfec3d1d45622ca2b6accea4514770ba927acf8831142581e97
4f874044e1c3f3797697ce9cdf665ebf2073a1f3893f59d19bc62743c622bccbfe6a9f56
b791cd9ce158c5e8c0d6575cb429cbd428d13ca352db0ae7fa6e7313aec8da2ddd178a3d
4e9b6f323da485f27bb8b87b6eb4c0e40105cac7d05bca3a203a13dcb454b8ef3cd0cff0
e1f22bafdb4fa9241bf300bcea05820399e3c4d78a45d90ce18ef528641e233025846809
9b1caf430513cbc94850ad608e8191806658b42a35a117bb764a8fa37796767ed4df9157
3e45308678d230e4c922f8704e51181fbbee50c000416675a5e8cbabf48e2e33d48ae1ab
34c3b8b2e8ec529589c179785e29ffcda08e8d1215c64a732eca420622a4cb448aa33579
d04050c378d9ad92ea944e4c41f8d9e3424ee70d993503d416640714d61c1d738cb03aa1
bc192474a079c3280de31c933546be456c96e12b318a8f0fb1ba730e063323e6c453d476
dacf79b4f57f82dd8c75327d905a724b7a527eb3829b7dc4735fd088891d3a6a15d4b270
25e0eb7f1fecbab6066d17d6309243ceb1957571298daa7dcc31e2fae3bea796951bd723
62cc0d823ff96d4b348285899827f905d713fb3691ebc8767765ea0dd99d1181d2cf776d
d791d6b167ec85db4d34eb48f493b9f68beaab16297867615a9db47eaa673dafbe2da18a
86a7b56d89e87450ceded8bff7c8040bc7d5aafb9a3b012c552be853b5c5881aac074f5d
0245a9d47204c70ad3b8b22a8d9de21844b2736ed1be55efcec839a1e800b20a20082990
115174776831faa0bdfc00d59cba5b6d070a1f4a794b2ed864dc4c462abe454248a12ced
87dcff1ec9f784264e57d1c59505db10d98ed18fbdda94c199d02f6cc97f1f4e12532d38
5950c1d322dd881ade5dfeeefa0f96496ea445c9868a4840a7ba2a55fc379cb5d4be074b
f21312872a3eb995b124f0e6b73ba1171cf23ef85d3d6589de0242d2a81d9f29bf195025
445de14020acbe566fa03df8bd9f4c1080b4065fd2b5b80d9131db698b92ee488f7251a9
da271b242afb62423cc7c45250eb363a64ec4bc4edb0c63a2b78f1c3a8d18b491bd0444d
4685254dfccf670312864b801ea5f2e3e7f565aecad717f69da24c2b3a1cceac3a56881c
a96563b7738fbf3652450346c2e6e1ef3e100525663c9374227001f07c125d66656a1167
fbc705112e43ef99ea7e993aefd1b5469b75c6178f4e32632defd31087fc567aaeb86d24
757b0f167d955099d8e705012a7122fda50153ca364c0b8fd8e8300c89d505a9d7370017
55ddaf9473a96e9995b3a0b255a46130f43a8c40fcf89b0e7f621942f52c832e795285f7
37ba58d18034261d04c1c0df8891e11133ea12d63af39d87e7556b111af74141dc2148fd
0b84f7b9a31e3b1129e535a2728f54c8048a6855f300b1fd3413d7401b0140cc82b182e0
b5430754e82981447774ec9ea0e65402ba93764b61572cef0a3b04787935c262382da191
eba76d5331a587ffbd8ce978359df05bbf149f63ed014ac92d46214ee92c9b0caa30d0fc
f8a4f11e5ae7f284c5aaf5cd0b7b8d73e73696cc910c115d50961782d6f1ea3a3e9ffb2a
9d80612cdc5dbb3028f6b53fac6df571bfce370be45926f39a4514e759a416e6f64e5352
05a32db51931f3fc97db26ca77c224fa02007ed8045a35339c96bb8f645ed4c988d24377
942a64a42f666b8821eee9328b6ca005e398a066d14c8889591900942fcd1ce0b3a864bb
9c1a5b0a517446068519c3b174eab8a71bbf80eca226806b1edfce27fb479f303e86af62
34e13492f8392df0c123abf9d1b257cc62245c65c6ac0c992f37f354c0486ec8566e17fb
d3bd95236ea1f8c95bfcc9b336d06e3acecff36c6c0274169ef4edec6af0db56fea8a5dc
c6a084a9873dacd2a9307eda2d3f6bd300ab858eba261127e8cb5a79c80d24b453e93124
34c57282940d4a83c5933d880ca087fcede1eed59e993d50abdc2927ac67cf0e77bee2ef
3d7052734b136cd77cf6601e6875533b4437ed0badcafdd2d837c38103f6da45589f937a
c94a593bb68ac6efec317da13feb7bd8e3fb13340e527d94209844e183c40fda74437c11
cf42c5b2f6c33a736baf1020ea362e59dc06723c0aaa7a29c389deecefc650fa6c66d3d8
ccefcc05fa0b51ecbb60cde2e8da7b7a4a832106f3b0b0fb514ce0d3916ea9b636fe037a
9848c9d009f132d1584fed8e565c7a677f37ec74d41c2fc96ca9f481e74cd2da347bbcce
a5d609433c674de311ed8d8534083a7c51a8ff0854d096e5a4b873dca10106d5eaf37aad
95d3ca5436f92361bde093cca619c44a3e4994c5cef5dca95de88740d03c3f688026e73e
d572538cc2cfc5368388b7c72063367ce8c13f34314de642cf436a040cd1629bfb8d5a73
83e9fe3114f30f427e45099228766e710de6225fbfc57efdd4789ec011ac0be5551d5f6f
f3055d96f52a146e88b73655221781fdc05c481901a756d795d12bc0fb0c75fb8d6e6da2
af75016607da3d734f0c5eb86bd2d197e21bcbbeb36ec68f6da007476428e48ac7cf24e4
ad3b2df7717a21045e07297dc0d818b693d796d4e7a9a620782a9e2aa360dd66e320f1f5
00bb2e914b3474ac59c1ca43ca5dbf073aa21b597d56f511bf6f14f0aa463d28b00c986a
bda6911742149df06e9c6284ade443bb06ea21ae565c97e309de4639ade75e8fae1830ce
1c7ef545b7a88ddcff04cbdf4a38f601d156be4c263685ed287c1f5e648f605cc28d721d
776e65e96121c229f9c592f80b9fe0c058017f1c4e936e788f6ec22e7bab6b29516034e5
c023b49b8c39dd4b98fc5a77a6a487076b2a16d4e765d0852d9bb5a4c46cb0b458964a04
e6329d000224a2bdd7b9208b2d142e6912cbece8324f9327ec9bee66792e27ace5167ecd
48b30a51fe50eac3bb83bcb17e137bb71f02c89cdc8401af0f91a085688053d577c5828d
85920067aaaac4f943cbb5e5d3292a34e2bbc588eafa73b92ceb14cc93754fa2b0b0cd1a
88bd0e32e68a1f9cf43ea9017c08e9acf8edceb602b28d6deecf460cc9ecedaba79ff190
db6e5ba0ea207a9f42910552520fd3e15cf8d734602809faed4e0cc41b26d452de38f3a1
a2abe0fec11dda232faed48d8508fac7f8d3b84158bd829885fda3806c2928420aad33d8
df2fd6842de90c848c7f6bcf5d636a9a6bc821591563b23c8fb67c439035f99775b112b2
c18ef20f121138712bf4d0291182730a18056f5a0f610a611f93ac18ec0c4b34c41d688c
5bd8c54b33b0424df171c29487c9c4055d02bdd516eddc599d53a609f5a298fcaa78de29
e43468246591db42f004c060b57c8abfacaf7f474f5b820d418155943f2df0051cf50add
e234622603711be194eab7d574865aa1fe44a9fb0a9a0643a5388c3b25e87c7f43152774
7bb7330017107c3532065da17e9f8c060bedb080e58419c9fc46cc8884619bf93fcc4546
d54124773ac3900a2da111b00e5e2d725f92c9a72d049d604e63f9f8b9cbcb2d04cdf1dc
70fe52774bc45e0094a1521a064ff50c131275d5a52e1ad580febd2cbc65081c48a5e2db
f6c11f20e353f391e8f1a49e72c1e0b7d3ab8cf7c0d0f40fe26c42ea280360bb92e6121c
6afffba65af58da4f074fc27c0d504601b5d6d0c066de1c5fa496665e5274702cd317d70
6a6bbe161e39cfe9ae242e61a7a7ce1dac2393cf0bad1e73a5523d34c612aaccde569885
dcedb70702015db30ccd46c0e08fa5339c93457015d63fc58e2f6be0098151e4a2f9c4fd
68ede22e607f5e59e5094b4c654ac677d40e4f78edfdfb3de9f78a1e26aa3b4d100108b6
b0afa9a96d04622308e9da51e114ff110c51705facdaafa51e386691e1dea7dae8636ecf
487402a7dd3cf790d2d72818eebd6baa965d30bb6b7ce14f5ab8efa46e94358380cb789b
b22d32f07b3fc3617975579be0d8750964397dccb935d4a19f1717001fa08b843b655d24
836d6c3d23804754c840b39f5c1dd0062dd626709f272ca40a90c07e83b18fb10e4b108f
a6534089c4a8de9d054dd40de51a04cedc3347ef59047af02c151182761ec2c04a586087
a0ed05f2e1a95dd95188c44bb0ae9145653d54f814929915e30ee45b09f2ed779d23c904
38fd76c124e61f4b71946cdea1001c6351b40ea6f11e04823d398718560f139f57c52a78
e1513f42f43bc409b126f6beced75eb4939d3e547e5239a365f01d05ce17e883020057f7
79138c2cc2101704fd735f0f6d8c76caa62e5108716b4420a2b624a84ef5342801fedde7
a5ced67fbf3cbe055933d960831c83802dd91c749ee0558eb69d0ebefe302635319a0dd1
94850697d54d3d921feee91196b201d471bc46cc397ba326687c6bb7f08744da9693ca5c
b19ed2eca3e825ccdb1ed94daba251b07eea983f1aacbbb3e17e0cd4481672990fe5982b
def8a7bebc3400749d97660f0555e4dab0a0ebbc0af2461f0924abcf6a553cfbb66eedda
639fb30592d9b5426c489fb79eb04435f2be607af005546beca0a44cead0c031d9b56d3c
ed4ad1927ec413e409460957438017d4264c37b12378cac956201152b84fe8ca1b3f9672
0aa8e59f9923b0b1ceea51ec0d6a06afe6ce5f0073726d54f693a421078396fb775a7ced
bd4feefcf08d934698ea96e137a05b5d32f68255f106637dfa24c67ebd472663549b21fc
e4bf1cc04e1572592395e6c77c4672472efcffd9575c1f9fef87598f4137e675a5e7a2c4
a05a722c10fd43b006fb780aa9412e1bdcacf3fa51903204f9742620cd5ea0bcdd4a6648
21d2d1899c31a54cc21f019dcd69e1a4ace32d11d89a0fc6ea6842bfd2998450ffe527e8
90d6b1536080f4724dc6eff3cea7ce461f234fa8facd2adc5554fec5f77979d67c8abddb
a018735231a547b2cc84dee1091e499455ef5ffc8cc451ed0ee64076dea4938ee30e3683
82465230bb4df9dba192d7510850829fe2c868c140e66c2d49a37a2b3e62fe80686df3e4
2b459a7eb3243fa571572858d26bb368b672c96f1796212893e185d8d8d180a78d40f98e
a6c727fc05479603957859fde8cbae61ff9e8c4a77f6f48ec43c79ba3b89c79ed478a08d
a3e68611e632a24f1fb1fad17a6cf704e4fc0c2a9fda0e2f6bc878cf7290bb82c43d7d49
dc070a7a02d415534166ce54ba6d79c0420c6fb863b9db9815d39ada2d6a4c63777b9b58
c4f44c1fd55907f3559c912fb16b2e8302c3918b6589e09244c9049247468c8c48d9567c
2758909b27708de1f7c79f0590ab756b362af74215878adada29f1a791cbb2ad930ea250
376987ee739978d30a07c6401e4595101fc15243612bde02923574f42c1a9ad4f6d4afa0
240f3c17874fb2a862c6a23aab9925b50bbc956f534f76d3af48783cfbcc37a701378ad1
d8785a5d65646351716e930dcfdf075439785062dbeb9412e2af1353c4400b0fcf7ee8b1
a5462c90da840a419a95b6d219362ea6918afc0e1e7bd55668850a47bf13268c044aa02b
c5a43e57a759ebaa3ba2b2c1aba285f03da355b324958c0a4dfda68643079ad3989c80d7
b3ae125501334cb9731de1939fa56e9b132057ce51f185836f537fa117ff02f2f8752c3e
2775bad3a467007214b39fcbd1457d7ce18cf0a239f3412ec4b41c4cc9da975bd49234f4
6191d63d29af5091e87dfe503235d621397f22f8751a493f595cf64d2beac0aa6cfb8483
b7003480527d4022d25dd129b58f1338a981da6c0ee64633fcdb0d6a5c230288c6bb6f67
9f181b8298f5d38b5ab9b71a97a19d95d4a71a1f49076d0718c62e69942dddb0fb7ecb2c
726834b685106a479ebf6c36ea6c5de226097386352868574b4cbc0efde6e3bfd063e2a7
31881e5a37ca38bdd6489781010e28f875294d346f5b01dae2a2d3edd634f36e2c0db86c
73b94cdb2889b9775bf9745baec0ceedd003f762fb5be66bbd6af357486ad88da6dfa9fc
bcd867f9c5bcaacc79077272272100b59e6dafc069f35588a8f384baccba90e9c4cad2fc
7a7fce4b503de16904fe72e679f769afc948ac8df5a7b290729d0984fad06a47b8825822
e0dc3ad4f031fea26cd0c2161b6b7d37173dd8bcc4848d23e9705deb746c902e65e96f91
1779e4cd24655f9a98cd9cc90a567541be2168848bee90512ed6c6904d044c0b8119f336
db94c2a3d99f8161876bab4721b10c1277e24350d8be955e8d1a29732d3bca9d0ebb091f
b08963391d76924046602b8e618ed3c366ba0ea2457e8027d9fca4983a4a22cd1a0e1eca
792f6b0a430c0f43442086ba0dc67cfa13b300c6049df044b7285bc3f3e8d3d86ac52f7d
078a27977b393053bac16191c99a4278f3fccc50fc6cf3b99bb2b48f1692f228a2ec8d28
54f1f9e458f4c68ad9377f9a8286e69e0a34c605f76e7f65d433fb24143de61535663c03
ca52bb91c58ef46a22d76902aa65c6796d8b451f5e0917b0275248ec1f58faf35a3da4f6
8ce2636277b2653a44430f1f53d7e06eb0555b000a02548a2831fa7353a261cabacac30d
16fd78a769f7620c45ed67b674e37547a2f2c1426046bdd6422aa3dc9c7ad70b90617663
dcd98c499678b58bca42bfc1a8d15a81f2ca9fdafab81b499e6a8641fd32a2b796f0b9a2
c336017a129fec8e9e5372ea32f42268d4fbdce574a7c70e156f415306a1fba0bf6ddb55
3198d54500c7d77885660cda0c1fb88738d169bd103c0d0ac70908a134f5ebc0fd8ff19b
fae3cfce4750b1dcd8005e11cc3efaafe84a9507e5349010f35f89455e5f337b2398d5e7
5c7acb8a76a07245f5a58981f035d3fda6fc84970c3f03504bd4da8f34a8260db1d15491
c0f62f8a8b947b446bf982b1b8159c4a8a2149f353f26a29a7a950fef2dbc9fd15dc08ea
5d3e7af5beddeefa6495393e1b2b57470276c83d74508202d83a8c3f4a9af12f31a7185d
44990a297122cef075de9a17a324e73e3f6c729bbcae5da41e4d2f139a8d866bfd9a8ca5
db4b82ed60268862052afd79734bf4c3f6e6f94caa79574afda5185e9863bdab1e7ff640
5b78a8c013abb72599a604087f3564820f6e498f8f48827ebc8e7c0b74010139701df966
326852d3422763f8db93bb4bca54eb4f03f3b187451f68d904f283bcbb18f1e2b1c682bf
8abbd1c7aeb4ac1b391add08b383427a985142ee2217d422a53c00be1ef236347d651c78
d74e1119dec93b95a61747ee9ffa792867c80c60d9045e99f79ac62ed81d79f1ecbfb3b9
61b41f2ab2ac67b6041c3bfc9d514db76a599d0e623518b171adfc72c6d50a9af8a28132
c7495e42979b8486d1d49899ba0973ab4b9e6559ef0de3632f23ee356a5d4ea585aac4a6
4cfdff56477b7bb263687d3638f1bd7609bc1d434588bdb41ce985dc6cb3657b14ecf498
3414f3409ea73559aa9fc5792f1a36d071be94d98b8c430370207f82d2cae6499b23287e
ff1c87078ab931265829fc4f60df8c2343c8050ad716b51b7df2a8650840f0395f177b34
8a498e8f3e65b9e7a1cfb1fe9f900a39da0fb65f850ed01b4db473595a4871ae190ea4e3
95b23e2b586a5ab844d12a0f8ee1bc40d76998fc6326701a008c0a404451adfb2909c639
7be201da790a0fe84bbc5c49dd9742078edf527b4f0fb60727bb0407b218293ac9425bce
24e7dee7e89e87392cd809f2f2d24413f66da900438ceffe2b3eebd0450dc738aecc146d
2001d855bf643d9b7ef2b4444cf564e5f20cfaa4a903d0b63b0782601cc29fe589bc3c2e
d1330963f4f662fb05dca2cf01f74a92057b47a283f67c60c7c826e2466d0e5940c91e8c
1877ed6477d23152824a6b02c7f3e3bcaea9ea865f7f937b43d0f71b24d94d0211bcfea2
ece715b52e47fceeb8854c12b7d71c5651298f0f5f3c5aec43047b829fef9e3530e1962e
b73463f0f7808483f70571b889667644fefff993afca5e68c327d27b862ef33745e5d8be
c290b9fb7c79f983cc201a0581057d0f4e7dbfeb07845f8e903c1421c9532a8d2b62197d
508422cef3f5639770d951c9e3e0d14085e8a29b9476a5251208d31e8abd411ea950e062
637d1c4b49fec477dc7f492b80f15e21234d4140e60dabc4c46fd137cd865246bf4c2ffe
17fcb9c0568f46b8860f8c1771849d9c2697f852648b7081b461285c8a78016695d9da74
fe7d80f06f6d9c12a3871226acb27d51fcb519219f0b24a584f96268b1379a8b9618f391
035940c23ac19bf2c5e192251f57216bc48bf070afb517d3d7089287913e6af71318fc4f
6d857f793c9cba1aae2e583a266d8d2bb5230d0e35a63d6800fa4644a64eb66cde2bd954
d9efa166bf3f796a1ab52609f9d720eb804a6dba52f8d36dbede172e058456626f1ccd1c
f287fac71bc4efc6f190cc1bf55b168d7de9049bf53a937eead2885730e5417049024314
0001ad7563032d3975988ed0d19224458a2819f5ba80da0243941078e80a859858f8c483
d8b6f974655283d1af78911520ae35aca651b51b3acbcbef2c3e65b5e2bb7064ef777d4f
2330559db389722b151c48423751d8e056b35832107b8fcb8581a226cc2ee5923f4576f9
cd936192d4955c0cc1c8742c8d10e3b2843a8c15fddc29190b435d1d6f4b913e20fec244
1369db5a92ea5df2c03c4ef740f54d9aa00aaf37670828eb6eb9317edcdd12d087272811
34e60b4e3af4435d7c5ae41641cd36c84493153935b5eaf97a75f11ef84967f84704bc07
cf91cdd1a86602d3b4e126e6dab650e7ad5eeab8b5512a1dd247f43d2884a28e696da418
dd184504694bb51e4fbfec8072b70f9e31e483e9e4849dfe24c281795a27d1f96e8951b8
de74b044bd82e7714ab34124ff21199ff3a3fcbf8e0f03052d720a8e34b4828390f927e9
5e6ac1aa28ec5ed86911893fcb30469eb05c3b1673689d34499221ec490abc735edfc497
2f7f9dc9d520a8cf2b7646285a9ab0734b929fdeaa8720eea57b28afd4be5126887df9c9
d81ff6dbb0b7ad51958e15a89d4df20891784bdb6c3d48f743539159d547debe11fb68b4
ceed37409e428bee521303969172f8769647e732448d2d4fe81749489e007412ab854fa4
c676ec2710bc382e7f1190f4b6382a29d932c87fee6193d4dff65eb601a5c41d80c883c2
f1f3cdcf6fb624f27de8bc62854c32899d6a2bb11e4c88858888fc4847e2b774f9b447bc
fea3597232b5c3bf72e430725ac5d5e3213bea6384d9630e231b85e332e96a0a3bc95a8e
28b4088e3782c8e0d2dd5025c0acaa261b349821f2714c0f577ab323b7f8c5d217119003
4fff35f0527f3b202046ef89d068b78c592c69bfdd04576a9369fd72c4676f7569987887
f8b53043dd8ea30c1f3a99284fb846f5c70d177aad0609e8a61925eef7203e5d95692e51
a1a29b0c3c5905620e3100f397820a7f7a0891de80888354c4933aceb6815057ac40e67e
22524aad6af1a91f57d36809001dabd854810066ebffb47c5d31ca9563d76d4f9a61fdb9
3caba445cc47cb91784de43190c7a606c0f4628e39f67eca55884bf7f096546c0ab9f2d6
bdecfa450197f40eb7dc4ff1cfb1fb0a338bd41b43ac657e3d2aeb2400a8bcca80cab4f6
ba575da8eee2a03f0dbce54c4341319ba8cfecb081eb07db65fcff831ee9600978a91e2b
864bdd5e4b7676a965ac370a725adab6ddabbe5aa51603e0f2106adf3edae35a1407ea96
1312f7658dabe13f38f19971b733e02e89a1f9675ecc0461015ced14eb322a6b9fbae05f
668e3cb9c030a4d47d8244491af4e588ad52ce21e7c47c890405ddf131d30a91492c7173
319a73c7095eb0a973f518a2d8b05c5b2ed3009b7459419ace115c20154062aeb161cec9
439a6fd31b052ec72236def3f6e9ee88c522b27babc97393243b2d4e178d2788206f404d
7c90f744c305db318ffd99b5496fc8fd8309b753e2bf2345c960af1dbd266c65510c0df0
18a46d21fd8ff3386dd6cecccf67d0d763f8343df84b21653d6a2d99e50ea049f9c358cc
1573ace912a28e94132b6c15d1241ba0010bc26fd5e7f36d432299c9a6d0a6f4bcfdfebe
2a2644dc115854187123ea0400660c988af02e52076ec97dc61bd82da1571ec39c4768bc
6de9457882cbfbaf892f9b44bf2895cd5f706e1ed74baf8b97c4d2622bfa31731d43beb0
469e29b221ac85e479cddb96e159dba174de14fc34de079ec42da54c8534af81c417089b
d74e350c339a1e3a50eea2d029e1f4568d8e844d41486624ad0ad239141527d6a2e071aa
0680b9f9b8d22f55692a23c25e31852bc64018dcb92ea8cac1ed0e86072cf33bc572dd57
4c5956fc791564c8065a856c9bf8a439b2a7bff4b7614ca35e496927fa05a20167582ab6
3f43fe975ba356b89b2f4715753f91c0b0c55f5b03066c9da4b954fc24efdbe433ed6768
0497143e2037b88f058fad808de829099a22f2361e0dfd35c26abbb2e2ada800dbacb4d2
750f007845c5e5bf157254d081cbc5dd369eaf6acb4d1e63df45d736d0d3bb21f5751ff8
a32e35b0e223d255d7efdc4e98ce6fb2b35d631b140fda10a9c71b75d1f55fcb56c49002
2909e56157ab1a9c575e917112017c4189b48e9194a5030fdf74851561f32dc976a20efc
4c399fced04ba6c6349a7d65f401373de2fc156e2732f31f61f5d85f02a0fcdb119b0684
0869c4723e40eba134c51c57267736bc076ae1e432094d20e68a9e877d91f488e4e20d33
5a21848d41d2dd15c3d8849a16ea686de7e6365bc75d8b9203c5964206472bc0eb3a7c0c
ec7b1dc9aee08c9d7fbcaa190737909bd472de8ed0060d0c1116060ddf08a2ec3cb28e2f
264d36181ffa5e86260810febf7fe0ef53114eae1083135cc933b51cc944f116b0e2c713
3ac5903091fdd1361480b2c4b9ec0d495ad728accbc99d267c7d0578ce0d931fce12f5c4
6b36cc22031acb513a632c6563c0d4b1d77384aa0d6217d964f1d5493c829b47c37371e3
c18539a2ce667f3f29cd468e6a7b59d87c72a54e2053432f3267ffcb8e444d10d5274131
8ef8b3b7524f718f9dd42ea310fe11e4ae4bbae5beed1e4f176a2d4fd28ee306f9e24e78
c83de858dc189853db86
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont: BG-Maths-Italic-Bold
%%BeginFont: BG-Maths-Roman
%!PS-AdobeFont-1.0: BG-Maths-Roman 001.000
%%CreationDate: Wed Jul 10 12:20:20 2002
%%VMusage: 120000 150000
11 dict begin
/FontInfo 14 dict dup begin
/version (001.000) readonly def
/Copyright (This font contains glyphs from Times, MathematicalPi, and LucidaMath.  Assembled by The Beacon Group as a replacement for 3B2 TeX CM Roman.) readonly def
/Notice (Copyright \(c\) 1985, 1987, 1989, 1990 Adobe Systems Incorporated.  All Rights Reserved.) readonly def
/FullName (BG-Maths-Roman) readonly def
/FamilyName (BG-Maths-Roman) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/Weight (Regular) readonly def
end readonly def
/FontName /BG-Maths-Roman def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put } for
dup 0 /.0000 put
dup 1 /.0001 put
dup 2 /.0002 put
dup 3 /.0003 put
dup 4 /.0004 put
dup 5 /.0005 put
dup 6 /.0006 put
dup 7 /.0007 put
dup 8 /.0008 put
dup 9 /.0009 put
dup 10 /.0010 put
dup 11 /.0011 put
dup 12 /.0012 put
dup 13 /.0013 put
dup 14 /.0014 put
dup 15 /.0015 put
dup 16 /.0016 put
dup 17 /.0017 put
dup 18 /.0018 put
dup 19 /.0019 put
dup 20 /.0020 put
dup 21 /.0021 put
dup 22 /.0022 put
dup 23 /.0023 put
dup 24 /.0024 put
dup 25 /.0025 put
dup 26 /.0026 put
dup 27 /.0027 put
dup 28 /.0028 put
dup 29 /.0029 put
dup 30 /.0030 put
dup 31 /.0031 put
dup 32 /space put
dup 33 /exclam put
dup 34 /quotedbl put
dup 35 /numbersign put
dup 36 /dollar put
dup 37 /percent put
dup 38 /ampersand put
dup 39 /quoteright put
dup 40 /parenleft put
dup 41 /parenright put
dup 42 /asterisk put
dup 43 /plus put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 58 /colon put
dup 59 /semicolon put
dup 60 /less put
dup 61 /equal put
dup 62 /greater put
dup 63 /question put
dup 64 /at put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 74 /J put
dup 75 /K put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 81 /Q put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 86 /V put
dup 87 /W put
dup 88 /X put
dup 89 /Y put
dup 90 /Z put
dup 91 /bracketleft put
dup 92 /backslash put
dup 93 /bracketright put
dup 94 /asciicircum put
dup 95 /underscore put
dup 96 /quoteleft put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
dup 123 /braceleft put
dup 124 /bar put
dup 125 /braceright put
dup 126 /asciitilde put
dup 127 /.0127 put
dup 255 /.0255 put
def
/PaintType 0 def
/FontType 1 def
/FontMatrix [ 0.00100 0 0 0.00100 0 0 ] readonly def
/UniqueID 4777587 def
/FontBBox { -70 -218 1067 811 } readonly def
currentdict end
currentfile eexec
e8dc61728071abd4d5bcd230c4e186dce095a0ca84ffc476adfaa82124268e60d2cc570c
5f52c10ed4a85a71ce8e5bcf26aa13b27d7fce1cc0c72c3b848dd5ffb2d56d06a1920fad
e4ffa3b35336627e9ed1622c1f9652956d4a424488b4c4ffda9936442bbe0ca749700ae9
8a2bf964fad088f0cc64b7c1d76742f25e90e759aca624a321402b1d20863faf5e04b86c
1ae66f450b1586041815e52f13d2ae539f1725d11489898a83a05fe04d6d14bce66e2cb8
55496ec301a39f6baa6b15fa24a8784cf49892cb9e8bea51fd11f0e397c6a333b2c5847d
5e462d636ef939321e7dc93ee095ed9e445080f3fddf181edb4064ee62a5d1c24513b89d
9391add17717ad085385ee658541d295f2c4388d860e9b43d6795ad2936db39c00631ab9
d9ab7d3ee465c587c3f0cebe57f1303e141c054be6e2155085b5111313408e2fe29bb50d
73476e7f85c493785f036941e58d2508de03b62149a2fe3d5467881fa0ad7dd8b6882482
8d764f49cfeca010ab13b12e9b293b0dcd4d31a11982f137cfb808df42a6cd86d2cace68
4a9ffb117608a21913b0f9e97f686169e1840e5f12a7b1e2e5819b3b7d4b26e4af11aaf1
965a9a07ad224f9a05492eca1f9d8ab35a7d1a007231318c7980d97372228866593b028b
12612f32ad277977af13d67198dc0affdb0b118461d4308901b8567900675b6f8ae89158
a5d6e8b7b68c184f95ac17bdc6a8934c8a8784cd7967b9c230f90b7c78bb641130bae6b4
a61958c04d67734e100afd9508af3caeceffdcb2f73bd407c30912228c551d90d6bd6f7b
348599d1ba268e9c599247054f091a620d713105f40d761f4009454d8fafd7b63a6ada83
abbc29ef96a3a64f8aa222c967102b6adc4b4891de400a27ebd4539d0a9648892d2bacb4
558eb1632724d5e6737a13067384f11d4c249f9a092f12c3e6acbf70eaa52608386380ed
c5335fe693d81360913e0d33c6976e2907b3d9a516454eb6ce15811ff3bc684a577f4a07
47c3e030b4088f9e0cba385d1945097b22980b7c7e7b6971617320bdc1ed40900be77456
179e4fde26edf4d1e4600e81a84a786f045f4e59a38196ffbb5ebffcd4026a404b706389
b2b62cf590b268988c0a890a794c1b55bf5fff9597803ae67ebb4308e9ff34e00124e6ad
e7051c1b3623153d43fb356a80863b2afd09f17af98ee4a8d7c15346ec2e500285533997
bd2a39a813fc79f78188b21d045e21da011a1a4245c584257ab317ea32240c7bd12a5c7b
d32c46632190f4224de785893c6d4f7b38e1f430c5d4ab7696c1587856a593ac9a5e0e68
54ffd4bab64134dcd369bc65780b3f93c3601e3c8a7ca479e41cffd7c67bd9b7a259748e
e2760485dc3bba824776cfc52937b5a9fb90ab4c1cba723660b6fa462d64fddfee1ab8ce
bebca57edf24a6400220584f6bcc5e608f5a13cacd7733592abfece3da4f9302113c7a67
00bdb792dd650a7ef30ba5ab5d74e3f9516819a849d677eeacf7b88e159c828a26a530fb
467bdca6c1dab43ff1c7c31540926a52eae94648fc0f633ca6a4d419cd7ba48cbef9102a
04cde508080e67e8803f9ea8ed9933868d1c140a6b64c7facfaded2cd2afbd18766db649
9c6553e177b02a974e98af8c6fd555e881332267717706fb3b290a71644774b77ce2751c
d06dd4899de4f365cc54ed008d27900e88dffca6a90acc488223750691c010bf1865ac74
fa56f906f7b5521a2ea76dbbb3627b1d45a768835169f7db4ca8b1bd455853736d470868
4718522bc0ddf6dae8d09f257e32ce8631231e54e416d639b7595327c7e177072ed02612
604ba8c065de173cf91aaff64215facb9f6238acad3164cdfa92e3d5f9f1b149e8f97ee3
0be40272c55b981a075c019937ae806a7dce1fcc15b1e87fd7902e9d8eb2a5832ac9036f
1dcf667fc9ef212797bbd65477004084ef2590a1903b7b6a1c66ca81d6366da273f341f7
69b403b682f48feb15c2c62ad12319de19de0c55bcfbbdd4b1c097fd6e0eb8069427631e
f239fccdcc04046d39aea998a2d94a6d5e179c5c3f1e2434d1cc3d71836fe1afa6f84062
3a873a42754b11387e5759fd9d7c1b382c8055e62ee2fa8210d3556a324225aa85bbfc94
eb810555095bcdaf6a6e2a44e4745b0c1eab3261ef2af1b5997b6ee2fca7b32e0a2058be
350445a17890806d39f38fc5312bb378c4c2360e531c0cbdeee6175a38600811c4ada619
23afee0b62a92b71cb8d4f0e7851706bedba415f67335807c9097d7721b1908faf7d1100
75ea922f91bff2343cf636b64554a6d8af99ca680c212934bad0dca50817f78bd4c7904d
c63bbd3935249023396594c4966c85c49061c59b0f96d088f18f66731e8337fc0d0be5f2
ceeb3ec1fd5b96879f3587b293545309634b310ba4f038d237af80de16433b579a848efa
dd8783fe63abefd7803d0da6bb13ca120e47b51b094f8bd76fcaff9c1731b87f7fa1eab8
3f27ea245736b20a14a03490ff4395eba54361458efea06d162287ccfb78f0ad4b5d1315
50896dccb27f08aa75efca5ea736bac0ca8ccfc02323109340d88a9676c5d7777d57a015
16beab2a51fda1ee11fccd23ce2f2575aa07e52739c8c261d86252b6ab0a31c8c422083a
bcfac13b7a0bc70f2246f83dfd5b337ef56e0cffb54aae2d7cef0f84519900af862f81bb
25bd0763cab88c352da9d46728308d2d9f7d0ee57e34d0ff37e2c903f90ff34c7b2bb907
3d6a91a329d61c1d96390e5b9fabbc5ec575f019084619bdc8ed1109808145ce6894c1a9
d4d9b895370402e7c98dc8420f18784bcd5be23861eff2cea1e65384b1fc99c44d2e2ed9
57a3d7dd40e5277ff800fbf10a7b6c58d4cfc5a6ff63ca7112482252dc693200eefd0079
7ede16decd2b3d946174b1b914bafd3c0554fe3a601045bea96f824227bbe1acee4fdca1
0120ca1a42bf94492d831ca721963b43a713d0555df6336e7b36c76ff60e5c09d1ef01b3
b8cf81bef5e04780027a40f6b6acfa74c71b32b32bfe923cb57a9de42ad96f21919fb57a
6c039ec55c99ce9855b572bdfdcf76b75aeace79cdab216c85a8ea1aed176d349e5c2fcd
c5d29608daedb908d2bbe01b2ff131ea345c6434c21346fcbb4cd3260aacd1f20edf6c59
1f9e3010fb304c999d84e073e646eff12edcae10ff6431fa7be245bb2fbfc3a365fd8453
65f4589df22b9d7a8be06e01c48bed2d474ec74a1756e95a9155af0ad5deae0ab9a246b3
c988863c7a14711b22b7cca7dc4871d8938a9e6668267498b9563dadda563c3b6814bd3d
dbf27a33ff60403a70f9405e5acaf791ebc80095d0f841d2499f9a760c4fcd6a97b6d38f
9c5a62fc0ec8964abe728aab79ac270b29b65883c9c1411ac7618819241185bf0525e79f
b39aa04289dcefa813b8949f3f6b86f0255054a3198753f7da4dd44c912348db9b0b5e6e
bd014c2209c28afc80b4107833eb701bfd9df0c7d40d0455774a516b6976ed98eace0295
e5f1a03d8f8f287a90fc6cf79bad2ef495a6a0945105867f3ea8b810fdfcc1033fe0ca4b
5c941a95c3454a1aa8768c9941b1f0d1ade5fdb189c4dcffe76c21cf6759e4d4a9d89783
ec730412580bdfd013a2b6a3f7b68feda276c5a0632b2f6aa0fd57321157c933aa5d485b
45da0ae1ee4da565426b164feb6bfcebb93968b5b1e2d5d8b9dc0e5ab04386cc2de9ad6f
51da31bcb8b490e862377ae80dd827f31f434ff178be84502d8cf55aa211fd5fc97071b8
e012c618bb8bd71f03debb5d2a1287f5633699900eff08f89bcbab325903ecdd74f77c04
89cac939aa0653a705d4da12d27ff5518124c63ffba97c89aca77115ef410b9952082d01
d6ba6a638dae01291ca4fd03f2e83e176c52fd7cee44d1c19780d24c632190d9fc0124c6
20bc7cf431720682443e082e16eb62d19d44a9d5006751cfaad04600a5a8b271ab123793
bce96d57cdca346ed2eedf092d9884d6a8fdd6400f25407a017d635e4cabf4aff31a3659
a1fbc5f7bb8b234cc04c06362dde966ab330617f137c1450b023c101ce0454f652abcd19
1347934f09b77ed5a51287e24d41f77e30f12d363afcbb2b1d8e48c2ab5c2b119754dada
7820271b199c34af126f4108195a77f8c72dbe6e49780a2c7506cbeaba1c13513d1c5331
17ac49aabc00e66420baf599847c821344ed96319218409a4a1297be47ce49c40f136efb
f7af607294554277a1e0e1e5f77c118e8d0ff130d3ea3d5b4c196d9eb357998695568518
35daad4ea7f0da6d08a1130ec4588aaa3c9794146ee634e7ab5a435c6538f3b16b301b99
0320dc46f1377fbe82a1211ada87e0f2790c4af6806d603b3292d0eb17f7f8066df1d6bd
9edc591333112ddfb672cb293aff4a722c056479c7f3607163cafe4dc294f77fbcaf6cb7
74ceb9c79c2309d79632443d97dde2ead2b90fecb46cb7b45d8f8d84137ee0a3725f7f19
5d683e2a2140db2f8dd990a972879d100b0c427c54f89e777fc2e26d16cb60a3806c3b53
873bd008a03dfae0bfa41201d625f03f91511438caf695e7438a522f1194cf40084a1758
952803238a3583c334c436c9b8c07a3a095508d570fad0535c006899f4a544ed8a27ed5c
c261d30dc8b0a3381f24ddd801cb931be70dbef09a310ca9288932602ca01bacbcba65f7
1c9de1a8eca4f125acbeec585f02fa815a005857d75871edb268effd4e34b1930f8aa549
a40e583d66c427b05d6d8faf8e6d332f0367fb0869c9d3ad0b3bbe7c726ac695e9401b2d
6f010a1136ab686447c97291fa0c81face3739b71b492b1755ae09beb77989a71d6854d0
fdaa144ece816caf958104b2ca0dd4578d733a2bd46eb45b96a3bfef4e4dad3ddea43e4c
38c4f7538d9b086da48912b099e253910414df47ba2116700617ff60e6ad10ef2abdfd31
bbe2bd6091abcfdba10dd716fd9f051a95c6b0429a5d7a345818c4812acad3175cc7fb04
998c462bf941c7c3a2d2eafaf19c98855e668a48c3ab062cd6ee17f3e85a218e434d47be
b1f1aa39286ceffa9ed5bd956424d3fbce532136ce5e0a32cd6d1c6fe21b7ae0d939de6f
d5fc9751bb39242aeba76762a99c7a57da7b856b3ed48f43180f26ab7491224f2d34b6fd
5889ee7745e4143ef45b219bb00b7a3e27a8449f3009a8f10f5497b96906f2eb051f8c3f
7e01630001f2cb91d9e71d73d29b9fd843358bd57f1c090e4a8c0747744f643c7d0f5767
c3ab4b5ca5e9a011ce020573af8ceae53c35eed08edbd3eb569f85f82be4f4ce0e49af42
2204a55145d9c8b9e65035bb0aa3b9aefaaa1c1d754566631df6f020187f58c497c7bd63
94475266fe9b797c0e0e1feeaef50421c149b111caea27ae444f2db35383c31cb1c8cf46
03baee7fd3c25a2df6266262d04f249d4a3c92ad82d13ca1f0ee386b728f3bf2633aae56
c21110926942de82d3d3a38253dd699f2f9b28a29693f073a47e73f7795b4f62ec4d856a
7d0f81042b46932ae4b53f06974289437ad8ffb058db0b1a6271a247c4245bdb1a6d8de7
9a0361da63e7ebba3c27adbf54c92850b9da575ca18061049e39306fa2871e2b75ed905e
74ca46a7966e227f5baa0a17f0e5f3b3453ededc42e009a8d43911cbd724eb4360a7adef
45a1a8161239692a96bde0609d3d05953f3a87d9c83d1b3e47ff185022119757ffa9029d
973bf7840a502490739c9c5b2be9550ba1eaaaba3e0219b01ac6a404d14ac6dac84d7512
b67083af952a26971e65b663db625a520263da619ae014d25db27c088317afd00101d505
bb0efa80198744c99dd68801bb4b86b4a1b72b9df78cafa4b580ceacf8780efded09104c
af0fb9b9c64df5498f82cee1f7c65421858aa80b92feeb7aaab5998a920dd3a8bc4c48de
4f71f04ae8605ca4ed5825f30592fb23253b8c82e9f455e1b077a310644fcda8820ae5dc
3a5f218f482833b69714d385d373d79896b79257899c59526be995a1278d0fc9265cc524
dea487f6e44d70566c07956a8b2b981359d8ec4a7dbc1b441f6c4b35586f16e47895f595
e054e6648d97e6ee775cce5bd05485163b2ccc0b0687acb19846a5eab0aa9f4464c11b64
c35307ca0db5acd15f524dbec0658c1d48ae998afa7537132172cfce18c67774a352f5e5
ee42b55f3018ecd2334141c5f04a040a140f5ec06a587e32fb6bd1339513fa773e4f17f0
e91c6a505992583f9d8ccd8c04db0fbda1b4c7c415a1be7707b347d05420b68bc9424031
42d9ddbc69023490659ba2a8570f67fff1f199eae812b7b6fd4a187f9f5bc9b4029822d5
0ada90c4e0724ad982463af0f69b46996e07a74dc655c36af175cc537831c97cbe1a7784
2da1aac96491a4d18d473843cd3977f8629cf02b8daa9e2e2e2f38b987115c147f5339f8
914c2dcfe3f59c42e91ade97b3b6045b2c82d621d165fd18bc894bea22d689a468e1e2b6
c20c5b1caea28724d2a88691a55e84a6cdd32cad626b4fa7eed15e0ce17040bbd172ccd7
1c87950a76599b54e28a1e821f816307da9f6156a764fb2b706fe7da5e59a6edc08f470f
0d6d3e35a598a368e7e7e402e613870a96b38a33a796dde1c07d6f3b1ae2b4b5fb10188f
1e6c83f535890e309c2dfdbf7fd2b6e8ead4a1317ab602a84e8b6d9a62b7c16bd386b317
aaebd9d8c97e09240183e545636d67243bb80b776aeb11c11e8c804a97024447ececf2a5
27184a5cbad62cd05eb7c5444b4d6c86f061aaea619115dfd59d7112d94ef7e4877579ff
651f617a744a903332e3c8c444d849617c1e43fa9289956fb54ea987ae92322553e1b5b1
8b9ff4743a8705a6be3320539aa921b8fd0fe5dcbc1ee14427a01e81a3639dd720802180
070243ff6e399ba1e62975d3fb25778706b8d00e9ca01b56d9576a6bcd43bab6499eae52
18972093e53ce9e52fc5e8c0030b2704c02796a8673e323bd4f28dac8f14ba8ce7b1e66a
35374fcf0a92183bc4ae280d1af380a327506a4a3c39d768bc089878f297a555feed9c32
df287e4ec886975155f1992162bb694cba1a89be169e5b03765572c225e94d30f2405537
69820a9d8e59ee53c89ee90d6dce99762ed385a940b4bdec41fc8b4e01302fbe49ef5ebd
c8668c88589d7cf39f04b075bc9e256089d86a6afaa40ce6d9a40811dc70ef3d25680bcc
932bd3fced9348e15f3aab1e9ed8bf9ebfe9519a0b2b762263a6860aa809c4c095fbd1c2
58d475c4ce5610c4c5e8a78340155ed7030dacd6c7e216dc09587acf0e8b33642e0f1773
bddfc94796ece64cb6a9f63dd9b910ec0372de2a3361588fd6897744ec764fcd7c3a6f52
8a8d75c6e786998e7123e8e162e5fdd8b91fcd05c4288acc1cf65709dccbdda86ce289bc
dd509de774d5c7965b105ed50363181cb62ad65f88df818d1532ad5260016a8531133b3d
dc73d61f46770fbf3434f481b4ded9fb5e7935231c775c38844e5f7688b760ee9ee2f8e0
9727d8fd59298bccdb6092683ae438e15e204ad83c50018b68c4482711f30772e22551ff
b4dcead530e8f637a999c067626858bef88e116750f7151f0e73b420d96e1b91bb37f499
25cde17f5cc32cb375a823e1ce42b0ea46d193009cbe9ab0f79fbbe784ea513c3e0afe8e
6e8d61d4ec49c814dc44924ebd12956880f5bb8917fe364cc49851eb08a9256383f7a2d7
923b6782795df2499d5bec40fa0b5e33830b89f6931a323f664c1de4624c72255482d4d3
ef89351cf7f047141c0da63610399efe25794237745bb09dd188d7e6af7a6bbfe844657d
25fd9081c6ed2e53cf6042b61d7b4243a2ef836cf50faf2b169547c45fee9cca67837d34
474ab655474871f274328869b7ff9f9c1b674799ac6ea2c81399e84691ddd2f5201ed98f
a6d18dc34e5db256cfcb906083751fb77da35e2ae43316a099317e3e2a7b9bcff76e8409
773ce374322f60f9330bc042ad8081b4f12c12a4faafa2c44f6dc5e5a58ba7777b56bdf6
aac23a6877681de714e8af402ac72c51c21e247dee56381229ed01a4cb92a2f210e5ac50
3c651fe466c9dcb036a621ecf759509d990b607e5d922828ed72c16626942c48e4b61076
acec70651864ac31c57466da0d3c4ed01f156248fafc60f67b97d34fe5d6d47f8fe95ec9
3606809764de17ac529cd2abfd1ff663407d1ad9f4ff216d8d6f89dd6ff019a92b2d1c55
0ab9f3a4f7d17fd340054e54a4aea3639dc49c6cf0a7a85551619ba2d74f2b575765d329
b6594b84d9481e036c3d500f7d52e4f86c0484a70c1a86fe311d216d1a74de28eb207653
3692ba389e3f688672a991a90b4a3a4b1a66bf4b2d2ca151c469f292209fb46569e8ea43
efa4a2dec0bc10b25722fb888e1e27ed17c1b36f2c1a521f5f7ccfccb8391bf4c62fc225
d052a1e42f4f3f91f94f94a545c315e7542e3e437af16091f84ce5e3fa0a57030e70f97c
da98bb5f9e8c357bc70bbf6c2b1896e68639bd531ecac3c331c6681abb28dd33d2e6bf51
ade077ac7ba9cfa4d9dd994d229d4defd0bae59f19dd958b9988fc8f7d6359d7b7e2a7ef
3a819f307ce879c59165c590bde856a799c9523d68d5055e2c6bf90fdae7d710c9e94116
7af32a2360ebbb8f090f82317ae23ccf346801920c9806c63ca8e8bab1f398ea67e23015
5160ebf933d6b8b534addf5664613b7ea33b80c165bc1d1a5bf636c2253f30ff5aabcde4
c51a9076658cae59de89d6b9b5c997df45e9c86cec8927336339e02999d658df12b13a57
f6c6c9b2ec86c6abb8979d84197a070c83a9c1b9c8aed726e0f9bd467c936b58c2571a7f
02332593b56a31d798c40f2b4df2137e68c2c0635c3eeba1451a0ccea3e8e7f8ba74119b
5e2b1749dd00900d475e42119a2de928f7455efa17fd8dc8d23686f7c3828003a98d410a
ee27bc826bf510a1cae30de5677ea8792e4338bb5507f459bb722bbc53fbec1ac930ddae
4b49a455146f37c762f878120615c4d52617bf263f47b0db5f187a561e92ef7dadaf6fec
83c4e4138283434b91d0663673c40c740c6fc8551d126f18560610a6ff9359add2ef1547
f2e44cbc9f7445fa2c0cfad2aadb2bb85f853393007f9b6d7f4df5b8155cee4c02efa40b
b1909e262982cd435c5988b59b82251011696f2c0820e74870446aac8f062ea590e2a330
51602c67ff66a79b08e3cc29bab0da512fdaaa19c05f567b489b8388ad581f7e1a117359
688c68e997e4dca9bf6d94a22a2a8c40c637028e6e6b8a42158df47d29ad5f426d8d361f
74ce115df1993c9973d8232c05216bd088f28a85ef5a19590f232a660f9702c6e34cb81c
3e6fa61a819d7f62e208f8c41f9eff97ae4ddf04c5c4e59c1b61ff7e0a515c3bbf7ff171
e54e6a335dbf607d9b737512640384f29742d5a2e379ef0e4e35be5831ff7b6f4e672b00
b442968c329034c3e35f82750201cf31beca66fd35987b70435e93fb8ac5ac798e3479a1
12c18111b1d59ce8ae503a06c7186f79491852f6f7c5fbba81015aa8ffa7859d354a85c8
33aaa89d4d0b7f36c49ac80adc22dd57849ee776ac6e4d99367cdfa4d162c4bb0ef22de2
93e666344d60038d3e7eb4de93914b071e00c62e5f15a33cc7f1ac9f919d29ddada4222c
73f9d8f00d9eadefc96b7439d9fd338d2e6626a0bdeaf87482b2d12bfce4b17da57820fe
19d6387be844593a24c56b81d8d5696f05b4f169ae2954c2b4d7ac9f4b65f4dc6a9092ce
3949f94e7eb7888b68daee459ca46095cd2b17c74d33e5764fb31e2af2bac224e6cc21d2
ed2937fbcbee75b1887131de47a8838b9c68d7404784ae3305235b6a223d3fa81f9dcad5
8bc699f932e6d86869a14cd40a246cd8df61f24106de20953d1f4d3ed56b47a38bca2dbb
e523698893431f4e9b6d9254ee1cd7b4b9725a0f2914f57072ba47264d52634827321e05
3cf3d7c00d3a738fe27721d1b9265220bb849659dcca55100f79088c654e16377e232d95
2483d93c679f5a050e77fa6fe03ef17f1b2c9a7f00ce333d1a9fbae765f32f4a46f3f9c3
16456f94e7f167d4a03da14fdc7836682c326fda953bf35c32f1dbc7256be7c3b8a680e4
abc8752ff83c7c08be91f6b51f686e1686504be8c81b141ee28d3227654e185cc714e8aa
603845b3d1bce264c53101695be33f01fb2eace69fa33bac2edfef445ca2454809a93808
983872c5bb425c93fb9bd16c78157d2d1e9731c1bd4c2792fea064d401f3b8d8f2b8f1c5
4321fd0be4b6cd61cc59a7ac42e6a4046df61efe62b09a6efaeff424cb17145084178033
2115f260d98fe0f8e65309c5d3e994cf2d9c71b29fcf7e3193aef6c6a030a2aefd0cb865
da34a1d200b22a14b23415aef01423145a55d076daeaf91db14ad988161c0c23922d02bc
52093a2a222e1327472c75683631e65918dcd031db97afb529e60d8ea9c6e1436f24fb10
81bb2b45e275732a4143154ead262b239c42bbc9c5e128d922143415d9b2d04c942e3d89
27a1381786afc21eeaa68ce3a0678e94fbc83bfafb9d2c3c7da880bea16c0b3eda5bbe8e
6fdd3d678808f9e0f2c7fc02abf66c8bbc1222ab41c500c71afb4ddc113596a80941e6da
7bfe038c71c70f775c6cccbc71d80e0440a8aa549fd63e184610df9c6b73cbb659dff35f
e7123de7d023b2ee21e254d6fba93c4e7c26309e56c3e372c0503189a00a095bfb106264
d2992f9ea25e98e626aee4caef492d0773557305fbf234017ffae67290f87d444912a88b
a2398b7be82db63b1c8ae4ccff743325c1ee6bff29994d8524094f9aa865b9d33f48dbc8
1c451b81d95215dae0656d7efcae1da5ca9288cd488230abd787c18167bc87fe1c04a32a
7190a8a421f00e405fd06a72053e4e1976736da92b7aa787f3bf5fef7d4f73271762215c
4c9897c716bbff2b02c37975d57a8519d6e89bf7487b197223f2f77428aef24a440fdcae
ee9404c1b37cf27970a8d72b9e5d27bae93bcb8d042de0a82fb6c0bd252f1809d9c26287
48b3de9374ac3aa64ba56cc34e7f8540a5980837ae69fcbda163803e01a09eebb247b13e
8a2c4bca62de14eab9f05dc4cfa00644d4e66347e3caae2b9212a522753e43be9ae6b0ae
7c646142461c92ce2d192436474a3220c4b215e8a08f70b1be767941f42ef0e0f6e5b081
c06dfa65deb45e3f87962153a749017078afbcef5b197d7b7736b468184b6c0e5a599efc
35dac4b57c87a939ac6321b456500190a4e71c730d04bd293c0e349792cba90440c2fb7a
cb983b83a84bfc92eaf3632eec9258016319b9438be6f40ac5a41389b6c7b5f874250ac6
f1d5bf80d3f7d2e7f1413e74f6015dce65a1483d4fd8d1f1b5c35409f3399c29ffb17a23
6d65d45b709681426e37af98a08b78a1ad9fc3b35348a7d307397d73a190d5bbedb4fbaf
bd59dbae17bc6f1927a9693ef640e48fae69ed1e69692b4dd8837be928f19cd0251bd931
c5b791bae752f854de3f9f43eaf8abe96615ca4ef4615f580a1522905b195e12b5bcb364
b376774f2826a4af3e18bdd5a2a7949a501a037a8d9be1c288310c9e62f59d267e6f6b1e
b7be5a868032bd17582d86c123a8038a6c4df984c6108b4b8565cb5544bd925082a3f21b
99ad2f82e5bb3c442f671c8b0beff880788b413b24b33cd1ebff9c91ee58e9c880f4a354
adf08e8e2656f84ac44ae141b10e66be32efd0bf3a4882dd6d47c02541ad9cae24fad2ca
2aaecee00749afb404fcfd0b1be25f062ec4c6b7bd3c2dc8011712ac9b5e683764312834
a883acf830fac2669980faa89f875429a6ca9db2671e249222a7ebc5394903191bd84e9d
42969650907dc1ad91c7576dcf18f5cff5cb78bf91302294b17e9196b558f8f0d1a42aea
d251b4863f67cde06a38393d378aa7466fcb91057810df14d94442f91d3047c29bf7604c
5a93fb2414b7f133ddf689f7537b5293aa05b71b44eab858b2e1d778ee8195476210cfdf
1e2944cf398bdc5b517a118e292cccb024a0eb6214d5584664cc76079d1b33c7f91848b7
e433dc01b121e1d25d6642308fba17c6d9379933459587d96990041848ca35080e1700f5
ffa3ef3e183be5cf6473f461daa02b3ee341f62edde629ebb50adc0b590664a81f05791e
eaf687d8101672ce6aac726ce9859d90980565f5ccbdaa2f41589131fef64a3a166f0303
840f037b7099d873683b4b5992d042c37fc0618705252c7431eb198601ce0859b5f10851
486a74ad02c4acad16ab5bc6272678240cd04763a642ff24de37de715d23430d5a20c146
022fc4df021f16b2ef93f8740ce31bfb368659695dc62feff29ae0b20265d3fff91ca07a
12e5441bd1a8f27c05d53c7078f78b9bd60e31c7b3d0296498f7105d672c734590ae45e7
c8b31a8004d2047e947275dbc62ef04553745840710246bea72bea9b85e562fc3bbecef8
5a9ed15b95aa1347cf13f69ff72ac6c5681be3b0a7c2ae98e8a7b8c02a547476d79f664e
e3db83df980e7fc826d29e18f41c59e17e9a7692f30d8cb5930064c7444ed975eee3d2d6
b7a53c56fd3ac7d1bd466f9de48cc1f4a6df4a0f5b559909ce3a82123d532af31fafca1b
dec445bd45ecfbf8724bfbcfb247e9d44669996485ec99809c8faef01be680f852dfc10b
d7fdfc11104626a5fb828745145e6dba33496a1587a9989d16bcf70a423a86c54d599bb0
510e110129d654643ba1b8a73701f0c5cb491fd7bb7d56439994e2f546d7d159824c7ad1
ca1f6b3d301bd99fadb485a585a76b9bc111830611dccdce8badf9c748e3fe1a10077af1
a0cb026c1a813ff9bc0a98762fa2a0a134f4b2bc37c4845ca1b6e7d655ce271356989960
67b5a3e14cc6e4ae00a7d209e48a3eb71fec755a0d7344d0620a192887525726d4e1a661
21e5316156dfa4ce1986423cdd279a3191debb5600f28f08e5d179659ad7b3031438ec73
435c09e4f1053f4822ec093a56061d9ef3d6d8e3c4f598d5f76cedf2a69fc2aa70d87107
856c05dcba7eb213169e92a7df93223a5c6882568cb48540f23e879671e650bc50940bc1
457ea6e23188625247789b6f104d85f1d1fe7cd0d2d0c60e2cfde7d5effda172fb6b4a10
04a43f7b458dd3a35f443dcc1a689706746177f7c088a8a03110fea60aaf4834659eeeeb
5f59f8660755b34b6cf35403d982e319e155e93d59f71cc3965dd3c161baf1da3434a6c0
8ce50e86227f7abfef659e676e4a478577c6ec5434f635dac4b95258655e1bd5c1747104
10df6e135c54dbc8c2077110d9dd59e3c6dcf51d8e52802d80975b4fb070e0762ff80dc7
df572dae0b8e8c1ee95606b19afe0f5d0516b985ab2be7cfb64087fd1a1c6ef00abb2be5
91ff47ac4d7464a9d1eade48b05ceb7010eb6821e9a6853a4265129854bf9ba1487eaed8
0ced320ef9fcd62e969e54eff009798a0d4a9ece9acf002c6eb6e5d57db36bbc1a442c19
ec6cb8b34d93ba415ac7eb61b2c141aef37ff6b432b002f0d6c063ff6eba3b38f25ba363
2556d2ab54298e00cec219f8ddebe5cce53d0cb72acb1fec356a5f5560ed359b2af5df88
7af22b1ef2174bcbc8bbefc12a907009d2bf9dffba76b5ae635aed7ab88bf2672e03db36
5ea764e9a02e446a0f3549a9cf23643a2eb40362eedc7cacfe669392d579eed099a77971
a8cfbbffd946ae059df7c5c62dc9e0c28d6ed8ddea501d7b5f04f92d77d6c4e21f231991
853a8442bfe22dc71f4f346a07a0f30a013bd34f8699582aea9f626e522ae3b361042e97
f2aaacbc2403b180cb099971858f2c35a2df4c9f5503c686cf62df20b10bb79c49d59e40
8ed888245252a45767f964dbb635b011d0481d92e3a2bb3e4093634eac180148d3a5b0dc
42aae397617990bb86266f3ee28a372cfe8e78f05e8c43a69de617afd2f75a2e63280e45
0b1b2b0927156d3186241f77be54cf2680bbb1f9f0ce0768de2c75f875eaca6fbddb5ea1
5bdd294fa242b260030e54c894c8fdb4f7a9846770ccf31a93ab114a08f02aad30be332f
f486e010305c2b47f55a61e1fd1657dc0c264f762cc93f933789f199c97bd9c2c296ddbb
19f1534fbe3a415986c4b80a35dbb5c186f13ddedec84bf78263e2c22208e41d481a7dbc
634fbeab249e49801c9e4f80c359bacb89bd71acba121e1547f2273846a6e2418fb36e46
c9f0eb3479738f2a2ae3ab2c60f7dd13635e5e186d2d62738a5f3a72752b115d537495a2
b3111b3a0af89cc7fd49295adc88febb531850e05dd63c954c31f7618fd6870793990784
536733f0b6052a0375a67338d00b30216539dbd65cdaee156b161a13685ace4db20fe266
9b2ccf9d8a889e1f8ab17b7ddaebc1ce636ef43f71421417904481751d1376d1ebe17de5
be0046ce9f9c57f8a06b9c2d1002dcda6067b0d0174b35e4ec44cf85b1279c7a16c015ac
d15790ceeeeca856165e918651e437e4d8d255db4fcd6d370355a2f7c902da6f627cade3
a3f1744750017602647eb8b999211762342a86fe3a0d784e4b3c130c96d2e1a716bf17a8
869ce7282fdd9eed95bee7c363ec04ba00d084d5a4ea2e132eb5d58ad867145e7683daf1
5cca9c45f44bc81dbb081237d8138c213f11e7452db7933f7e4941fec8f48b0003440937
ec8ce979b50322c337e81c03f69a1181453fd00cbb6015e4b4fd2aab2be70b647fed7881
4c3392d065fa47b32066b7b2cf7112c46bfc086b3a0a28cd0dd443dadc3e6755f2a06888
ca31bbdd2780023c99722014765616fa9f2830fcee417418b73201d3036e3c67b1167b63
01b122f632ae2c583f229a26ef2547cd0b709799bdcec9f08fcc97a695cd5c5d0d178876
41c956a06b04ae8ec0c04b42693604de3127b76a3e6e97e24d3579021c8cd911e8f71b3a
7d05c722f4f82083b85b22f2c64f437134e72e8304d1dc9d732220b69a8f2e84cfd60875
621d46330702f4ff1c0db40edeab89c2d9587ec57370e07fe5e147cef5ec1239168017cd
a0278ae421b281fcfabb9fa32f6702d16ec062ab678ba0b68f7540201891718b862ba124
b69c79b2718504d82b172c13a6ad8694cc3c02895dce27e4e141c4515af85e0d7b715b98
444e85cca16c0a69cfd7d6013a6ac0baab396e0114b4a8f9a6744c8af3fd19c5fb0eeb63
e786168dac45ec8017105b4001eb0ff9f36d263d5efcebcc225f22ec60b61d20d5ef7109
978b7c0f9c74aa2a4f3300b154758914fb03c7d973bf781ceb8047dfb34ba568c7898040
868196e07268db6727e6e6b46028976cd3e8392b7ee345b5e929fae267b49392a11938b6
5df8780ed1b86473b4b4f89ee6966d676ac61f57e2adca08c325ff6d5787f711450fca1c
5815a74f32bc77f5e87332d2a5eabcf0de0c71bac03bd08977752d975ac417d37758514c
1056bba8a7278d3b2281c5e7de08ca8bd8dfdcdb6f32a1f92ba70a891879e7e08ebcff74
72641b848a58df43109e3e703ad7f8d114b3e483376540e8e55028355ec89ae9a5e0a1c9
eeb10573b6d0a2d8b1e11856d5459b25e26af886f49c710878f0c0cbba9dcb6f2fcfb7fd
5748109af6e302d806c4aaed6c849c78c270c75aed4b00174439612e8b234eeef85f219f
d847b1f2b6eacf32ca8bc453ce99d30ee29a4ae0fc4652c1c729e4e65efd6dc476cfc8f7
780cd6bc3eaa1426182a4493e792a2e6aae481d602298927348a5753463563b4cca90ded
debde166eaacc6637c5fb9cfcf11340fc17b9cbc8e09053e989c232c1d066e27dfa6abc3
59a2f7c12c2b000dc56ddd3641ae65bc0817ac30a80daeeb865b6bbf4f8a6dd701e6e3bf
6391c1a4ae0559998e131f46d6670ff59b57f062c8a3a8f2fb5fe7a00160f73ce78488ee
31124b343d141b458c6ef390aa696fc61297b5531e152ac15c3b24c0b0d54c50adabb3db
9422c5fecd06ef7bd4586c48474c7191567b856d8d618b35b4386305a9a051bfd57485f2
9881fd212d126ad879034bc1a7981025c982d845a9586659c7f19ef1afa7589d6cb04c94
7870ab1427735807474ffabd7066395ca840dfaa83cd80bb171b280cb485bd4daa951b7c
1b5e24f23e6e16045fedf9aedde2eab608b9baaaae4057bd39ec34cf97abc029daa8dbd8
d9cff5b46cf9d52b2791862ba1985497196f32c3c8f3b820e521809b29f1a8d324626fa5
4b9faf76dd63e62a3d5439fe9cb3bcdb540deed770c140f3a96b8ac894e23f936ed8de30
115fb5ffc497f929fa74ba0c4d405457dc50c9d23d7aa25f594d1132d8f852f802073c8f
5b83966572f3618b7a422edfc3259eeb7b39deb9ec1b33f0fb3fce25b86e6b7d7f39aae2
324cc9033f3a7004d568ae12248b04c3c03b1c1e2f7b0699105348d670ec3df381186212
ebc72a050e94fc6cedf68b9a23fd704ef68ccd70a75ed50fb959d326a2713d78f406a469
3fbf587ba3cd0fbb13139c4eafe6f5d044dbbca79498efc891d87b90dda26e6e872b2d4d
c3b1a20944bc78373b8dca47441362d1d4514d6b78bad07059d6674f7ef904ef39630da6
1d89f8b4ee509dea325cf2559b674512f4d39b5c6d2f7cf2d633b21a844d8f7ea17b0018
17f9c58f2f1be86b06a57aadd2634540fb4be201e1354ca9476eebafa8c4d7173a8c78b3
d988211587237c462d14b5b24826bc250836c01e72704b7f4c03e5d8eb3e655e91448eed
57ef2e022b07b7d8aac2fff4a7c7423956bca5407196e6aea0bc7de2e526983355868af8
9a0d92da9273246d93ca8283d354985d1ddca7fbcd504ae8ba913cbcd946c966da41c3b2
221d4a9955861fa5bf0e2866fa3cb5cc5d17cbc13e0c149710ff3d76ddd18242b263b656
3cea201db1500919f1fad53728eeaf9dbe1e961787590c91aa8a83fcd766c75a6893e719
0e6e099df50902611bcc72a7eeb69e039d789cb397c768c296d806bccd95b32163883f48
ed28ba821316d6b53acf3be2cdffd5f9d11b351f4733d878f3b4849d1731a479e072fc3f
248d8078a3a9c9960bd625fdc752c518a4179092ddf2a0014cababf6e29cf2453d45b44f
e9bfd4eb68b2ce8c829a0bddb2b5710bcdafc8955e6a8074289348588d532c28764a3b09
b3a3615be31de1ced86ca0750a4dca3487a736322dc405e5997366b5319cb9357f8b2348
f589587c331fa0db115b253d038c6876429c93cc0247f173fbdaffa89e397e29079e6cfc
3dd7cd2e3344ffd0f01fbab29fbf2c27fd8852716a83ed161ffdaf8c540e6fd1552b04a1
576bb8dd504437633d5b89e416b158696e2d659cb2c7f962c0e577eb696d64fbf15a3336
3c7da9b5af1b9ae78e6b2b8761684ccbcca8fac18fafa55f94400e970fe7ce97f0da3051
e01b8f088dc1ef8378a9df9d1a67252781d2b73f23eeca1b490fef02a59239b72d8778f4
39e9c8e0a888d4a6e6b6c2a24088c30fcfdcb7b772793959fc903ec39d5f709b25855d6d
2971e729510ff813e7f4cd5a48ce858a101f1538b5210f744d7d0b40997d8fffe14c1689
03c66cead45c47123759f5b9ee960df1aded97a273bd9421cdc0694d224067d44cf19dd3
c255873259ac72338b458149bcfd7e4f89f26daf8378876397d31b3d6288bd4fafdcddcb
ef434e7523698cfe5aa49c207e1123101703f83e3564ef57b1df3f5e85f6fb3a3191af6d
2104b140b309a6abaab4e9b7d6e202eb7318a4d43adba8ec52d5695f507826cc64f3efe4
dc9541c85f4088ac3601fec5769be5a624858907035d6c57abdd8fb1089c29f5d92dd4a6
baa64ce39ee3fe1b128c959d225685d7e883c1a4139cdf18f9bf04386f355383e07d0bc6
5457d56494456ceeee18763ad99305a6ecb23925947f3bf43a7a7dfa2cef6239ada207a4
b74966c260f8b9229fc8dde5a5895ce563a446a71af58e6083f104dce19a20364627add3
0128a4ce27f4262c020a8415b5db0e256af3913a08d0a834dcf00181ecebfd17b933e562
c9235476a57ecfe5a3a7610c20d835de7f90becdab3aea841376ec1cff336f457a4ec033
b7907f6a654525895978a34427f39d2ce8335747159155cd75123d557dcd1c190de391d1
5f5a40271d5ccd646c2b3f3abac61a375825952d690c1aa8f70d28c259ef3be5bca76697
57400d5c696c4ec94cc074b74e2cfdd726adccf76024de84917dd1764621fab127b65205
16d0427678eb5570598c79164c3978a9e8a7e929976dd63c951996463c9df5128949f2b3
f622c89ca1251775850e39736f46ec84d20ad5b63bba16457077c4ba740314bbcc0df381
faed6eb2e0d5e11df1da5cd6a6f0992a9b853cf81a8405a54bd5809cf1afaa4148081b12
6e3f0dbddf41de2a6afbca95b64e8cb070aef98836d59635145087879c3af93415fa3ac9
13795f22ee8310f8cd14ac03e7d88c18a225c424b4bc093db7130b126f63fbd1ce08d0aa
94c95845a90013b46330dc0771c8376b201fe48261a6d6b447ac513181510a91e00340b4
d11de30326de26522c24f0af6c99c0a8afdac4c984b69f4405d7d6467a617387e7cfc34f
c3dc744178f5329e27e645deadfeea16e91b89e08b577fab22a97baae26882a9ff39354b
18041d991ea04ee80dbd349c1a46c791ea3e54372c0306073729aafabaec455bbb1f06e7
b84a47d1de8930e7e5cbc6716dcfcfe0de239051ae41cf0a9ed34848bf1ca87b2e39900e
64dda44bc2be508841d30724a6bb5a693ae4fb8fc1e9f7dc6b08a7580c5b4f5fb3f876c6
faae5ae444911034dbfe36f1340cb113b824884252744b13d4a0245d87c460a433c4a97e
8318217add4e44998847203bb3fae5b2d265d957a05f3b3471065ccdd2a8c66e885718d6
c85987bdb20483b4afabeda8bba1da3c64dd936606eb2b3c31791ee7d65bfcb02f3b295a
4c8311ce4bf6be53f9d081ecbcedb0339641cfe962f6c57b9481be62910ca5a2020d7373
ec272e70f43986b0a5b5f9563d06e91e9b8001507d5c64de243a05d8bc9ff83da28a3924
3247ca6f87a3bc77560b8f1e09bda6c639b92bedbfcc51bab101c12b1b480fba887986e7
12ddac7694a64d09e19fc0c693019df4cd131e2a10aa0ee4ec7fab1e7760fed1d5ee1ff1
307c6d0cd1354438a12a5bb1f284188c471c6ae8c49a3b1d9d21ef8c5e092de7ee14cba7
80f0c629cc94c6f80e797934dcfcadd63849c6ed9e138d91c7a285d8b0a1661ea5065064
cbaa0c66cb14fa87eb4c70f1984ce8bd5fd42c1c2ff50d89dd6e32d67dca542e99a3ecba
618b53f1e13210e5a21493cb37dd38e6ceec8166562d70cc98f0a206f8efefe4d58a4a56
cbc829d77d06018406b521929eceee66ba95301bec530e7ab2a8db8af8ee67fcb7dc05b3
052a488ded9a8306568c45ac79802087b6dcb02b08f2f2983e9b5ac7f4668a57e6173a42
72adbd100d57d11a772b59d494ad237b66559f5cb7d0c39c33b730b65f2e11440f027557
e70140b7de6d305bd0f634973400d1a46baea1d3f52d3ac5a5a147175eb0663f4b7a4339
9fe82425abb7a02384408f215f63a90aba2643b6085572ec443a324c5f3901886cec672f
ed2cf831b72c73750418f8fe6a564354e0a5b8cde8086c590071925c4dd316c1eae8e63d
c6ba28d2abfe2533db264be33449f8a6ef8f811d3de0e095c66c62b5239c63841566929e
dc373413fbf19c370323cb27c36c0d5acef31bc51bbde591c5ff0ce4b82deafffcfb2d8b
74693dc9accb8d402b4f3a4b004be87df33c5cdc2203561a96105bd02e9b49fc76f8f13c
970c94c218f8b17a5c6e248fea7e3e03d6d5c72ea945adb15000a4c728ff15ae37ed8c52
3fada18a27de70d145e75dfa8a771a06a5d20a8ef62610109c13314d572180d7ea9b99af
acd1e0fc3703394d0c24588c65aeb8ec14ca25c8f614e59b08191bd3bd0e73047014a5bc
5f083dbd537076976fdc3ac163ad106e6c7cd6cd2814cbcea9cb1300b581081254c2f8c3
dca68663335049338dfa889ced4b6fb3ec8488aecc19de2b8f4db8b2c97f2c1e8ed74429
f05d102463a8b9fa407c5e300c63d44dde849fed1409627ed5dd1b22dbd35772a764ea42
e8a76f5dee17551d6ee236b0257d9c5dc021e0a60e9a39de91693e29e9256a9759a3b574
160a9803c4d8f7c661470cab3d51e921d91e0b7c7398a9d5d442d3f02678b9b7c5bace15
2c9a8df3c839612c4c24cab6da9f517669125607974c424e9bd80852849c526d42031b05
88e148e6aaaf1529930241a9d4ad8df7394e082eb487f742a727c37c94e0063d13582fa2
ab7725f05fadfb8dbde4280358ababaa15b8dbdc3423fef4db680a68236270abdffce5ca
5c20945f7070b7ec489cd825723a039cd08e609f0b01aaa77886538edf37bbfd739ab8b9
b91c7a8020cb2d0928fc1c5bf673ddcc2085859550536970aa8626187c189f252fde5373
7e0eb7579904f42021748d76e093b685117cb250ca588f645079d34ed87524574f5fbd9f
b4dfb618e7ef56a1d1bc6a850b70f1d60fcf80c0b7c56e0cb53a14a8fbfe0ff3b02906e1
dcf3f75ae093d1aa63728defd63f3ee13cbd6793d29b1baa836ba19a0d3423de29009761
9759c2a69558a8ee9f32c5b0fbe321b3429b086be4f9241cf6136d033da780ae444b396d
ae91c22e4f6c272a39438a0447372eb8b2aca7a63c3c7444c5d0a3931552eab7fda906f7
289a007e534c6f6b085028b7cbed4e039616be054837010c240b08bfeaa3ac1dcd35f94f
42070dc001766158f7abbbc9fcd5595a34c2b6e9550ad5ea8fda05206dbd2f113a461386
9cb3943eb614f3ca6712fd4ac980f6d6dba7f2f30aad713e5548f327ed94ec0c7e0c6589
ab57bfe32d24227f8ffb6c05e41b246a9722a31fb8401e30b8d1acc306848e880a0ecf9c
c448e4ec7c5bdd784840ae297d5b60add7c88dcaefb58b4734380406e8d0ae5d9bd3ecbd
2e88dddca0e75f7112b183eccf5846c81ed497ab2b06a9f64a391edef29583d6035ec189
e916d749eb29920aefa815ae153879f0e9ba72938463de15cf86ea8ff9961e77ffbe33d3
b42cdff8f5781d5c36b582b87dae20ee6da5f2d974f7cad802784cc76ea593e4626c9b36
e5e42be499a6c99c38e2cb8002ce1d23bf6523064fe4d715f64e8afc1a4a6506ec5af00b
e920dd79bdb26de33126c75d8658464b716a3808c5555544232c69e0e3aad358d3c0e6f7
b9a248e9d734912c851db77bafca5e8d868ba177225d1a63d5a021cf528e18377365b227
3976266e606d33003a8360d91305d88723a465588df36f9f85976616d7346b303bfecea1
ef8d26d56dfbb461542712d3715aa72c7839354c479865d9d944421dc33f1b06f57a2eec
0e6c6070d63b4137951e8a898ccac19f292fcc77f0fec40fdacd437ba2b09725c9cd8114
9f8d4cde4d126b99a5ba226e0047ac4d676f55f0253382d596833a855fb1b10873313b70
c40919acb659fa91853df35fdde5b35ba85418b62c0a442ba4f2866e4aa2c84e60cc6205
07094c1c066f89188bb92ca5a019af47bbe3d734347f11ed948ac11b46e631b647d8a70a
b11e4cf15a967c55173f880d27571533bcbf613ffae9cd9bb1ffc9112bd286bc86f0aec8
1eac46f881139a81235d9a697d11bb4f9a5949f6f19bf6383a062f0ac382226078093907
081814fdb36ac48fc7dbe4956d0d278779310cbd4c257aaf15a86f49fa7acaa7541c897d
b9c7bd76ba637147dbbfdb7d0d12a3b914cb0a5bee8f6b38506f17e09701330fc0e91819
12e3e0f801345ce5c06999ee1de785bc7206bccbac3b319e75421e76238f90394dde01e8
fdfcaf9c982ee22dc77994404b7ac81b25a267a233b2b2a6380dc2
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont: BG-Maths-Roman
%%BeginFont: BG-Maths-Symbol
%!PS-AdobeFont-1.0: BG-Maths-Symbol 001.000
%%CreationDate: Sat Jul 13 16:08:27 2002
%%VMusage: 120000 150000
11 dict begin
/FontInfo 14 dict dup begin
/version (001.000) readonly def
/Copyright (LucidaMath-Symbol remapped to fit 3B2 TeX CM Maths Symbol encoding.) readonly def
/Notice (Copyright \(c\) 1990 Adobe Systems Incorporated, All Rights Reserved.Lucida is a registered trademark of Bigelow & Holmes.) readonly def
/FullName (BG-Maths-Symbol) readonly def
/FamilyName (BG-Maths-Symbol) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -30 def
/UnderlineThickness 60 def
/Weight (Regular) readonly def
end readonly def
/FontName /BG-Maths-Symbol def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put } for
dup 0 /.0000 put
dup 1 /.0001 put
dup 2 /.0002 put
dup 3 /.0003 put
dup 4 /.0004 put
dup 5 /.0005 put
dup 6 /.0006 put
dup 7 /.0007 put
dup 8 /.0008 put
dup 9 /.0009 put
dup 10 /.0010 put
dup 11 /.0011 put
dup 12 /.0012 put
dup 13 /.0013 put
dup 14 /.0014 put
dup 15 /.0015 put
dup 16 /.0016 put
dup 17 /.0017 put
dup 18 /.0018 put
dup 19 /.0019 put
dup 20 /.0020 put
dup 21 /.0021 put
dup 22 /.0022 put
dup 23 /.0023 put
dup 24 /.0024 put
dup 25 /.0025 put
dup 26 /.0026 put
dup 27 /.0027 put
dup 28 /.0028 put
dup 29 /.0029 put
dup 30 /.0030 put
dup 31 /.0031 put
dup 32 /space put
dup 33 /exclam put
dup 34 /quotedbl put
dup 35 /numbersign put
dup 36 /dollar put
dup 37 /percent put
dup 38 /ampersand put
dup 39 /quoteright put
dup 40 /parenleft put
dup 41 /parenright put
dup 42 /asterisk put
dup 43 /plus put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 58 /colon put
dup 59 /semicolon put
dup 60 /less put
dup 61 /equal put
dup 62 /greater put
dup 63 /question put
dup 64 /at put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 74 /J put
dup 75 /K put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 81 /Q put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 86 /V put
dup 87 /W put
dup 88 /X put
dup 89 /Y put
dup 90 /Z put
dup 91 /bracketleft put
dup 92 /backslash put
dup 93 /bracketright put
dup 94 /asciicircum put
dup 95 /underscore put
dup 96 /quoteleft put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
dup 123 /braceleft put
dup 124 /bar put
dup 125 /braceright put
dup 126 /asciitilde put
dup 127 /.0127 put
dup 128 /.0128 put
dup 129 /.0129 put
dup 130 /.0130 put
dup 132 /.0132 put
dup 133 /.0133 put
dup 134 /.0134 put
dup 135 /.0135 put
dup 136 /.0136 put
dup 137 /.0137 put
dup 138 /.0138 put
dup 255 /.0255 put
def
/PaintType 0 def
/FontType 1 def
/FontMatrix [ 0.00100 0 0 0.00100 0 0 ] readonly def
/UniqueID 4204315 def
/FontBBox { -70 -940 1414 855 } readonly def
currentdict end
currentfile eexec
e8dc61728071abd4d5bcd230c4e186dce095a0ca84ffc476adfaa82124268e60d2cc570c
5f52c10ed4a85a71ce8e5bcf26aa13b27d7fce1cc0c72c3b848dd5ffb2d56d06a1920fad
e4ffa3b35336627e9ed1622c1f9652956d4a424488b4c4ffda9936442bbe0ca749700ae9
8a2bf964fad088f0cc64b7c1d76742f25e90e759aca624a321402b1d20863faf5e04b86c
1ae66f450b1586041815e52f13d2ae539f1725d11489898a83a05fe04d6d14bce66e2cb8
55496ec301a39f6baea5645c3bb28d512ea3d9daae2532a8ff7f3b2d8201ccdb660749a0
4064eabd7029d71212882c0cad9f221e484ed8b6b52c05176bd3678e2e3f5d0a0be3553d
96d1781570e26dd7b0749b85296b89c554623801c3d0ffa1dac68bfc8905995aaea775c7
4ad4faa7832735180eb256b86afce306128b9ba89d893dd8a385166ab9ac34dadc7b751c
0477a87bbb22cb7528d3bee6ccca93b9b69d647ab1699d49856f826f983d53ec9e598240
3194dd48770d73baf17b00574a2c9552d0d78ee1279106c69619125145122ca6aba8903b
43f39e4859c7a259fc7df091ac443053b1e30443d63fb2a801506e6a369d994c3aac1a0b
70cab963343143e80013d0f5c0894e5ed90c3ca9f40cbc7171c96d12e5390568304467de
3e77ba6af0357f494d149639736fd3c119f958b4253b72d66662cf64b2a6725b1a884a60
68573bcb3361052f90e4214ee9a729991888f1f525c8490213a7345dab0f0dd1a56821b1
66d0c169dfb3211d50891dae9eea166c0b3b97ed4c4d1b409c32b0b5f33713aa7a65a0e6
4b3241781e3b211bcea22eba0fb0843c23b51267b51ffd28d9b8e0d07259332a1ee0f35a
bc1f0794a89b79c9f5c037c3ab2574a0f3971ec6568d7ae76b1fe81703176eae420324b6
254aa2c13f6861bc5735606cf39ff994a8b43dc5dca53b56d93cb1078fe252fdf64fb7e1
0c39d996bfded86190bca549d4ac089809f1c90fdfa7fea7f634a5dde03b88b648f7d5cc
4ade04daba410e063f6511f562e84bee7412e27654d2f33088f4b28b925374f163a681f4
598e6ec17bb8c064eb493f136c371a9542f504f752b7141b78ca34fdc3ebd2b97f4cfeb9
66192f48c8950f887f991dcbdb88b88e29ec6cae2f9a2ede47a7277d2614159d848f24a9
c5e08159f38de07100a17ff6d8feb3249bb976e7b2542ce22eac622d884aa9d4aa971c97
c240bfdcbaaa6f7d0b6e3ba5e2e989cc889073c1d804c99b2762b3ffc8cd95934b94ebf8
7fb5579d9b72e0c7c01037cc8897ccfbf00190ab77ffd62538624687ebe7684a947be2c3
0c0acfcbc6b80a0255abdeb5642cdf1cd86a4bf33e1b579c16b97b5c323267b2be6a11d4
bdbfa287038f26f89b3f577b2b4b2446425f12cb739f73e4cce4fb326cc4d96b274c6a6e
d319c7109f6e48827955247ad5189d4ce43d0e464954905f25ce28b958722b12c8d1f11a
797e18a1f078c62ac0905a15a980d60b92552a00226868a06444ece2c708b69549c89ba9
5255e9e9d5232e7658a42b90454979c4be3abca4f5c7aaacfb74a8f0f8d90072e6de8f5b
dfe99ba0009d5ce671020699006ead630780aa175f1f4ae72689c07c05dbd651cb8b5377
f38f06b2cc0b59db7964844d43724848810fff9ff2f1854afd381926aa4178ff56bac80a
7862b070684abe6cc01fd321a8d474b54b45e9db7256cb587b9dcbf50e1a9a7a5bc0d017
f77d6beb3419f85ba8087dd77a3272e7edac6e8be443d762c6e85a11948f01b7afacca41
258d0b901a6314cc1c6c43b0870f3e4f23cf05cde2daa428def0576eaf1f4ce2b0b03cb3
72ec8748000fee1e70cd3b5abe44872e83c4f104c8725f25d0c5db8ea7ff9c77da6b0a2e
897f3873c948cbdc8bc25fdc2e3d61f8f434ee4ffebfe5fb81067ebab7a62047c83cd28a
f600f4c8d87a088009c224b169c8b7cfd19b843f3542c1f8c760d9d2dbc7f4975294c3f8
3fb1a22c8566409591dd96e20ea56a2fbc93f17b479eedb6c8839d5d351cca343f38e48b
5c0bc98a117387a2f91bf8ecbbbc763ea1f0ab23c9390529cf961b96ae7343f14a3068d7
a200cbf01ec5885a0b9d88a3032d42c37c596e129fe490e2eed0fa3041c87ef45b38bc8f
d97598895e6223a6bd0a3846481b730044f6a3e2fdc75308d1f7758a3d8d5218e7153a92
6b6c5473161533a13b82f3c3714817d188a7bddfd5f33af14c9dc32e0b0986c73be3018f
21659bb4caa15a249468469373b6c1ec494537b10893e326d56570cf58f6a1cc11fda6dd
d0c57bd899c996f3cfac101e1dfd0c8494bf13aaaa74aef7f76c00c5a8cf49e3bbc1ccf2
309ca7b1f73d030577c3e2ec0ee00a0649a991f78027954116ddcd75949cdf6b11969c38
37fe8276534ce7984796d7129154da1e6769876f5f46371442ef77a8689abac20433a9b1
43eb5ddb1e57c987487c387e2d25384dbf010f06b317d5e7cf8e5de312807b9a866b7dd7
3776be4c8ea79e225c63555e957ddb8a56678dce609fb48333ad5589e8178d2f16cd4449
28b9283258f4f5fd5d126616b90841e98eba1896eaf13ba62ce8c3b3f9549cb5577e8098
c0b0f8e9e7fd3498a0915e2413fcaf7402cff56cb3bb0d031bb9713665b7134282ed2d18
c04d51ec3dd9c473ed68a429bde9397181d5b3f562712d7b62f47302db151bc0fb165844
f05a1d483a674d21936ab298b999b4528d83789795aa45541c58f6cba02c9622e3bf8b95
ea486e1f5d7e5dcd1b5d8bb2cfa68d3a6d634e0d859ae3c9ae31200f5812288b953623e1
c929f03ca5ced65bb5208f95ae46c0eef112af2667a6501e04084210bbdcf40b87680376
fe215cd14a2b997bbd03763ea2ea105e02a4a4144282af1530a53bfdd2a105199e7f2f7c
839a22f04ba541ffa9864626808350aecf9ffa78ee92df50bdb815767f3ef381b96adf2c
db214f1e24cf6da0c4299bab094fa0e154b4a51cb1e982222e6bd3a21d695ffc2f4c5ddc
ede0781aba12aef122129e59ab0f134205810440e576830e24667bdb2b48d095aff06697
dc7eeaeea438157a5c8db76c51ea7477713fd46cf08fd45ad0430dd5e47606221f5bc312
d04956f72104f9d3efaaf13a8e59ba46e6a001ab3955c1574cf7e0cdd7de23a895ac868c
c89c10ee53b867de1163726bab8e3b0e4e430f22f820528987a6842f321cd76dde2b0709
9135c4a43efc5ed93b1c0bd5d1974ee3185d3fcc985590ac4a848ed1d9dd4c8aa9457f24
902cfa7191e909ccca16786d55684b17bea2b0b8e872c1d5dc92831085e755a47b1b7313
e0eba0a8ccef665bea1f9e0b196c9c9509fa46c907b1cf3db5eb569ab18f78a20e766440
af4fd6b3aeefca8f04e31e8573fb9dbc2f61d36c33d735e6c021e91deca2b77dad825664
6089ca09d701797038ba77be5c27cfb9d771d59aa65b51601af97a0dfdb3f2a1824c6d3f
87f63d785c7a891a7d93ba99dd3953646c2aff6bccfb1bc9b7990edb380116ff89f3996d
89bf9f40c334a9c9ac861e4865352be059a36b0cf15e2c69facdd9d979ffb80a34a847d6
f71f3dbb675588c971b883a2b4385515128b07d6e419b33fbf188b7a8c1b9988837d1d94
82cffc0a855be54f5dbcc2e72b47a60f257a11011ca0241be606a8a24a765dc3a22b74ca
69dc884db53c0ad6b1dae83e42411ecf434bba7cb1621684354cd992f4970ce2597b3f13
976fb2d6adf8ffc247a6d17f77789b764b3110d956cae763398dff8ffd46ebba33c5f031
f9cf7cdacbb0438a8bcba6049e7cf0e54fe5b878f5d8da8c1e08a7709c83a7f82c4093d4
0645abf00a57ee414c915ab48f9f6e11dd0235351117e77de33f3c45a1914d6178b1c3d6
221cf929c4998110bcf62928678652264e72753f2eb4b510c5356366555fc6ee984f143f
332b8ba8fcc1637996439ec051ddeaf2ab51c0c75b50b034c0d8268c85e68f2d8c8692f9
4641e938424297c68f8a347dea0045332cc349aca9ba54f22fbd976889f07696f3cbd5ff
5628f074cd1df0b0bb7212e17a70cc5a955d6ae0cf8653f80061ccb1bd0e3bedad0c3a97
84e799b36f29cb8a1c85873e41cd4a44f5ffa77a50b9646ab968992d935a63e72dc79ceb
f9bfee76f250e8df15c5404a913231ec4dbb019daf8acab5ebf64e490287d02243a303d0
007f7b2bd72e565734c75dabad1105f361c890ff1c843c4fd023f4370b86f290216673c4
187b612e3237b9e0270d59409da37f4f9c9e0d671773c57773f2a5c0015797ac4884dfd7
62a8f5dac7c3036837608e31a2c38ac89671384a4e756b8438ff882951c68ac65430fade
2b91f5f094f2b91c20e1a36a15bcd209810d1f170a86acb7ca7c39eb11e44f549c9275bc
778dfba25b3b51e03bbd6912758c7d232790970c177b3434cff22a4f11f5820824262be8
869e5312634551e51e13349cdbe32969c543c732252e5c1f3ebc841e7061b7e0434db7ee
71041edf7f4ba149d1c4709096ba0219bd520bb50c05c6081bc599580582099eae46bfb3
c243a04eff140f23fc231280b6f8ad39d173eda7dafd3d141a3d3bd32466b292775f4f71
c0a54632d11989c4dfe6eeea78a9d5983dee0e442707843c151fae601ede4405db5f5e99
f27a02cabc622dfb583bc5b905bc3caa18affac47b6636a7fc82ab66b3c351e653e0ff04
2c7854528c36f3e21da85dd870e133a9b7cd3c15b467fb2fa7965cb757506d5367ee74f0
49013ba2f97f2ed88ff001f44961d45b1056ebeb0daabdc21698b6535e25d24719adc6e2
88e0ffe2c0671f2fd3da616e530590477878ec00cca63f541b407d3ad8817594277c0cd6
e34340c438e6057e88851240127eb7affd2723d2efbe9cba50b2b10fbb3a7ff381c826f3
d1c2f54b0cc3b476dbccf6f85c1bc9fcb5cc5b91ec2c5af7e3e9ec1f85a165cc283166ef
b53cf6a15ff7b22ad26562437276ee48a6744dca5cbc306876f7a4bee6dec614bde9974c
630cb220cf136ac9a33fb6e6c5b2f54174670e455a31955386498e41b9144f69e35b607f
08e0384b655d433d8aec6f21ea30a63599f4926be8e3f0dfa384bfc37142ed61d50bd41d
c794da448cc4598cbd54e353fa27b9c194c024bdc34afe9ed7b0f8df46152ef445891c60
94c5abb72bfb9037ef6ca372df776d1b1712ad7b055c483bcf55a3c8b99423bed758cbf2
bce61b5888f76a30c0a4631db08b29836baac470ad6f95662ca75de4fcee7670d7dacbce
bb57d6af858c02aa94a51161dae26fd11439cb9177fcb2bed6abcfa594b69bbaf1db408a
0fd22866505d4fac0c00f3d067b31cfcc10ba6e886987ca2aba9732e5a60160ed88711ca
bd5c90372df2d7307c757cbdc8e28e28747302eba30a5bb60880e49d4f5cc746ecb514ba
c58fc1885f0da582d94d072ff623e244272dd7c44e5f373dcc1e418c8cbf5c0bb6e148be
0a9a4a334a63756174f6befec917f7b6e91c5ff4bd5346aa1f6e6cde6fae693dc5146092
9aa31186ba9ec24041009eea559b8d6817c6a0e809b655d39b2c54339ec02a079a4b4735
07fc64dd9520419d7eae87a9100fdca247751a7d9abe17c39035ea090aa74b8a530b88c3
ae0660041df1c7c9ccc2e73df251377a2e3ebf1f5490e897b95414e6a616efb2c645cf5c
f528312a1bfbe0f7a2751bdcc73903e9406c868261243b48c2ba720cca1a2823e932e311
db101061aca4d3609d84a3d6e3e5cd3f2892eaa9ca8b68fbf9c96f7d3c4ca25faed03978
88063c383c2121da5a09409eda3a67eeca6166568a0051b08e2d3c791058a3138459c493
05c64b4c8cb7dfb12d45547c79ec5594caf90b091dd30b49b6d23eb642ce90324e580ed0
6e0f8377504233f5e4b8b341253773a8ddf1e052e296200564ebb85743d89c15317a1ba0
110827886fd64192f8c37acd855f4d69fa69a1686298d6bde7a788b7dc3980b01d40c9f7
82987c0d919a67427d4d56127707f99ffcf25657d8a203aa69caeb7488fc25e3b05de73a
1482b20e8f2ebbc568dcb591c211a9170282816e8626e47f2fd34b55e43bcb4bb3f2dbba
5537f67a73b7d4cace85a9438dbd26020ee592f91ac9c8744ff9a662a98363878e360519
31dd5534f8e6c9f7be629ac0a983be41b3122b3537d420972e86bb7c19d970e21c8c697c
ffd1a09d99e6a52f5c35221574aaa5f7692eadbaec001bee4e55ac21137857ad828ede04
3215412e5381b663f6dfcdbc1ebda8273aeed614ba3211ed260239595f0475f795b33435
b86d7398dcd06c174f7aca72776c8c179419c1b136a784f1cd8b100c0f9082a59f923fea
45acaccb99b92d3cf94a60a30dfa6d97e7d5b2f5d1674b8ad0fc22de762cac83ce9cbb94
43d5cdb5e0f87ce0db9881412601366b977cd990db8ea3466a4a7bab88fe9eb3295928ed
eaf20cea5b09dc47a6bb1c40b57b509f0cb476b95ee74279e78997786b969d3391196017
1fd4332bc479b743360678d71ff53f08721eef4fefc827ceea6d129a028c9b84799b60c0
593bcbe9b8643c07fed324961e7675940c0d645fa43ac83c7088a0d45dcdd5eed68bdb1f
872aeb06de501133ba2c8e8f0ba14420e60671997e5d9f762e296677264fada6a3894599
0c464a723c8752f3cddd631e4cea53cddcd6b386254213cc206eadd8247f8a938016f236
74a90266ae3d72ebee383ed6f79a70756b63f245584a6abb0d2ba2d27fc0fd1fdbdb1497
cfadb69e0162da54e2072064265423973544019cf3d152e06af9c932833343dbcc203c42
c5a22bda48eb424380dc5856a1a9ccd28885d5bdb9dbe73d9f7cf97f8625abd9e0e0c9d1
383d166176c6b6ad7c52c3eb2e3a1f6fab344025687f07a9c380d33a012b874f4be6e13e
ce5a2a408f19320182decda0448a4ecee4a03a34fc0c34a7555b9ea4253cb405fe5837ed
335269a65a3c45d46b6f1b40d48806c9e85a668e018fae14698bb9046913ac42a999d22b
d5c498efb16148813729ad70e0474798faee071dc5993d483bf5ba1f061e3c29afbca775
46799fdfdbc505aa9310c00b565766e2a311aa10ac737c21e371ea449787e2911218ece5
2a5a830a7b9989a3f4daf514d58d68e4762acea86a6a02d16e0f6ca8914c11d7ecbe6134
b2364e1b20d085148a714b92d8380bd9b02156825c933773138eb31f7da1b6d7127dad7d
9abd4305b2a352e9396fae3d92123883a8978e47405d1569e41c1cae2d3e39bf4befceef
dec29c602195fc61fdd5e6a58a94fe8eaae43e2dca0ef626e7c9501722466be2cc42e6b5
189d475ecb2feeaa2db8e45954d0727612d1b2ff9d590d27d0365039ca1786c20063ad77
ee823d67a86c44b65b88f5d99f8428f7927b1f987086d98dea3f618dd51dd1f8e1fc4719
9e2c6b23cda1675c4317e19e5123c71707b304c950e8f2b7ff67d7a339e7f1a981638842
ceabaff351f4d45209542cea4e3f5bef9de3d83bda2dfda59a30f903cd2dd348596a852e
87ff620bfe25156b5b7fb8ea4b20c039e2a06a8eb51ef81d03544a7d1227db6152add82c
f4a0918a6ceebac5fcefac8967a9629c53185beb45e22766a7624ccc514ff11b89a9b3be
8a61f9db06097380855127a188105969c74ded589206ca3b16923a90e42d19cf50a0c5fb
1a5fd1c3ceaf4011b720db90eddbd0d758094ac1b745e0f49358a4c386bb2e58c46ac1d6
7d18df955c696f0e6b4990befdefa8cd88f4e9bf0621bbfd6d24de9f62ac9b7a6468c618
ced2b26b3fbaa318b1336d69171e560ae921e0550eac1cd042b92e070e3db3f0252f5d4f
09782ca4262fe6d2c3122522b4965e45c65a89cf86a04ab782435338f48577284f5e5a47
b9d6bd52ccfaabd77b351b08666712d1eeb0a94be546e7fd59eacaf0a98ac09a021bb54a
fab99043d6b223c0f3fa5429f19b7ad61019a41d9a57227e746329db996f83d201a5677a
0598581e33b37929b0abfb15f5b5614cc5cbc2e90a0a829cad314fbdfa7c9762fbd95ed0
2848bfc94c39f175f370f87d2b222414583316c1625e80093f4f561e511b2bd424bf311d
f0d5c48fdfebce9d7434089954f1ea57a8e668316b7facd33b6cd7bc87d59074a6f3bf55
6d751265868299583ff4deae768e04b02e81791eff72fe2d2c7d033c4aac0f877b14ae57
c00c14f24c62383574d28ac7a61ebc62e2eb05b39c124d4fdc0ef851a8b336be92aae361
9b6bc1935b6ef110da5f869010f715e49cc6f1b0c14e1a2df785c6f540735e25a6ce900d
0c8224803d079ba886466535b1356ec84facfc2c18011e63c852ee67c0c812613e79fa20
b9240ecc9f28dbcb535e9bb0abf1d9403cdde16e66587c2a8facff40a57de998322a82d0
0c2d2b4e3c43e2be91a4e9165323c7968fc3d2c55a0398ee8e419d2b1fd316eac966a872
aedab6095fc1239b6d969d9fc827eecf73f5d63a0ab69eec9d7dc2e4c23afba39b849c4b
e30c4b938ffed5f2b5690f775c38807b629e3fa9bafde9e45b6ddb15e45cd7d25823e1ae
01df4d49eefe12240428fe3a14541ed19ae89b1545a868940ce70f189642cb831c02a599
791ee57ab8ce58a6b2df59d0d461c87c6c5da5f42cf54b553344fc961ae347b1b9ce1751
a5a1050f04949b231fa93ba59f05cc33e364320e5b31298453070f321279079629c35757
6d1162f505584a1817028762750725cbeca0d18a48f195aea61c546ac96807e3d0fd083b
ab62058d33ac10d14cf0c6aefaa495fd656953769ef1de7d498fbc5b4a2f37907ffe1d7a
21f0a2a0df393ed7a758dd4d275f92fe76df1dab6d339aefaf7e1f912623a1c4dd04144f
b77311fe89b7fdd5d44877b7c627bd0568644cac27448012dd7c3ad118bc28536c4bf802
de8cf14afd54992dba8170395e91f51889f7988363bf0c4b5c58bc7ce0bbd8ba20122710
fc3f8fbd98a3de30d82ff1eb163c5c65c799e0ba64bda569e7b0a69a4f8cc7df506fc802
eb1575ed72b3297b224e044451140bc5b635d145eac3417e807ad58448dc3a9f1e818a0f
e7d87344abc9f2977735ce133098a7b70fc0d6e737baf77eabae944c30ab80fd36b359ef
f2365637a8d298777633d0d3d7691be83702474fc539d37164334d5ab4034a3c6e765046
b0b2151e1426d1ab2c52dbf7ce8bae9e732490f4aeb2403d2c5b78925697107c849911bc
dd0c5e51555b6e0ed2bbf48a7d55bc439e60477b582e4a5af95c4b4521c755e24a64b4bc
03275301a4e221dd2d1493c91f6f9cb8e17f891d12b9c7e4eb54bf2ff4a9a89fe640cbce
fcf363a1c16d10d4984bbef018b0b98a52717ab75b10e5628df101e628e564e5c7cca351
47ef30c5d19010e980674588051b031d41460bfd84ab9a678c7f81267903ad24105e5ea3
427fbbcc63398f5bbf95527efc8620fca864a4c06f0c5080778e064a47ba7acf6ec5eccc
7738c935469b05453e8c3a02a4bd24ed786bf30e85970203587725d85aa9c4111b31a448
81bd1b7fc3eaec56a36a167660e887ac0cb912062f475a5767f4c690b9ff2f75e96ea2c6
6644c09ddc32e9b48e0b415f384284c6f9d036170ad1ec94b27f8042ebbac6704a165694
4ea6e39128c2af0097e225e620246031b6fac06ff2a4652c05c7e16a10467f1882c5bad5
fe6a37ac079675b64214d21e156d6c6a742f51d8f1c0e2c9019e0a4c13fcd5e843f37ff1
947efb94186f25798fe1e4ef8bbe4166e26288b12506f8ac19579b410386f76d9c657c61
e26957e773606a65bc5da6a8226437026af1bd3066518b209f37e2b9ed582bb0c0dbca1a
51c63feb1dd0300eac79e289d6d0c30af6d45ec6b94d59dd0f8ba1a1cd5ecde025f0acd9
d52e9361123688488d379a7345d880d5e0a220037d40f0834b0535a2c1e4bb471c529c9e
5d51135c02ab378d8507d830a277420da5f9f9c4f0ae6c3ab0cf535be4b7337fe7e370c9
b1eb9e486573c45c4582a92b2faf03257f8ec59bfb67920e2ae66b1cdee19c5c3348da5d
1d394fc26076fd71037bfaca5fdfac144a572ee70651819ca366465dd1cdd2626effcb49
adbf7eab9db936863578a07850953a0d2512a064cbee33b92224d6a847f2a428e8bfd92b
8e251194314652df1a9475bc99df8b5531e65f5afa0be1a57d276eaa90647d3cecdccc06
bcf9007b8d69873b81dc3ae144d33b6857e824d9416073e24e0b366b64d72305ebb46359
fea35ba6d3d44349652e283e8a4a130a69a16c7ee1d2d2070ea4d96283dc70ab1ae31caf
cd2f3d366292002daf4f408c57b16a7c9ed841fda1a4d9133006e6ea3425555f882cb480
0d4acd76ce34e7aa0b2badd8b9661cc16a43966bf67573719030b8ae5fb839f1dbffd12c
94cb498ce1c4c1dc8baa43753554755875f002d9781da0e24126c0edfcaabebf111ee014
2fd4e63aaad1c045ee17cbade89631ba6128aa4cfe6143129407f5ed47baa253aac854ee
3298bae62c4e842ec1fa2e67d3865d0c318d265798b6204289974f2cc30c59ab87ad7b53
0fa825de5fdd38ac335f3402c05ace9cdb6cada826cc964fddf35ca4ad8848d21bb97b5b
5da0abee1871fad9e73d1d45662995739a4104adbe1c032073fb00dcaf5382cc8d2f3f58
93d11e43f662d9b189d4111cf587e69b963f390ec716c24bc22ca3744b9fdc1ca5b33814
8bab2ce299ab1502a3ef8587697aa8341dce517e245aefd7d395fde50d3ddb94ea9419d8
76062af0981ad3e58727bc5de34b594f0223494dd0ae83df590de1a62f64ef68a559ea4f
67e97c2745423f100a9d5013451c512b4ebe05ccac6ff02ece3eeca0e75dd982d3d6c003
88b619bd853143c1ac750d661d56c39a6d371eb0174344eedf7157825294702df279c2d6
611a932988fbe72d9fec61951d8a544bbea16c5f1ddaef64d54ef8c431aab9fdca05964e
6d6c1c889c37c5b6ca0a033782e041ef11575e069e72a3bc377e41fa5ed0d84b40f96cc5
757c1c167fdf61ebb04709c63e2ca130b6608cde26336e87eaf47ad9bf4ddc00fd5f5eb5
e9554b7499433ff6c69728f6ab909dae3e0f2bd78206a88bb69febd8987d86e3b8be01e8
1603263ca616d284883b922709f228106a009355dd8849ffb0a8e4a8abf829a8f291176d
ce9de896938b69f72a7e889b78ff7cc867d9b99a8fbdae6f6b11c5e16eb8afd24b84e854
4ad92d03341fd887259f623677ac9649b6d89d0afdbb571e4c27c33e6bea0e43bfa109e4
7c4483f42b5a2ea28f34eb82107f2759c8b1fee623b0f7d7f81e605db33bcf35194035c3
9d02b0813a85ce4792f113d1138f087c4aaca78e407d3f1df0e32e861748ea81062e643a
49b9a454cb0521c76ad4f4ed053b9d706ef5d3897ac1916bddcbca56b70b3f8abfd25b10
3e6174a4bfc20c45eb5b7e25a817ccef204c2a94179610e160c91a0f1951401f16520c58
251e8d9c167f07bc9652ccdb9f55a504ac0276722310e5ef7b1c2a811ee20fd252079cf2
d04d85af38e2eed1a6d6d6a54e3023a1e694415ee4cae5d3141950d6f9a7000053b6ce43
d60dfa70ba61c79f36ced214e7ad565d065dc0c326dfc0087fc2be1efd6bc5a63c3ee416
0baf3dfc20a69cbbd41b7364f4906dd6555ce04181cfe55fa4d59fe563b340504b7d9a10
3dc9bb1145e9cab55d0cc02484c58c3e0d42e24624272668b4a17c3de8dd8dcb2b5ee4b2
3aa9f5a4a3257cb543bbc03ced89c9cfad128a62768d536ff057f2ea251351b963f68e30
f60d70bce4e97849ae40d6fa05bf96be01f3fcc54dba7ddcb4e17704798ba147e3194a91
eccce3d8aa1d67a5e99583eb7ef97f256fd17e7d24d4a2fc618f422e55fb3a93d94bf85a
53e295c7ed7b1e7a1e762c65faf90271065d627163110755e0ea29878c13e60412807bbc
54372b15ad575d7ddf693a4c6f62832004bedd9faf2bd3316768ed10ed0f2c4a8f889a2d
65bd483f3b1ec53925e3423338dd30b7767c9ee07ef7780c754a8518c4f8be92e6ef217c
ffdf7c1ec2c8a9e8e8a34686cc0ddd0b49efc6d4d5bf3a105bdee180786f6b3d69767667
6b86abf5bd519e1e81b64b988c017a8ce5bd4a0b95c1185e8375251c23e938b9a22b867c
59cae72a49ae6cf8a9cbf034ffac2ddcbd56a8f95c2a7fd4957ba917857aa0f822da940c
96b3a9a5e8661b6ce6f49798679b29f09ccee1356bf7bc33dd352fe7f9cc38eccdec749e
e898d30ea0d5306f6cf92811b9e19afcd47e4a86f3ed30e669ec7831f5a52f39e5f4c2b6
d28608a309613cd065c17a45681b5c3ba6a461adabdac01b5f1649ba7d13fe2757dfb6b5
9b1ffa3500e72f1cafe16c2d5dbf9c2a23a013d9c63b74902c2193c0340dacb34fcdf0fd
4c5818a5e239dd2b1288c15f48f790116b4006c2bfb64a169c5b22871c989b1a17968efa
f21f9096fc2430be8161fec47467f630705aed7c2d88fc06fae41942781ce674da5b61cc
16e3c49741b70a550d84ed7edcc9382700db65fe59ed356cc3937cac77033a03b467a83e
0abb0981d3c663dee17e5347acd9a795efc447b04ed11675436358fe06b11f6c669e8905
e0be3169911e103b79c145b7a7d077623d699a0e321ad55a22dd3caed17db1f838ecb1bf
b5b76e043a6adcf1127bd4cccee1685c82a9b86551bfbca95a544584fadc274e4dc6d6b6
c505f6d33eb527f468aef861bfa209ce2fa358912aa34ef041992431aecc5f3d0ad2e961
3cce1864220b31322a36b82a549751c671ceb7add4ba166b01efb61f7695d50c466fbb5b
11c533a8780ed87586a8814b25e49987e42fd6d6a09afee1b6b080a78e626540a699a5f8
f5b597170b55de6f899e6f4f783a59e002f46a03cd0701f64b580b111fb328df3e7600a7
d454fa03b6ce201f350914619826003523ef663c6a79a00ebfc692f9382b4cab2132df22
6ad61122a8500e8ccf5a1e8668f76b48f2963356284748f2b1aa2805d3027bcd07924c7b
f51b6a36a07fe8a701534584491532ddb9f13b6535f5c7d7eff4f85df481756ccf0a3114
55172166f789d86baa90252de980276f21f2dad608f9eb32609a200139d74eed3be145ac
96377837b32b2bafef1b8f87d2524b31b98897576ec545166cb9a7eac2a6c8f7664f69e7
8f580b526dfc46a8e212e30a087461f067c29a2358aa05c994e1f3ed52ec25d1f4903b22
f71337a3bdb0d68af494adf4d9f559db7ae9863999a18cbdd316f45c6a3ecbc1a9f91efe
f1989ec62ec764c9a77b5b7c0a05f844138c934d48ec8756902fa5b54cf0d60e1a213823
b40b540b6019e155ab28fce9a9c4e2fa78c1ee381232c78be942eb29a2ca63f7a0971f0f
e49eb5ed068d5767d4a68ad263eabab8ebc43e65e68341a352a63c315290e2862b3f87f9
316769ced3ba56461ddef4775b8e50f44b922a1b719b00f28964ea46853a050dc071016b
f3bf5822527aa0382b6dcfc9702a14f2fdabf04abedbc063778d23dce711bcdec0676f7b
0b9f3cb1eec42f8d29892e5bf310c0a49aaa0d0af43ff6df1962952c6add4af5dcb5cd99
814410726bdc6d6a1df182b9e5f23543b6a01c92e9d27611899330cad0f228e475ad898a
0a82276f9913ef7ed2d818d16526554389f4bd3d5f2eca700eedb04faa2ccaef900391c7
d4175ba385576eeff5473d690250579edb87c508239120a59bdb20efcadcd5c88577d2a5
c0476763c7cf34700ff92393a2ae7b6b44989c88b432c60f7ba7961697d2de22cffb7a79
3c200b032deaea391c2d8a19212e6dc8ca6cbacde4d42593436c9eafa4de706d4ab4468c
33e8d48c246348788d01068c49fd7f984fc89486a0abd5041e643e727ae59a8d289df854
1d487b6832ea6e5ca551f25600eeafefef6462a8e1fbafd96cd0176f2b2912cedac5306d
b6cd3e9e9b27a8d7284bc0c9c40d58c42f3da798f995afc62b8b8929d77cbc4a6e8f43fb
703a4f2093c7a53a85737e211c428a4bb9f10cef0a1f380277a70ef193c047557aecffa7
512fded106097df8f61edcfdf5bb52a201f3309b717ef7ae7a343c88de0fd6baa51d4a24
20aeeff1186a5119ee06db2102a9acf5abb498684c2564575a94d26c44941a010caa6637
33680abaea9cb3212540e4d5f1887f031cbca586b55700003b831941778436b5dbed7d3c
bd5e4b501ea9bfb9b0c7d9a9778808e170b36cc93e84d19a1d1fa9409e45f3b8bf7d451c
dd7d8a119177c4781b454f3875ef4124a449f5e895945f655fd91baea21ebe1944a61cc8
b07997ade1b0632dc629a96c7ef42813a2aab994e1543f95e5ef14bd1755d80e64a4cd69
436c3a94cb1df7ac69ca720c03fd7513341ec4a8ea86469ed9e7be2f35a954801ce153bf
5dd7be1d2087c71428f993624845342002a15dcf851cee2d4f65375d59163d2c9a23619f
1f302983b7d69f4d2f8154cf31d3e46e770d9d3cc37acb400f1592e1180525cb45606032
9d3e278a52f83a07c35d57b70e5a4d464004d397bc958b414db76832e5bc242715d677bf
228441b2c3a8723d55b3c911646b958eabfd65a787564909f8f72d6b99f38a1bbe3d056f
5e5f84cc3b3b09681aab084ab10b524620f91af3c0ce3964eb4f276e117fc221993eb0f3
b97f194a15e0880f39e97637b74cc1150ddb4bbdf2b89a9f285c96ff26d6ce44694b6f02
f3d41be64192bdfa7f0687ddf2e32a41ddb3f386127b8cc1f9f70be44593ef04c5218051
f5b046527219ed6a38fd86c4b126a78bddf13bb3bb1a8d9b7247773992518ff259453630
854c974592f2b26b17f9e069bed92eb64fd7f7857577c8b8de7f1f96c916508e56b8c6c9
3313caa0d6ce07885f52b025b89c25482d256a10144616a14adbf9668f55102aca733ef8
75a178521708cdb5843988c75b49aa163f9c2c1972c2f1a545641feed811ca8cc3e0f20e
5c52beb8f0db08f7d77aba281d3829c466121f380eef3cbf347573f0c9450a9489d7ecd1
b6a22330f84098c22bfa1d885d364691fe1bc916d401e1bd779cbd8d5dbbef2e3e448f2f
d45d2cc8d4ae7ccddb92c1c3b301def44ce1ec5d6b462a1e7e79bb6e0c7399e027328935
59a934eaffbe5f4d16c8360d9344d29467be39a81102afb1642e31952feb8d17ab1ee7ea
ba2cfaf0c7741fa63c4290feafe095e669a39966e22c583b9b995fe311df58024a57fa1c
8b1ab4c674966d000764ab8879539bb55c99bdb5a5c1d65ee0570f61d740313ad6b331f1
5e40c7c2a6693899297ec75a500c56976889a967348aa0012dfe3d4c0caebfb5f70b935f
86c061596940ac86752eecf2f2f52d79490f713356049fb032972a8d225b228530b0d35c
42b16d6d9d2ade897c670ebe267f9e1804993f7bd1167e7c3d7e4f6a87d6e64d79bf759b
90bf526ebb6cc79d7d274230885dc5c0d0a0d52ff204ddc76a568ee874b96073473def75
8b059c291ac20d2f302ca7a3f000924bffde9ff829bd8eab1622278887d2767a50362e18
189bb7ad83cdd35c4ec9b969f98bcc391a5c151c93e6421e4d63fe606a0e8fb310bbf129
646344a008a7361664bcc216bbce8b900d31e27256b1891cda4e27cabbe8227608968e67
0e85c8a35dc5d136ae53f2ae8da386f88fe1219dd48371fc17bf42ec40104d9bb6ebfca4
abc8a72772db507e73beda2892993b3141f5c3eef70ee37a4ac1ec832293ef59ed8106c3
54c1d5473435075178ef4286e5900898e76a261dd6f508c9e65c6f63cd5254e5fc6617ab
d0141993726395bff5f6c195eb87577abaff36f46d5dce76a0c6e14c194f6b925431ba71
18d797195d6b14142a5a9883981a92f0b8646197a7fece87aeacfb34213b6cd7ad958fe5
5768cb97a11fd1d43282f60f5482c65a1b3e54b3381af2e1d1b425ae1bbc112156cafacf
fe7820b75048d9d0a88f9c7aa555d1bf1b49165e544c8e995aaa3c9b7fce6dab536b70e7
235647c56e18d9e1f81ee9efdd0b1a1cbe99d75973bff6468882c547dba7a237b14152d1
d28a0b8af30d9ecca536b5802b8e8cbfae18ac127d1b7a53427e966ffd634cfa521fa159
1bbc787d88a77c6de2e195cd75d0f09dd002e6e4fbe7ca681c70f4b933a385c6d86402a9
4af6d68af775eea5f19d06121f0fdf01a76d47f920cb7aabf792fa20234902fee194b276
0628deac4f8191d7ba0a92f18b6059be9ff6a81dd1bdba60ea0d030e7bedbdba831651eb
8902405cfcf6f874deaecddd4e9e28f9a3d1fb88017534b00424cd6874cbfcaa2c3506af
4d9e64eeab490e1393d4d5a6e4d8e33923ece8d1a6fea0435a619d291f6e2aadd999a50f
bcb1eb36951c6e90c0b9737c51d5024912ab7e5db9ac5c93c5ae15bc0970c35eb97f602c
5ce187317d13afa948ebf8feb75725264f0a1cc4f67d6648e4ddd98b55fbb25ddcca1e98
0534f66220f1ffc33947130983683fae3e1a818e26e8210dbd78dbafb08f842d3a3b7f3e
b64c3ed3b081ee1b3717c91cb4f15a80d0b81cb7790fc6086001ab0e2221f63f50e659a3
646ac36788b64047ef8ce6c603992f325b0f78ed50e8f188ead77cee2f4f586a3123bd15
d2e0a7de06ff9337e0a5430e4b3cb3fa91770a977cea8ee568d36d378a3bcb3904181756
8a25663bc28e2e4a8d080270bbe703d315761dba598a5ea2ca299ed616d43c11b3050d86
bf835598cca4d95e3d18e099e0cc21a5f7282128ef9c3b20c2404e0c6b052ab70dad6793
dbdd974be7d47fde59b453b527bfeb0c4f91892688363a4d38401541efdf323b1c247a91
2793e70474ece5518782c5c0bd12d0de9a46f9f38473485efe8e9c9465e0cd29489634fa
d10bcda386030db9ae29e63ba2a5908b97a2c0f4d0957629a31186c35765a986a509825f
7418ae1eb394c396b4cd0a8cb84124f786487194213e47a59f7bfde2190cd56461632bf1
a31e5464b31082d296f94547eda57d3a702e42240d89403a3c8d3ea4d9f031d4a0f954dc
25cb4cbcd9c9ede7696b9f6296b11a79267e2ba0c7bc6b9c78211e897b0476a2f4f7b64c
a92c7a41f37e942e2355638682b50de518517a0e89cac9d8310db7d7f24110d9a43011a8
11c36f6e116f1a3d675f3f55e51bc4eb0366075fcc5598ce98ab1e062074338b94249379
95a5078d72710e66a166c2b8d8f09683d614b1e166115bfe455cc9b35ec5f41be637a1a5
bb87ab3c96c75b7afe86fbcd2df6b0d09230b264924cd4f92264386ee2ee5c0fbc2bcda6
2f5e59e27fca391cde4134ac5e4102043082b0561e32e243a41658cb7360e84817349a3b
a67020c3ef25c8ab2c66259a12be95b849a675c0f8ffe994dd7053442fe7a42fcb7c179c
e6804c6c72db5af8ba1440d8288553c6886c2d1c5e546ab3db6b594b4ddf4879e40f5951
8eabaccb2773959b7bc542d59f457c7116e3c39b1fbd118772fcc8406f18d45e10a2cb4b
347c58a49b2168ea6d4069d83e2f8cc7d09468cb094f15a6e83e74a9473480638dc082ed
a2761f04bf066e9b3dfdbf51124d19ffc670caa8bc0437531e4c120a2f5cef0e12847893
625a57667e3c45f4cb98e6d6337029b0f2c3e5279a464fda3e10aeef8008308f17d15449
2e8fa35b108c3f67efa77771d72d668cdea019844d445c1d55d022c9123bd6f0e17d45fc
8dc630ff77fd6aa23a5f622bb7d8a19b098c8a9092b4296b210ac066d25bed7db63ee907
492409a6a7ac8a123434fe2f47dbb6334202b1c2c671c29b2288037976cfe1266420825e
adf6c442274fe6bf3319f4df38ac8623a38281f1dd22682411043bada5b1b7c759eaa8fb
5d306f096fb133920846cd059d1d5a1a36c7d0b09ef3b25605cf4785b55e7eb0b9d51739
b4d6ed1720ceca8a3d113c8403f6f906c1c0ac002d78890eadaa1a236b0a62b032347e98
a9a5a9559f1e5bcd58ee912d19b9cafd5fffd0b9504bec5e4ae711e1255350b65f0c2aa1
f56727e009db2a9db0c35f648c9456947546a188fca60b8116cad233f0d5c17c8653368a
b63ed915e54d51778b2e6c3b2053f9b45f3fd16f366f70a27126e3e4a8e731f99100998d
9d29f77397da221e3e0e7483fc2fc2ee7a72e2bf17e555a1f21adc7be6213d28e2119d61
10e3df59cc80971c764db0659cbecbe4589f77acf9793c4f4e58feb9586b3e905c5b05ad
6f6007e77d0c0c6a9e72ea30a03bbeb2367e25be056c403b0bf5779d07b513644d04ce2e
6b2428cd390ebefdb7995f7175381835903341a004f410df09a0ea828508dd392c8de45e
3d6c6741f62bde3e12fc9ecd223ca14cf94ad1b32306c4ed917f386528601048352d5d38
3dc3ef065f0e2488287493ae5810c312bdaced5bb2d42d61e87c4bef4b99e662ec35e57f
bc75c9dc9f0c8d07320b165f4d1da3dd7b403b0e4335b882aa05e88e03b7452efce65a6e
3e16f2796941777d0fbefba0c718e995379be255aaf75f76543cd6c3c72058fdfa7ed91a
40d602affcaa75b9cbd2ed642445eaee429c0cd8c0f77aae52932c462d727db7422b3045
12fa4cea486f74c86f3d55b9af14a7eb0ffd128597d2242b5ddec551ebf617ed780143ec
d25fbbc1ecdfb7952daf36b2628085ae0ac23b0ee2838babde878c0b531d8e79ce1e88e6
f00f30b7a8c194d283201267beed41a2a534eebb70a4d139c4ac52156480e370f46721f4
e5a1d7ac0b3c8665d94ed74d855a7cc6e34b83083b1d809c2e205bf88ad9f53a95833245
fa5c4c40c8f0dc75079934be7c7c0d0fd37c9d7f87140a40d60f2cd9ad1347ee4fcb5d6c
ec59e633f31e223f52fdb641886dd2497c6bc3bb67dc7f1fed865f54396eb5316d5bb950
0bf3431600ea8bf6b1bf1325414f483d18a8c4f29f58e54df7ef64fd1f4256cdee7e27ac
5df7202389b23096394c216c0d2e0ae5c455fb9cd430d1256f039cda752c6a9879a72956
dd0f08756039c92d6ab40ad1d27b1122b02d7eebe6f48f21f7eb9d361bf0a43b93cf042c
7e571ef386055c129d6424bf17d43d34aa04cf41f05c0e26e2b455970b14a0c470fdd82c
a7d3ead42204200edc4022498efaa262a8de9d78352b2c4aa0eedd6e037890d4b430a07a
345a247b9c2f72661b4135a78b52c3c54d1bef1a76bb9e8d0c3716f67b71b22e1f9dd4bc
6d0fbf901991dcbb24678f7658d2a90b31923871a56db289543d1594be1870787bb54f89
605930e4f129c70c89af271e3cf75a8cb73439302b14160d15461231e722b3b549bb23b2
26cf00b0a9563b0403fdc2018df55f2a3298df97ee50089f0120a50fb07058c7cbf789a6
716026adb99282f115ab0ed4b43d4105465a9f117d1e45202879043a2f4909191b9f52a4
53a6d3d7427dcc20e6e96f06076ab06cef89f3410668e89ffe037f41e3e1026316b5a6cc
148bce40b88e9a8ffbcfe1e67e794f5c4676755a8aa6be35a69103536712d8236bc6d855
d75dae2e8038f241731b02e8dbf078ad789ddc1d80ebe1693179f71d88fd506cc69de9fc
14cb694bcde92479d46d878d6271c365d7f6b8bb3a77fcf20ae75329825fdb5d43955961
e3b87d73f7e0104b39a20917b0a4a354837fb59b099d47053a14594c053e9eec81bcd7a3
4ca649d850d49c819aae3275c986b03079dc2108c2edb079d69da9030c01dc7b95593836
4965daf9b2520707c24aed08261c85a7a232b00edc2534e009d549e8ee7dc94963b94c7c
793f39a0782aad5bf4a4751c7917434688f2a602215865a977bb30f06889da3343405998
e969afda4612aedfb94fa5c7ef4c572cdabb73d679524f104ded11ca4f2eb2ecc7fc41b6
860bc95f8e78ce17872b482829e8f5df3823abd38c15c192b6c70690f967273e48a8902d
7d5e8480087f49fffb9fe0308a11adb9b9c121c26463e97e2027a335d3c0309bbacdd659
14279f51fcc93cab10cd7c1102667a0f913a4e854d71e12d74ef913db0c6d7a9cff7d0f7
ab38d81aa0edff6dde98bd65933939e7bb70a3c0eb62baa6679e10692b51abdf10b67233
dedfd0b23bfa8c1a47a84e2479f3c34b05bef7ef266e8d06259f59a8267e971b8fe3326b
a1aa8f8442351cded42ee42eba1a2b96bf484743c42a758989af3aae56efa68f64d2fe4c
f6f44053be884d3552af323309c57bc7d443f079468ff6d60cd9377121b2ff66d1a8ca53
241cbe05b64a84a8f7d642d0eda2abbfe1ca31341776c62095348003df77715d039121f3
296c5b2d15f958c06aa80f0f0444c40ff4c90d0969bf7dc27cf6ef5dbae942b6ff3a549a
7078cffb45e6e476e4465f632964f69c2549777ed916029765509ab81bff1b85336247c2
9c7c53f533cfcac27cc91a97943eec864715735079b64fcc090ea335c2802588acbe036b
59a01d48fec430c95fa99cc3688d084640e3e00069d2dff1b338d1992d1ff59881f7b6ca
9ccd45ac384bd79a432fc5c1972e5aa2c9ac53ee4205d1eee3efba923685e628045a113b
cb326e8ee8be661cebb5d88e5b813bb1ad85cfd7366457ab3ddcda1a969b238739231d83
a7c6104ab864f0a14fbb31d872970ce8b6fe5e4b572600395db43318b7dc41b90037a7f8
c261c201f9498627a326e56389613f21cda2d16e7d3fba0372aed6cc6391d46a8bbcfb04
e6ed3994463267186757083b394e78cafad6ad4741a0b0898320272af863fe1cfa11d4cf
98e42ea8cdc2f08cba4c46f85a7574b99929cda8b7630c6f524fc84d66ba8732892a0756
1e88e2b6f6e4b86e4f7d8cb576ed9cc941ebfcd7e4208e479700a8d34a630a06ddebd207
7efda75ee6bc49946dbd82a1d08272be9a601a89e873cc74aef6b8b8cc504cb8165569d7
ef8d29500a9f5910dd1e0c28479c724f423abea165abcd7967c7ce5501a79b89cd75fe94
10128fbee1ef1016d7f8ebb9c732252e5c73ead9f94f7888c384a1c4dbc31e2d1e83ee2d
ca84143a2d6a3f47e7be7be7c16b35f2b497b0227c29ce4e4efc0521e3b378d91d56dbd7
cba8f26075ba58d9e34dd02ff7129aa609195085f443d0ddde6c3365c4863c35d77757ec
2af0100eb24581c6e9590b77428e3796154f6a6af5b2e46803f564d875fb5815a640424a
c86d27a84f818f856ca8343ab342803b10ffc74b16b284b2835f3ac3fe80d71fadd91313
468008ecffa424cf3ec21863b46851030501448a40bd111c0da37833339899063360ecac
040378ef71c8c7bfa62a7962d0c2718b0a017f8bec0dc9d9b3d6d5b63a170a33b6b732de
9ed55ce3eb9be43c494cb0b982cda89ec3da3eefd82c20db65647b50f4e37da176dd07f3
3ee198971e6a021f0a11f449abf6aee6a03ef1a16a00dc8ce32c15e053b9a6339d6a48e9
4d76a1268ae6ce51accaf84d9376b22b01ca90c9ecbe216c00b55048a898da996b0113df
0d3b52d12e27e2ef5604344ecd7303a45b220fb3a1c21c4d5d6ec8fcc2a641171b8061b2
2621e9c16c85fe05f0cbf08fa65c72e65d8cfeb6ccea294a913bf68623856c44b2d5356e
3d3c62d59117552ffebae00f09ffbd641c10d22ae443b847506891e2cdd77b059cc73b9c
7918576f46f5d446d6b6ba0215b849f4607739d2387eba1a4be9bfa3c937dbeeb5924bd8
3117ab385bc26987935af585795523a495edc6cef91d0b929369d163b1639736ff70de18
491b1a3aff19453592319cbbc6bab26788cadb0192534b9a2463de95dcaab9a2053543d1
7eb69a0c0a63f27a3b29beb1b9841d56db7355aa6f4e674a33e798eba979dc8ba99c6946
92f9caf7f4406eb8ced05ae63f37d0cb948b1787f2597bef34f7c9442bde7f88b09fed9f
a3cbf7f86be87ce469245364ebd572bb090e629195c75e2f54521c152f868eaee1f0adaf
5afa119e9dffc7a986cf2edfc005145b505d21fbcb4e9b7ce5b0bdb8ca6dba8d8df90d47
6e1c97841d5ea8a87b42a4b59d8fc7d5f48b02df4f4d0ddd64b8e0c750ad0235a74d4ce1
07b143103a7aecb04f5a99f52df420a24b148c2cbdaa71327ad9dbab3091995a446d0d87
ca70ad75ad8e6b4711bbd758b72502b446103fd3f4a274121888a35bc819a278ebf14666
354dd40972f5bbda0162c414f580fb3354a0a1c065c354f1f78f0df9946f0aac3efa55f5
d878721d7390c34351756961920011cfc3b1080089a0afb83fa9efb55d7ef10805c9f727
0a9a3eb9236bfb21a0d360c592bd1ed855bc9913acb320a5f81bb966049599d7a85395fa
db040facbbacd30263d12a80c85df256fea9904fffda946bd7e119a0c4dd3bb379812d47
93b8e254dcb3de1eeb6f80ab2e70a04fae78756b677b6c654520dc81625aaabc5f41fd05
93d1d6f7f4ee0f84bdae008dba6c44938ca7a2b491ce97ef2ec3887b6790a4c9d05206cc
989ed5db35b9c5d1101a794dd7bd9db4c697ebaefac4063b2b0b8b089367d2af0e115f00
a1fd5953d7723de0e081
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont: BG-Maths-Symbol
%%BeginFont: BG-Maths-Symbol-Bold
%!PS-AdobeFont-1.0: BG-Maths-Symbol-Bold 001.000
%%CreationDate: Fri Oct 31 18:28:35 2003
%%VMusage: 120000 150000
11 dict begin
/FontInfo 14 dict dup begin
/version (001.000) readonly def
/Copyright (LucidaMath-Symbol remapped to fit 3B2 TeX CM Maths Symbol encoding.) readonly def
/Notice (Copyright \(c\) 1990 Adobe Systems Incorporated, All Rights Reserved.Lucida is a registered trademark of Bigelow & Holmes.) readonly def
/FullName (BG-Maths-Symbol Bold) readonly def
/FamilyName (BG-Maths-Symbol) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -30 def
/UnderlineThickness 60 def
/Weight (Bold) readonly def
end readonly def
/FontName /BG-Maths-Symbol-Bold def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put } for
dup 0 /.0000 put
dup 1 /.0001 put
dup 2 /.0002 put
dup 3 /.0003 put
dup 4 /.0004 put
dup 5 /.0005 put
dup 6 /.0006 put
dup 7 /.0007 put
dup 8 /.0008 put
dup 9 /.0009 put
dup 10 /.0010 put
dup 11 /.0011 put
dup 12 /.0012 put
dup 13 /.0013 put
dup 14 /.0014 put
dup 15 /.0015 put
dup 16 /.0016 put
dup 17 /.0017 put
dup 18 /.0018 put
dup 19 /.0019 put
dup 20 /.0020 put
dup 21 /.0021 put
dup 22 /.0022 put
dup 23 /.0023 put
dup 24 /.0024 put
dup 25 /.0025 put
dup 26 /.0026 put
dup 27 /.0027 put
dup 28 /.0028 put
dup 29 /.0029 put
dup 30 /.0030 put
dup 31 /.0031 put
dup 32 /space put
dup 33 /exclam put
dup 34 /quotedbl put
dup 35 /numbersign put
dup 36 /dollar put
dup 37 /percent put
dup 38 /ampersand put
dup 39 /quoteright put
dup 40 /parenleft put
dup 41 /parenright put
dup 42 /asterisk put
dup 43 /plus put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 58 /colon put
dup 59 /semicolon put
dup 60 /less put
dup 61 /equal put
dup 62 /greater put
dup 63 /question put
dup 64 /at put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 74 /J put
dup 75 /K put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 81 /Q put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 86 /V put
dup 87 /W put
dup 88 /X put
dup 89 /Y put
dup 90 /Z put
dup 91 /bracketleft put
dup 92 /backslash put
dup 93 /bracketright put
dup 94 /asciicircum put
dup 95 /underscore put
dup 96 /quoteleft put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
dup 123 /braceleft put
dup 124 /bar put
dup 125 /braceright put
dup 126 /asciitilde put
dup 127 /.0127 put
dup 128 /.0128 put
dup 129 /.0129 put
dup 130 /.0130 put
dup 132 /.0132 put
dup 133 /.0133 put
dup 134 /.0134 put
dup 135 /.0135 put
dup 136 /.0136 put
dup 137 /.0137 put
dup 138 /.0138 put
dup 255 /.0255 put
readonly def
/PaintType 0 def
/FontType 1 def
/FontMatrix [ 0.0010000 0 0 0.0010000 0 0 ] readonly def
/UniqueID 4272827 def
/FontBBox {-70 -940 1414 855} readonly def
currentdict end
currentfile eexec
e8dc61728071abd4d5bcd230c4e186dce095a0ca84ffc476adfaa82124268e60d2cc570c
5f52c10ed4a85a71ce8e5bcf26aa13b27d7fce1cc0c72c3b848dd5ffb2d56d06a1920fad
e4ffa3b35336627e9ed1622c1f9652956d4a424488b4c4ffda9936442bbe0ca749700ae9
8a2bf964fad088f0cc64b7c1d76742f25e90e759aca624a321402b1d20863faf5e04b86c
1ae66f450b1586041815e52f13d2ae539f1725d11489898a83a05fe04d6d14bce66e2cb8
55496ec301a39f6baea5645c3bb28d512ea3d9daae2532a8ff7f3b2d8201ccdb660749a0
4064eabd7029d71212882c0cad9f221e484ed8b6b52c05176bd3678e2e3f5d0a0be3553d
96d1781570e26dd7b0749b85296b89c554623801c3d0ffa1dac68bfc8905995aaea775c7
4ad4faa7832735180eb256b86afce306128b9ba89d893dd8a385166ab9ac34dadc7b751c
0477a87bbb22cb7528d3bee6ccca93b9b69d647ab1699d49856f826f983d53ec9e598240
3194dd48770d73baf17b00574a2c9552d0d78ee1279106c69619125142897dca0cd7d9e3
3078c7751b0a4c368953fc5e96241bd010c8e913ce7e0bcd7585c215b24845ecea730595
d67336631db90ad2451edfac8e8aaf0a7b3bd30287646cf7932091c0d275c87e249343ba
7758d38c8048b106482763f6054dc4afc091ce39603a615d8f925560938d85a3da34cc3b
889dd8a9d6710615aa7759a5fdeb4d99e14636f4976bddbfff111679bc372ee03c7a0347
d54fb0fb3386f83db47a41103f877a87d115cf836e44ed736484c5decfcdcff5a8d86f03
7f1d81ebccabae27382a2354e2d3ea84ccfc0bdf7507e4f7478576303c2673a39043907b
36cc38c297564c6865f5df6a0c69485ceac19b901151035439e58a83b698ad80e9811e4f
fd55f6addbf0667650afee32e12e25dd6cdd1d3f7cde8aaba505f92f91a5a06b0bf90ea5
3ed77ce5bd1170e43bd16819185f395902c12422fc8bb0e910cc99e81ef0e19969118d50
64215229a226bb0a7b743e5911be08be862223c01e2f4e16f28b000907bab1fc1d63bd73
c4f91de31eb8a071a2bd87fcb1f2b814facd3a8acc518c57a9e37502f04a5df3d8cf29aa
6a0b413c37c8f29516b544fd48b635d7c480a81309cfbd38de2496e4f5c42fec5baa19f8
78ca0a7de3fa01443b6786bb5cef6f560de3599efd445d0ab23a5debb0227822d94cd2ce
847f220cdff18bb9dd9873823183a30a9d0573f4352e4009b2b494b3d4c08c523ce0e1f1
77887cc3b5877521615bc18215b860bd9298e3d05e27b86b6b832a6bb1400852d31e2557
ac6e54c9a0052a4bf938af76984a6f63ce6d00aeb3b9c8b9a0ea3fb0b850c8401f08700e
c252c79b2337a020c73302a645a6888b1b3b44b9eb404384cb41af13787f937dcb4265cb
5a17fdaed36994ea3548c82a96e0bd56a2dcb3344469ad260ba4fd02cc6bce4b28b583c2
d604334c77ef6f832197459b07ac2e9feeac4b09e4b97422c8e721725ae49c03fb74f263
a8c1cde2b34d1f3c5c8f3dfee6ac9c6a434e2fefdb3bfdad7eab9f06e6b6fe479bf8a6fb
a8bb4f2b0577fcc52d47deb00a26f4bc026ae115a284006bf965a67e999704624535a1d1
55cfe38562e1bf9e947451d4f6ba1685e6c577138df932c207c7bd252773c7aa4a8d58d9
dd8e38594123467b358fe61b28f7d9aa2094d9c1709b36245c8a9de9837d407480cbfbad
59619c6ed959780556fe5f9f06b8eccc02ddb5db7e60280694c3c221fc13464b43e54441
4472362a4d0f98e343fab655e4c7edac328164a854d7764024aa9ccc6e77bd1ea9a8ad6d
e3715802591acab80371ce503d0a2473f2b6f64f7c7ff69d9a52e1c1e84df51bd176eaab
52eee996f305f8c0b49af510e8f8436693ac13ff85de75e80cf1af4729e7fe37fe558eee
5e26308c36da9d0ce366849e8a050bf49839970903916482a316a445f8f49b16079fbe8e
9a1159dc8f89494aaf2e8404d375c017acf916379f37039cf099306c98113908c86fbcab
f45de90f659b34a27f84e838f285997209a6df14df138ab466f6c9c7c78da4fc6bbf1d83
233f717a2a3bbd8bad7d125e66c846919beb4d3302e17f951469d5186b55d11d74af5b5f
cf3a10bc5271bdae182b6e5cb9f1db2fe5d17fb4903e1d569ac0a3d9cdc8d8e8eaf4e08c
3848d08681b424dc178762a110370b744cd8aa802da61b0c43ca6b83888299553beb00a5
166c6bcdc8c3ca21255a87b709279c26e6c9dd3a0f64ae637828f170c4237c5bcb6daa23
01274831a349310a2fe3e061d44e625aa8f6ca8b90729fd39f5bd896b8ceb4d03a87c41c
221e2548cf6277c3290677f9c5ba12828f15312ef46d383a3978b196e6a6f2a01e5eb9c6
6ca827d97a5579fdfaa431824a7d11ed59b9dd920d8c358141c927430a86a1622b206ec3
ac7b898f0f35903b6754ffc1de4ef4bc8753f047b9a0abf81de4d7e3c9295b7d35810756
5890dec10b0d4949b212f6d8441302470c497e543866e6496f95102a39d4403dff420a3f
b892f459095fab04ab3bcb2a58831bbb4139cfcaee1cfd12f02535cd4d3b978d63aeded6
dc8f0aa37c7e8a56d0fc675fd9da6cc6bdd3be3c69e0ff493b558b9a470758403abe2307
4ccc1192d74c82cc1152cb010d43f4a0a87aaa1c5b7a9acf51c19c307fb41ff9e44334a2
a57e2d3082ea5f7ad06a949a4e9b7bb349cc73577c938a490bff0663d4c45d642c4aa32a
6fb33369b6d3311e07d2baf17716432ad5d3039ec4c8adda618df839b7e4be6602332f99
92836e9c5699fa72f371a72e7c3ac8eb77b69b8fa7d53eed33f6adccb4bbaa152b763675
60daaf34288757f3b39bd43ea4eaca1e21a11b8aece75dbb995a770aafa802cb7991b35c
279e1898cffc5589118078352aecc0407f08c317e8963eaf809ce9974e2c72e9e4e9c0b4
f16b71693069faf4139995a6cdd25532aa6d2acb43270b67e5f4aef58f016c5bb24a5a37
c0b66bf06a08baaad17eea6851bcb790700d0c9ee1c3514af6b10cd1a045e32143e93409
a8bc271b1632bea07e4b1b88621efd4ea0cefd98a1cf2b623710432ad104d0e30954ace2
93bd94b5e36c7beff5402805b9dd3465d86ba8c5fcd62eb9cfef9d7ae0d5db199c213934
470c230fd9d0de7ce7cdebccfc442cdf9214979d856d85979a352279de35fa088f872081
be32099eed2b051ad9de6d196cd890e4b463f85d38945b781a6dd810b3d59168858effa9
e6665650236cd2c96c6c4149310dae6d117e49f119922d4b6cc0be6afa19b371a0f62333
e53da0f116b538cc50903bac482d473393d04559688c4d6c53497697b01b8ae50da14c1d
dc84225f841bbaee8c04259e09912877070e4d808b48662423448429ae18e53e8d1ec176
39f8cf268671c034240bb28450dbf45ceb85f1f2564f0d943341a784498ad4a8c273df83
043d4ce182487437aa0946eecbf206dd9e85f457c38f5204ac456ee90f06b1a643f6b8b8
07a3443b169f9d2827ad2e5b8bdc817c7794e1f4a99c6564d4d61441c4b148a9bcb62394
ce0bd33db81363b8e394730a08ebcb09b89d42824ca6912e27a7b573c6bcbafcb557cc97
d1e14a216a55fcf35e4b8acefe12dfe4034230fe83ffc8f37f03b63ef359524d1a11c048
78668a31833f4f7edd909483d07d1462869e11608c3ffd8ead9314ffde8b74afff885522
5e8461970d233166e81b6e2d2ce879fe4e1a30295d0f817526319f79f5394b22861290f6
46886e484221b2bfbf7f3b9b8742d2fc0cb1439e07d82a925ffe5b151f396ea057de467d
63059de974837f1a9b570932e174fc2963c4f317f4d66d44dd24e39d70c631f3656733ca
61cdf4273ade12cef442a454172f6acb1342736d9d9db929d61f8ecd49cd5e1f82d94b09
89f5a5aca3454c85af3d640ee1b900b8fa95d826d714bd1cd3a6ea26b0ed687cc743488c
b41f152d15f1d5e80fa9cde69f2f74c7bd169a7d911412c26632bc5d161c433484b0b90c
6e277c874e2c375dc687333ef63592267be7371d9e376b6aef2089d2677318406bb722b3
ac3e47b67b803946a7a56cc66b1e51875c2fa2eae5006d7e2c3fc41c2ea87703392b6bce
f963f0916176dcdfa0116d4087c5c085393075edbad515beff6bbc2a009083dfd6adee6a
78288730ed5ca53c6b40cb838710383eebb9e10ca957dc70f88950230d18698ccaff36c7
7abc003a70730908a40e9085c3097cb9b3df552cc7a488372c78660cace4e7c36d3332f0
2bad688b3f3920c23939140ac4802bd8f6646bf93966e0edc1f0d25ad1b48c787bd8d411
3c796c35abef72d57e8ce985b548e89d81b806d4f85a722772c53848f9dc44787f40a546
eb1fd0ceedab61c0d4b999eab46d305f7360e60af9683da98333cd80bc6b6eeddeb03b13
72de365b204955f1cd539eda3b2f4ca5a5554dd9894347d03283abb22f4381b57615c148
65f1df68bcf4d1e33d3ad3919e6f5b87ad87f46cedd2fede2197090edbbfa0b635c2bc84
976bf5229b795eab4c35563c34afe3f4fb3d9328f12f5c5bca6209e454baa18f59e20044
6cfe5ceeff59d21fea92c5bb7542223cab2b0128639ab7a050d4a81701459ee6ac6a51f6
d8a76a4b64e131f2401a390ce7a0c5bae60bed9d93aad24021a1c7994db1af5c4c03ad59
8c3e1fb8d75873842c7ec9a27b9c0f3a99837fb5efd7c9c7c105b9ebfb7996cddf9a1648
42530bcbd63a4f572e521e3c3a598103f666560b6f79b3d2c2e43b647a134713caa4010c
ea83bf44dbc73ce45d8fd1385a894f79971f08f4eb6913e2b10f77184f4cf622889724d8
a294228c8f4eb25f7b54055ae1f758bf1c76bebd6e72612c58ba12879cb317ef710f529c
e658ff8f09f709e5af21b42695ce55fb152640e85e92973ec7f1ce3e527c39094180b02c
f6c9ac78c72921b0016a07f99cd807bffe73ce9be10e7cfa2b243444c2dcfac79b959c40
bc0860fa21199dac5ef4544faeb12e4c04324e109b7bd0d2a6adba1d2cf1438bdab1ca10
72cccd215092bfebcc5102b449defe2f795315b15da4ea244f275c5511aebf6f995fe574
8f95c3f91dddc8f6159e9f386682373f50e4c82c19206bf6664a15b8ef7c03e8602d9f62
a2937b758733fd9941247e346dc083a650a933e559c69bd9c708ab349a0bd56bf9b9dc05
b64d9b88027c2515a585b0d53f7b1462d89cf56f029b8f94be0b419f182b5f94c333a7e1
5bc51e8fa5f1179300f61ac05ad9daa1384d4fe09e8331c55fe6c5a62a80db60460630c7
cd48a69a9db2eb3226c72aa6cbac5ba985664d52f5c89cdec48ff8448ffc3105d6e00a8a
5abe208f48ea4b69a7593cb1d1d69b71b399a9408f6b5fd6c0cc99c23640de5b3e2f5079
3e8e5ef7c44029fa6ba3996d0a03b11a5e5a52dd3ae0a21a55f3bf1bcc54ef77644dfec8
a53859ef278f84b2342856b7baa652370b7cc9ab832bbd2a81ec5679943a84565383da00
b889d31f7bdeda729027fd830eb7b26d3104c8c48e9a154586d31ef554622e7778b4fcf0
47a76dd435791bcdeac60c3007d8bf9e9fe0238c992af836c62500df94d0fde24de60319
9f8bd1a37aa47934aab7e1c1d1cf9245f45da86b878fc8a58b3316e38c081de130bd156f
7fc1ddee099ada5123d0af7e102207c60a0f74167511ada8ac7d3b2160215532701143a0
72a368485e3a688d1c5bb3731cfb83cc739e14ce6e597ec1794d82f107bece301c311840
abff9e07e382b55816afd296e6cf573d67c4727310c8c6af6e5f0c806a4e05514642f526
abb06ae4cb6487f293b320fe0fc8cb99367bbb50f8464f77a073ebc858fa62863c55dc64
6f1018accab05b1c859c31259e6febf52cce7b9fe6e2bd418d36be27fb81eb16f04c1ab3
d73453da1c888b0c52d67313c0d05b2c50f9312c369fc2c5f1f48cdd012f972764e98d6d
0da9e87f3ffb5bd2a9cbf5ee60ecd3ab3f3a4f12aff0fc5fd80e5390245ac31bb0d1c673
6049c1e5d5c930a96e22974392c65fe0dbd36e86e35fa488dfe5e061d3f8d2718fa6e655
1542d848199e0f71952b963dedd8668b02fedb851086fa3c4e1961c7b983c1a716648387
9d445faefd7c28914d18ca7d5a9099e1e3b64b711f98e587a878980f75536d884b31cf4e
9e3adbcde5bbd86bb14d26b0d851093e8dfb20b1724483af0fa1e44daa0c209fd1866c0f
e24c333e57c798c8e15b05b8856cb9147855913e026e22efb62cf405163ba5b39c039b89
f1428882e8dda4ac6febd455a8872fe772b0200e12d46c442e34d77667425f294d39b87f
54389550832445a19af9c6d069c7bd71eabd9eafa4d599cf9f201fde2d1fcf96b82861b6
a7d9898323a209e188073eea614a418cad935e43b4b7ae30967b49be87645d849f2d5cd8
163fc862de21b5c8d8794cf8813c545e35a33a660517a7897a3cf9b0ac551d1937ca212d
d2cebcf5d528c500923c85c306aede4327dd4f02dc81816db38e9fecb1f354d4b5692fd7
2dc22f3a8437e4cbd7475c1eb5c1f794c533addb4b61b448c22d81cf52cfe840fd68e432
cee0392b643309e5ebedb5f742e8178671b1c8f44b0b9b53da27f1aa9423e633f10f831e
dbae56935ed8e412ad0a563e4cf87f7223a2b96c3178baa344c27404df57d5a657e89806
b4b8514c5cdc346b6dc9f71b885d5a8904ca4abc98af2cce77ccb34c5c1cf061d34f6a0b
a356b099d32b5ec7bb87271b5df527e73943b17e517d09cf7827f109288a9d6dd31e6faa
508d06d0b28c57825c7327dfab489f97a7d47a8b4c650999e86f501c68d74126b9fc2962
ca01d8db3b6d5e82f7a6a5cf04826a839249171d52106b08caba3e537a5fad09fcd84466
5d2039effa91e77aae316de9415f72051762af0dfde03cd6dac33f82b23d128af3487bdd
c6100cceaae37a265a5943363a8f8ca580460d5866be7f2de2bdb80e5a675f97832f98d3
ee886f856e7f63425f4ef886715ea6e0f4ddd0019d50ed574f6b55d27c92531663a850b9
386fa338aa8aaf15b9b570eb7bf3acd5ea93a8046d06f66099e3b0c4e0312fe84f3d4f3c
6e85df0216fcdd71d2a26c255795bde3dc89284feb5ea3826080471548304cda455af1db
363da1c35099eb5bc9d0b690f0ac444016a1a0824e7fa45a3d86020e19b9ff589dc35fd5
460089abb7be319aa05aeabaf06f601b537bddbcc5c5c8038672867909df5d11b9f80aa5
474eec4852df015cf386e843bfae07d3affc1e82c8f55848cd2becb4e153ddefde0caca5
5978e3e068ee44f6987e168598660a3c9c7befbc8d378f866b4fc815144c906eb5433c6b
ee9f175562076657792cf3a00a7efc4a31bf64c97f2006aac6734fdbd98a2506f03e182b
ecb1084dc2433b5d355427cfb7cbf28db3e211daba8be264d08e80f5b1c9d87d61acb900
0ee4b51d9d3ad43baaac1ce9b2826067564b6258b3657548b069da1f2ea3df23cc82798d
1bbd7fddb98b07acc647e46efecac273dd168df175c42589ac9bac8aab230eb1238337e7
397526c05381b97844904c186c4fddb92b498cb21bf8daf17d740af047012f844bee3298
cecf6997333b83c87ff683bb9e0f031c85153e037f50c11dfad628501e55ed7ae5eaca52
91633d0c2be5f9b56062d643831ab8f4454fc446957b95436731ee143a080c93a2346b2c
76e4a12da7f4b61814378539f73ee00967a5bc047c208ce095d5fd896cbda76744df88a3
113b5ef559f5cb93d6b86a7d46ddd79e4d0c8f0b22368737c5382592877665bc4c16bd75
f700cdca83bbfbfd6f58714c8c76cae274475bfdbb1983ff7d58f59a7d562b8cae2f7ad6
583f664652dd04b47e9b306823906281769fdf23cf5c3c1ac8a2862b2a9e14e08bb94e15
614014923bf740d2bf73f7261093c9772aa5d24f773c38336d286b9df332a161303b0e49
69be951bb74de0e4efe20f66adbdfb347490c32092f94792c5f86e6c83a76ae36eb3c83e
618f576f7c52dea2b038919c4cd776b0ac8c41e34fb6eca715b0e15c611fde388c431078
5699bb30ab2ff51bec158826abb4392076766f13697200b4d47341cfd3904d151dd88da9
652dfc8b12949e9db9e1f940ec1122c1a046a82b70353e3ff5b33c5568d62fbc96250841
0383881e6f62879b8b1160becdbba0824d55381d73316fa450abae0bc99bd447160448c5
2318eb20254d6dbf5b778dae9a1c9aa99791ee121b483e2d0aafde42db65eeb02becf9a8
ee1fee0d2b012c2992ac925aad339ee5c9185d6b96bcf70b3d34445e6ed1a2d76f92a3b2
e72e61b2602b00db15ca1f4d780e8b8177beef1714187ecb2d0bb824a7de9a781d3d3029
98ac1e040ca0273e1edcd823dfb709754eef89d49ab5e6373409740984f61e1354397b45
fd5cf2b15ba010f447f1d8286edb56db0e966794adfa3d95b676efdb89c869dda7a7177b
df4941eb5475dd83673926341418fe07f4e3dee9734650aac3f12c15a644f04cdd374ab6
c2bedc7be1ac1f432f56baba7faa90acad01c66f11735a3a16d333f4200afb2f98983468
d4762672228e107e9fa37cfef00711c3535e1be2623ca334152a0f4519c28b01df775c3b
a8a4650acd0af0123eafa36a6e6a64ac991bab6e8617068c3b8731ebbdb8a67177364705
fb68c41a64b6ec079687c395aa7ec638f5fcc13e9913e7d082710ba960d5077bef221fc5
46632f7f70904a25116e19e35e029e151a2fac6d9aab604411428881debbd864cb6d4223
313b8641c78a90071c0d325845a82c0c983cb68cfac5c3b271420ff40b8353818cbf33be
73e0be51b9949699392c75991f55c5c56d2ffe29fce44b7406af16a788aabbbf2c8a4aee
ef23cbe310b6a4aeacf08e59ff1bfc276a0f76dd1e54337fc3feed8d4ff3b26bf12dac7e
cca80070a74f91a4e56fe599e03fc11b8818c031976712e8b32c980c4a1d31e928df7746
dad814a6f1b2a3715dcb45fb255055a18f36b020537fb4366df5dcf1fba6c45ee1f062f0
fff1ac51729781a4bcd1a01b71d8dc25153a3e8f2aa165dc1ddbbbcbdf81946e460c85aa
8fe75a309bb7f1f1b14aea1aad5ac3b3d69a6deb1215f767cccb523cd1968cd6f9417d83
71cf45810e89b5faaa8cd455877ed8648b2b392cd73225900cb6994762b1cebcd951dab1
3a0ed0016819b716f5f6a0449d3b2ac6c9e7f11dfded4b845a06b1c8f038e38aab838955
80b861c471bbe4e62f3a9dafb88a7a659148bfac8468853e50a15dc75524f67c2461021b
e6f01c5771f565e0c26cd1b3752c108916952b0f4ec2c9af2d5d69a0f6e253acd84c2f75
e149884188b5acc807639941fe9e7f97a01c0acb6e8f559b4bb24fd0f61b56457a9fd724
c7c1dad23f4a3fd78d1eef6bab1c7e9c48f0944b6b9edbc9d7ff2c33b1f47fc499ead58a
cdf8ce4015bc95a5ba244a69343f5d0637d562cbbe5f2bc35402f7b73de0901fd871933a
f1f586a069d16444a67219a3be4c049a137385bb6698f010dce068c7f465ec3c45046af1
286eb8c4e1e40bf7e827ca57e9cc378e679210b17e8d6d63a7d918b5af7c50287f333bc8
c1aba9765f2050ecfbef099420d59ab2fa5183c7ed0094ab8facb42deea82da5dabf81ad
85e62a6a636d11a978d888c38c286d79d3f464a72558ac5acdc9928ed38f4792dec3ce8e
106068ea3ed71de5688c8c45496a728348e499204b75a7f21dcab0933c2f4e70479bea2f
bae78ec5e60dbfc20693530f99e8185fd9dd54bfd0e78500068fd406402dd6b1decbd5e8
f13225bfa20883ee36bb8cfa750dde4f105b900f3c977d559849a91d10229adf7d2aabd8
d65eda2049ff20be817ec7ed73d847b3678582428bdce00143027b4c12a62cfe8ec14423
ea98f3fc5f7c2fa9ef93548d79cb44260428ed8f6c0a651773653877e56e649446fc8452
273a58a80701aafee95d96774d2e35e8ee047972842875783746e95168c2f7801fe7a145
d7f039f1f649db83bf4deaddfc4ef904bb8b36143b74390769a482ba0bd78d651fe607b2
7288b982ebf8825157b00a430cc11aa2629cfa06694cddcf7bb4afffa7c0c8cc5d949351
0f7de754485f760884c5293fb82c88847871c2a8a65612b5deca0310ba43486e0ee1d8f8
82bea905d4a42919fcccee2135204642c27993ee4c0c0a9842b464ec7710a38e4c319b64
3292dabc2ef3430a3ce72b9db3e39ec0cdc1157ad13a7c24cd38746208c6780b8853a7dd
6bda9875c0e341a93e7919bc5f0c98cab42d7777c760c932850e0c315de97d8c4eeac2c1
780f814241e205c90365589ebd93a776a63d058be6b13c8116fa3896c36cb220156da179
31f0b3824513ff6ff864060604d3f6196e88823fe001bc31fc8bcbed11eca03256c68f59
240eee926069dac568a1c11840de214b9b64f542dfda7af0722f359b232c757440a51820
e671efad6fd4a35ef9fb132dad587d5fab410144647d2e90699f274bd86c01c84feff07c
72cc5c15d91bb1f904ddb65e4c938c6190b754f8a897d83e5b71868f3987f4724dc35e38
f5eff95df7d52e680d9e8570b8226583514e2723aa16ae77ba00b8b0fccb9e80285827aa
16b0ef0f7501457460fbc6215f3616a3cc90bca79b61bab4d26088867305b651d3a4e7a5
7d68be29bedba6c3aa8971c529f69aaf804924f5e748bfbf40d88f88ba7f4df35d99b0f5
271021efda5c6467378aede10bcce03592ba946560efd60ba6fc0c4b0c9355c00134bef7
5b1d86129d39c755479d845211e78419e77e53dd6cf25754ba6922804e364fc91af9f5a5
45f25c5937c023ab4a1a5ec3fcfbf088e6ac67b55e834e6d1f4fc13cd2748e9b8656c574
a76891458b829f3543bc6cd9839e6e6e470823fd415b9951a2aa91095a7aaeed6629687b
1a287a6c6ae8a58ff08481423f35fcfc6ed0dc1704dcd3b85366ee8bc8d5228fb8592e6e
9d811d4d3664b8f6b21ba5ec6515303bba4e5a52ae68873812effc0d82ad340e22574cc5
e8944018f2644be100a09337853a9b90ec3e57c76534b697d79bac1d6755773698e686e2
652d14a23dec662a292b8ed06aeb7641cd159d0918cb95d1c747912100011cc09ca7f181
196b77d6528116800aa2b25181ea540e671819200dd1579f6bdd5c1f0a9b65a45320f1c2
c893119fa6b30aa873c242b31f3d85ec85217f6efa6dbd8870dbd9051652552c8881d8f8
5f06b6aad4a09cf8914c2ff978b4f30c8c6939b3c49024df98fed8cecee7be0eda79cfb2
9cd2036dfce78b33c600293f0b61304afffbe31732f4c64f77579bf7a69518f1165e7abf
1902c9134b926540f7248eddb0fe908b3a8385b632df5c11c4fe44ab912bf14d2677136a
99eaa66aac90c32634be6a081a958ee501c27ceef73d1e04d71a1c9c539c103240fd14cd
343e44cbf2bd8d5ad900401fd03da303612a08c441a07f7155fb10a538ea33328757f60f
464fb17255560db1e3d50e51cf2544985c748cfbc6d8acdc1c60b2148af438a7477c899a
2128620a561d06a6315fb99aa4b5f245a6245c75ced1d320eda968f46be61e7358850015
c772fd0d70e182ab93a9d60cb8bc59ec75c2b8b235398694e89eecb4626eae65d8c47ba1
dc9081ed5e3bd049443eedbea66a615a572e1068dd8af9b9ee1235be1bdb77b2c5a8cfcf
fc98f87fce028d316ae41d147082d04e586f4862230f29bc2b2b3d5f151f7d5ac5ec16f2
5003cc4a5a729150fbfc5ee329ecc7562041f76c2e6387fb299e5c6232a3a9a98e8aac74
684a0aa719d76fd07355a86d745682e2cc5f9d4cb7c45681e55142b8481b0e2e00121f72
38ec803e1e6200815375b93c72ab8ca65567a93b85310a10313819d5ffe46acddf59dce3
a374635aa80affcff7fe8e566f0586650dcd809ce6c7772bcd1c7a0ece906c55706de743
4dd218ad75ca4ba766799b2b35edc8977d7807c779653816dfc7c0541e5e0ec11366e154
80c772d758f19d478d919d1bb636d28435ab60034fdf1c26c2af145619304a48400144ba
dcdf142804c47747060aee2188a8a4d532a5a586467b0fbe32eed5a57565a20711bc5a47
995f4353dbc54447613713e64972af7659534360b46d156acd968c27604ebbf0ba0ad42d
7d257d0465533aedcd44215e86ad35ff9816d2a86fdc2fd12bfca25dd19611cf60a0730c
f48299b9d3dfe3fc21554eb585035af699ab4af1c0f31cf1147db30af8c1535e4ab08ce1
53829986b7bad543054dec9b76789848ac800fb817f2f170240269412205d79faff4c094
7050f0e4d0192a1ce2919ed585c16b26dc41be6077bb57c70dd54763c291c854ca24d2e8
8e9903019cde6ce1dece343b50749ac81d97edfdefea89e37feffb89a15be1d334643acd
2ac0f95cdf111c529473d00a5baaba55c74d9b581ab841a8ebbdf9f228fb03ddeac5aae1
50729c9caa75bd400a9021cf8450b0636297559858d7e596ae85e64c7f7324ef68090ed9
741f683646ff5c22519dd7f6cc65db9cb988cc175a69fcd0c04906aac2b2d5bf85bbb894
2006a6c26ada6bdb3a263b769a951d4d49d3cd7746fc3d873955685090014227b8cb3897
ff4f7d4d37e20d4a13e00cd7793d6b96ff5cf5e9356af712977f603a14c275b0b9c99742
0fb4c6b0b458ca69bb48aff458f2c5658142a083b9522214336fef2e5de241608d79f93c
0ece3094f49031deac39a88711a9fecf6d31de179ae3f5fba52eb3fa66b9f306b6d0274a
1e87457c1aa27ed3fbbdaa3ef4a19150288275629429c9889122048105947ce542235fc5
d692e5f8bddb1c3d88508989caccb6908d8b0859fb8779a247e62d5d20551639efe52684
9345eb33f0828c35da6db696d19599f862be9abee21a1017dba07aaf45111567fd05e864
8363cfc4abc038f917d1fbc8b4e0a6772f7424551dded68d2179344da9666a9cd5b7fab6
94db34738ab95bb1dd392a224002a47c899b846d487ca2ee6cb283f54604a985985f895a
7333286fb74eeea0720fa4e11b68f40bf47e2e66a5a62bf6dc978fb11b22321be5d4f904
a67874aa454bb839664e2c336b2945c22603dc3329f7d4c75fc45b006da95e9ef00eeb8a
c74479b3657e0ebd99b75f58a1086563d5294653a7728c7f1c92cf6bd00affddc0b29df2
c4d6631ce03bc33cdec2dcbc88d64423b6248d7f809c8eb237f4b59ea58849c02d057d55
37d30f45b390760b37b2978d4ad49b51a3df57fd125761f1cd5f53f584e13842746e6922
49bf6fcca83b48595dda2322c9d385e1ab10d5d7e2f8d3bbaa7baa57bdf4613c2a0a8687
e3c56d4949ce5879cc024f237b0e4edb7c7973860ae96d0050d91572fc7d68e7502e1043
53241856698acdd18fb09872d582b80b35f331fed5c441e3cbf6fa3353293bae636e7460
5ff3571e294be556f4e7bf17dbe1b5f52941855a030ca6014930240d166aa25777694459
d28a7f0d2b6362f8dfca6cafe0eefa4d837af558605b9efdaaef2e4916c3f3ec66fa0b43
9cd298eec16439282237d1b7a1e11b0e2f154255ca64d144751abbe6c82e06fdb8ae1fec
96f189e56077337a78b7a58deae67b8728dbf02b927ffa38ad8ab4272a0a1f7feceada1c
ada0530ba06f53fda201bcc2500c647a919db047c3636429539a52b0965fe054f561e944
ebf0f88b3fd03598829f91d63b34f6c907e9aa7a27ceb9ec863b49ea6158b463b7398833
ea85b6ccb0a52d7a116c892288b1ccb28aab64898435319a5b86a2bb981e4203aa764a02
cdf8ee1ebc09dbcfe042800e65d322120d6e95904ad93d0d3e1dbe1adaeaa6a89edb256e
26e1dc1009910c6bc2b5c0b277c41daeed4875d3fcfe3af46d90c9f87f84513deacc0fd7
84df80c1a46f2acf38c0a8a8d187c6be0eb1a8bb35e62f45cc5e7b8ca76c39bee560106a
c76b3fe517b8ffd70f6b77a6d852def85c27433f9362349df7036cb576961b4e21cdc045
6ab10587d450c92a2d5a87b12c1256879f913ad3d4e86d1d348573a6a6121a0c426132ad
7bafe0468605e64ec8f086835821daa495f64199641bfdd8f284114b802ef1773313f199
817e4dd0e90507363c940bda82f73c0bd3fdeeb15f30bf182b1082336114622039e99ab8
47dfdbca387b77848a78c5583129a7eee381040ecd2cde888dd11a497fc4af7118757267
e02cc1668071c8bb99638a1edad6047af6fd1569a9232725c867c5da109449667685d9f0
c4f83c6edf6b60b2e73d6f4b32b3492a9d8bf9e3971d36c825557bc0010c1f44d99e4e8c
f4cebe8c5b53731d69581b8111d1112273385fcea11f90de44d801b675b1d1bb2d8cee5b
fe758b4eba9995a0ab96dd8eef020d75b35f0fa98ba1e2812865a0af8ea4b4e8b3c0466a
9e3ec31a51a6d2b1a859ff72e9cc99c7b5f3ff5eb544912aa78040d012f2eb881baa26fe
483bb02cecaaa62aa8abfb4b55040542126dd8f05937df0cdb029e9aef90b6a36da23114
f63723ce5781be7c2609a6398ecad76d7fca7df1a97248e8fe721c04f617f3deb8a052c7
3e28411e8bbf3e7d7589b19bdbc76921ed9bd338a43164d966c8c17d6b2625ec6fef17de
14f06ea16419675c93bac2291f79f865b397e00064dc565125b2c62faebad78b4e3f9a42
65aafe022cd5e00566dd6ba67392b7eb0f71190907f160e27391de0ed67235cd5a962c37
796364b765e96bef20544a13714607a306bc1a1cdefee8d3cd61d62a637e56558508d79c
edc51940701a8fc538eb01c97fd88700fa34c3810f6f6190a0de470c3cc731cb99c1d4cc
6ae58520f65db622a5894be549a79e74e10e692c3208f9990ed2ef8cca3872ca11b9d493
8f0ec50dc39f8ff534aa7e94b3e33af7ee3e787f2add93f52ea16c8910f5b1dd25714145
84db1ac407e1c1cca88b1b02262e57a265649b8e5580424e96eea4db6d2e8a93347f2777
cbd8b29393f48c68bfdad73fce04648e8ceb050e90bcb5e6e8c2d19b62bab8d91dc05ea0
3e715af035a3b0a94bd77b9cecbe38293d4285d47ba9326fc0e2af5c7d14d9d9c64784fe
44d23c66c77363066269dd37fb2c7a7cab8dd7785ff15f91f36048df0f2982059c16a609
ebaad2a4525d7adc361b8248ccb56d9a359527a78490dee64f18c19492b8f163165aa380
b7a1ff02acad36d8b3f0621d812d9f6f9207ce1fc7a566c8ee256d1cb99c9fadf33e0c58
e780ed1107476f6be8cf0a3b9954b6f20e1f17429c0f9e5b9a04ce7f068bdfb59750c3fc
e849b052a58439af15f2a7b363e62c3c4308177b77caa6b2d7cbcbb4746919d85919c6a0
2f63fbf4d88b5405d60ef874541af55958bb65a9f6e3af78877986250cb616b820e3e14d
6572592d5fc4ddc75ac6fcfd71487f27844b1a6ea11124c8f761046d6b7ea2e2740cd6d9
b4a7be7172df1d87d93da464299a07a4eb69fdbf1d6eebb04fdd9f84aa7f809f479539e7
521a9e2c299302f924cef1eb1433b84c2758c17d0eaef8a10c133b08973d757206214ba2
af1f89a3e5778faef4acd05e9fc33095f8d40fcbd3eb70d51b2692d351470da469e3573d
196a7a73c92609e46dc88443ec9b38fe43fd8d9341d448c78e629f9a54e47522c3522d96
dd782579f11c7282c513329aea96d1dfa147e0dd7c38bcae3b0d3dcac5465c1175858cf1
49e6c98f8e36c58fabe0cec2ded7aae226be0afb9deb99aebe278783d271b96d93e1edbb
62e57d2350fbb6a82d942b53af3c7d3155f1ef00fc333182b38118474b79b0a4426da0bc
37034978bb27068099a58f21235c8dcac3493ae27d7e82e580691ddff483ec9410c8eb50
6d8f69853aebfa1b22898dc0e2ed8d7aa8ec2f498c4331a1fc0e6b90dc51f628d76a5c92
6afde2c561e0d7d7814d93e5a945af455efecb167bf6947b3587159624d4eef28935144a
dda295271b3f31186662117a5179491c91fb6c44d7d30b368e27c8788b900a31744e5969
9751a08e44c69ae2e5ef52204489eecfe93fcf23a6ed37a19580ef259d4c3d9d760e7340
3a491b58b79a296bd69225f8cafc5a3dfb1603bc940ff974f10b5ce164564d6f635cf168
49f07476ae9797cf38925f5d5b71c430163803adccee1ae4afbcf5ab5593cc899d826c95
ec81b940336a17b04503aaef8ef586c67bb227e8d35436670102a41ad4d3c8028fbde7d2
abb8485bf1c60dd5bdd521368ec0fded9c85921e126255a5503de9d79b54ad77bac3f617
49fe595847bf37c07fe0ae2148b8c7ce0d3c9d422f42fe337170054cb007f263d45ed374
c0047e8bdcaae838cc9c41290fb0b2537e04b3524e425d4e38c54e60aac3864671b59f33
ba10aed5a11853ad7daa363564922d8cf9074b7fec0b4f7f4445fa174503c0ed1388372e
499a2807fd8636b8fd25a76abc0110c812912a01e69391b524f6817aef29702c7bfa245a
2a94975c8576ebcede7d0eaed09709d95322344273fc959edc811886b45c183feed821e1
d18d6bbc91bbbc8d2d6c398276af6a028670d35e75d90f9d8be63d4e4d3eab1d59345caf
ab28f1d1f8ec4f69580a70e9e19d2f2f0f2b230a6a7fca05816cf59577d8e2f465ece9e0
f29f9e01170a2a285af9664d8c04b4c7ff0e2e79ce0c456a2ea40fc42b4b20685b78ca83
efbe071ba43f47567a080a5673658b4d520a2ab02d8919373d0176ba66bc77fecd1146e8
0717ce100e0dc0cd423038dfdbd6dabac4f94a3a173899741b3462b91848796857e56fc1
0b4c90500b7790e9da548f6388d9f8c6c422ff7e2da9080e7693831b34905ffd41108251
51be9914814f65b4411b141b40a9ca54c7cd81100ebefbf0e2471ec1316daa5abb055e95
087b8aabd54a4e73c982482c4b8d51645489dbf8e6da36a086ca4f665092045897ae9940
264203414f0c8149159e0f1d6e09669b0a6551f257967998294e79dbb0f26d94714ac573
98161ba08cd24a9983ede2f01e2849a73b1f1314481c46eeabb136b4422f35d5e375248c
1379b2c9c275ef3cbc2586088a0ec2244a93fd7d9aeeb5af5632ffda71a59f30a8242014
807682115620d5218d1b9ba0c21ace2fd498b08ed2ec32b45713cf05ca6f70956b7bd0ff
91bc9942f05e1c38a6011d18576eb4b2dfc46d8fec9a467fa2f213c2e3ce774cc1dba204
8ab2e1d613377568990a77078a0a9297c1c1d4e058ccd541b1688639c521a413d81a8ef7
47c58ad006381055974cf8e906447f2bbc911a44a52fba83c2d37bda3ae06fb162122339
2937ad10a59bc60425a3061c367786486aa1d235c6e02ade47bad4944e581bd401e56445
89bb7442237e3d691accd1cd198b2962e9c50360cbe101ead254c371d5be9b8699a0bb86
4221573855fef69aa08ed6c73fe0f18f8a3d912b52691f4a142c2b38300ebe5fca60e3b2
3cd0b5583f6d5371fab28ed47eb03f67079c4e9956c4c70173db6cb5a8ce78233659afd7
77f21dc0974917140a14e1478c996ecac2bcb800a434882a02a2ada2c8d160dbaa2d88c5
557dd0a92a10a7733344bb86d33ce7c1e14d1d06846edb51ebfb1873e988734c932a9a2d
84884a13d0b1c9dc9e0f2d1445c3fb9b43d19a64f6ecd9a021607b2a62f6b734dfb89d8b
8307a92fbdda3ae37fbfa37017f077ad94039b1d2eda9519959010096b0ca0e487352074
d6d1f6670b87d68db8a019eb291ccaffcbfeed7a663cc9c040b17851aacf2f2c2b299cf6
e10d78705c06b00ddabe46d80312aa60faaf138f1d16e045d9ca75a6328a1290146cf960
87a4d28c6dab268bacd1ba46a2d5edb3dad5039d8b1fd2c568ef8879ba2a1dbd62a4dae9
f5c18cb5e0a120a979a66675c42480f29a1d67892841e1c5d170eba0b0515d7229d8e62a
c81de81261c1714c9c40ab75bb1dfde4ffc61ce748d3326d463985d4fb6bae32e8cdcfd3
747660758b93dbbc2511dcc83452d89794342aad0f2eab3e3957c919b565edd0317d65e4
002c6db6e36871a3913937c404c61bb671231650d8e3fba981c99e7f9669ed939f4f32b3
0c97a8bee58aa967154de52bb9042783ec9e2ccd02af63ef944a510401f6c872e4bf4ecb
b07d243451486ebd8d35736fe36e2d287439b04fc66230d96ce138347b0d025648554e11
debd1d9adc5d449d439dd37daa65ca74c9bd394d032ea23e4190fb11a89124d5920fefee
ed0bab6354ce3afbc1e9e6af45cadc0b27695d66cdf4d9f8b1c80e49bc63030d6eb0c0cc
b288dd426548bf9e64bb932d3a7f5c9997f797ff736591faa0e1969fb1211d35b04ade05
89334e9dcb599b81113e514f15cc4ae5b96589fdf7b553b15b44179f72258714c4914964
5d39fd4938818aa26f02d50150af00f9e0d13d0b5d362e24e2ea11127a7782161b612d83
64281c6d23e481cd83a3f347f82ff72e118232fd6b49885918208c63f4602c273cbe042c
36d9de5f7034c706c7d2ddae6d55195876dc83c61a853d3491cf4054958d65f31bef5d55
daa02c31d11120996d0dab65730df03bf959fba040e7b77d537d04c8bfc4443cc6b8c30d
af1087a1507b2183f4e7b2684fbf7a833c12168bb87b4713e170acbc5536b50768b876c5
3f773bc63b6835fdc46616c6aff7abfa3c834119be6a989d01b385d4b1c8f1090b0f4e52
d4cb68c6259a47850096463b7689f6e4af142ee699a01678574810d8e0908ee2e24f68df
3a1e9bcbd39028cac475de84b33148e0aedb2e030499ae38516bdc7fec02d0f2dd8f43cc
583369a437ee7b5df56c59ed8d6cc54e7d41293784ebb1efed7864df99d1aeeed7ef0f0a
20ee8f8359dbe86d95ec944c821a3ca2bb0141a3b8db1aefe859c29357ceb438580f3f70
e53672a1589d13b0651394aef5d1e8d156f074db3e0c892bd1050d41a01fffb684f0fc64
95b8e5c1a2202cdf3c0f5c60450d44ebd2d2eb72a67c6c65a1354904a04df14b3f731473
e41cad7b3c1685a24810a78c1ce9f64df67f3f693c7fc241fdb04f41bf83d485d7988bf2
bd12d84cf28a0843ff5d505bb2e44a361fa422311cba5cd25f00a7370c6926b608ebf8a9
4f8dfc351e2c0463fc0864e69bb1264463a3c8c0a53e7dc55857cf9eda2004b04a614acb
97f8183ade049b40a054f75b71aa3b8d12d79c3dafde365effc29d9b79dfe52b39fb7750
930f604e082b1516abab055966366bc25b72b82616a3852d2f9eaca1c64ec64bbbbd625b
0e348574a826a5b35279fdbff1670723282db53014c6412620203b39bd49694c4a2037a6
abe57bf36e8913b94a39746bf8b807713848014d289937522147c8d47d938176c30c7d00
28fe2b304395dbba67c5d38fd3b59a4bb6e1f4b8050435e2335b1e85774e62d246ec2856
2a4fc477f681079c3c884d28c094a84572dba7bcd0609fac754659f4a213a24938fe1b46
3fe526378f0d579876e42bae35769640e830bd6b565d9e20840c2d99517a04c716fd9703
f699f0169f031edfb10636bc9edffe31d60f9616957dd98438817ed7dd5508f1ef638341
eea6c17e7e0eeaa1cee97308c20125598ac61deda708578d949e8f65ef63dc472510e3ed
11c15a4f34858f35edd96c58db744bf32719843a8027003aaa3e565f2ad41e2ddd5787c2
3ebf70cba005159a60dfd933948a8da86cb8dce4957945b020d7bd4a9db91e065b1c34c0
ee41058633d5dcde66c432c41546a22f00b9c2c4a853a73731b375e20a5f891ee66e78c8
6f20570e6fff236ebfbe604392a2821bfdf2eb316f4ff435c85403cc720456f0c573f9d8
c7b565fb3d0829d0c6d7ea66c71417d844df9081c65a275857e85fbbef427595c70d1219
101d2acc8828fac9abb2ff7620bb159f019fc6ae6394843bb274e3998d18ca299f90e35b
5f78531909024e9f1235c8b1eefc60ced24f840d8df66e267ff99529e18a2ad27cc073c2
4c316b5317e8c797bcec888177ae3d5b7eb1db67ccf9cf4b1469170b25f499e5acbf4ea4
3535f679f3c6a4a4616edc353297a035a26ba4a8b62f9f20880b419dc03072ee46ed88f5
1892d4968b033c58e4686bb621fdadb42bd719ff32724b2db78da4939c7726b2a0f93fbb
457fb7e6c9491d315b038d7b9d0acc55d6aee2eb9e73cd2de788c7efd4577af827760f06
d7769d270a6484318431112785ed6d1472cbc65562b8f8a9385496a5e4ba81219bea1717
95033bf8e3bb01881c3fa3f723f6138c41529c4e7ca4b2425aac3e16c903f02a20377800
1c0cf6918b5d80f07ca957f74fa2b373d9db75115d61d7562540eaf917787a24daa993a5
b25a9b6d245d84b621bb96aa2a0a58640a9b8c39ee7ddb06ec57d53beab648263dd645c9
d88c6b110a1dd59f7e94d5156fea5b76400c6722eec2282fee758d4b545ae355a71de5a6
2d61ace36cf5608c439bf7830091bfda5f5ff2a00ab75baed42be9acc698f6b15b40b875
de1f51a161c33c19a1e4fcfc271134c62fc307e21eb80c5c3a8f782967eedea9f8eccbe4
254aec11ca3e11412e04d7c131c35a7f1ab1561560726d0560acbf39f9f4c0aba7bbab45
e75799bfe8ac0561fce4ea553056f1b19832e8722419a0ffb61c456d305b0d7195831a8b
33efececb2a91d73d7b59fb2e1876c0a930e7833dd5070f85cb2df7ca8096af863ea83f4
41fc1a0126ac4cf75a250f7fbc30679fa3d8101e459c909d03d281fd5cc2558210f94d42
c95aa8b5cf5fcc755b8cc21b4d030025c784c2c5f919c047117e6f9c7a741e31930fe35e
60d36893c5b1b4ae638703ad19ed724ed4b2d68be66dd85e6bc6b1c5172a64e9e2cdbb30
9744a1d24dc1f051807e2f999de4bd70675f566ef63808e13d04ee9b4ace60e849c3ab80
c0f87e886b56be363a8959a501de82862b9bbf62b61958d500ca51c448b3dcf3caac7aae
c5e3a7e5dd0ba711bdc0e4e7d9736b58746fdee29555885aba9de7d2394f10de11c51c45
f6511f9e47cd9027d292cd719e6f520677d7ccaeb68a4bb55f84272aeb5170d31c7058a9
0e0e52d130c77fd0f0bdb183e1ffff7e3ae9f86a55e4270ada92a83ee9e0058a4a0f6bdd
88165cce48406856ebcce17f41f0ace607f8c3a9186dc3b27efd645eda2016c6514efbbf
c988e28f65e4f75bf6e7665d645b855d9522ffaff48857bda8fd05c54a8633ac15944238
e8bfc4a3addd58fb287eeec61618568a50fabf2ff353b0c6ca17e8b1a551b4f3b3638a6a
baff5250f03ddc369d78a8a4a3a86d331f827cf41874a1e327e991e5d4b351948b1642f7
a63aafe221aa9f886466245823d2b3dd904d9dda158b579773de9eb8b137b2105bed904f
fef904ee628e8d49b7962dd54a374a50074273f9a0b34b2eb35eaeace66def2634d496d4
a75a69a224b757c51c9dd12d211e3c0407e6e5e82a7b93a8a7f8871b67371c6f965a4cf0
f24c475455dc94a14186a31ec79ff73ef911e1959e38981e71aa9f05dc7533313fc24ba0
7ad379eddb4ac16e79b2ba2daf193b3e6cac70293a0eed39be152553285ab60516717981
f0df2cbf21c994c4f55a607a31a0d5900266f899acfcce8160292c3e94c82a96632fab98
2d37b36db9542009dcd5da0263234ff356c08d3d3b34ea7804ceb7efd999c18cfdfc9185
8ea70da5de38c0e7e31b6e195d260fe9a9daae97b8a599142f5ea2bc42c5c851502d2403
7719c2c125b1853a54294da61e756b754727dbbf88504dd18d8385298a2a7119341057c6
ab561bc12a5da7fba465f7c3ba8167d3727d9ef9394b0717788a326f6b9434fa2b1d0b75
08044ac1e0817d23b78ff7db78333d9b8f0b539f2455a1a1926bd5b7d73ad93209ab05ac
b3da3a8aee68c686783b81dbc8659ee9fd496e085330d04ae9c6a673df0e5d6036fd36ac
33dd49319731cd46e6027098086d7a8c655213860550be6797c12424877f6df0234233de
4462114ec4ea00a0ad78520e77777ceb1aabda83ee4df4326b4133b54cd3e86f7aea4867
a1d0f96138225edacc46dc1886dcc40d5f110421d17af5e1a6b9c80be1a336efa23f1d3f
e3eec13b08993c9796cb84773e94d17406e39b317fca9fbe0f5ea84b0426b6966f133c61
90754617471d581134761a991b0c310000071fd714731259bfb1ebb1b50d7fcacca41a8e
f82ecf6ef4cad863aab2faf7b463772dcfea7296d69ca088b7f147d1d1fc80754d5339b0
ae441fbae9d98c212c729a89a4bcfb0b4064b156669d2a2e0381301728a42f50045dea70
c172a0bc66797199c1336fcb99d59ccdc23088b76d46a575e2b09f11c17655cbebea4365
9a752d3b2d14eaa55d6e23f98b98e3e5ef5dea7bc4627f5d594a71e2400dadda0d2d5272
4ef8ff293488768773b6842c77383581813a1dd59e5b0207fa4144ae82413ab64d7743d9
6818ddcb6784b436541ba9f4ebe1630e964133d0c9b92209fe1b65176fc15536614fd1bf
9058117d8dd4792c50bc115693f9d18f30de5b36c07b3cef08
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont: BG-Maths-Symbol-Bold
%%BeginFont: Helvetica-Bold
%!PS-AdobeFont-1.0: Helvetica-Bold 001.000
%%CreationDate: Wed May 15 13:45:15 2002
%%VMusage: 120000 150000
11 dict begin
/FontInfo 14 dict dup begin
/version (001.000) readonly def
/Notice (Copyright \(c\) 1985, 1987, 1989, 1990 Adobe Systems Incorporated.  All Rights Reserved.Helvetica is a trademark of Linotype AG and/or its subsidiaries.) readonly def
/FullName (Helvetica-Bold) readonly def
/FamilyName (Helvetica) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/Weight (Bold) readonly def
end readonly def
/FontName /Helvetica-Bold def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [ 0.00100 0 0 0.00100 0 0 ] readonly def
/UniqueID 4830886 def
/FontBBox { -170 -228 1003 962 } readonly def
currentdict end
currentfile eexec
e8dc61728071abd4d5bcd230c4e186dce095a0ca84ffc476adfaa82124268e60d2cc570c
5f52c10ed4a85a71ce8e5bcf26aa13b27d7fce1cc0c72c3b848dd5ffb2d56d06a1920fad
e4ffa3b35336627e9ed1622c1f9652956d4a424488b4c4ffda9936442bbe0ca749700ae9
8a2bf964fad088f0cc64b7c1d76742f25e90e759aca624a321402b1d20863faf5e04b86c
1ae66f450b1586041815e52f13d2ae539f1725d11489898a83a05fe04d6d14bce66e2cb8
55496ec301a39f6ba7c0d012467ac65d822c5618bbcffb2d96785a023df4633f9e290415
d0c7ac3764d5272578e36e48cb517123334340038183efeeebca23844801a4e960fedbdd
5fb9f1a31ea47e3a96292a77f5f22e1aa62932aeb3af27070f9ceea2161bf9352851e9a5
e88bafc1b187647b768ffc5b8595f42c72898fc193737cbe0fe15d6b9db4e7205d1f7c43
88ea53ebf0dfeec09a9da9cb886377c3b065a1ca04d0fbc49b61273186dbf20246414d63
16fa8de5eef2358ff6bccd17b925d0d2dbd9718c66c64c1b8653b7eab86fcc1d78e22c10
40d03aaff272e469f43151bb3f2da1a7f420779bcac08d5098393808ba25126b7976fd06
4deb177429fc13b226bc1646ff0df9b0c9409fe6fa35303a4fe90bd6263393bbe2265e56
53d2d0adbf63f883efdfeacd71a6b2dce8264495b2565af4c3ae15d0746004780d527a14
39a174c5105f653ad9c55b062e0237010b6b0bb097c6b20ed737713bfb9ebf016c85ec49
13fdaf84e835df5629f7344dc84a0016e860aeeb4405987d91249fb8d4cc5bf57a30815f
383eaf5af8ee8fd34bfba5a5693764d9f6ee862cb4bb49173246e1f7265a92240d345fa4
7e0ecb58d4595d75fbb09c92b4523b21c930f535bccca52c37d0ab75e0545a55529a70a7
165862bc713f418c3358c056baf98d0fd6972fa001b119782de5ff8a157da59bfce059a9
dec2fce834a70cb109968e61de39770e1b5681b719b99558198e73cc56c29e65cfb058a8
144c8f3401ab3765175acb80f5b0c4c1c4316e2f0af9ce852b0530eb29651853260fa675
5479eb9133ea057a20b806845eca050a707667fca2dddc3b7652dd000ec00cdbceab0422
b1efa2d5f756452c2b37d8ef5539f2a64d08420134620e43422db1914ab76156a938c1ef
d6a36bcccee5fd438788042b629f0dc97c0d1f5a4835ee1684803cde84fd094bbb25a1f4
e007e243bc03af867c4f223e8c7959f4f01297893b89060e52302810599156a8c72b0226
428efd0ce07d9d415cba8f8af13bdc325dbc060f1770da8eda0f8844a5779a8cd5df45af
082a9925bcbd240fb7e694edb19e7c18fb1478ffb20547a2a13c2568753826c5da754901
0c95304e338a84d53f97a3267809e4409e031b278ca8b641d12bbab537d24fb8fe749d63
44dc0852cdaf812b1156650d1c60d147458a00217501e897cba60e49ef3aae83e9b54c8b
99b8838444b6101c4be2ac56732834eb8fa4bfa0f03192e930c385f5b3fa611703815431
046d7cd2f3aef605aaebeb622b1fcca164c188a7297503ab1ddfda1fb6087bbd855a0f70
0b30368e6ab922032e419d0471c00cef0c30455136479bf1caf3ee0246c7ef9af24076e4
9cabda704ba306216b83aa21ba3655c83df5afcac733780a4ecb4f1b6ea6ea852017c42e
1c7bef01f4dde894760c55026d17ec8c40b273fd37c54420189d0dae3898dc3c8564aac0
5ad1216bf8d07b73538707dcde9a8a12347214569a9d73aba10498e8a45e2896daeeabe5
953884483be9609a44dd132944a83475d5bcb5a38845bd9f92333f7fce99fb7db027c642
971c2b5112d5217fe7750e42278df8ea6905aaaa342a797f09e0587a22209227be287d0e
d90807b8239e729ad04c59f26a6cde3f45683a542c106f7c08dd76c4a26e5216cf7ec0df
c810c776a544190ff3f02d5c5ce295a12f13af7c2e190e0692de41609c22def0193ff027
f96f1be50cb4ee7d7bc5dc26f9fe7a4f8a6fb8cf9bfef4e7bb31b048b6d06ffe70aece1e
b7849a57f399389c4af67ca8409f3a127b6bc83e61f98caeb5b53d5f4b03048a82f135ae
b0103c94a53ab3c4d760777e0bd6bfdd2c711a62071c02624aa0988ae6709974da8d8b4c
40331f4f266c70e5c0077ce5523b92bd8af25b672dc7185caca0f46cabbeaa79c7ee8f63
09098220e099c5be8aed0d6380beb9d02c9ed3eb688fa486006b5842177ea0ebf07db14e
ea4a3e9636bd5130d8b6d4d45b982b53a90d9cbad2eced04328de2573b8c8a77469188af
c1107c35c26f70cec008f7245655948d9e73b90b68028b934a0661b6ddc07a0648f59837
ce05e278bdeb308b30457047c6b8f0af4132347714b347afb7aa1feb0a4aae78c7f2cb6f
bdfa6ddf02324fc7f460852eafbcad36017f27b443257c48797fc9dd7faba9944d723fdc
726dd2c48225345b761936912ffbc1ca787cb0fa6883b462bd247d82a5055b7639ea7bba
929b66c27204fd836ac75b73578144157cbdaa97978dd7fc2d0d2e4cea8803a5cdf18430
892038766940e30ee8ad41b199116300a67cffbeb447b691e5cf16c5e030e2d69ff0266d
843b2dbbb2ded5bf56901a97b48cfa0e3af22c866bf1ce6e289293dfb125dfae463c8fb7
b4353093bf48a15342f9742fa4319029b9458203e39f70f63fb21357068acaf582def8e3
80c32c04afd4f356853c17e0879304071d99bea5918dcdd65f0b4a52b1d32bec5046b2be
5a83ca9f76da7c93636ee42a79e38dba2e0af378dc30065abc2bd6a01bb9870239007673
81f3e7d4e44e0885732b1a15ceb9cd1e402f087d41e87d65aed08fd292cff81548ac9fb8
70dd5b57352d89b4f37375d4a53221a761ad1487b5c0606fc6b7e5c42d529adb4c5390c1
cf8d9aef636544be70215ad2bb2158a1fcacf25aa38cf99e77666cdb33e7c0a96562d146
273c8533591ffce9cbb2330c973c1f39fa447353a65a01e1fc91be3bc00c33a50c99f305
5d991025c5cb865d2c728153ac5478c61173326ebef59f31122dbd47ddd2baca4ae5f3cd
013aa71c0cb78022c314b46d73f56050a5b040f8910018824e4ba6ec1ba76176843d91eb
3277e6212e0d7fe617ce4b55604748ceac8c6e60577d5d0fc1ea922a595f288fde24850a
af9b048f227eb95ef353ada665858b5661a49974933ecc297d856d8b4079e2137d4383ec
0eeeeaa32a54a3ed57be256cbb739ca997d78c416967a94e10c3dcd427534c2459a295bb
d9ae5644bc854ee57f247d7c0f7825d3402c06d980ff4502520ff4b01d319d47a6b28bfe
cf1341617c915f0a54a3404d960229dbd35520774cbd7774831b18f8f7b97883396c9d07
e824ab7c6c5640318fe7dfee039ff18c7128ba3b5c1613e2626acc5624bc5a328c37f809
88be711ba711121f54623bb1da9e50daf9e117387155045ef13003d0a7888896f0dd1545
d181280359fd9fae57590e10119ef3b60dd2caf7a5e8a9c1e45447c477c974caafdb0567
2e3ace71426a5232d130ffff9d4a958659da434873d725e0617817ccec3bc8c40cbf07f4
04516912aaecc81321f725985dcf5f351711becb1e69d2729c82b8ac0e241563bd3bc648
f8e8e5950c27e49405c1e538d528dc796a8171a28230cac29457350230197c11c4b6cd01
ded1db1d75c7be443f57b4cab22f5977cd9672889c213d28d0ea18387dd6ae1ba9c947a1
4d1d866b4c124b3b0123ae312b9c33ba2e01952f08bc4d03e2bebdf6368a90805684a6ab
e9ce867ffe3d06b9aff001947c9cd83f797c02db625dc2d4ba589119f6436912958deeeb
3636b3cfa726dbcd721c203515a4083b0afae4b53d04fc713ab7eda301ac47ebbac53730
4d2cdc4444c2f8b7ee43da36a104a6b852ba400b7c4a43860912fdc593a255d810395052
98e2b9431d21a065fee8acf2096ee7f5f538052b7a04d77387365475a5cb68f5950c2ac7
047cb58b9938ebe884318083a67fb6d5743cbf920641d6b888ad4923799a101bb34eb7ec
a6192459583b269dbade18093bf687f91a8621e28a26a15590f0f2130c01b20165a40154
7ccadc5b123f5f84184474321e6d2726a7d1aeba100b5240eec1ab90fef02cb64b286542
25282721a37e1fa6bff8775c709f7d0ed4bc78a3b5d9307eabf9c860473b4e54eae7a449
c5e18f907e5268f230dce97ee93853b2a6a346ffb3a3d0636b1e285b831a0095d93f9f69
60f6b402231e304df1b158c745e9396ab0ae73207f0434f88a5a5abd7c9e36512bb0c512
4e03d64c736ea9e3130ecc75dbdf24e2adf8f83307c71da2d2248643a1fc709420e3b94f
899ffe1446e1bb7e392985da4c02e0ec5256cdf1709c50e5a087b0162609969aecbc4923
2580d52f89e2aea19acb089f9e4bf64c1677b84da9b9e33a5848358d1b407691bae637ea
cbe24edced7b1b9a7523fbe09f8cdc70cd2ff3655e6856bea2997c7d74dfac97cdf084ff
76b26954b676a2d24c83fb1ddfdd2d5285ecae9c90947ae98dcbad85a0768ebd2cb84bf0
bdc71c16c47c48489c3aba0843cd88ef13ddf7dfe9b14125bebcf81232b9546dcd308623
e600e4d18c08da30d3ed1b25e0fb3ca6bc38c9aeb65ac6852d020fe018268c5ee802cfa2
14d7e18d9633d6774334555d2f8e231c7c532202b539ca605cd9c91a3b25a8293d490545
03abf65fa5ac422640e97e8de68a38062544af87a23a6fea0228c436ddd5fd930afbb498
e241503f24e3220f25371e412ebf4f140c11f71c37accd176aaffbb9d93bd5a3e3e966ef
1d37a0b3e50af41b7067e7af345ed6db585b06191e10dcc7d7b9591d9c37380ed8f88195
d2c86c994b5dc643f02a67cc4889d78f50f9c1c60784b188aa872913e6edf5fa9d83c1e2
1703e54f3f32a4b1d33e380b608183ab92fb4c022a542f9e9784180f8aadbafff82e979d
89b79d912ad14177dda165e9a3a524534c83432dbbb0ebcd6de8df1a0f782bfbe2f91d94
07f0578782a9932e2a9d8944c0813b96d516f080969b95d393b43928bc76ea8193098059
14da586f88c64d555aec8d4e78c5221cd4eece8bb4589bc5e992a573a424c1b17da78dd3
8f7a91751744c20ec7ccef2b27be624f066b58dbd011e591e91f581f8cc1d90400e99da5
196873b04cbafd37d023e23c088e35aa896a148546c72684f97297e0f135f556abc97e17
f8202bf7172620471ad5dd711de2fe35703893cc6b6cf921f02e13cd320737c91fdcf33d
8c9a795934483f4d548554cd46bb4eee9e50acd050e4eb08d060e9366dff7d73b045bee3
8ac0a3d5087a5ff4470f18a37782c4c96b2ad118bd3f08df616fa021f0dadc6cdf945a3a
a4518a40224422779d058cca6e6a0904de3cb83e3fb5c9ff8c190529883c3a6225663cf5
a3ff088c0ef40a625b95f516711cd9471f48d99cd9cfb2c1079a351e815d7f9c071d0242
7ce0bba613352408e0b60eacc89b88ab8df4bb16b54bf79b273d740521c3b78c4dd45668
72b07402a989cf0aec8f9a3180b64638c00449c724e93772b0c90fe6bc51d2d9ca462968
ad3096cb33ddf2022d08ba75cf498ab036c0d4a0718e3afe9b268c46d48b5f481c05288b
84f7f5876132de0905a42b8017f6187d847d67f1f016ed72dfe3d5d7c51e1bf8783c0de5
320e051bd5eacebfe0ec77e1e984b3a0c1a233a1cd6f936fb5898f354a64516c5789bf99
50b51da9118649b2d69c000e9f247910eb051d4935be3c916f40b116a94079500698ef99
e2c27dd42a5da84a26b586868b714e3e48fa717c627bd40e924561cb824b90f501070d95
715a139bef20130174d688c644852015d59b0e0a52cfe11c4917f4d268c2a6b60dfae5a2
45d25f6e6bb464201389316ca0b28ef6f5863a393c6991a43c5bd21f55a940c96cb9394b
3b2efcf209b0c3ca4f6e10e60903d1a3c7c2c2ab021921a326e790045c61ba8fd995cd1e
eae76465051c5933b6ae269c418792f9f1dc41636f72b8405def4f509e72221ed44d6799
6d4cb26de0ae549d17eecd01981aa803090a037ed0f6ca6181d4b7479827b12331141218
52e13c84bd409e27da1cdaa08a8315d8675c7cf8ae5f12ef9c859e2d404581355af02acc
3496d25d8f925a632022b153b0fcb2fc1b0bb4908bd7d1df8f0a61c763b19a116d3afb57
0671952ce1c40a6a407c051ce7fc60b05e37c4ba39f267cf73ac74ce6cffa54e53d57fca
48d1d3ee3885e3420bce1c54af7ce960d397021efa9856b35a5c889d14c53989fb0447fe
1f7ec4da9e71a58b730b936067a8abef801053b9c55a37eaaf89807bd55a40c7d024445e
9a5d31df098cb2d5066ed141f84cdd329b21a54f7aa2bf2aae33ee6439cbecfb63870aa0
6004c31c7dd50d15f51aa05c6bde529a3cf4eabd0b1a98acdad63a156b0c4907f2642fd1
66d8d5500d19f8836a78375b4eba0f4923ecd04ef26b11abbd1dd54d66c7f544ff8327eb
e49516a7a9aa544bf8f909a7a021d5d25cdbd713d5cd9f47e46cbe251b4abbc9bf7efa9d
f8c97ae9d7a5fd43c3c6bdc0aa9be5402db471f1c84f5878a17c97a978b06ff21fccc00c
0472a775cb7f39bd58cc73274264e23cec31a89d163950b3b83b98142b421c2714164477
263dda87b8cb33d5c42a44168322112cbf18b6cddc0435f57ffd92635ecc4cf01ecea8ba
1f7f4366039479373849a719089314aa57103bb7a61839176f43413a283694ddd2db7eac
ad226c191ee6d2e7b066407e99f5d54f6fb51b4becea2601a14e8437146985a57cc8d7c1
541664159aec908528f1d731acd2441a2de7cb48a2b6b9cd7848cb59440e8c648f07b93b
3fb0166749eb6af7ca5c05cd0ed5243dd94941dc7c9354f24c35d10773d81683580048b0
bc5faa2af55eb364bc342d77136632047c7847f94dd0b5eba046c84616529780fb867631
ae745a4f86c71573894fc80008d8223baf85b9ce33c8bc242fc88db4ef02eb702813b7ff
9f47d944a14eefe93bf95918b24108d39995cb95af0c6f1165708446c9d4f0467b9672ad
4693e5014324da56deba3035325e78c9c307f99c3ed049956c3cc60e8164614a5641c33f
705d025cd7778c872df70e0c835a3790ed71e9bec209ef9dd9133bbaa340fbe4c396ca82
ab4b8dcfac7b040297cf01970e77c4d4b4c55fd5a0cb896527141c9cb1a19313d03db772
1b448d576c3eceba4b6227df83db03fdfa639150244c75f0ca1b7e9c89f7b85daf3f19dc
eac9f98ccfdb767eb6cc44617a86ddff693a6bdea614c0437ea1dd2a2cdf020ccb625c7a
43bc5415e4177110abf48528633b2d9bcc9ceb47004f9e103cac5b0c9e70547f12dae241
ce1822f8445705acb5d7473e0e2a51f245e6093f763365c3f6e4de0b45cbafdd464bcec9
ac54b7dd9c821fb83193ff2f39ab088eb22c10279eca90f26d01e928623a2e005e9247db
44825cf6ab6bcf73417fe213b08278f9f16de5d66d2d3ccd7c5b8eef7825749a7fed7d28
c84c038d6140383b6375d033f01b5274f5f29c2f553de00a1dbef5f69cfcde82b825a837
986de9dd1e8c023c379999121148bd900b660eea88c76a0f982c36f4c454aa4e47ef85c1
0b9e30d4d45e836162e54be69abce874d0caa8a000a89abb2ca7ede74ca5535995310577
d5dc82f75b580eff87e8abeef04b8c9ca0fa64af3dba36ca28b6613f9b82d3b905877faf
75d0bba069afe9ae5464fa0ec5c7935f46d4c7e419bff1c0efcd7e47a0044a0830e93f8e
c4374e8e27493fc04093e366d2092d4ec2fea94412d929aa4981b9641d453f4d8750666b
69dbc3440e03bb35f9787d9f20eaeac5433b97c2ec0ce500e89d2d1eb0a9043f358132dc
50804085efa08c4b06ae21a7c8aa497bdc7d571e5e75fcef6d0c63d30dc8b740fbefcac3
7bfddef0ba72925db6fae40016ffe2dddcf3d63bbefcb53f9df4ed5e9f956e19dfcb922e
6c3d79fb4817f6a56d43fb1344155ce5b091a0f9cfb933943ad254199289cddd2d79f425
311865644d37fba7ac2d27f25919a73adea13fdecc823a1c63fb54bc35d7f026c228c658
1040a3faf6391cbc0ad5f631d1d36d646d7eae7593155e09d795937c4b6034eb290bfc57
bf5121f936ca9514e5831a67f1b8a94e34fb5a12db34d760d7e6466b7d8030233dbb3c19
cdfdfe3465182a298e288e81d370f1e51cee4e82749aaaa0ba0294034069ed2776f17986
a2acd693158ce885383191f95994ed92c0bec80fecdfc35d8653790561587790211afbad
255b183a42ee1bea439b3225aa31707abc686eb1aa239e971e247c0224ba5b797dc27982
58ffe6d79d38359c7ccdfa9a2dddfe46b360f6508c1747bd54ad828082578c218a45bf03
7b7a76a9ce391bc7c784fa5a4468dac04e1b651ef69eb9c86b336dab94dfca4b5098bc67
ef2701f459f52c05f28cbd4215034104f8bc1a96defffac0c99ffa2c86b40b346ea0becb
488bf9c48134fc662bb9774d7384447822a572a6bf02d947a77c1bcfcccc3226ec7c0f5c
d51eb5615835daeb2f85331eb85d569402ed20559a3c808f9a57bf13ddca98327322341f
719da1d47b033da4c10e939a99cc216f94094df29f280cb771eda676e3ed87c157fbca3a
faa8428135fc3ea8323e1ca77374e1719bfee84ef15a6644a581076d8803b7c02db7b7f3
8a47bee233ecbf94c39a5ff2339479386dfd147606d0143a4d9c7005958ef703afee5a23
03e46fe75dff6ee10b4150b4c6dc50a3f246cb316f85782ba90ec3933e4348952d6c3a3c
1cc4398c50bd830566313b7b8e8ea59d0d2ddc13b0c1f53c87d419f3be020501bc89d5be
cff98a59b13efb563d7bcd39a226a1f0bff6afcfe0cbd26290c3f6db153601f7178af50e
91da64317f7df3eedb1a9628ac1396ea6f7c6c2510c45b0fd054570e0bf2245edcee90d1
d1dba77ddfe744b16048495d5d38a6c3f19d989a1322e50203d20a228b6b6924a30ebb43
d44feeb69daefd66d078dfe46da6b10125d13d9ebc37b1a8744c88822b84bba65d47cc18
37abbc9a65c7417e189a49cc0406a91ac6efb930260be33061f44f5c62bae5b68ccb1a86
a7085c82ee7b675db1eec234a935f891a50762316fdb484c1fc0d12fa4d034e3cc74cb64
e2072bb16c70c444c224d1bde77599722b5d67a4b657597c9282769b7c704f91a865d87f
bf60e9412b37ba0ff6ef2305335d28ca56989a45641bac785084dd3d3e996ff89dcc81c0
31d87c28a8ba233b2cd8d2fa46baef0b1b41b30e960a72406d1ddddd66d98c07eaf730f8
10b51266f2609e0b903b2aaecda9a64b9b46b97fc85b8dc535120b10068ca86f0f92c2a5
0ba5bdd7f404b91041aa53bc4b4daafc1dd1314254afb0c14279ac8c91b51b5c9fb8564e
e842001dd29d5ca2d2710ba5b237a9986aa4610d0d42a8e772cfa67f94ddc8d06c4c13d2
2c354aa0f979a5730d91e89f31e55369581fc08d1aba073c7a41df8f1522f7c681344862
d255d7cad80001f966507c451a7430b69b6c1c48598645cc9d5a0e8cc46fd92eb72c0e08
652994ae11a355c2096c1fdb757f94c94d6e0bb2b235c82fbd9b46ba6ce9a0a5fb2af09a
95bbf95346370d5db413bc4d0377b92a2144b4dd73dbc16e867c5acef5b8dcb32025d11e
5b7c064add4f42740f27ef39d3b73f908ac805c5cfc6b64a5e7c991ddf470abddc27b3c6
d4010a4b7cc6ded93a567c7433b8236c095b6caca486893d27cc9aa1bc189d440d4dd8ea
d2e7b4b2fb024516811d15aeab19455105c73116a2ca0f5d99a230b58e1a71de4449ba13
f6bd26f01d99114358c8e7cf9a906e9c88f71c4417510cb79804eed351186b81c062de87
54720c7c11d4eb7a68ed4cf439d2517f734e811676420844c61a37d2f095714349879b3a
56507c9688982b998fa9b330a2f2a2dcfc1c4008cff668f55292f2f064ed8357c5ae42b7
b9f3871a9c44fa0bf6d42488e9d45f5d44c8d0c6107c3e87e11fd295a87f643730da61a6
a19f8eae03de5f35ec27b8c462a1343c7877770083cb4d7dd737755e3fd961386f0d889e
dfadd45238973f5ff7229d85a7d34758aec083620e7fca7bad65329a24446642949d9b64
638d441fcbce0d9f1746d7d3a801133719b9c775e3380b2ceec1909b006d51a91d3db885
403b77d4887f0f0bf2134253bc1fbd824dcdf54e1e99374a17675ee0019347dc12911091
16f53d18fed2bd8fbc66a3d543be8fa4e1c24d87b920f19393ccedfffd82141df1772643
16c8e5492ad43d620b33993c3da931cfa2b1d0c4ab43d754f412ba39a0064910e34e43e0
75ffc57cf5ced09cc6634df65fc71d46ee13a758a6a0a81d9ab9c7130dcc254cf2bf6831
3d7ed7118a5a27d93011d97d632befaa2a3e2b1049ac5e813a3914d9349acf7873107ec5
f2b6bf2a717c628282c81052abc941dca418a574720f8dce83aba5159aa2ac0fa3d4d4ae
48f4257632b049c558b836632987e6f0dafc48b6d0edf80d1ea79c25620bdd756aee1d3b
5579d1eea3d2ac2b99aeb4fe48be6ba35a4f9424f39e60cf65f7dbe16e284d74f979121a
0c4dd95265a6604989ca9cc6d7cabe334f188999b7ef8e7298ffefd3be3250e76f360f2a
e0c0d86f2c4e6bc33daaf6274e4f776bf0f7058e875e9e33c17e14d1c5bea57ef7a0e396
581edf587a88629ec75054aa0b2bdc3179c7f8224d85213978685f7f467405422c82572f
3626abd18cae828ce1dfc7bc4f6f3af49f426c6c9a023988fe61ea49fa2a2bc0f3529f3f
f7ce026690ebcd079bddbaf6d3f34e0a0a0dd0407a8761f1408497e04ee302d6d94b7b07
8b82f50bcb813192afca6cd208f5b9d0763ce87a57068ae2381b3c8c13e54c17b45a49d0
9a528fefe34552a4db6f9ca1170b060dde081cc1416d08578c6e22d20fecc122aa020baf
e35a005f3299d5456adabdbd18958c1e3090aff60b0db12423b35d7d7b6da3545080a681
78fa4210b6ef5be5eca3c3127d38151202052d25a030f669fcc921175ad0a1717826df34
b9bc6fb3bd898482534e57ee780ccaee0ad5cb18e97a062e1254b7ee61c7a15ae492da73
dc9d5d810a90226f8f83e11d9173d8c75c04bb5a9896b47c6db08c37d46a8ce8f16fe6dd
add5626923adb27ebd53a5343bfaa5360245a52a184c543b4d36122188fbebfdf023aa04
a7d3923a69d90c0e1fdaa4f9ffd828ef72ebc5b3d0296498f7105d5ae2c6f90b36662e3c
551c1749d859d7bc84730e671774f064556b3d9c17c521dc8d37047ca1924437de093376
b13abe73b0edb7e32624d2c561acab4f6980c3919b79fe17a23ab2eb87c855ce3bc3242a
b55d68eb74e49deeb3292b19c554e3e8ae7a0034cd6808fdcb06f9cd9d8ee49784910a92
f70fb07e60397349cf7601324a009e83466294b749b0d2740fa17824a7ad4ee04c68d2da
1aaecbbcc03188ec1878f40ec82d684bdc315624b8552ec54eef52e8b84b6a9fd6e352d7
41d031b1dcc20061e9606fabeaa889eb56a09147903163711dc09a1a2937629caf5920b5
f48e143589046d6d31be5230ffd8b1e71234aa93e58ae5dfbcd0ae7eba411fbe61ad55db
75fe630fcdc940d2d59c703ed9e4ec12260ec6518be6cb426d5cc65261b6670fbae665c1
bcb3333167746de0372d9665e6d9e0e05d0b872cbc8b75f96959cb1e21e9f9156616dab6
d69c6b00cb9a1d970bb1cd0e1f73e4114852e28c0c2abea3729da2d47b2988a54210266c
681b82cc277818d4ee02a9dec0a65cb3e00b97e40af8a11ecb7c8da46cc169abcd3b5b06
afec7b8a81b82968679644f88c2b52025b61a354f0a5129c617365bf353dbd51c696b3ff
63073f75eff83d088d7a451ac788a4b0ec935ba7519cc0215c05390f4ceb2fbf9aa69d54
13374bb921caf0b7d1288917ea676dd1f540799eb6c0308c1062c1fc3b4ae33e49a898a2
277712eda75b3e44d75e27f022aca46da200ced45e084c9a0e05259ccfc60f6a1d31bd60
d3db87c6609c4327d1797a1cd0bb5f4feeca1b5e584c386fe7f62134c0abb1efbef36fe3
ea788a172686cf5b86b9fac8bda2da2ef91db5977dd30cf4bc95bce36680c89cbcd62d83
59dd18a9b452b59589ab95c2f0b495fd9e802c9d3e5730d61b2b4c9ab37e7e8271f30516
6b14188cec68b4c528c6e71d23d952671f9bf0680c116236fd92078a2d7bad8d5c68586a
4e7b924f5f565fabecc9f508e3e0409ad3c69fdda9d0ac8cbaa7de84cd52d0f9e7ef50b6
30c2006bdd413e6d70a058e9efc4d8e99931602eba7bcc146f46079eda3f6d7ebd9630cb
ad2eeb977ade76a1393d7aab11e92fdc0915b5354d90115414c9d66849f1d75e63576053
0628ad11e5c4cb68236ae705e26837fec44298cd222aae82fedaea6d538b4f5c873950a5
7b755f0793d98be7375a7c4b97d3995540efab4a1b3dbee4f06d4398ba2d621f0ac7509c
fddebca57f498df4458bfb085c6eddb06c0d6c1364d5ac54cc5063c7a481fb2d453769a9
4583ab060adcb6b37e85342782bf706d8f4022af0a4cc66b1f0c33bf42550ee8a2414123
c203417ee730c34ee6f07a2fd40d884a6a29e6f124b6958042be5f1b0b238cb06cb41dee
6d1a6792ebe2e927683d287abc5983ccd1ce280757c9797c233d87e774b9c7c810227f0d
f750ad329a810822194956fbf137ae387c373366cac4fad3a5bfdbf9276b06fee36f9fd3
06df1e68e8756899a5d87d868f91110e6fba8ae49c00bc2ba838fe4b7abfca5d54dc9547
8df5fe0b19ea8ec118809937b5c9f28780f315d9595e19611cdf4e59026dc6722efe62c5
9464394d87ebe0a7e06264f89d59ab0d4812c1242881b4deb4c11030a1f3606d15fa0430
354a35d203634e5317c3440f0945a9658ce7c5a225b277a02480b99cc349ef30739da98d
fb06732c0463ceb1be3a11456884c8a155c584807a57bc064568c5a04ad1e6fcc981ba07
1cd377ed901073c4e7bdf7e02f5a017fa1787a380a34887be7e1d70cf5a3de0196dd4b3f
fe23df51624450d31309eb5f22683d43a97a2ddf78e73f3d4c8b56a0c1f834a3bd72d006
5cae97ec03e17db71d11f751739e01761c3d824c74882aa44aec1f76c33244475f69166d
d4caee3985c148553d9904177871578e1f4245560c855ee54e01284db03836999b66a461
94e08b608c656f6dbe37125344f2dc9ff8c6c1c57acaa48f1c286656472467571b805da6
2ccaec97a0c6212d21d88658a511fd3804a7786376b83695e59087075bd05b975aa417f5
c54f084c24ffff6205cb4268c8d51a4e8c0a8decebb15bfb80cdd106be43cf82386fad6e
2d07175bc1b4923a2d81ffaf3032ed3cae3690d57704b12e8faecc9ca8faad43f2252873
20d2ab9e9478c50dd339889ca1109dc0c5e8910e1c907170ef9828d1915ea01865e7af88
60f05a8a8419aa242dfe00be42ca7c539230a11a687ac2a36587a5825e669f68b4159dd5
636510c2e6f2811ac2c02a950f5ec820b56420f7dc5eee85a405a7cb4eb5e77a65bd323c
ac6e4619d1bbb62016422051a522e6a8a39fc137be22b839e089f4ea714f1929fc199cfb
c112baaf4341feee48499ae755f9efd03895c04641790e749bb3db1543f1cd55cb0db1ca
ef5e40d7be99279e96612fecf12e5f7b2acb1b4fa8600f092663de711ceecc34dc3f44a3
a6c420e5196fee9fa4a7d157ace72e8fac0c54e6b2a44f9406a0c4c71b72b3e01f681dc9
df5556125289dba84b1f9c6dcdd11e4ee63cc058528cb3ac78b52328da6d5bdd72c46fe3
aa435c9ea328d21eaf0356a54093a146e60601ae989f882d93470e22cca341d4860da362
c907f4f3586b55733f2e06e377ac89e61b16ad5b139cedabf933e78ac5e730d82e9e5407
8544434287ca25af4c9547331c1a0c0d3137f394ce4c8d62a56b36cb239854f51d0afa45
3ef682df46e22718b4ce4bffde140be3b467eae0c930fb801ec9352816c08cf363a2d981
4dccbc7881b44fc5819876e9d6907428e67e70c010b6f78ca2dc5c5b96e3748139d4ca82
04fb8322a69b1e0b75885e04a9c87591622abf9d279bfd59c955820be3c88575a249a8f2
179e5d05353852c91e13f7412e8ce683bbc4b8cca891f09a99328de1f2bd36f700db0745
6627a649fd3bc5b44c172670d9e86ef89df9f0a4eee0004ed58e537f037c9a0d352a0655
e6c8e0b1c7911aad034f87ba52aec47458fdeb88bc174becda26825c6487961e277e397b
ee916cc14e5b4c441d7de2b66f05cf816cd1af53188f1f4dade1300283ae6b762c9de8cf
97770fc8821d1084b52bd5450cebb13a709c662c11f4c241b92138575d0b03383395039a
83f1ae1d193cd3f42152a19558c3d77c383583c2ac95df0aa5987f7516b3d7ea3266da3b
deb65a6c8b475aefd3f291aa75ce949a6d34fdcef95227b93ac78499a40ce7a209f03af5
27747e779f26081cd0e8e770ee7b19e3aaeb04b99b1a08876913d3122c92055f5b2c15ba
bc67b3396d297d4233d10b98d4e796225e7e85aebf0a7c547b3350ba751037fd82729965
3864f503e4d7683642810f66436d8a3c90f5d9d4694dc455ab9889b067a87671cd6d8beb
17e1397a79b103d9d89301f1962f6c80f75b7abef6f71557bce5f904414b7a14d351ce41
9b7aa37a3fd26c0074c8160e127a2469ced749d04d572532f5d78498ca8bc2924584c2f1
b4ad5fd53d159c1dc1df5f37704f0e95528b007b0e7ab42d3d579f02dae62bf5b37fd4fd
c0a2e19591000d0f5730555556d82a40ce6b185b41ac125c9c64b9eee6f535a532759efa
68f74a65e5dce68f65ebc182fb56ead8bb37b99e335e54f142ec311e51403d2adb2a206e
65c296365c2eb902ff62d954771ccbcdf8b5a00c6e2862c4ba50673169379e968a557688
6f69213d284047fdd37da2cb5e4465f017d7550cba1f34e6c0c4ca90636bc922c2db0d4c
916d5a0d6314e05d96022994625bc2a03fd7965fbc9d8990a875bf4ee0e0ebb2dbf70829
5625295166997016a948d5f7c07830ed1d82f8f72b925d977a2f9abdbc970e2823d8fdb3
c01118a33bc40b2c49eb916111347ada47390b955386b02fb31be4ceb8767e5da4061f69
04b2302600d90fcd57e5c0b93364317fb4b9dcc6bae1e3879c75513f1747fa1ae9f9bb76
7638868fa7ad1932fbd2083e66f35883c4083c292c477ca8a36c26e8ffb199ea2d7ebb92
2f7ace226a11f30bcf6747445c60b1fd9465c1a49e0260c7abbce9f1ac5709ebdc8342c2
7e2828b91cea036014ad042b62e805718caaea7c8de1cfb8f8f0b404ce4e374c58d028a1
5b7d3a7704d446cdeeb48475e4ba38132bd5be2b990c5570656ae1860eb97d78e4b9527b
3001b33ea5f8012759b6db6997f7f2b6972f40384a99fbea60d9904b4aab1916c32e3879
323eda259977e3c87fee85a43da8a727cb8898277ff2198ff002b5fccb64e696a13b2a95
2cc20562b271035c016ccab5a01d7b6316fc5f01a426adca7320f80f2be6c6f0b2314661
fe760cfd7829f38aeafe1bfa752f8671dfa30796b25816030ef2630820482e32ebc9af2e
7d4980c063015c61d3b891323c1efaed7d180b0a465e9fc512f16df1116f6b51fec5a3c3
668bd19babaa27dcf7908ab62a66624e98a5b0d1822a8c0ac9e42e5afa99717dba6d9869
56191eefab697dce954a0149ad47b86ca7ce971cdb8a29321034a383fe7abe47ad798908
370b6bbe054392a57e94f7f6ad949e8412c28a9247d9e41628087a3811f34a5b9bd91444
050c38d676484918c435182c0da05df41c1fb756dc440b0a918412ac8aa5b9744ebf1f75
6f10d051fd6b371a8569131a2cf839bfa0fbaedfb081a2949db12f8cd2f39135b5963396
354084e1abb7b47562be7c6e16a2be8e1c288f71ccc0b3983b30c9a301111409546fc354
175d9f0690fba0ed8b16ee031106ef975d7ad7590202800778f658c5f4d8428209da5d88
60eddd85acc14a52426a442f90fe8a7acffd765af667a212ccb8909eada1ec0b0f98df88
409c297ce1d094824b4546feb4fe424db18c11c0512a0cc157c71bbcb74873bbd1416af2
1d50b0c2add872868c9c057d686edb2de401defe48cdb64a6f39b043fd58e0d05f1d387a
b73e39a3bd2202dfd1bb05ac50f585c5eb61f3a17c0f4185ba66e314355c9eeffbb05b4a
c02daa1ca2364f438ad5737678acdf8c6dc5dafd153c50c76db01e7af80ac430ea58e285
9c81387eea341c544166e96224ba15096423380bfbe65de12806820782dab15991a8baa0
907babfe0ad626a64409cd61530bb5ee8acacaf6e39ddc4351f4b0775cb13586a7c1bb82
3845060442718871edfce0110c6ff51f03d89014a7aa52301a63e72bab14bc79757612f3
9872d30e41efee3c3f269b07e30298c073240cd95d3a8935f2d4f13a75340d92468f6ec3
9e60576762f7cce0f406c53ac34c9564b0883d35483315344bc8b6566cadc95b5aaad481
a20b5320a0f97cdb5a2677ea64b4c4e9a32774861d7896752631d640fdd0571cab4aa028
22c66358cc14d3aba4776a889ff10ee8131241b52965a32e2f8984d82460f052e3afbb4b
aa3915c440985392090dc98f43eca8d712cb68e1e462f54628f0f3907ae5e04408548eb2
29a23594ce9b9f727188ac773b17673c95159eef407b2b2ed9084468a19d631f766c24e7
01cad6b223a3a647ddc9990aa51a6ffc44869a8a299d3c269d6895f0c269b8c457decac9
04f75b379bb09a97403028947c62c0c638f967f4afe4a0a5f9e1e7dc475cbb75f7c7ced1
539c5d3756578ea8f6b7143528b9860fc2888363aca3b3e15883723a545ae3ce559e0a21
b5c607f1aaa56c7e89243612e962a426df81a52ebc2e610e879be4c088cc34f29aed20cf
bd854398862928fa2a1b53e66a2af307fce6e28ab1e2d763cd229eec38b9373bcf3f6094
6a1bf00cb1f9cc8b611fe8dd7b4fe6237bc0805a1e931b3d6307f7037b74f194baf79d56
41004e83260aa1c210b227a1aa28ffa472e99452b5649ba2413237cb83194a3f24ccd441
c08550eac66cda3e95c60cb48e98cf0472c62cbab9ab818ef2319db3adaee3ce24830004
131630d5db19cce85f408700de01b7190da16dec81fec61f5b18d2c60b0e8e1ff9f6e3e1
e98df2924cd7fd3a809ccc72dc6c78bc3eccbdeee83516a7bc591e0d36fde3b6e336f0fe
bfa1869e5625b115c3330d3fd177ccf2bb35303e67f0416cc25cfe4fd33af5ee50712a64
88b232e12f3b89d294f28ca9592d2b09ff8dca452a308ed9811dffdc03af7d3c497f039b
a231b5f605676d9e44168388c524eac150577aeb1b3457fa5e267cd13ad4fe39a298c518
0b6ac4002d3d96a3ff4abd2d03cc0fbb3c3649cd2c4d7e662945ef3d1be480b68d792650
def8c74dc1bbf70f5d1fa39b9c58d0ce6964a9dcc4548ad293034983f73962058c8585f8
2828d79f3f74c25f5bfa38ba8a4a51fe6fe49a8fed87d4504d844f8b94021606f4ae17e5
6dcc92fb5de6da640a9acbdc97d6d5a633cdff800700f816eb0ce50267ee1f013f7ea83b
e4cc2683da736452b7514808f8c065a0aa8338880023b6c4316469db28e6d5be9695aa15
cf8701d9c695eddda5a69297bfd0e50f9a933c286dd1a02f5c54243234915b2ba6158d17
91213f78fa34530a4d526f56fc93526e0be78ad00203463cbe8992cb204585bab252ed6e
ee4baf0bed476d4aa505d82cb89cccf0b6488fd3c013871653fa74a49170e928d9cf8bf3
f3a035283f91fbb81d59c10c527b1398cad74960913b02b478e61371da8f3ff89a4e59cb
50d273f20f8ea087726a74cc0e691881bbd370ac4724075da8a675b6d494da8bbbff8f9e
5d22519c1a60de4d82801f56e75d3abb15f3c8f51e6daec9de15e0f294c49edb770edf5b
c78f297f85a8bb6a58179b4bf7205cd8d5310c8a4161582f774912c30f293d660b2ebb67
e2842d4db36af19331a7e067f92f48415d385dedf4e809899c3b670c19716d6cff8b3fe5
6a31783e1e6c187edef02ae302b774ab6b99d9b8e0804d5825b8bfb4a0509274baefa7ac
ec0a724c3f736c9e61db4e6b4c648dc72958abf7f6b475b7c70cc3fe3c18ca2dc90def2c
ca649546fa185e6244a0adb316b8c3abc42e5a14b5e18dbc98950e6cfffe42fbb0ba2052
09fc296195eb2ddbc494fa2a5d7a14e6bce83ad3c9860723d4a09aaf810d63b38ab8cd99
3023d6101e2dc40bfea69d0da21cb8f58632a1a58ccb8b8c1b7be9e8e60b1148428b232b
3cbdc301c73c2086edcb95f8f347fd0086df98cf6e589e2a5e4d2db9da2a8d970ce8d18c
feefa3f493c880ebc98409f868a026714b6b9c232fb853e5e33abc5c858085dce05a72f7
6e47dff193a0dc3f7eb342fcd2f28a48443100151a91e5af0a6a69214033391182d77771
3d525e84414a980d6b0949bcb2fc5e9788bea361fc06ac9f214364af4deaf09bdce545f4
69b61a5b99c6e36b4b3538b68fa982e08d3a230d4e116f30d9efe18f0fd3ca39c7b4ae8c
d11f58f69dfe25f68a1fcf9f99f4332170dfb35907a46cf0b3bcf92cac27caf27ad69dab
0e80090d53d868d009bc86ac20a23aaf94d4d90b637dda63d5cb61540e2ecf424a2596fc
caf523ab4825516327f4c4d41b9e6bfeb151618d37ca0a608ccff2476c73df48634ae477
88aff79a9f3b3305dd750c07ba2b1215960c6a19b4d03550cd2e2ec717fadc41a2be8d2d
baaf483716098ccb7b95ef316c5ba6741180849febdc890bf32621ed205248020891b58d
d91cbf61f690af0fd9b3cbacd4d398c356f13daf05ad5ad74d3f447eb17c3ed6a68ec094
7fde358e9a61d88ddeaec80cdb8e5b376bbcf401968526619c36397c56f295a76b49940f
1915d22d4c9a3100c4387b2f712a6625aaba055e6820ee1c25b8f6bc542c406c141a3132
5de5056eae1e80176ed86be0606dfdc9317dd12c4aaa9ae7afc6e847d7dfc5a4b6a51ef3
6af74483cbb896d5ca2d2a2fea971f7f49de6bb9a3a7b3dce44f7e94aac24992b73d7ad9
edd19161b97d947aae5cd2482dcf9dbe5bf6f371585463189df3ed0f915a334137c92a50
8b06c7009a9f931571469c3378e2418ab3661fdbbb8b212a3a16bb98ae672e1acc352a24
cc34b7130e64236227d6c439c52c83029433923c9d9c21d2930afdfc9659d0213a5e9578
d0a69ec94932bca0aef3f9018cd630d8e219ebbc55b4c6612fecc326b39175e5c6b2a2be
d163e94cf62f3087540fe5244efea3faa6b51a78602410b6d9b0391f52663bf8e1be661e
d2b7217e7eb0e3fde1f46860b6b827ec0726c8831fc3262a893eca83753a425afba961a2
50cead56d68e4bd56a05fc356d25b585f50126fe54e910c8e8cb0a72836128e32a86563b
bd555bd30916b01668794b16f33bd226a4c8925e6b44615819fdde36cda64c752cd2156c
387daa3f3f9a9069e17d96d0e0ad72fb8e7122cb8b61960a9e73ab00c6f931ee74fd7d2d
acfbfca6f526ac734eb143805bee21e3137d299ad15a141ef870e74c426f0bcfacbc640b
5233936b65de2e6b6c51987beac9727fab5a430102474ec98486fae237f59727571d8750
acc494c35cbb32f3e4bf1451f1473bc8bea379d4d25560ff3b058b786fb15c0f382f8b74
52221a536b765db615b7972c990f6cafcaf9101bc42cd77f7a90c166f4fd4d868b385602
101b52339c44a8dbad40217095a2789f0ee8f4cb5c69fc5c4ecaf4d999389814cc871f0f
f865bced5b9d644b3b5f14895c3fc403ec001e459f9d5cff9aef6c6be71aa90e8f5194eb
353891ef8f0900b79b762b1f759cd8524722393f263777d2425ad22e3b8b6025272245bd
f05efb1d2642ca8fdf2d4f2a951bb50e7f8295796aa82d986d27ee60cb11e8378af78bcc
2e2b7d735c1cf86b9bfaeff2f0db6ec9427f0e58d4c43839338c75e923af8bc7143f0046
0bc6d21bf5f53cb8c8b6cbd61378c1ece4a1dd251841cdbc6388182dac34d0969a43e11d
70270225e10ff3fff388c9cbd33c93c29fb7938e612da7ba566bd730898b5f465bdb5805
acfa3db251e7520d4eae9263cdec5fd93baa0bc4000e1f654b31d9b0a5cae7c27502ec57
a42fc61098de8771ed0e0e5b63bc622e693144475a59de1e9fe056ef9b0ddc70337e695f
612be08a6034f2911a6795c10dfdc645251a0dd36eb70f070e3ff5033e366c1f0f01d90f
c674d330fcf91a9067ec4f130228880f72054584465001d481ee053337edf2720f95505d
ef0a62e1e4cc71ba9bbd9ea14e110ac52979f56d24acdfb5fe6740e93eff948f288f393c
1c75f8540a3b2c431c8ff9683d16a94787bb4099ba4c88a2477a8faf63222f7d777e8a21
5f35d71e9fbdbb5176c08acbb27f2f3fcf2b7b58400066ac14b646380084ed7e0da82481
9440228e532c4a4d9246da1192f2addbbb41a69f188384205100f09b2bc889dc41f53358
de9c94bdf5cbf1406a420b70ddb24c4f90b45e83ad01af9dcdf7448a14e5971cf6d05123
f80374ebc28fe1ec44880de1e18a55169e3b708815d4dd5af1c29af4dc219d1f86df9575
cc5a575ba8d04626bd6aced2dc354f0e2ed9a3fe6ef67f3cfc6cca78ea8d9b281c7c2bdf
c95f0c11fa430726561be463a0723e548fb358fae72df099c317eba75beff3f3c3013b8f
6767b735340550407410fe785eb229d706000c4a6a9cc970eff71261714139b2428672c0
7c5391a2385ebb8557f0d4b66ef4b644d5cb5e62ed713c73001231b335a7258f39719f90
0d442ff339a7197136b85b3230313ef5070566f47da5f0f317b182a2309536c2e047b6d9
a8043734e76b859486358ded635bb7ef641b52e564c92060ec4a23f91b1bf3492012621f
ffababe90f3fe3d0f3ce058d359cb5fe57e80d643d518f7dd79177d64f92fd8871036071
c945a816a3598a0e6fb782780479a1a37017f0778632c998d46250f174d70f833329efb5
d17e5aa94e85a5905bab655eefc4bbd3cd380308a5961e01728b163fd49c321ec66ee23b
38ff4ffda7064feb0c2bd3510bc197f4134aee640643158b2998745d15ee3cb927ac0758
5f07b8d14742d9e2bf16570f6397f8331743c0875f3eceeb59684f8da0cb420079812295
79b67c02771caccd4adfcb74538dc3b36ac4d961a967d7e61abecfd79d455340e7207679
8f6ad6a5687c54e6be60e131edab4a79fde8ec0ce16eab66228e79b2e597dce1a36111cd
1b915eff4c11deb77c6527b38dbbc983b903b90178d8384e16f12d46aa5bb7595cb5fcf2
e65c8d7c97179bf3a6b83deaa53c2acbcacf0fe59a1152260f782c8e8250097bae415bd7
0cba6e6ecfdfa479e9ec0bfa3a434dd1d5214115c5de1dd98ad356277040358ea56290a2
49b50afaa57ff286a8511473ba7710f53c8ff4d8a50d98eaba19a6db473868c194fd140e
1a2893d879f846f4845f06aa694311a0359419e4d9f8b44cd63eb8c290a0c737085794ce
844573d2cb970cfaa3851a11c23a39937e6e68d29e08e6908afb667cbf4ebb09c9d65eb1
c4c8875f890693d56020cd4d8203d0aa7531a3e159fc9d18f52673c053d3c765377ab81e
f12330702b298a4a109d20e0ce6ec87c91931d8993f5944dd6bb90c745c426693f13c54e
da1f34147a2d5b065e136becb60c591e1b3ce2e60763a9e6a8e6514da39ca69118cc08f6
80f703f79c535e5646f4ee9f4971524a57009ccc3838890e3c8c7fa51f0b0aca89566ec7
4e432ae86a47c30ee02259edf0f066988e442298b594bd72bb05301bab41d2d572487a4e
e3f5d8e04d387dd1c755e422c253d51af30ab03b20ad147458cee62fb95ac341c970e193
0fceff2365db4fc58e40834c3780d22d87b3347e11b10a62270deaa2085ebe50c5f5506a
b1a639afbba9736b26cd68d49b802cf057ca9973d89a297ad55cb5d3549b01b08dc1a625
f6571e272108c3dd4dd136b8c192b10351478826da12c1e5163035a7d43fb181b6c8b80c
bf9bcab571c2b0adb96634243503aecf4b1e8064129733c7bc5d9dd9251858c3a24aa391
8fcaee1cd4c06a2d4f9ba9c3c3c99ac45094e53709172306049f40a7bd245ae0e8baa8e2
c5e3de3d4032cf8e904ad499f20e68e6f3a00b57d90e0d41b09f79d032d9e1a95477420b
a6d10ec018d9858f049590c97910cb238b22a05a51e41c8e0e4e6dcc4b337da68e185b2c
fa40abdfa7eb644c5628885f057f108860d37f4828eb74d6b8b8b8f804cc899d12302cd4
a471cebb4e02865006afc88a547f3d7a6b487fde433e63279fbccda1705310478178b028
fb60f189fe9a63f5ced8c5dca682f3f87f9c5c8cd952e86dcb148d76e86d94930213c5b1
fbf51ddae241a3a3d21629a4ae9911d763a8a5a055f88b16b430d2564df118d5aa81236b
b413448b360f85d9069b9e8f71365237284b764a8673a4ae348a07713499254a44128c4b
87f59530c356503ce2174dbd6b0d7e598204e55735c8cb61390b0bffd2e6c6057e96fb7b
b582750584b4ee5f32c92459c76ce907eddaadd4256ccfc142f0f0a3471850652e2cdf76
f485e8b97eba346ff81c088c9ae155a53cd61a74e3dafd82df610db5f89fcd954a72db81
8ff14f7a8768ef9ea4eee916d6c15c9e37c2494b3a01928837d1c9bbb12a4940b28f65d8
1cb45ae021a8f3ff2c5dd1520449650554bf577da6ef7784529755d509e8ab7178ad3775
ebcd6d5dab966290905cc82f50366df2b931508ff6453f3aad97160dd89723657ffce065
a339367e7612027225512687611e80f1095fb840a2ad677f7ee62a70b9eb933a4fbfc222
ac3f9e342133996c052d52bf6d12e01186b8fd8ec286a7e58352c96f92ad9a037657e56c
8fed11e4b87ae89a2f7fc8d4d5c19f8ab7431814673c736bc5b72047b91c2ca957736d9c
7d5b3c358df1778e7c90d2ef78eafca3dbd884cfc1269b22581113bd708f33c131ddee47
f251f88c10160c8c25288594b39e6bb98f283c0d6a309f39b1572f7844b6c8ff469e9966
e1c5a9bba140b0529d33eb40906caadb3910a1edac98f4bf055a52712c6ac9f12f9d9020
fdb3763ce4f8acc8ccf0f757528acf7ef96aafa70eaf1087a1507b2183f4d967e2347c22
1c5d2d3b36be058910240eb9ce169c20565e6ac1ca7907fc347082580add2336d7378106
96be6b614affb93c9ff522e907fd77973f6eda4a53855f26adf79f03d132d8414a6ad309
142b77e4aa6c78d6bd5040c2f6ec9babc7e364e246d8fc2c1a08db3c52aa9531354118f0
8e5adf7086f8420e6481d89c415ace8e73ef60173e00def3daecf5bb2ca715394ef64927
c791aebde0e887e7c7a2e0c330e04894b53a0ce102b1aa45473444851a9777487f3bb26a
e06a5824fd936635402b1a2caa491066fb97663a2a6a4bc84302c06952314ed2bf69d561
c336cbfda9733e43012e6aa28dfa74ae0d996d3be843312b30fbc3421b563bafef297b74
082c6462570bb7b8cd188a20975af2effda7edeb6c5847c587a5eb2ec272cc24d7abbf3b
963f3cd64e238d12c456ee9b17203ea11a2327965fa640521366a095e53b464e13758d59
419e3ff876bef027474480d7215232cf1dc7139c0dddf116af63cb9dc1dfdb8dbc526720
a4f810ab9548d8e06db4f87f20d80821cb5de1a7d76656bd7c4714a521300a732a6d52d1
54c545ff35def26f9070d8bf2b0e0e1592ecf80cece7fe924f7fd8886adb2fff8a37e32a
c5325e2c9df76de15756a64c893dd5393f668097907172b37f43db9fb50274b90a5dde44
58e7b8b2dcb74329adef1e7fbb76988c9080e5ca367a6a3895c9babd2458351b98b681e5
873ad921607ccd5a5c79705ebb960f07447aa4bdde3f418b0e05e535420945bea0bc28c7
ea3cf0413b61dc8b40024c10e0fde8e11eb51dbf876049d79a293533ef14a814918fec77
740b8c9c3a20698e48dc40bbc1bbb1e20707b0b66e799503c8ea974cbf6fb5c8f0b5d37c
a79c090799b6b24127d528ffb8142605375f85b8ad2973bce06afe3beecb6e3cbcfad9a2
4334c1ed966d0485e2fe55d371761dc44496adfb065e1956ed50aa16cf6cac74a5a84db6
92b6f97fe9b0b37a7bb35c8d28c030f44042c26b517bc417b5d317ab4d160bb4ed307c8f
0534563552b6218f9955420fabbeb6348e5257485a485f0af79aaa865b5b8866835e2966
652e9fc2099a2331c7650fa36a415c98a1ed78b869ee1e15af12941bfaaa1a89472839b7
19cbed1dd6eca8a17ebe7dc40049b3fadfdfd3f1b4dd7ea31a8178b0046dc68152803e95
2a516f9c9da9719be9301719575c976d3fd5221c3d337fd02038e966738c206e582de5d1
13e67b63526ea7595f2e1282edc4a42a9cb180f96e88ff1cd773356b23f4a0a03bc3f8d6
c5f747f45380ce4c5a98739410872095584866c5ae092b8415955045942c95028066110f
3f89648a3a050327e25eb8a6bfd4b346dfba48179b5621d3451478a86ca0a7a7fa9307ad
7623945ed47bd4e2eef5f565a533e67e21d2823ead9a579abeda6947cf885a7762f2efc3
403319b8df290d6054a0a70bac772149fd6e0ce9423004cfa905f79451e9219c21edff46
7f963bb8856be38930247b389e21c673e0f9f4debae0c33618c609bc220480843b2a767f
6558d04ceb2a1ab1348f0effff4e39556f75566a9e3098ad6a5e1ab2c8bcb4676c4ff093
4ee6d20ffbfad7e057807a718b7bb972a42feb8c7bf6243e48769c3cf50f9e8b1a9229c9
221bd17040fa4776c9a765b53dce6b8efcddcc4817fc84dd8d86e69f23769c6a1c9611d6
ccdb8baff0d7f46940780df655811c4da55e04d0208d7e7251f21f8d15ccdcc5effa99ad
8b7fd75c1a54c6977021c7a1989a2a1b68e1c92d0d51add928ec82cf8b01da33b4ee5df6
2193983a10cc561e9460e927b803f35d3b2f225a6205f277e587a3295637b001d2941c13
33688ec802a7327ab8616740b199d249210f72d17b6c14e4633bb375662a4229fd955c95
3b3b581dc00cf6b4626d9e1404efa7f05b6208948c33586958c736734d4e557605bdd600
74a74ba0b258ea2fb84dcfe91d62c8095912a844eef3cf6cc955b738f2fdc3c4f6776587
451c841b106b46951dddfdd2e823eb089c0fedea8a8e2fd5b99c132199e2f47c0ad6e82b
b87787cd1fb15f8fa4c8cdc914f1a4d2ce16bb485f6426455b3cb56a0510384ed3e2bd70
c14e05832e0c146c3e17eec7e281d253f960ab6f736efe09ccc4f57300ed385d5eda8e51
1a175624f854ffe13dc6a53a429594ed3255c6826581a3939676d86f25a0019b82d6d9a6
25a9673fba4da02fe908836a4679e4b8b5bf6d72f3157146970a9d24bd96dca271226b9b
3764dcf05f1393bf6948ecd47b9bcaa5a506b9de7ce6974ea3c1c3e8c040ed53336fb68c
139e6aca537b1c57a6a074ba04d906257442cfa5b09b73e650cec3994ef4b9b7941e17e7
e0d554af9952cf95a11c0124c4c6938ae6d67c0bc529f6adaede6a64fde068634b7f3b5c
001e56c62276c354bb9f9ce900edf18be3e76978c53d44df1ba5c65e16130eaaa587ddc6
2f09984533e5a3813552a36ba7a7c0211cca0d4e5d47cb7390afeb5e4dcf1e9016b4ca6b
89df60f4cc4411cbfe3a91bf0eaf912ff5d2b71972b45c541b1d1681ac0b8b1e27991e7f
42eded3367327425b08c30dfe50036714ceffc9021eb0ebbea101f69446177aa08e2c23e
82a4a6307f93c8e734476cc7a74ba8ab8b50707760a885e0f923ae6fd2cbf9db91412bfb
7ecb473745f9dfee91e6bc097026ce0e11215527f98c78747598b7e991e76ed26126f574
fb6b67f368a2e9dce91c6663a6444a00662b97d031a47c8ef7f3d1e651a361e2ddecd69d
4f9f48c50b8f83f06b1ac691cd03e717b0d291a144d05c291e9380b53c73bb2eb827ab54
6cd57e1df4632e82338d97fb65cae08eaa9238ee4a70db82a59e226e8174f26b1011eefd
7a78f0aa65dad2a05e27eb78047ece96da92679aefdb42fab8f1afffd83fd8f8f0123ccc
fea1629ee62583cfe10a776cfd06fd53836de9fd498ac4c4b6c2affa6b8367c5e9cee29f
7a165f5b7e844f426339d5cd21fd158f876d43e2602374e9b783b70a4e8d00409f9971b3
cc9d9ba2a3f2c2c375540a14148536962351009fe312def4b73dbdddd38a94a72b92a23b
72ef4b98f6038e6bdcb3fc0ff8c7aaa7f4110ee8a453bba3554435a128176d97012f4fe6
5ffadd393c4dcd0310ab4d16df4309693b4fbf2ab3df0c4b96385c951e757b2a6c18f0e0
1c4af66a5060bb479a3c7fa1b5dc00ab81a02c6ce473991b5983ba2c3cfbb680b1dbf6bb
acfcf8f9e4ee7c58387bcf17375b7590d5475e7199f0b50044bc087e81e51e0ea9c83b29
d0276f225e76160af3aa92513531a7e7baff6c18b79d697d10286fcc58b1b4f307b9adbe
df199f90eebba52c5685be960857154fc201cebdbc12de2c871dcb18c1595d4afe73d403
3ceae97ab618b457e681cf806833d28a502e797a5df3508b8bd221c060b23b453254a001
e611c26941f05a8a4ecaeba7af2e1fa91b73cfc31fc9841a75a190e0118034e26d70ebc0
bcd9e35b7d69509dfc82dc712214ac0605070b43e217f42d84aab3aceaa1c77523107f25
29de1f3d538422cef3f5639770fef3c2c8eb49e5e27dbbec8cf52542ebf941f708e3d583
cac9c041c1092f7e75bdc0dd5c48e7cbaeac13b266bdb3bb3fb65b18b728c309ad8a04e8
8838e710e65f580fa35c1e9200d4982769574ff31e4d790dca6e454476fb19bf5a6b1118
361291f3c0ce3589a13f5c0d7665299af885ee30912432976e137bafb32bc1241d2d0a6e
5f436b77f26dc10643dcb3a2fa8b5becf1b3681c6a30e9cd7e3607ad8505f45d1b61f50f
a2ab794a39b32004f62355d4296bc394c0a2734d42a4635bc1d6eb89db5c1948421af088
662d9a584db3153e20eb706dcf1f7b52270bfa13a254ec4e4bbda1aa219832ee5cc383a7
fc9ef9e15e1fe3e1a10758cfaebddf937bdb2ea9324da834964c5d5df2b0761144c70244
421d7bb7949d6631e99b50c2f27d96c32b015b3def53dd1dbe7f7465f9cb154a2bb21bcf
cdf6d22c8aeaee1a9ab655e81ecec54d47b52cdb76846b21629b16ec62b423c78e1a902b
9f7dd220edf9101ca2554ea68ce30bd98a34d17ce8e00bba7da7a4133c9fcb153b1a6f5a
d500e3ce117e1fa2e016ecc188fdfce1690083cbd6239086c35f0f488e5493d60b0868b8
4a51839ee59831612e3e0a40ba1772dd3a49eb414d08ccf0c05700ee5c31bdcb2d33e5e2
f283acdc3c4e844dcbfcd7f4613a29c3351f99816116a48c913310128aa96ce44241478e
317ade88aa96d1fc38f2a69181bff13bc3f9ce2c4c4b22d52fccc0a2cf0020dbf943ba0d
14abf88860ef2de8600639bbcb0a612943e871d59dc78dcb8ae64d1244f702cde6ab85dc
24a354b5aad65526b115e0a0c75c013cb61d527e9181e8c229d2125de51493e604973174
28adf8c61a0368ef83910b0479d443cdad5470bfd54a9ad498c6bcb7ed53800285f3ff31
9649a0027ece8982bb4eb7b90bc0291002520cbbb989ec2be352db6d3edaaad247b96c0d
48838ef6f62033897e70e6bc40bce7cd79e901e36a993b6f1e0c94faab2942432a6151f8
59031ffe11d83d54052657eb98a03b4763acba2577f4333777d6e8d50797f7b346acff3c
60fdef59b3e3cf273daea028c3284d15843f2987be3ed59a3e9c903c9993c256db06ac80
adbffc34f45c3e4e0d12c1ed4dfca121fd88853d346bdb91b6f83c36dfd304f4261124dc
693e7d745de6da0d824f315fcfcf1ecbcfffb17ff443fe3fa93be4ff74ddae78fea13644
354de700b2aab2bb9c1c55a1377ba86861d2542a95acf09b74b5406b8a3671606dc0f62d
b497d85bf9bdcb7aded957dda61293a73b9c80e3f746170731e56d7e1860660e4a451792
6042c4b7b29944be5c7ccb10ab13d0421c61d179c8ea5e3934f1cf1fbb7ab2188e2223f6
940f34930776d958a17e6263dd1c40f1e8fe4b9d9dc720455443f5250cbc93f87032de74
e8c9a1543f92db80d10e90d49b8ce8d662c09c96e3e09623bd5be780a66c7bc436bfd0e9
beb74ac5f932874fc638256a617071d074818d6ded7d80154e1f4377f51cc3d83f44f257
25b899a4fff059ac8942920f34b058c10c8ed97ac68e716c4a5486befa15651c742e6748
b139db0888fa578b9686f3dde845546ee2258a544130ca2b4309132c5cffeecac6389ce4
b464b13ec4e749365f094c11681e1e03ed47597309054e526fce8f9d71536c738f9de7e4
4a757751639c22462c05a3ab57f25196da386af8872ce9756e38a8d857d60c5a1c081635
94565d29859af985db7fe7099e963826b14ee19b5146376d0599cf783cba846a4778d4b1
e8344cfd2e786e35fdc9131245353f4694ff7d9a03bf76789c04e572ac56bc8a2fe21e33
57de93a5b11bfdd5cfa686e3e29e3e0e07ac764538f87a0a34ce2ab0de43e5c6bbb52be4
d227cf37f5cd36b3e7191f3548e6b39ab0586fd0ae13ec2b8cf47f3f4e364b570d70eed0
53d6b5ba8ab01f97da72c6940d279db6b1157b1b56d04c6a0d6eff80d1a2e5fc3703d034
a2fa62f8a4fa7cbb06bd845365df37f5b63a3e3db4334bb8a8cc2853c1c3f540511765c7
4353a4695049531883e926a6fa1eda5eaa0d68ae7579693f609b122f7ecd08b7f695dd49
c7a7cd7bee9f38b5bf54a4e86654b87834af51e6d1f336acc8df4bc84abfd062f8bab969
aeed5fb9263b5af692ecbaa30003debf628da5b1ac2460863bf3ef8b39281b43864d29ae
2fb478e1316dfce4d3e83de8c157eed14449db1a55906d87069a542a8fafbc76d8d060f9
85f13c669c0567c12ca147c30c7a93e3160913c61f0ebbf50e2f10271dc91ac622915f0a
b075a4f13b3e75c779213a4260169bbbc59f679fdfb49960d3817df0b5d53ae9949bf191
8568af6f59d6d91dbfeabaed5f74a883e695b10fde620f62b84b9787619febee201e41fb
29002ecc894b5b854a30838b7dbc07757cb80a9057966abd06f2c358994e28488bda664f
9a7efbaef0622ff7614c3d74128213bcf30724f7898d7ff58bd6992d9f549bdec7eb71d9
ed164233a0e9b51591f7d7fb46d7b7ac88aa3e7c10fdecfd8a475aed5b46255c6857f728
594bd34414d4951978193227668d98aac85b64c0f28046221f86272b830aa379b216114b
094d33e708d97d2fc107eef7f467a42f58bc3363732d008f0e9043f39545e7a135c5f955
cb392f2bf39adb1b06a461515ff7000d9201aa2451ea83ce837779a1d9db2bbc2d6363c2
bd1f9df46d7f64f4b9099e527b4ff30d69c7b61e0ffa9742d62e9ff7a0ed0c2b13166afc
42a2c39274f79e139da4e79ffd2d0751d03146b12ed7aaa47b1b05c1ef7526f17a40b2c6
cb108f14c991a8615de1516c896915cab4d198eb30933cb5ca3ba1e173faf4f5f0ababd2
5bf02aa10c72e22a6f5e3bb819fb4658fbc4f59de87b4642a8616433eaf46861b079c798
56b993367913c913218ed604cbaab4bbedcaf0d89183
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont: Helvetica-Bold
%%BeginFont: MathematicalPi-One
%!PS-AdobeFont-1.0: MathematicalPi-One 001.000
%%CreationDate: Wed Jun 26 19:46:07 2002
%%VMusage: 120000 150000
11 dict begin
/FontInfo 14 dict dup begin
/version (001.000) readonly def
/Notice (Copyright \(c\) 1990 Adobe Systems Incorporated.  All Rights Reserved.) readonly def
/FullName (MathematicalPi-One) readonly def
/FamilyName (MathematicalPi) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/Weight (One) readonly def
end readonly def
/FontName /MathematicalPi-One def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put } for
dup 32 /space put
dup 33 /exclam put
dup 34 /quotedbl put
dup 35 /numbersign put
dup 36 /dollar put
dup 37 /percent put
dup 38 /ampersand put
dup 39 /quoteright put
dup 40 /parenleft put
dup 41 /parenright put
dup 42 /asterisk put
dup 43 /plus put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 58 /colon put
dup 59 /semicolon put
dup 60 /less put
dup 61 /equal put
dup 62 /greater put
dup 63 /question put
dup 64 /at put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 74 /J put
dup 75 /K put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 81 /Q put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 86 /V put
dup 87 /W put
dup 88 /X put
dup 89 /Y put
dup 90 /Z put
dup 91 /bracketleft put
dup 92 /backslash put
dup 93 /bracketright put
dup 94 /asciicircum put
dup 95 /underscore put
dup 96 /quoteleft put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
dup 123 /braceleft put
dup 124 /bar put
dup 125 /braceright put
dup 126 /asciitilde put
dup 162 /cent put
dup 163 /sterling put
dup 164 /fraction put
dup 166 /florin put
dup 167 /section put
dup 171 /guillemotleft put
dup 173 /guilsinglright put
dup 176 /.0176 put
dup 178 /dagger put
dup 179 /daggerdbl put
dup 181 /.0181 put
dup 192 /.0192 put
dup 194 /acute put
dup 195 /circumflex put
dup 214 /.0214 put
dup 220 /.0220 put
dup 221 /.0221 put
dup 222 /.0222 put
dup 223 /.0223 put
dup 224 /.0224 put
dup 241 /ae put
dup 242 /.0242 put
dup 247 /.0247 put
dup 248 /lslash put
dup 249 /oslash put
dup 250 /oe put
dup 251 /germandbls put
def
/PaintType 0 def
/FontType 1 def
/FontMatrix [ 0.00100 0 0 0.00100 0 0 ] readonly def
/UniqueID 4067834 def
/FontBBox { -30 -210 1000 779 } readonly def
currentdict end
currentfile eexec
e8dc61728071abd4d5bcd230c4e186dce095a0ca84ffc476adfaa82124268e60d2cc570c
5f52c10ed4a85a71ce8e5bcf26aa13b27d7fce1cc0c72c3b848dd5ffb2d56d06a1920fad
e4ffa3b35336627e9ed1622c1f9652956d4a424488b4c4ffda9936442bbe0ca749700ae9
8a2bf964fad088f0cc64b7c1d76742f25e90e759aca624a321402b1d20863faf5e04b86c
1ae66f450b1586041815e52f13d2ae539f1725d11489898a83a05fe04d6d14bce66e2cb8
55496ec301a39f6bbe5dcbdf9cc36ab5700fe96a3620e0506d92097b9222f5021a611ed1
68fad010477517d33edaedbeaa162b13ef5f13e032095835fe9408d0c876bfa55c3ddfca
78198a8b00bed7696ece385f597bd543a354c088d44fb5e2458c8ef2e276a94849b311ad
15b5ba1ae71a8ea359770dd133e191853209047726754877c062396f6f0547e31ed54ef6
8d1f87b60eec5b216c58a253fb5213e97009380ec7aed1620d72d49703d8dbdaaa5cf0ec
fc44412782e8f9a32608943ad9cc576c0bb412b4f8195418798f3781ce6ad44b87752889
71b1b3f1371e3953be345bcf3992a86afab97403dc84d72463e7e922217a31afccfcef4b
5c62d363b203521fc7da1f984d12b29c0a768dc6b5659946c2a36178ef8d73345924619b
ffe1b5c09796d578f82d8debf01709b30a70aec43c53ec8f10b6eb825cdd7fc6c79b5e4e
fc1c734d43189c5f9983e77a74f4adc8fb35c219d8a91ea237a70aa70d205c399907d6c5
64aca9ec606a9d3d2582799b91d048699b26fd0d794bdbb00f017fb2d9e8857c4b0f359f
1431258b60fe5e2a39eec517af964454b75b1a8ea0f9aaf6e8cf3308525339e97bf50a4e
344585433b51ad17b3bc136b5c46742bdb66238d0b48ad652c73543a4df9518b4cec1ddb
74448bf5e2fe2d9c1ad3740d52737be12489e9debbe5b9fef8f12101629ab54e5b2f153d
62452ab28612d33f30ba05f1481a1ea3592168271fa367c0b754a4526fbc586e8f0a82cd
fbf1573a63dfe4f543604643466f057fad85754c3a50f6800e923dcf6377325140a51b07
4a7da291777319188bab626c6c7bec85488c06e41ccce3faa0a5d099a1663b6515923098
0fed5c0268d63bd48ae1ab0b1af69afec3f1e1644d79523ce5f6a7cf16d962b062c2f6d0
387ea9c3dff0d7c6dc571fc94b2991b83d6717bd192f67e2ea287ba7f35630b152c05722
a9c9f678546e37fd5837637f328be91c670618a82682f7d53241abdccaa5e0f1854d020a
f94f8c5a673073a693fb2648b844200e62765cb54fc93a006583379b8cd979d0e18cb29b
4a5d8e1304175d21b876545f3a458e4563e7cb0b62f09c861d79ad8a58e40566637e2c53
8c1eb86e4c4fd0f9c6f9d6b114e26bc8f951d700e7eb6568363baa70699815ce845cf288
0b4dad3bb64581c4cfea70e0af31a7a717c53bbbdd41cfa5aa11c4082feb9f60570e28b6
9eecc703dd3429e94e66f23985542d3ee38e02721c3eb1520341ccb5f46a226f9a7e3d9b
018fbd835445fabf505ae29eaa415e31dac0ccf948ac6bfa3d5b33383c8ae7cc279ec9ab
6f8b11e0d87fa9277b49984834e5bd232da1ae9814c9b9138d54d442c176037ad16e0fe5
16e3bba2c8a312666b8ef7c4209805a7a8138040fd047afbebae279f9cb693aaeb254831
0285d106be46de85c9fba8950eea3b51f4f377b962b8db600fe6c2e87cef32b0ae793122
fcf2598fa37bb3eaafc1a3979cd2cf920f92142f83eb4841bfc5dd67a06a60a12cb7a493
02766758ebe492367f77bf1b781d8647c3f1cc491c66edba78a888faf3541ae9a464570e
3141b8eb27fda0e5c06d21bdbe509cf7438c41c7e40d202f9ba170482e513a966c600516
c355563c363a2ec816accb71149c5f5273a978ca6e27d70e3e7b6c2caec59aec054915d5
f67c7e6dac0260269c653ca94fca5ba3bb3ce8f576eb0585c529dedf19e8ab66fd2e7b56
8e5cfc4fd474ccd658efd8a1c0c4b214c3359b1b30c222cbce5ad04721ad49cef1d23cf2
2a3c64c0838b63ce473141924302d78c8b0ed0d5d360de6eb34d222d54b53b56573f2207
809375dd49902c5a20b72dc33d1efc6834852b9a4f8d953501bc12793a83b7fc1962a7fc
4aee7bdc0fb99387f50e6f913c9ccdbfeb7edd154e5c2b71713afaef7743a73275c999ad
93bc67117dc4d1102586b3414212719f6059daeada3080e0964b77ed596fcbd59473c695
8cc4a831bcb95200b43f029ed87c6131ea6fce9613809e252c369b98f722066b7d987e5e
32c57438eec9630618bbe1be5a7046596fe4a5183e57acfe293e4b34409877d003e08023
97633fbd07ca31e9c1be0b35ead455205acfd911d0807bc99eeb49e3824feb253df40b57
96cfd733905ca5acdaa620c8b8a8dbe091bd04dce96e5a48f50c3aed4e291ee8d8ef6a64
80a0224dfd958be50cfe493cc965d7679bcbbb21030eb8ac1cd362230396f2e7ec7de911
cc9d4b5cdf283b8733eca70b9582ed86ddb2899781d0d86a07d2b741a4a45f490eec996d
615f5e30962d20147aef727ce4d7dabe83b3aaf466a342f1483a9289d4eaf09886cbf95d
73c3a5b5d3261f1e422aafd959e1df1a50cdf4460b78330ab476db4e6ac113d64be147d8
18dee9a42f237f683842921a5108203a172074885b3c71ed75e3a3c39db2c75667129e48
ed86650e072e0a37dbe90bfe602b22e1a64acec7caee8c423ad136486b3edc5673cd395e
37870623ceda5ca53dba293396c9eccead74a9e1645d9aba38a57b7e86c5425881efa453
b8adb9d806182764b817fe8ec787bf060f4d8ae9de17f2616c6f7db254d83563a1c58887
e47f416b3273f77752c3e2f7db1c46c824e67093a992585d1b4f14b1759c59a2fa893fc4
9e0606759690695e009adec5a18336b4c59a15b6ffda8c7a2ea14a319adfb48948ab6716
ea1108283bbdd668cb05cc9722aed7827b794f96d4659bb419d556732fdb071281ad06bc
9ee4ef1b24ce935e6f52d9b0583847d2745454d63c4257b2dfc401e7520a052e8321ba01
450e360b6a9dc0790a6c544ca7976aaba2747d64a4b69b085a5b66ed07db6b4e88bc9e6c
4482684875cc9449dbd6c6ce96dff79376037d021a58b68d6265f495b0bde0f9e77d967c
43f9b10c2e17670491a699b07828ce27551e63b656814ab0965e2534d5f0c3b05aff3125
a490cf0219bd09dedbfd35fe5fe55095c63043825018ea8bf93808d0aef0e3e4782ad1a1
90b3a0c339242b7f403e9e3ef0f52fa134cd2d223736a6c1120e8b4719fd1244eb4bd5fe
899c8510bef667ca11a7135dd4d70528e02f42f8067a40a149eb4a9de2e0833670d8440e
32f8172914919dc8fffc535bf07f94e28d07ee20bc3f29c0ec5ff5d03ecbe7982589c328
1e4b808fe938166063f40db9816f6bae3865504ebbc6a67e036dc0af17ad5e7d5ef23c33
f1d9790812c414b0d37d96bac16d6d43a95f384f7aa08f24c57f2b24d50854615654816a
ce299d98671b0e22a2b8ffb0f533672f16f1f970ba7c9ab9c978caba16c61656460581af
9e922c9ba2039637c05e7641deb54bd92157f54e77405d009c786eb421345a2bfe82d50a
b15b4e3a3e95f08f6e66de4853bc99d8978bb89169bb06f0d01f778e3365347cd681854c
3c77d25691c4be6a2afb896b265db13514a94c138ae810cbce1604c54650c390cea99f88
c04e559f6ec1ef96712edae8fea3a3328e1f8f33a348e65d12fc6e349fea2457b2cd813b
7b9f07bf22b70ef077945bf73e46402a2a583ca9ab6e04128bac394e36ce1c1268ecb6a3
a1c2852f8ca018b62f25e539461357c7a1b9d41ac6422136ad74b6b04da5cfa54e355feb
03fb9482ef66db5dcc1fcd7312f2eba595b1ae853a86e6e88a6d845de6e6b528eab200c2
19609ac4a9f83a60cd0519770e170b33c8f04b9cd552d00d153f038dd14ae06c8550c9ae
b571a7847ed8a6029f7d2285a639d55336832684627222a9cd17c7addc4a5e407b9e2d5f
c66ae086813869fab5930207e6474acd69326996e48b5543a4ae5c2aae6ee9382cec7fc7
fe9825fc841366841c44685680754840ca6ffd5a9fcb6effdb242fad005a7eafce0b7db8
9932ad75142c8a5d71333412f682e76a18e2d925c37f756fc447117e3f50cc12696218c9
0609834b67787c0522e618b72eef1003c848f7f4dd6a010ea12e26e70c98b7cd4583f516
5b21b4df4b67f847d3ac68923d421d21706ba19cedd0f58d4e8d9001c8f81e86c03516c0
47117e6f9c7a742e22780ce1f982c329135a7835ae2323ba0cd9c77d0ea0732b149f54ea
507d349c73e879b8582bd4f56e44f8dc12da97ea54734eb3967c92a9fe02c7a6e978f06c
38aaeddea15c5abec4810f8797254186a52166839cf494bae36f02322f8b6a8cafb47dc1
7a989ff1f068fb9bdda1d4b2625aaab328c5d7311333297e3e8216475c266145ab204c46
8f843ffbc3d2e2d2d39a6c43a9e86d50f1836cf07c9e946ebda143e94ce0a3eaa62f95c9
7026a86f257e3079d08f51b32736f46c9e6b9e5113bb6ff1d5d17fde25ef5db0aff29675
6fe19ed42416c1d544b22417dba66b552f499c0bbb4d0d6818201f6171a115e0a18d69cb
610f6f6fdb3c4caef32c5d5280180bb1235c7555d097bf363f940e8524e1d288967b6563
fbf02002af29f7c0c54bc9a7b427e948eac46185938084da7eb70e0584e75f4f4bf1125a
dd2c0fed48ddc249f52b6459c23ca7289900c5beb829d0ec48f3038f4a3b9c09c50700ac
9ffbc214bbafa4e72f86aaed938f4c23c7a4c4d3a88b650408e252364197eb482b84e783
31d5c2db985f8e6541dc72aaa9d005ef2c3840e03ca3e967f78eff8a7a80182ce90a1615
9d6a2d5b0983cc9ac8e62c247b315f4ab4e7dcaaff7d717c9c04faa32dfe229730889834
e89cd3734b656e705d256a289dfa4dc38e1d4978d233122b576b8e749326dbf963267c54
7ab7a41d43b97b8fb6536ff376dafd4ec3b71c469365c225d052a1c2c1da4de0baa6ea65
5356692bafc3b035fa5fe65929957fcfca7ee31589c765468722dfef1fbab22ffd64b14a
d6085acd99e9ca68731b1d174bb7e70918c4809a5fd9f0ba1a79ad45016b1718d70b5787
ea8259a91c52fedb311e276487c91aa642ca8c4fad02d4aca33e9ad116c4f0f89bd22b56
8a20b4377766519081b7d5fa7c627410e6e5b167fb3a15c46ad37dd90932aaf512c3ee91
668cbbad5c397ae17f42ab773675e69c64c977af5b5fcf3a10bc5271d08ce7c357df474d
d1cafa4c5f9418c2eb9f01b8d3404e3d5a4024cb6ab94946876ce49b845e8daa9a832cab
ca98aac894b83356d8682bd65f86f0126a83b97cb3f8d8a83d04878b2207661d0963d0e0
e08190e8028e39e3247f8c8c47fac8d612d2b8efe0508778a5c57bd962e9ea3045873352
77b15d8462ccf5eabfa748b7a177737ea0eceb0252eed27b35c264823e7c11b2aee8bd35
e7a038447249ec4556f683462a3617e411fdc5ac0b4798282217706ec408ba345d1b6241
6e31dd0ffaec2ca4e7701aede8aaa6f760dba491d481179c87f711686712bcb068c2ed10
4455226812d5182bf30cfd7d4e0fc3a3be115f8c63a4ddd86fd338fdfeade2285e6f9334
418e2b707e38c1984927722a7e98db8a27933533208bf617bb58f03a663e62eca246955c
e31a09d8aefdacb287fed830e2fb5954fc1326ed17a8c4ac93c79016eb56e40e733c315d
7e94ebdb4e1c0b4247a21ad2317d9bc1ee54a799a096d4a80316f22ae76313d65a3b73de
40e8789bad08fc3e9e0585ed10c155e093c02854d3b8b4d898934ad6a0c00531e9ab8718
a12683e398ff33234be1246e4ba49365cc72fd13526cedd745543ad0b330f50096ee5cff
9b648ceaa465241099c217d981f1b841fe7021d18e9554adf16d5051fb8f4749bf8b1a19
6d201d8304cc196e5ffdf80d998e43b4f00c1db8a8a42ad071da78cb846c61c82cd3a44d
ddad9c97584a9351edca213bf5e1a7577efdddada157ecb504f4c4af72ec773657481fa1
abc5295d3cfeb0c1aabbdad3983eae006db6f3da64accce764c1e18e7b8aab7bf14f02dc
aceeb426f324db10516266fbddc05bf378b73a7b840548e581095f407ba404d31b730957
dc6f11c6661b34ec773a47d812d5bb73f1a4f54d3915e02694e65b3297ec884616ac999d
d38984cef619c085df10a6d4e9e0d17982ea2f17af4f47bbebf7c325d7bbe45d1cd5cd9a
d3ab8658223d949db7a0419d792645139ad4008d21732f0bc1e8e5b7b5c00e567829b263
7e29e4c7bddf4b76f7623bcea2216af5f8c48c6a2eabecaef15825beb33c2fd8a04540f2
a887c871e8ad1cd5f0b648ee233bfc8d22ddcc45509919b80a3b5b85e489e8f90f517bd1
626e82579c5ec9c63949db00ec41d31236c740cd49479a60260dc5f148036be3da5ba9e2
bd73af3657d6414c2fcb337d67f99b36dfa2ada708541b4d81b8294a043af702892988ff
c79451bb8c1afae1053a91cf0eae03ca656ab5581d9a08fefd48d5589f888f2b139a006b
8a461c53b78fd17fa171e9d5535075e0f6a4dfcc15d055994ba4c5f3d76e4ce41e2eb071
021851ec80ae5f61f4c769cc831cc2408d5dc85db7bd18564ebdc12ffb467133d8ed16ca
cea580bc5ff7c9f7846bc976b12a64c94d0c567b6eba08b373b7aa60114082672227dab4
a4b6a2b51dd7eac8a98f27af4803316413f67eff8641d4693fa04f35e0b30ffc07807737
237e936c1f99518e3351304f0848f9726ca1350eb2cd0c36d3f02825dcc48ca26c06b99a
a94ffaa8676d7038fa009bac2de7a657c42d522b7988a81367c85325c8d8e60dc6319fc0
fe1c360b5f726ff19f55b049082c89775da1586328c0af5c99c00aef049c1157bd58fdbf
44b3fd614687a3c0630a8e0c1bab8b0590e11ea29e82202f47bccfe851eb8058a3fe77d9
8de348f43a0ae791f56be865dde85050c8d2beb2b73eac414f41743663f1e7d5c4e9178e
24317be92cc7da9d91dfefa4fda9aaeb59c0e2fefee9650ee7a8b18f092c3daf35c4fda2
e20a21c530ea764e400ce664c2414cf6e89dd168fb343c3708e98661d33361e4c450a74b
32ac854f2dadee8ceb313fd42784aa2f16a32e8873a695bd345844d6fa08c2b840243b35
8eddf5cfc8fe26dae554dd5d976d7cd57bd09416f0ab3d7bb35734219e6900d085d81211
82d8b656af41b7117c49fcbf19932d0fc33f1f26571668b798fb0e4edf5a6959c0376697
bf598e1d2086c99e1f7514bbca34285049c0d79c420cdb6b66a1fc7d6506e9a148c2e2b1
7e7868878369e5398b9987d5557ced0bc825bd9f513738669a5096a9d09387f6f506d7ad
d419eb4ba15f2184b40d4b99bc32fc0b20623f2e68202d70e7427812cf397eedcac2fe7c
04da6c90a867cbeb9313310166d272e1de313a1a2e932b997d349433bbea9ff544df2423
51c66ceeb0e25bbc8b157b4b8d19167953219bbc129b8d279af878cca8d191821f78acbc
51978d012fca6b969f9f8bd46768bf275e4ad4a1cb5ba2b567d24a663ea1e78f3f4a58c0
6bced88f4229e8244d21138cbd2900107f89f226f309cf125a81ac024449ca2044b02892
fedb6295053b46dc4f47b146e02ff6922d5e87f9aaf1b5c03da705338668dab656e384c9
e7175d5d229dafe4e306d084d3be44a45374ae3e03daf51590e814769ef607558fe634e6
ff478b90adddb68ba234cd2d223736a6c11d00bc15b56e43d599905f5fb85f39106ee565
18e8e114c685e18b57071667673de5b129200d0cb132ae4d8e5c4244f003f9d0c060ccc0
51d1262e230ff138916c7a87bcacc21fb0ba635b88d05ebbbd4958e73ff1496215113650
b01f8105ee0a007bb2dcd455eda0ad4d1970cdc896ffc07be2475ea69fceae1acddec9e6
29d3f1b0dd2fbbd22f0dd714da7954151ab42b320d67ee2c6d10110faee0240203c3559f
70d1dfd9dff0dd015117bddfadae6906a50785123e980cc5d01a5d323a2588a75c6a740b
b5be65889ee9cc85e87ab6a02ef01e7eabcfa89b6664b3011c3747f15017872dbeb52a5b
91c7aaaad0c9d3729171e6f339ae6b5c4247201a3535ad8fffef1b995c70d8ca547b796f
2cb1766d8d8f0f1392996c60585a18f9cdfcb1c9913148d42d588cc52dbcea4e23c71021
643704c512143af3a23584e8e7f4fee88c0827241fb25ee483a984e903aef733b57090f6
ac37da4769eda04847c1c8e928e229f5e826fcd88afa488a1498e3329a962d182ec2519e
526db9e510ad17e2f1af0d9f93a60c666a431b5855a48e30f335ffdad1ded8814934be0d
dc72c65403c03b9ca11c50c162769bf29e07e77d620be5915a94d26c44e8c5876fa3e087
47e4a12fe76ad0bbd7ab6baa2d2e8a61b25971763fdf4404a4d37cb4beb74fc5212a3585
3af4d98a5a1332b988656694354d1c15aea757a09263f6ef4ab122af2172a0da41d6c9af
d1233467bddcd516fb18211a8be6c5ac48b2b646bb42f43be231502a8b0a9e5b5fdd43da
c6f23f9d3d1e5d08d063dd50564273ff1e7be67c9f63f0f6849d94a77552ecb36e74db72
eb7282b2b9d0786f82a19b96b280aa5e340ee8bdea5538be7e40023ac3fdd071275ed8f2
010c2f75383a8a24160357127410c36507bc0f32d161b7e32179ba8c42a9a53bcff19db0
89acd0fe6b03c83278ab7b1c079bc5c68b75e57dc8360f116e495c7d11c1a5adf8b939ed
d5688cd27be0e9386c40103afae9eb5c212cb5177a77ad8997abcae5bbf0da91aa1b797f
8279dc7f52ca3f63dac82e6610cbaacfa191b6432b9d56b209de5dd56cb0dde671cff043
6ebb9220405de831026aeb038525e7af17580fdbd99f511a99a9405bcbd2d06fde7aa5c0
e1c0f7431e6bedb93e636a481ead39caacd955c697bd60c8e446e92627f3800cb1cbde9a
839cd5a0484aadfdbcc43591abb7f8afa44fc67f22e56054c9da7fc830b4b7cedce86e5b
b3ba8112d28e96709f971ebe50b6b2e713177ebc272c5cebf8a4765c0ea459c643d847ef
d7a616ba7a1893af0207c1ee89820c34c0e8af71990b4319743a3bd3c2d01a5aee1540da
4192e733c2ad24e62545c79f05c5e9988686cd248cb3283c383f7a2e561e4c452a5a8eaf
e845ab603a0df6f3890815ede23ea11735068ff9426fdb5e27f4d3c0a62478fa1d1fd537
39a615401bd5db7564437ccfd703eeb1553c934fb90719870a537e5a3ce288f670c798bd
29674ae9b84df4f635a6509a7bc62e56c7ae0b70dc479c6b302ec3f075908af71622e573
de4ca28c0a1da3e9595cb22233f2bfeb780bc90737b0c3cb16bdf692d44e825cd13b3213
eba1d59fa392f500aa2d7834835b4f0e5bff04f1c99889f15509fbad0897ef49933d5e30
6769701359e9bfb9edd09a47ee2306e45cf4b1a88e189cfdd51972e95ffa22de8f1b40e0
d610e8571ceb541668d5f128a80fe59d51ca931d7497186b43cccded4dbd37d5897d159e
e141624db5ea5ddd5cd6b72c4460e97460a8097372d81e18327f2c84fd8d28813d19e508
9defc40fdabe78e4f2790fcc0069e27172667f961f40d3f92a81c859b67462f96a717b04
ddbfd4cc8bc09e407dfa0eada4412752ab631dbc609090e3e8c8a34c13f7d8de448245cd
1281fc63acfc9d82d8cbe21b2219845518239d4020f98a9cba999cd1b4442f6ffd128a8c
864486d4e9d4428001f993fd245c9073bf68da94c3d1243909eee7fb63f99d1ad92f1c39
6d39cffbaae305c975d346702085c950895fce575b3b4d7d0a9b94e08f26b5dfc5870d39
f06088680ccae5545f411e9b1f03acdea82b2a66bf3dc278bc213a4ed1c707cfc23a16ff
b1e150e3bc9d2142f39f7cf9cc46cb7d0f74e45188f1aa09d40f6e64ad6470dd9bb30023
16ad518e2e16ca43b17ca4e0fa8695cc7e7c85d4e8a4e259448eaefc2f9a10c0911888b8
46bf1f140b9ec0eb57dc847fd14a6d381e956799fa3d01cb3babfa7ea48e0aef621682e0
34250242e5da98a41a979486de3035a13c7b9c557d0b3b3ff57731d2c9b502047ebff7c0
ca9c374da6bd3b3ec26ddfb599340a9962bee3226b19fe40381417edfca89224abdb569c
fb681c797abc562ec994aefe6035895d74a1893fb2c68f84bc14bbd784a171b311a4e539
a481736619d4cf9f5f9f2e1c8f1da5f374b9cbb3dab7f896d507e5878672d0d75ad6b49e
e1cf9fe8d028ad7321e393a6c62936549e4a0535d16c40756aed4de7160373fbb7627404
67381d65abbb978dccabdd0f95f9d7c499fe29d9b8ac9236d1f2cbfd836e2b0d24c4cd05
e02f6c9f0c5a046bfd923746c3613f4e2bf63b41c17c2bdc1688b3b1552117232f400d5d
797df41fcbb4f32b365e9968966204530557dd816532bab1d7b0df0f9fbe66ecf46778f3
2c7d0d6fe08093cf5d2579187dc09828e30525669b35fecbfd32f689989a3aa0af466f94
126e1fedeb03c5f8b68197fe924ae8b3f2b1ebc506b3e290dbf05bec27e0f60e5086cc7d
0b0a531ee9c69957f13ff22dd733e4ec65f210d070cd3d6c1d913ec0568f551032c9f244
9719a30ec009e53bee3c392bda47c85166f4d0bd4f2302cfcbd9bdd088084c4c7a1521ef
75fce1ee8f32e3f2902696877dc9fa72e42afd379ecb6acc376e010c67a39f23012cf0a3
16212ea8a3343825a35a1f357654348c8d6cf4a8f1e94aea53b53c46cba142e5d5dcafb5
1cbc18c46b4e92af760d91e4462d4009f25c130a41db97a7b16e754db5bd7405841e8960
a129d89e4651a9fad996f2e6b4dde89938519a6e880109838da63a1af31d16d293584866
c5ae092b846e2616e3aa8ecc4abfbdc1aa411b748f03473a038f16378c206c9f5e7cdae0
961cadd8b8f493a4ab21e66d38abcbe7b598016e63b0930ce67474f63f0597a897db5e91
caadf73da1c0dd726d937dadf380c93ef03ac237a263bffd9966d78011c42d154c268d71
53a61e17fd7d38b24b89bfdae950a032b82e7a6b910301411062a3d364b799b5c1989bd4
224bd389fed4d4322feee76be6652e16e0ce0b4c831122e2c817d380f102e2ff71452a7e
a40b2bcf418f4ce67e7b68bb9e9bff1d974211ee328a40841db30661e92ea4f0b8fdd71e
0faf8c01ca64843f9f9cd6cd6dab3a532c43c975624cce2b7bcb27380a2daec4eb72d936
8ec3f3a50e35f635e174269478545fdcecdaec274ad4a21cb50da0e9aba97fc96f0e5b7d
55cd31ef5c25901134a45af2801cb33e3204bee1993123ac55f4d625900477bb4bf15295
2df4c375a8d0e4e0688c6ce08245ceb3b40e4be78981def50d336ff6c28ff51b2a5f9a6c
c3d09c3389eba4831e99f6fc3df9a456c85987474d5e4e50463867348abf4527577e9f83
f4064d03015463da31ccab34ac1472e00b31687c1d5d74169e41dd56e857ef8eb22e8cf2
8c08891f1dc2df84dd1d4b68b35fd74da24c1e6c3b15f1f35a61ee3fa349a2fddb200973
3478956251e5d0cb87f0cad0ed3124af4cad3b8e2fdb0441e74a67778cfffc611c6e5860
f49f89471936f824eec1bfc8e2c08e8d8634355a0a34badb1a52c3a6f3186a5643595325
f11ed5d5ce0e90a5f6031e3d9e2ab1a99287ac6831548edce51e0f3c90175f78ece6223a
088d1744a186c357363424feab7f72e110089311093333f3ae4f32a827cdb785cf7e7096
cd26a18e6267a3a678222bec5c93cc11dbf428499547bf41629a3b6656257413d1659a37
f4b0d7a25aa4033bbee5338c3c8184076244e293cc425f28b381ffcb157aa0262b659303
a35628ebf48960a5cfe3d92c5b821281843b06ff6b48e9fd4cc67dc84afd5083a2fe1711
4ed3f57c791963077653fd41dcbe47b940f5b79f8e48bc798d52de4080e6adfc99d5ff90
0d1d225a107b4349a8f7051cf50addd3dc8f17939653263588f7c86c9d765babddfaeb2a
a4692dd83ef251d50ada060f0bb96649ebe3981da510520a8f0b3b623c71536c78f44c7f
27d87b720d4620ef935ba07f14b2af571d5f0c9f1091fdedc58f46bfaefa072f97922dce
414e8b751290f6e8bc5eed5442625a646fcc00f2406b50e172ef98ce77ab807acca89ba6
bf59192ceb16d2017f46c5b67b2bdd6076e798bfee76d45a5efd4ef6438f7d2e3d6c02d1
ca4e4c32a00719253f5b4a494f40039c0e53f81bb104c015a566a13e7db1187692d1a0ce
9423099150de1c45a9f45590e1e077031ebfcc413ad825f9be2560f167944ad294956de5
b6bd6d4fc98916c6a206ef917b4b2ab1001983e85931762c4bf2c383115f73dc4e2358cc
ffcea293f1daf3722f868875eee7a7a9f18c9dd66bea18cba5979106b4ba4c7547908826
3fda2d9f875e15473a0c1e051bb5c75e6a03444b994081aa9c27d6eb2a97ddd91d32105d
674b70b68defffe19892ccdaf26346e81a4846852a49fe4b6653c0246f76670f5e95d664
36c3d8717b9aefe602cfe7a295cb514ecea4a0a39b4796b9bd61bf56a27d9abe7a792718
4b4ec01d08d723d03cd61be45c368de6dc2da2f01b440243e87f58c82720c43103ecb120
c119b26b5ce945756258dca90e62943e745d3fc24f75647fd4fc3b5d50952957374d2cfd
c13919e57a1c2ae229fc2f3bd678e4cacea82d25b0228c34629aa6e4ff22ff13fbc56b95
1662724241137f6b2e968dfb4b41d77a7175e02bef980db4c5d2ea4da3521f8cb7302b66
0db9bfefa55ac63b270dc5e6a1e95648ac497068b15f363b71f1beb1de33abbbaceae80c
455b70e3707d2022a11b2e8ab51854e89dafb5b97ab8438277caed2156fb6a9697fa2ea5
46e767ea5bad0c00e8b011c72888686ba38d5f370f5ba97bb7dc09ef8aeb4b1aaa237462
932236bf565d14f9a37f7daf63a6215c2451da1dd626c9a3e42d1eb382e84c419da65d46
5d1cc8e6d5d05f0949d54818f0b8d766deaa261fe0b8be22c8878e0ad31f1104bb4eaf6d
98ab3b5af6f87f09c586c01c9fa7b974a15ae3d590fca4d0a41bfccd2ed9a985469531c7
569e663aa4f31ea964b0eee46ceec0c7991bf1c7c4145d49ed68489b5b1d0be23f4542b3
770d34caec1972d514e2caa06bb0ae8e12e37783f0568031478c14fabdd7eee37c635a02
2c930d622de6e4419994ab42e1245045001a4dc4b6cff4816019ab58360d4229a752efc7
ef7c1c383e050961febcd6721e8583c4807c8d46fcac22dbe13008989ae415a1ada37f58
506a7901b817ccf272a6751f829b4a5fcc43b86506b8bd2618776d8f35a689c6e00d0d1d
e2aaa9046378704def90198d82acc46ef09d5e4eed6a68051d1c6c6ba9fd9635f7de3c00
1237a563e88f49efd4c2bbf716a2810af96a73b6296fb5202afef8ca60fea07a795dfbbe
34771908068b430bbe3cb22a88d9abab2f128b6a6f8ba66c100c45c80b5c1116b70ff4f5
8ea1df658b434fc7fd613bfed2fba238f5500ae8988b1ebe0286779bb9a9656b2ad5cd3c
9828e1936a94949da39c6596658164a3bb35f8c0b1e99778c1c77656fd3eefe61e8488be
c4cc08f6b23f57ff6fbde95308cb88c52baadb3f39b5532b621b5461ded23a512b851ea9
aad2374144d0a648f1891071f8583bfe9c5538a90ed368ec809070b3c5d6336aaccabf8b
e20cc585732f6e61723f32c1c000fb6964f8aebfca573528e9ed708fac3a303a0ab379bc
28dc67bedbfa1b5cc0b2b5df951bb5d0f5ca4b17e3236a54f0e8257f251c2a649171eb8d
6beddcda513e9106b6cbaad42f96c4c0fe4236606f882c492ac26d3b4f569014e01f5939
9a60e233fa17265dc1f0e7293c4d9b29cce1ba05b934127aba3e1de5a178b0b216a7ac2b
6b505f3a6be0576af5bdd1de557e71a72a6403a579ae31ea975a9300ed1cc6ca73256510
427eb76a074d36811c02a571ec0e4be4346b681c82599da5545dc1d7f1d2757ad0b53c38
d179ed46e6d0c6af0112b034cfab8be899bdc2aaa409e5b2c77415927ffb25143d6789d8
79435cd7d02646c146dabade3a5a76f668b5a6b0f1e87c5473dfdd82b7001561c872a7be
8394273c33144c5168b540ba0704b0577ddb4011829f134bb75449174c658abe729ea2be
0a71d9f82fe07e5cd755464876e30ee1d41bb2bd5c92397649a3f86c3cafac2e713e7594
1d606df9e01992629a12f25e4b7491375d63f74c274fd56e010cebe9d1d490dd252fc2fa
d1f265bcb8ff724a8c8b4ca662a58643ff0f0010413df384c649f66d889d71a00883eec4
cb976313f0d653ee8048772d5794eaf53338ed6803f99dd158cd4fc9c8ba917d624a2948
938f2fc78750cc4df5b5aeeff994e7c0909954d91bcf2e76e0b8fc24e6ad4363a04cd725
51e33eedc188cdb573cfe1d930165178251354defe27dcd14b6c80724e369e211344cd21
3a770a9650f3e850131fa6b6684da8535050e034f69d09c1607b76bb3cb1bf95edaf2d27
0c15bafc79eceb5a8a10da4820bcca7f96671337ab18cbc45c3d7ce80abc35d7888e6610
0822a1055c6082a85e1e1c703fe1eba9445b5175653fed4a3a5ffeb79e544b2d09090515
3f9ebfbd5f754bb47c00d18622632336fa19469423953d44d69efb559e2dbea079723df7
54c51d18f87d1dab008139db430db0c56df019df44be82104f0aead323aac173c9847ef6
ae24edfe614fe7a19ebdfed1ae02aa5a9728f2dddccc795c9648b6bf3b0ce97f9aac2ac6
8a39ae4411850862bd781d7775efdeb47753896680ce89ba19becadae9fccaa4d1166c15
b847ec319c0241a3182c30468220f048ab37772ca6df01345e5c299c7c6e065acd930bec
1117971e29d87c2db920729adb4b144216c4e0ae8f171e288c8460805836fd905d0b27f6
dcead4b31d03dbd59e1ee06f6166bc44fd51832d94b5b3d727b1852e8d44deb9ee05964e
66f4eb2ef31bd938580b9d5a250ae09375b1e2db76c49e59203910fedac44c8a67292fb2
7b09da14cbc7ff58b4798ed4e33c49a76a8fb96c6bf7c26d2199f1b53ea686a551f7f9b9
eed3c87bab872ca84d243eca2dd8e274585b57f1c63973a79ed44e5b97177258df2b9932
99f6f81c1786461ad57ca3161271198aab2a2daf1f0f08477bb5b1a0f58a436dc84d5348
294c18c31055d255d107e8f58929a448a0d463ce59fed647e0cde9b67e1de446a10879af
dfe2c5461ad19403c2a77e0a1a0f057c2e229ff121f6fdc05e7ba793e797b068b844cd04
2638d1cc0d17fe7f93d41323477e335f32de1ebbb350553bd88b1d8c722bd9ef432cd055
5233794002cb091cf607a413ae20240718db6f3602d2de96e0aeeb69b2c5f16a1617c66b
88ad567b7a7a1b1d987e041345e219d0eca1651dcddaca9e3ce2f1a49aa0112287d4e993
1d8074ebd834a3b7aa94bd34b0a9814304d6f7c9ace4a978238633885615d13406f3d1e8
9d89d9a54a740ce5ae65db08c15b9861959962f58882e828642b6cbfae194c938df404cc
54360911ce0d2f50a9e2a8ecb316b9c00d04ac749d62ad6106899523a2cf352d5d42efd0
87d5061c27d648ec927bd9c0ffff33474965decf59ed2ad2fdb99309f6861d51e82545d8
33fcaf979498b6ebbf4c45b73a9de3067fdba2b964ce9b3c6d14f54f0b6a3abb6ef4a154
6793a7ac4c80f93a428cfd4296142e4992ac31ceb6daf249e2385a92e53e77d1665ff289
74949786f1ba121c8effc4a247ac1f5b257ad17200a9e71e67945f22b83442e3220f1de6
5618d4e2e55f1d96d69440097081452c61e17da45092510b9abfbf6f9b667d661fbf82f3
213d011d6ddda02e3748666efa1976e393e7185f5abbc57753e0956a978338bc62512103
ed9cda4b091717fa6c6890a5263af260b5f2dd758df7e80f577d96e10606999e71b62b76
3fd5632da0d5604e6c42b9535bc822480a4a838af5fe8203baab0899954d0ea4769d38b3
8fc8e5a39f452e46ab9d81d514836bd7371124604994bd6c4a1c23249f1530bc202dd6b0
13f932dfeee4853e62b764cf99358a4f71f7eda3599bd28691c1c1122e040a3e5e51a066
6ecc330451aaeadb13fdce2b9f7d70f72a13dbd8d3f4987d3313455ae4caf02416ed46ef
1a59326543328b0fb26f77b064be7f99856111e80828eb04ff65b8e43f7dae118f5b232e
83d989d27098afdbfe518f7cdf63395409331d9cd3b6118c7e1a68ea36898571b9b40b14
c64d20af9b45ab08fa254add7a53a248ddc455e84ebf6b6747a1a2817fa822769ecf44c4
4bafd156de4a5521457ea17a92ba6b28b19dd060c6d2967f9c65cc3d634fc16d36bcf932
eae3c4543f565933ef501eefe30b133b1e8d9edc0e567ae0bc1a907b4d16b67666c99f53
b892c9f396516d871afc2fe6131e479c13df4d7649f80ff2cd7b1338f9d936b4e2838293
29d0aaf0b798755fa4bf0a2cf89d35af3ea02e5072c74af68844bf21f46806fcf69947f4
b07ae77282f2d39045906e6e801d84f86abeb35452fa79fa00fc60ed426a668cf13ac050
451ad9db0ff27cffcb78af3a802bfdca2239e675c7f32366e087a8927bd8a7063e665e77
9d4626971cbad5bc89761e9e9bdd8da5d48b6942d6a363c7068c1442130dc3a112ed3836
2bfff40624f4e48d0b4c44ff670362932b9498d07b300042d22ca88547d715716ed77b92
11349eb238e854e24b11883ccb880d33d65bae23a2ddcb227e00bcdd70f5b4735c9d4944
ded6d8d948589adda38a154bf4cd15c7b9a9dd895ab78247b50b137744712f15fdb42d47
fb1336dc7e6b52ca4301acf095d047394ea5877272ae34bbcfbec5d1c3d89b63423dd2c0
130479e869bd96377573ec26b56c87ae8f5b2330edcecc334927b1fca8fa266d582ebca4
b8d1cf3322a984a652f671e6d017d8641787454abeb8b1e7a582641465a350a39978fce2
00a100dccdffea4fa3725473fee2a7c940637a4b255a2bccc7d411742e2a54431a1e262e
f7958c7fcf7c6d3f8c3668bbebcd95a21f436462bec7332dbdf76f138ba2841027f5635d
696b2a8c39bd73901370b9ce4f17a7a9c80cb6e5cce513770740f7350bf8c72a966f91dc
780ec55f03c5d8ef33329fc1c62164ac6cbc1e41321ab0424189b7501975e6c96691c114
5e668f666a005504e37db1898cbaf661672f5a95b5b2cae2345680d06bfff9b2fbb00e83
7ed845b6df27ccc4b4b1b2a5aadf774097e89cdbf5ff0b39c6e577e71558b47e0d6e592b
f102d022d6897aab86f742b91a820b46730f701495e88b859377430525a5c1493394c7f4
773d33518fe9889a194d0184be1efc676acaff2be2418c8f233e3acf6f9218803959b2cc
95e089fac1b718f88398a10f9c0f95b1dc765fc22d0c89471c429050e5feb43b9caa1ff9
1ceecddd2054d330498cccb964a3921c1d3aaa5fe8a86aa3cd666371be4ad176f140d157
040aa31faa6c77872dc17c70c08bde64fcb99fc8a70859db7537a010030eae5e86c0178b
f0a330856942c21182c6334b8863f28bdc00c5e3d7d1b3635827b0e5697d485fea6f9afd
4123bbe1fcb019bcf8b3b75e0b561ef816dda908e93d42e88fa279b41212ba959da807c7
829df0b160a58a00c8d6bfa4de0d447c81fcd948b8cabf9301232ad713ce823bd1c757cb
31c7ea093e51d643523554c5a15c6cbd1d860a655aac116e98c5ab93be2d592f662df505
cb4a1b29913cecf1ed7ab3acd5ce4721ecc3b96763538ad507af0930434601098923ecb3
9a5db5e7df6593b3a0d60dc57172c7e16e4b578740fa12383b2bc010b1257b723257b079
6fdb079324879c75e0796877c96100ccb677289ea702d9cc63c8e0e8bfcfdc39c841de16
cf4add695df0628cc22cdab3460cfd4183c30e6252d5bf08bb1a40f2da2f4458247542aa
21df0254347ece7d6de8f224b153cffcc946af2c24f2b28a73c0f0a6a352d0d0dc38c255
3a3dcc0647effd4bdc7b0f55c4738af1f6361ca4433ae382deb258fe260df18fd47bf0fd
f8412bcb90d105d3df39961f06c6c178a06bb0a74adc980251a4fb9e4c5f2d2d8c50312c
7134d8e225ab3f1f080b0bf76d45bacbed5eaa8f9e56bedf9db0e36ecd739e1c5570e27b
d65659d2f618a186d70bb3c0a06c32d478c0ca02b328239433e7ad2d8b80af3b7986c373
81726f63dd852b441a0062c65470eb21f2db2d696335c003be207766cd7b44ec44829896
1c775fd4a8ad4424935b6d574051034a335660421c9a62e4dc1740a7052ed31d23d7e6a4
4d6989b2a1eac5514d024cf3cf0a01286058c59d9afa9071f6981e5fcb50c36f5ae4c46c
b1a0aa753d4610da24fd3890a2a4ee2fc0963734be644ab86771e5cb700ac2ae32148ac4
b285114c9d4bf728bab2d3b6eec430056469fdf08cf6ef44fc48fc23f4c5009af9dfeac3
f7e3c2dfbfa96debe339910edaed731f1f7504230385bc5b8a4d44cc6d952f5b35c97153
faf9f028b85d5f48ee83e25ac919035b0c58ba19eed0052cb369e6ce2210530e9748b43c
ee4bbfe657dfd6e270f8d9a1d69bec067314aa0b89b1aba85189e4fde9ebffe41192711c
375eb6e33a5fa8b6b655932c43e0666e3bda38f3bf2da4730f0d8d22ea5320a2d12fee28
aed833117e94825cde0981ec28e345ced30e42966a4ed804bad2371dff107faece4532a6
c4d1f74fe489438b0ebdd8f2978f274e0b7d746e718d7da47ff80c1120e2efabe8231fac
03922cd4e49c9fd2d64f843690036ee29938157eb115480db22c6154d1680547372b9cd5
630268925849467686202f9a2b8969988e9351bd6dea25914a3a0d3f98d4d814851a7b2c
dbad3b173986ecae2ca9b032b113869e5de78db4e347993ec9b6070ad2bff24ab451ace2
01524b15cab6b0cf826c53dde57bee930d60090fd5812d9c7e0b7f109fafba4f27170351
b982277325bca0c6b2686b0091464e8cc2953720a68f265b837574ec7c787805c7884d5b
b3815598fee52ca4819bfe6a5bc4502beb01a9f3286878ee7543c9f08ebcb870653769c1
267a9be5141e9baf8c36d77a514b1b3066f14f8f9acc442589a50bfdcbc0bb03f9c427c5
245b61def9f5eebfaf7445727e15d8509e47363b953215497a5b1e94f46e9588abd0067e
222efee3c55c18e85a1a655f2160846f86d5c39de42ec4b508f2a2b9cb0bffbe1d01d385
f25901aabd504bc72c04071d69b835e9132790f66c947dfd684bc6789ab8cfea9c8bb77c
a008fbcb2bfa9ed8e970cc1db03c9ed2526bbd78716bdf37549138a7b91bf88723f3518f
c1d5086f716533651c1810db858fd0280385dff4da727f5620be250c2dcdeb268857d48c
aac27bff26d744fa160e3d9f238b2e3e38220fb37711f19d3a3d7895c833dec89ef4eba4
7882502d3715e7f7db493a0a5cacd075c0b5abe8c39c4a84eaecaaa7017dfb3583f7a56c
4afa26b5e0cb03d24a0cf3fe4c8863134be5abc850719d2248b05ad60162ec3bc2ccf1ff
7445be2ac1cd288b55c59a158fadd21ef34bd22005c3bb7d2a519ee6782755ae1488d1a3
68fa433567f1029f9a94a80dd3b1b7ef1122bd2921c14beced01cd5e1ce2dc00272c5aad
b622d69686f29b074552ccc1f4a12f10e2bdd24b6c3610800bbcd48ba35c822d9d3e4088
23ed438aac6568d3091aec79e6dfa5207f3edf69e04f107c80651e0b2ceab1b662efc3de
52d0826ff7121acadac7da5b486f2e4bdc7baf7e0da3db159f510de78aaf39951492c77f
5a8aa9ac16177b8a7a3db79658af551e4d45f4e48588b076a402a59862cd5cc0161f1445
6f0a9eb7f338940f5d96d6b676b163b92d25ad1498c24f97455be77bc2453b80584eb976
88b203f48d9792a070cb7c368f8c9b6303e34c3a34696aea936191f1c865a883d1f3b136
4ed4af785da6a075437df83b885327547bbbf36e92ff6f13ea1ffa5edb1442196d1e127a
5b4b7fae60292020127970d8f48804b986ac78ae6a71ee0e87f2acdfae603d5a8c74aeb1
71699d74f435c257a22821b3059ccb6e07d997f66670720cca9598c7e93020e9406329e8
d5af037f9deb8fa22bc6b8904b538c5eaf16291cf334bc7f3aa42c221cfc3faf4d437824
44040c610b4f3be9b2b90861af7466786846a73b521ea837c8ab5b5b6df41dbb553bba72
2c95fef35311b16ee7238f937fd02556cf9a5658d0ce7b38eb808e759c2f7f7c2dcf512b
224683cb1bf95cd2bc18656abc61f8c5ded8b3712c3e02cf747ef695b408b3e8deb8d252
7ca9badb11fc73367519a3b0e5570584325dd7483a8d87a02320d7c33e43cccf2c4cbff1
a4be1bc8e2d39a58f0809bbec0dff9645d2bc0bd01072ffb071f143f951a3880f8ebb723
48f515e436cac1c224b57ab90a0ed3d6c02cd9c10dbb696c3fec75cdffacb919f1bc4063
3191ec7cef17d45fabe355cba04cdc804b6a44f757220ebf56ec89337793ff49ea056cf3
ef87bdfaa93e79ff6db13e65d90bfa7c0817c2afdbe559ac5a4a97ac878f7f8dac37d281
a6c38bb267867d3a2eee241b94da99a81c077dc92947dee88be0be33033f368c1d5317bb
2402c82b46297684f9774b886304530abd6630f35fc44ab1f895c7257ed0fb268ed442df
467fcb73eb33327b785857d096042955723e8ef9dcdaa3b3e42d8612ce1243ef3aff91d8
91789f3d105fb4ec55ba028c1d5c2f88e2df17a0fc2ae382117d36b0b594cf01054cc9f5
05ce77db927050e3b2877ca10735846e507db3ef1c23fa547bb5234103dc323541a2cda3
4397854e84917da799238aaad278167282ff863c6dfb25d9b8659f8d7eb31a7bbed038c7
015057b2d1039cb36437d124482c19c2f5d7217fdb019c076f94e3abf32a6082e929c96a
c1d8626822d6d22d6fe97d797985918ce39a54f64abe910f608b5f9d07f689e6eebf1b6e
735698472e37fc211c836d704b434cae9a4052b192ce714c00007bdd247b3fceadc8de3d
407f60331be905a383d5c302a9412d755a438f8ba116885cba9c4ccbadc1663d37fc76ed
62b2795ba249bfe0289dd2fa51bd15a39b72c1189b358ab5a9df8f66ee6175d1b661ee22
7f4052f1a9500f5d25ed94586a954631d4ae89ad4382044aaa54522d979109ae2b8e1b29
1b2f0fb28b0193d92d01861d121440331bd15f0ddaa936ee55bc0b76d78fb087f057a7c2
f69faec6d1da29e1fdb234ead82fbab2c64300b1bc93bc51203321453175a2508738687c
2911e1030f3b900e629e76001a86bb937e04385f4bb7fe6f5a04d5c32351961a2041663e
934b5d95c717b83658306fafabb57051d5bbb6921d273e42b45d346443902c5086ac2ae0
8b41100ba09e9b13b122855e5e517f397c5835f799b6fd896788d8c4b51bbaf8cce75e35
ef850b4d4e4bf2d53e43246cd65c6edcec822f17da0463a00b31b27008135924eeed1a57
9ae6216c2bbea950618fefc80acb07ee7cc54cc03277f83a39b33bdef1cda25b189ec2d7
c6d752ba5db3be12942d91841447c509d5bfef123fb363a8d4978b29578e60b323e0483c
1198173a42b3e095b9b84eb69ac94ff2ad88570804a9bc2ba1b7bb7435e2e0ae19d883eb
57df0a66ef3b0401df83ad5acbf09171807181919499111fdc22571c84993d68ac77cb4a
48ad95ae
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont: MathematicalPi-One
%%BeginFont: Symbol
%!PS-AdobeFont-1.0: Symbol 001.007
%%CreationDate: Tue Jun 04 14:47:28 2002
%%VMusage: 120000 150000
11 dict begin
/FontInfo 14 dict dup begin
/version (001.007) readonly def
/Notice (Copyright (c) 1985, 1987, 1989, 1990 Adobe Systems Incorporated.  All rights reserved.) readonly def
/FullName (Symbol) readonly def
/FamilyName (Symbol) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/Weight (Medium) readonly def
end readonly def
/FontName /Symbol def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put } for
dup 32 /space put
dup 33 /exclam put
dup 34 /universal put
dup 35 /numbersign put
dup 36 /existential put
dup 37 /percent put
dup 38 /ampersand put
dup 39 /suchthat put
dup 40 /parenleft put
dup 41 /parenright put
dup 42 /asteriskmath put
dup 43 /plus put
dup 44 /comma put
dup 45 /minus put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 58 /colon put
dup 59 /semicolon put
dup 60 /less put
dup 61 /equal put
dup 62 /greater put
dup 63 /question put
dup 64 /congruent put
dup 65 /Alpha put
dup 66 /Beta put
dup 67 /Chi put
dup 68 /Delta put
dup 69 /Epsilon put
dup 70 /Phi put
dup 71 /Gamma put
dup 72 /Eta put
dup 73 /Iota put
dup 74 /theta1 put
dup 75 /Kappa put
dup 76 /Lambda put
dup 77 /Mu put
dup 78 /Nu put
dup 79 /Omicron put
dup 80 /Pi put
dup 81 /Theta put
dup 82 /Rho put
dup 83 /Sigma put
dup 84 /Tau put
dup 85 /Upsilon put
dup 86 /sigma1 put
dup 87 /Omega put
dup 88 /Xi put
dup 89 /Psi put
dup 90 /Zeta put
dup 91 /bracketleft put
dup 92 /therefore put
dup 93 /bracketright put
dup 94 /perpendicular put
dup 95 /underscore put
dup 96 /radicalex put
dup 97 /alpha put
dup 98 /beta put
dup 99 /chi put
dup 100 /delta put
dup 101 /epsilon put
dup 102 /phi put
dup 103 /gamma put
dup 104 /eta put
dup 105 /iota put
dup 106 /phi1 put
dup 107 /kappa put
dup 108 /lambda put
dup 109 /mu put
dup 110 /nu put
dup 111 /omicron put
dup 112 /pi put
dup 113 /theta put
dup 114 /rho put
dup 115 /sigma put
dup 116 /tau put
dup 117 /upsilon put
dup 118 /omega1 put
dup 119 /omega put
dup 120 /xi put
dup 121 /psi put
dup 122 /zeta put
dup 123 /braceleft put
dup 124 /bar put
dup 125 /braceright put
dup 126 /similar put
dup 161 /Upsilon1 put
dup 162 /minute put
dup 163 /lessequal put
dup 164 /fraction put
dup 165 /infinity put
dup 166 /florin put
dup 167 /club put
dup 168 /diamond put
dup 169 /heart put
dup 170 /spade put
dup 172 /arrowleft put
dup 173 /arrowup put
dup 174 /arrowright put
dup 175 /arrowdown put
dup 176 /degree put
dup 177 /plusminus put
dup 178 /second put
dup 179 /greaterequal put
dup 180 /multiply put
dup 181 /proportional put
dup 182 /partialdiff put
dup 183 /bullet put
dup 184 /divide put
dup 185 /notequal put
dup 186 /equivalence put
dup 187 /approxequal put
dup 189 /arrowvertex put
dup 191 /carriagereturn put
dup 192 /aleph put
dup 193 /Ifraktur put
dup 194 /Rfraktur put
dup 195 /weierstrass put
dup 196 /circlemultiply put
dup 197 /circleplus put
dup 198 /emptyset put
dup 199 /intersection put
dup 200 /union put
dup 201 /propersuperset put
dup 202 /reflexsuperset put
dup 203 /notsubset put
dup 204 /propersubset put
dup 205 /reflexsubset put
dup 206 /element put
dup 207 /notelement put
dup 208 /angle put
dup 209 /gradient put
dup 210 /registerserif put
dup 211 /copyrightserif put
dup 212 /trademarkserif put
dup 213 /product put
dup 214 /radical put
dup 215 /dotmath put
dup 216 /logicalnot put
dup 217 /logicaland put
dup 218 /logicalor put
dup 219 /arrowdblboth put
dup 220 /arrowdblleft put
dup 221 /arrowdblup put
dup 222 /arrowdblright put
dup 223 /arrowdbldown put
dup 224 /lozenge put
dup 225 /angleleft put
dup 226 /registersans put
dup 227 /copyrightsans put
dup 228 /trademarksans put
dup 229 /summation put
dup 230 /parenlefttp put
dup 231 /parenleftex put
dup 232 /parenleftbt put
dup 233 /bracketlefttp put
dup 234 /bracketleftex put
dup 235 /bracketleftbt put
dup 236 /bracelefttp put
dup 237 /braceleftmid put
dup 238 /braceleftbt put
dup 239 /braceex put
dup 241 /angleright put
dup 242 /integral put
dup 243 /integraltp put
dup 244 /integralex put
dup 245 /integralbt put
dup 246 /parenrighttp put
dup 247 /parenrightex put
dup 248 /parenrightbt put
dup 249 /bracketrighttp put
dup 250 /bracketrightex put
dup 251 /bracketrightbt put
dup 252 /bracerighttp put
dup 253 /bracerightmid put
dup 254 /bracerightbt put
def
/PaintType 0 def
/FontType 1 def
/FontMatrix [ 0.00100 0 0 0.00100 0 0 ] readonly def
/UniqueID 27004 def
/FontBBox { -180 -293 1090 1010 } readonly def
currentdict end
currentfile eexec
e8dc61728071abd4d5bcd230c4e186dce095a0ca84ffc476adfaa82124268e60d2cc570c
5f52c10ed4a85a71ce8e5bcf26aa13b27d7fce1cc0c72c3b848dd5ffb2d56d06a1920fad
e4ffa3b35336627e9ed1622c1f9652956d4a424488b4c4ffda9936442bbe0ca749700ae9
8a2bf964fad088f0cc64b7c1d76742f25e90e759aca624a321402b1d20863faf5e04b86c
1ae66f450b1586041815e52f13d2ae539f1725d11489898a83a05fe04d6d14bce66e2cb8
55496ec301a39f6ba95d717b6171cc9de01c8cc30e63d7f5fa1f9fc383123b41a532e943
75cf60fbafe0ca5e87fc1a0ababff5be5e62081415e3acd89518da8838143c3038b2469c
5bb23612c7fad6b7b680de9cdc7595de1d6c20fc1c78096cdfb1968f38ab427b35de3c1c
b422f9fdae0bcac22396c21dba0ee921bd57af491583e149241be06cc0bbdcb66d5379d9
ac156a1c1236b67533f875c38c2b0aaf90fa8a641518e48c86a63b785b02971e28482d44
67fbc3759d8d8dcbcdfd3088ebcf79e34831441ccd8b81f0f2b52ac17aae6eafee8bb43b
59df2fa70979066f24d1fe66b019fbe82a4510479cfdd16b7cffc74779bb66885f53b41d
0b4f366b6b960e31fd97472a1e15bcb91c8d94cacb41758d387a937d96a42fb7b6108c4a
8f225fcc1e2dbad8c77a41fa3a1063385449e59ef6d1da46f32b04153afb32fc20004e9b
d613d45807c24fa3e60253f7db6c317f7a1203655944244fd24ae4f3f3a87baf1a3db87b
04bf2f6332b8ae8a40f5c481c8d2854ae5c2c3c746c4a2b48189a373a438f512642a55f5
4f673d5dcb319c1d50c524a5a870aa8eda244cbce9a259f445ceb04702f2c7478b4fd6f1
91b5cbb2403385e36cce3da28808b7922e798eff624e730b78efe9c1d47c31aed07e9719
e3093977c25f45b725ebf0e5e85e23bf21802cfb8ebded2ba9b723cdc3642441d6c48510
681f5e4fdcefa7492cc2a6e754152c8d9d0a0b5c11ac93a8ba90449cc81505d89fffebcb
7cb811236ecac58d112ba4d87d8f492a01bdd24186a5629889c1f12a0912995526684f51
75e297a26e19717888639b0e69c5fabe5b756151946c880861a70fb4098ba147e829eea5
616cea4c630cdbba39ac91afd9fe8f6707e207ccb5ca3b7208e8069198aff1b3148e404c
1aabf027c061322b756cf4eb957f814d45487b7751e98726e96ef977caa2c9472adc14da
e625c288e68ffb56cd9b4bfe0d8f4d75972e05fd4afae3ca1c3592a4d6da8f1078613c8e
7a26101711686a7c780d3f9be56bb00bb267787f486ee32d906095780352dbb235c39272
8b957c21c88065f9b783ee68abdd210c6287fc99da93b532008d98b5ac6fc5ce79222383
0c43b76fa5cb743fcc78acdfeb739f797793cd968a9e0a5bbb6495f4e1d5128b78ae97f1
6c44060c1d7dc95c17caafe4e9d9ffccff9ec31764772bc993bff0e10624cfaa92ae73cc
fe92bfe9056423ea2f12fe09c87669f7abc13c38094196a1d711d212c90b13629b9e3243
e952b4ab5a49a590bd09be06e78ccdf3f1a2530cdb848536f3fe0f72293ce7c6b2f44fc2
153fec296898493fd74bf8b2b27c84d9ccbacc162e13cc7f71030a2c2a2e83a7c82de5c0
3cf30d09b39151246a4b7371087815a71a5d944e99e3b13f5880d01202bc329108800ffe
181d1dd46538032819719660ef1940b67800057d88480b92022bf536a00f4475ceb76b0a
14c2c1e2ab06e89bf55a60141ad2aa56f2436d6d4daac727d68682da2c978561dce0ab37
09160715f05782229cdc2d2cf9e93c89cb6d3389ab1ed5ff2ceeaffffdc4ef078d7e4db6
6c9819981cca87037c9b951e0efe18505b8ad8ad4609bbf7a6ae68f883e81977e98d8519
a6574c29301d4396128c534992629ed358b0c85723d669625d8227c5b7c6a9d2b6174d81
ae0a63bbebdba4daad303748c22cc518485308e0f689223e612fc1061d86cd7f24f0666b
e1e1e9c0a9233ab7d57f414f3b94c31d2bd3193ab049ab654ffcfd0174d01e042981d573
74204a342e5b49e2e72e07486e9533a6a1cf0b821af5d9c196bf45d80351ce77f7ca3f72
b85d123239565c6630477f689206eb62b5ac7d77f1d113038e43fb5f2975e5af8dfae07b
162d1d4d0940121e20f20203f9824d20bbcf965e17bac8dbb8d72f6257ed13d74439f451
7be1e686d860151b23918ec8468ef35814ab23c04946077258425cae987f3a2b2dd7fe71
0b397f0ef82c9a0b133470037177e194bed9a2c36e51fc89d00cdbfbbabc2470bc1b9c33
498440c46bda6a9ddb70081d9046d5f5648c0d30302314aff9b28008a2fa78f40e833493
86aa2402c0ef6417d15de32689c441a5c28fe1bb66771ea11cc15079370051a4713c6562
3cda78e573a0726f6d5620802dccd39e4014cbc17b6cd4543de5adc710c9cc98a87c5bca
0bfad1d13c322084beba01bc0db76fbb2b114523a33110fcb445deffa26cc2c33c0e3ccc
ea861355cb98a218c33f043d9f437eb11f3e8705cbdbb5e5cd0f212eabe2e3d3aa97f0ee
634fa96f8828a7ac5f89edabfaeac1e689ad985507e8ed8ab079c443cba9a3566b96e210
c24eec6c583911aa4f4a87857b1f1c2f50ca2c6490dd9aa790034f88d49bc538501cb700
1d10eb7973dc88bfc20d8a13e1c65f51d0844a455a2478ee5cb1be74ffeb2b0b96ff277b
3b77e94533bc63237a33aa7040885f4105dfd80457b2afaf1ac8cdeb71911c65952200ba
1b072dd3f0fff0af02a722d16677c4b99ae51f80266ab6541ac9434c6a1110f586a753c1
45c67d21461ee2444aaea46faef916882ac638d1e20ba77dd56f07902edc933c7ff02ba4
c6c0d75fc743a94784f6c6d4e507cfab5ee82de2a69e582725b036d61082f262ec11da1b
7b793646476e8d643572bd1b90861fb965e16ff52bb0a1ba692e17f7238b39c8540a0fff
d6fb66c4face361aafa21dcd86f3adac8b7e98069ad64488b4145c62fbf9e7df5220c71c
390c37d6d25e8761d33361e4c450a77b3bf8c9070044839dfeda68dd0d306bb9eeec5d9c
10793412aeec8556c2a8da27b933c2bd39920973ae181070ac2fd5aef83765f6e7523e53
580ecb3636c103feb9261c0edefd2b93ebf986357955365280aee498b15831ff31439576
898ca04453057b1f03b426c1f42c3c9fb77d5517df1fe717cc46fe390710203810b2007d
1d122801a8d3460a40d51af373697b8ce7081c6652ac95bb6268b672d83afcfab7edb9d8
e3b17841e02f00ff5eb86075656a8a38c42de35ebe932114b2ddd2e683dd6e3a05fe8f04
dd468b5307f31419a8198c78e4b99174bae255d6735fe248ac1bae93933d2bfe03377244
4be3bb70264f76a5a770d22c3956418f30b7a1cb01d97d60d25747f6ee07d46e41a57fe5
9bc1f5dae95fcb2ae5360542dc2788f8911198d5af3c86eb960aa2941396a3173bb36b49
c26d01ff30ab1905bb2c56f9972c39ffc8e54b0370f440d67570eff56a14c3a10afe2ad5
7064e5775c5ffe436e3067798433260faa0c90a25abd3d741ee5e83cda84f71f20255bd3
68aa49b4054237d570bca63151b5d04b010260cabadb2f994e97548b10699f02179db122
f71759d537a61b0c3072fee7292ef99d0078fb23e568c4a524da7adacd1648958d147986
b0669c972501fcee7a0653e8cee42f8f0040e7ff4822b07ac3daedf5c21b802060b24140
864490628108f48a56abe250f9744a2ff9ccde9ea402b9dff5ad22227612f840418c6249
a73f728b84d91f8839e13ea5adbbfce7579936c772b20b9f0dff6950a146080b20a5b6c2
91fae49bb1f2be494465500f69fa88fd8d29bff396659a939d32fa1f2cbac5f4e2006989
5b7c4c6d6c59651bc436c2495b79fed32639aa3c4dbc6a97ee84cad3bfe9882da47c5693
670c994065741d8793e87f807f2ee96443efd4bae6ba68cc7db573243bd1454e74e694d1
e92f95f459a3a4bbdbe3c9c95ff1416f50fbe0f19df76bb99e8c0a1cf2c19d8ed2d0d0bf
1fdb119b2dd44cd25cf3cc4067ec06fa4b799201cae8015c45f9930fe4f743efcf5582da
d78e42c8aeabc604af1c1b519bc7adbd04bdb6413d1531aaf026a9c120a6a701db54b877
5c5d1b3f1bad5fcd34e0156f96b9319e815baf4a2d3188f1a66da22b9564f4910fb197ec
50c05bbfbe6307ead24388887c7dbce196015b3c4b82c03cf4e445b3ffab35e7e7deaf72
bb7389f1d2f1563a5593ce5ed4dac705e639e0c7f1eb2d202784c470b710411dfaad1109
e28533b3cd6a3af8b73101c42a9a79796c6be73366935c91ba055e947f9042c8985a16f3
32a03e0a8ef9ff21b8061211465190c229bd436a2fe0d2b756cbd158d1e92db47b57855d
16c8e5a49e05911d69d209ab445c14c1134b6772bdde25d107715bb65e76a6dc10bc690b
288aa4c650d88534d4251e54b231cda43880ff43e826d515d656bfbd71032238d5c839f0
ff7b267ccf70733157c6d37f2d9993ffa8ce8b21391e9afea5753a2599a03db8a24d15e2
5f26f4df14300186ba3c46cf6fb4651a6414643d8b5d96cc49c370b9fa59ae517029b8ea
9604156260b6b99545ab0f039875faf851122bbeeb870db363c9130dd341469d4e3ec7e4
477f6f29ecb168db947bb725a39dd7183fc0cf7a89d066dd1db080905c3b345d4e8f0055
9a6abafbce23caa9af64f5ae070eacec9411711cd2f51c5e81492b907b3ffdf419ceec88
3731ea2146e500954cbeea41be88ff6ba4f7dafd571fc3371d5167ce0ac89e921e199749
837b2709a77a96cf8d1b3505b15be391dcf904b6dc24fcb1f1b468e74bd218892361adc8
dfe640cb3961c56529ee5fe3462addee47ddb64978739bf7412e9771e62313019adaabf9
e4295e120751ec5d43793c707c168f004f83c7a9de467568369066d03570d9fea3f87f0a
b143f4de5532aad4ded0fdf45b9b9b51206330e396efb64b71f5f1f1e3fbe669b8312d96
9b5b52e93bcc54689712065514f9d9eabc8957ec933dee68a11e619eb25bda504e93edb6
5a8d34c41568535139fd2ee968ec545826f0b36739dade3ec7084d0dd193b7a49bf52bf3
ddd37711bd4c24a35ae4cedc6f63de788722ea6f903bfca22b77eed9c4e8528fad49ee93
0d0e58e4a2e918115699a0f9d87d01283ab883a6ba861ec3e023ab523469eacb273e9612
a5ae029abaf57ba20f6612b8f534a2e13c94280e1780b1a7fef7a1db2203d1ba618cc41f
6edd11a34dd32cb8352a2c8dc2b081e0faa1a77814df24b29c9c7c9316d62b1682104ea4
128ca7c0320c82b7ed10cae533abad2e8a485472f6e0b100aa531a479196902570afcd67
a3580e34368341c37b9cbb5d43656bf46641ef7079382e392e25f0d307e75a001dbd9bfa
691b6aebf6cf608d535a64c034cf4022a75ee982161d3d135f3e6be392dfac74c8ba7825
00861cfa657cd19902433a13ad3964c5f15cf7dfe5323446562f22e313072707efa578cd
8b162bd9bb17d2e894d5f127fa15312ac9cb801c68896ec5a8cf6ba3cdaffb992e3ca16c
e5a8baf8b54c2d05279fedb8d3427d20f028f5767e7bdd520c7b5820e95e4ee73f520914
0b18c9559da861953326e0d10a3581f49781a6fa429b226ebc463947909233c5fe9b68c3
f657bbe972e6b514211d39937e61717d8ab8ce3985258ecfc871d6c76f185d8d0d5ba0d8
526f4748d72ccc78d32485cbeddf855522bb9364da347f00bccc16c6ce126ee1dc273a61
2f6757d45f35ccf351f67537ad2f7b8cef3d2a5277828d4fbc9f3fcd859b377b0b850373
1bea52feef55bb3121d60f765a0777d9a57697587b35e9ea3218816457c140c3908fb96a
36f4667b43ef3c74d6d2e4a4feda7b6c986069cf590ad5c727f5bcb379ca325e25b65ebc
e1f9554c81389abcb6ca4adce08f14dfe4976749a2ebc788c49df5bdd0f3e3d7e337fef9
1b73a41dfdc955b5ebac31f8f8eab9e6d84aeb5c004419ca4e4eca22341dfadfa959459b
7e770e53b53304d28fb68fdb14047ab52f3628e17fd5e9b8831a22f26892d5759b2b5e95
c487d0dda116623270f5d563708d1efc4746c28ed789c4a4e4034835ec99b400bf84d453
6203a2e50b61ef58b82ab467c4cd94c6c252e35616e5c0f4605d4c6963c6823384e275b4
3ec5403df8cdb63d4b634c0dd850b22eaf84d2a809436b6a18ef77fe8a7632a495e7eb74
0aaff290504f9877e9e423113f3ca11899dd95027408def946356acfa25af4ebea361e43
b50fefa194483d8ef6f62a869aba4d145fb600a8a404ab5a1084dc4a37da4573d518d3c2
3f7a31b36428a457ab931ffde9efa3066a1f09a0c13482319732e923805b0e4173e3f3f4
10a9bc344cf08074193c134feaa0eff728d9530bd3a3a433c3384baa0374000f4fddc9e7
26edf0813a6f038edd764b9da761190646bd7de3ec6975fee1482d3610cffa896e4a0428
6e072db6437952069e6c20ccabce435c62278d21e2d2ae53f56046599e109ab37b66fb47
a59e88d160209f8b0793c543643a292c24015e43d799f65dd2067510071d626cc0dee973
22ac9ba657f73db76b16d630c97b64759e2aa5de3fc15f1f3780affb974e1c505e45252d
db83365a87d74798bea6007ee40394b52aee018119b2fadc0c5dcf8d67f05c5463f326f0
a9911c5c053937827395a6a584de8650de05e6ec580908c479c0369497e3a6ff34403c9d
d2295d9f8d8bcc488cbc3f690059f747f43bb52dea63a7ab92c8b57de9a2da1a44a6d6d3
18c54eecd5163cd8895b3f20c36f2e565c337edb864cfe35c36044260786108cf5ec216c
27eaaffd7582911c089ac4ce43c0ffa48c818a0a2b3198c00f580be2c3a03e85357ed45a
9522dfe3d76fcc358cea168aa3aa5f33c2dd2950925cb7b74c8060ae73aac08c08349806
aad53d7ce2ae34f02c34cc6e5ba80d2f260b1ee7164dbe4535740ac3b7a8533bcaa546fc
b673e991e1f40c47fdb8476c0f7f76997fb6e1cd74c8da312440d858a2c4f3efd61d0857
7e95c32165447945a27b4e9f704da96020880d8d0c885fe867f84991ef27d69fa78aa82c
52bc3fc9d5c5d5c9a6bcd8d3c3d368ceba751eeea5576f5b0f6f918adbc42609b4559691
6b06247a2ac9748be0b47b02e2911323dea36213791d5317efab4a7f203991ba2a079bed
e5fbe10613afe336f18883fe73bd3b0e20d8d70a09c307ba0b4bf3900235a5e1f77b5ec7
7df01e3b50c2941a30017000252e9ba1d374ada6868f420c5163ab06625ee824897bf540
0fae48d1f648c400f3e5a1c931861ef1bf276dd53cb8d8a7d72e2fb50b56f02581743de5
c25053ae6ff80f8ccc553eaaf9d35b18575c344f92475b9da89ffaad4166c193d822ad2d
1998c2bd5a66acdac9a368b7383e96860e5ec42c478c61b6e7543cd1ae5d0b6a41eaf1f8
7a115b231512b607e3ba6a2d3cb843e9b0bcd864a49cd964af394cea183850772cce4c12
07c84f73347ae84866bd4e270a32c212faba7b0697dc7ef165a9cf503478c9ef238afe0d
25ca633e0527df0f2c62a9a63865f687f1beaf263d3c112ed8197b1fd573305341cf272c
c574b9bad21410ed0c82b46cc148f7f273398c5ab8aac73d94340057cbdc38bd50e09d1b
5d5a8be2c867cdefd281666821aa67019d1360a8f4877ea0e4f8c24137a7acd70427f473
b4a4e1651f8f9f4af32923e3ad6098a6e893af63a52413d3acec92cf8abf8979d5b0da4e
36b2aa3738909078cdeab2b4f589b108603fe4098655a278dda93b1143f759ba56593cb0
0fedc003c4abe2267c7baa2f87b13553a469e9178d246ca9d381eb9608f0792450916108
6ea66d4341238b3fca6f7b489927003dbec2d57afa112265753af58acaef645673d91966
ed25247c891a041aadecde5ec0f883f643f84f1fa6f15fa630b6bf1665351afc58ecf760
5279512fe6fd8059716dbebe9bcaa6b944f56d339c9b2bbeccba0fbdcb4636dfb196e5e8
e8a4a910d50b3c14920d268a040110c08d7969a01c384312273e9b1d5b61f858db275f5b
70d3de5a0f6b174de2461a50509382ab37c4cd61b71185322915f648273e70337ece812a
266dd94fc951418c9383543118cadf141d99aca451bc0e534a20396c9e718532d4aeeb69
03cf14dc4061c3eac0204eb718885f91212291d4f0ecd9184ebab253e1c21dc9f6f96088
d71d572bf58efd757b675abdfb1082fd05dcfc1228029df592a17692200e0a1b84a50f54
a18fd29afe08f75c4b35d949fa0aed3aaa83e71cabedfcc24e033cedf71101a7f4936012
2db92890a01c014ac5164394f69056a3d909f67b7c2ef43ede6ade8efb0b2b0a3a33651f
b2e9ae289bbb4610f4db66d3fc1a57b69068a93e2ce4b50c4df684d48ec0b5bba43787bd
6bc192d2ce9cae1bb54a6300794bd3db520dd4699701b2090b98cca10efa0e66991e36d8
e70f6199a88a9544ef5548d609c44296d4282d99ecc278a8f2f295bd24f31f873bc53a74
74f2ad1cd56940ccee40c22ec3394364b6c58a76120bd942e4ff477d32d9c226e2ceccdc
8a99acd55cd5c222dad502b38a3df47f3d0753c0d8e17c57eb21a132fba92bd1f5dcc051
3c444f2472455cd111d2359f3da707d5be4ce2d5c9433c0dfaada029ff8e954374f5a6c6
6d5820a86ae816cc30ab68db933e2ffe381cb304b8ec6cdafe002003df17d7e840550484
7a6c70035a1c3af25a92d194cdfa69c59d8b98c0b0f8e9e7fd34fdaea6a26eb6ea4d9f80
cb145cddfa3688ffe73acb2e8527d93f00578ac8335bca45c293d46344d2dca3553e07ca
0b8d9586e9faac2c52db9990e4605ffd4b626e4a1063fc3342e3f4dcd386d22ad1697d9d
0af3664811f57f8d40c19eafbd3c29f49af6b0b59dd4235d341054170bbf1cccb1f01da5
e6fce9f24b5626e860a863839dc08054de0a22ed1eb3cbd3e15438ddc66eb4ed9203381a
fe6b89ee8143be5aad5a4f45e361c8dd451680e6068aa522ea0962aa554f6658917fdf29
12dee996b7c9ca1e3687a16dba2a516d7dfd52d4887dfc15d3dfd5fd5004c9a7180bff05
e71b7e25edd023ac9f0b823764624cc5dff9205029e1cac5cab3c2b2de9d8c911930183a
31f96feac9ef7a467effe003a0103fc279b84c49de5b94b6c54024e35220126303e882ce
fe3ed25bec56545261b87fab0c3aa86b6b92416429704f0cb36963a38fe145489c6c5a72
f7e9fa29ad7c354a2944ccefa3bf0b4b6ebe57de90b36d39d36dca771688d13af22ef5e5
7279b8d4e0fb7c5fe8bf27a5551e290cb2611ad67775dd89a3c584874857279abb2fb9e5
aa2be59f30ee8bb63118967ac83d7d058f638db7df86d32924cb9a777fbe337dc454f944
58e2bc700e77de4a1ad8b5aaaa6c816c030af394c58be673136f47d2d45d8818edcbb379
b46bffc5dd7e41599ee06bb287fe2fcb1a0223e04caeb5b3bd691b7024d596a48d95f05c
c12d4c4bd868383440b2b591f14e9663dc50422cbb46f4236228ae9f8eb27ea771169038
bea99f0495cd29f8074cad65557b7332a54317b0ac2e669bd32c9487ff346048c2d2f547
7ff77f6600c50c2ff4037f6512d3a4fe7912b8b86b0a3094995e51fd9931d412b161bc3e
26188a7a6cf2cc953b21ae2358a21125e094d103aef032ea827a036b1fcb5d7e5323c1e7
6f5b6ab6afcbed548dd5a1f4befe9b5045ec947552ca868c1c2a133936b4e00e13ffb1b5
bcc4227f6accab9d7abf300b88d94c8857e446c1b6b3c1214989a8d9a924157fc7048c67
e2999a413332307bc51d925db92eacae51ed5021338a573103aa4b706f99df7df519df04
cff440ad4e312b4e423c3725a068a495ea6ec720c3d612978019b6aa51d4599adc01de15
85067c792ee1e4290cdce8fe2413015f60d429aac9917deb5d498888cf4b0808485f82eb
52154bdfa018453a255ef20f5c3944f685e5fe46a76b503ae590632c034079de2bf96d58
aa8df552f32371d830a10985675815c9830f7ec2b7ddfb9edd54b5d6f4f14d4965ee3d45
bce45237dbf47c29126210830c8bf3190053d4363703186ff0f5fadf9bc12c3a35416bd6
0cb72b44927a5e06802ee68d06f4482caee0e3d8ddefa1a9073d585058914a34aba56d0e
ff5a31c4e82e9c1220e66f62b2170f7939ac47618d38e659826134f65bc6cda049f5eff7
6b6daece662f85fccd1b3a53a792b7409262ca05d51d6a42c4c632a32663aff735015b52
35bcc9aee25835335d1051817f150186e63883cf2e9504f13c7307bdb917500baff7f1f8
e7dc2005c5b9be198cb774b991a97d69fac5562e0e26424b16272276efe80bb2d96b4b9c
87f77986f31106b0e59702b45e7a5b26188d90501aa1cefe4e5a85d7b160c968ad6743be
9b99f444d9ad55594d74ceee8b84dc9c7c8860abf4fc1c65b81684d3ce697bdb2b505544
588e7638299cb36cf7b8ae9085d9686ecfc236e0ceea7ac5ed8934c4e18cf43b1452e549
a9b2ce99a05ee6bf6eff3c458cd7d273eb6c6fc7f559d84fe0b4586db7290277bb67d0ee
b87a947924c07fdd7d7f7d18d73b4b3a1870146b218c4b08ae8de88c41e12de6a47f9c89
f684d6c96b88d8c49415355a68e0a456b9b1d6ba0a2964f87f5d8b351b0e9f75df95e3e3
6974a940184268630f2400d7f0376e3e456ab19303fbbd373b1a28e77b350d49017e4a13
3758286df8d59fb7a395902961edccadcede58685de08d8a28dfca3ccca7d4a5ac1b751c
87c14c5fb3eb2d4f0a353458b170c58f27de5d560df91f9f67a500864b5ae2745071fa4b
8846693712e57cde79069b68f742d9b7d69649bd8ab515f6d30959bc1cdf06467ca7f012
d40d47ffce6cf038c54aed6a40233cfd8e7fe2f07f00aaef8b648326205fac0aa84231d4
85073c4d8e6122a42c1c32e3ddabd342b448bb6450dd17f6f69741977e4fdcacffc750ea
eec803e10e97eed82ae91c500820dccdcfd60b7ca61da7fa70a665fb6216737e6637f48c
0b176dfaf56b6dd0c31185dcccdda17cd2a62dd5059c257a2856d56bf185309473b46228
d36eb98bb59bdbf884f35a0baf9aca9f0324548c320121c55dfea781a51a894223365723
6ca11d9844d51edff2e4913263e5187a52c7b5361fa4727bb9c98e344655aa9efe7ad73c
d4ca3688243fa76935aa8c0e067e2a0c77b3f07951a00c2c441ad576293e4b9522ec9cb4
b38a48dbb37ac8fcae8d1c35ff8a42f3eb5feef5cfd0f6a945c27fbc40d312d8a9a02f72
c01bc4d941e1cdb2a4886b4203945a436be1fd74f2646e16a9472f9eba85c2c59034e632
07510f529261e326b9de2e1c9e14ceb91dbee7a7ea96bf8e3a0069d22cb8da331b8c6a94
1c7c32a2101ae7f570c350ca5ca6eacfcb3e30f96dbd7d9eeaf54d99da01ed0c3b519d0b
af0822fa8aaaf512d78cd82f4b5c38b848d1c4237d9300576e6a010920560b54422a9b89
f857ccea9e2487acf581182d4d86dbee9818710a50d46b8e0a03d5de79c938429fd77127
f436916b3d59ec6582d19d98769f384fd3694bea785f204a70aa9623287ea969107c4871
d99c6d6730b05ae927012ba56b62204553e3c95e96a0b5f46cdcabc9292985b34cc091ea
9b53f9fd2ffc2860fe110c5ea908c6bcf0da080a609510738a8dbb669dbe6ece0e8286ec
e888a42890898055e70a52c9a741b33b5c79c9b61dbe98e9cf5a2f7f20b928efda00c3f8
1ad44858dfac03d2cc653d6ce3e7d7b27ec6101178e4965d47b4165a4cb0d657ba1c7579
51afbd8562b32c4cc4522e20cb1a5ff1c3e4c4ab6ded44c7841f59d245862e937d06fb2b
3326b634a9ffad26e88667b39936b5ad95ccfc8c45dea21d27a5e74685694363306f1677
5b576fc9d009e7725e64dfaf529460a4061bde8ab75dedd38bb363698ccff4524f93ff1b
1498b480658ac8f3e0b3bb6708f0cf32cfa5c971a2eb190f5b1d42756191fcf7d68287b7
b097645eec1ca161406291358e0f63098af269a32090b950b405ef8287b3b3bd9a824c14
69c742d290123493a1e44a6b1c62bfec1f7197f7a12e3e6ac49f298736f141b223378739
8e8fc22abb76ac9fcabe1f9ff4455a71b8c7e44d930b84bacc385bb172f61478549ca246
a2650a7a8f2cc7299efb1e893b434562b105cbb88a65b560b8474dcef38cfe652ba183fc
fd302f08fa3e980f5bd5d27a5215bda670807021f08436a220ad0b8f1339b6cc891bea5e
161698e8e970558fbc086fb98cdb35bb56ccdab53fca2a2159063e25057efd0efc4ad4e3
6f775f4dca1a4dd6fbc2156a3885bbdd588cec8e47ddc719f16a4169a154b0d549bce55d
eeea3b8ed03216858024d8c23b56a9aa2972d6f511ccad79a881bb06e055f27cea1ecd65
559319c016dcbf1e60f940c29bf5c48bde5710a32c02844877529b979f3def5e41671873
62b95789540ea79fd70cca3296d6c7f34144a9e31597a111cbe5b8b66588fb917ab5108f
d1934502faa62a293c32bc7aaa559b67f68344bc181b49d2d59127759da258c47929d22d
5eb368f884755c2cad6f2b9f4e38e0a16a1ed7925c13b56aee3be37f6bfb0e9d61089440
cdfae2398d4aa57a69e0796228a070d3cb621f11a2a69907bd392709bb1ac1d6f15c5dac
f3a80fa0066782493c47fa5ea01e60909dc7cd1897399c7c5769a649cd876540568232ce
c6735cd08e56be4e351dd273fd877b246d53b8be8cee969a807d41875078aa7788976580
c383c50332477ba4538207be55797ba685dff1babf89d7b692c62f231688bf6e69b577e3
054c71a8124896d76a999345a5141be2f61e03a1e458c189b5edc637dae60cf44eb94a9a
0d1b08e827c6854ffd8c50a7565d1dadab63f51a9a5e46f6dee11f75b93aa8fb8481559c
ec28612755387cf0f0bf58ee97536d9ec9c23b92d28260565ebfd8685591a4f67f29e34c
7b534adb36ddfac8fae15221ce3a6ff62a1a84f4dcd1b8581f2444c44cb70ec9c3aa4653
3d990ea572d1396e5e7eda1e7d6b05d679b52c1b1b1bf06dd7fb64d51eba2d3f9dd21886
8bc1f6fcea13303f5e714e9cec00acff83b7e8c8eaa783c90c5d2bb1e7ee0e3a14997bbf
e494a550543443c909251b62ff269e2bbf0d206867213444b2ced6e1f343a827381cbf93
3148b7a0ad41883abdf04c302d6ae78637190ca408dec59bb6e0d57a836c70c5ea7d8600
bdbc1432d664950b68f1b59fdd62745b0360a2fab43d40d2d92abcf4907169b9510a4332
760cfd869fb35c0739bcdee5df1fa0cae0c0f3988fe7ccb8a514804dbae946fe89c21335
3a4417849dc6eaf663d63a99b3a53f4af4281d8feb559abd0b81027923824cf94489a4e1
19bb912b7dd9b4531e9228f3dfb50969d6d6946b9000347b90cd741888a019e6864e257f
c4623d23c8e31a899a620e79c7d7138dd4eded7ab7ed5e43c5680b2afd7641aabd1427de
b1545a61b9d341a2e2be9a8b71323a9492c97fb7dc9e02434fee46b67bc0b7f356c0e5d2
c8fdee282d64dbccc6b86ad9c37cd9d38dca8f23e6e94787d3ec14f80eb461f0e26a1e93
7773fc161af2de9eb068b0e66f59c320cb8c932d14ee98ae7929c90530a87d2918ca45ba
8d873b57c3741d1b9cd113b0b70f391588f537e7ccd4a83f47c49f72b038a81e776921a1
27e05c32e775b431af37e19297e92ff6b2e1c21e803912774b7ee8c2b0d71cb00934657d
12eb1e51151a5b5bd261e4698881fc23841f17e4452470e1fb4079d328ef88ebc0bc679e
2f86e0eba81c0730be5f767eb8bf6e8342fd666da02f12cb72a3a93db9b68b92cbde95af
e11863e2622c4c1dfd68b398563a936b1ebcb16409d991ecb882ceb7ae56ffead2cc380b
9920290957ba57616647cc9b8b0dbd1e22e7c07087c96ab84d0ff8680dedb0af587e358b
134f120818ee7c543746fa81e52fd0a5691fbd411e4e385f839fa27108bd02a99f4ee87d
9b8442056bdfcd7090632adabd091b1eda78e0ee7c2fa35a023bcd84b2629dd44cd71572
b5c04a8f13acbcbe29474096a3a5fe17059aa69206660f004552b33ade01b882d5a3c300
4824f52743a99c00bf97688896ee8e9218f6c1459e6cb4e562c0a28b40e95a7023f3ed68
0ff0816a272347ebd7d77b71a5c0c56d868baf35297f1ef228b2ce075f6e2edcab191a96
b5e8bb5a511c3daaebd35e52923022d30090dd3e166a6a59321993a2315f111ef7aeeb31
9373b76e165a192ab252d40c843e8aa0b06213bbffd0a801fa67df374fedf565bd540d0c
b5e7d6c92225e2584f461cf6ddf0e5ee486979870c236a4b6052685c037859aeceed31e8
cdf19ddfeef367725951980a800ee6a03686f25f24071fb9787335f0e3ba4ae021e6d39a
2094e593662a3f0f4fec8c6a2648b4cc1799d882dc8f0ea2c3069be2acc8e16137643efd
ff3bee98f425af4ecc36c1db606ad3f1bc77f7a8ed5f53eac4e593a340d88babd9de9195
80b8dddf69ca9df2a873b8eb92459ce116fd4c729266d7209244c31a00baa142ea73cc9c
c4efbe7aea476c45c868e2c2177aea312e77cd19310ed2308f7bf4c0cc2b443f5050de95
4ba4ed1968688650da3f70cb9a152938fbf923c5b354449453f945e5206d398e52ba5aac
d7bacad117c8ae1237f252fdef80e2e40b95c232dc7a98d66fd5e42d4e3d7f381e9b90a5
5077c7018c74396aca13c10b927092638d6b4e0a0a2b969fd4b99d2beef76fc4fa8ab2a1
12c83f65c8454df97ccdeed63b07f2a88dd5380d4af0ca58f4cf63824b0098020a4903f4
a5062fd1d81f573bfb08544291d1b7a5511b7f24e6fdeeca7eb7f4dc49efaf402b737587
ca5cff44fe3d287ea724a9768061b5d9388ceb7c5c42190648da1397bef4f289f3e3edbc
a3a1f47691423d6c110b340ee584a8adb398b257327c7df55305defd9fb9fe87551f1d20
f2d82dfd91d6eedede6f44aa8c5bfbe7692c0de5a67af5b99c3da136f8255a4bb936c23d
18bee8f4d673ff066802106030b028c1e9e64692c4ae5f8d4178a580ccc33b710ff24660
e929e05b1a7a9dff2ddf8ee6f3c258506574579dff3b916b8b94ba974923833fc0a105f2
7f6ee797137b1f8d471dbff6125824d95c98d7506b8508bf887e44ebf0f8536b6f3d048b
cf373d005b55dbcf6d7704d9da9679fc71086f7c2ac980a0ea47cf912c6de8d0f6728d19
51149810657fdb65d13d7daf9b28b1999084f56949a8630640dc3c44aaca97d0763ae2a8
0f5a6df0b4cd580ff96398fd131cc82b904a038da66271ed39b8b0e6501b93d29812bbed
801fd40bfe80286bb6c87b4c5897c4eed751b07fd242f01cf4417ed20ec337dc18d45468
ba50f6dd1008cb4f50c6e5ad976676d22a44daca15671d45249ac8c0d320030cfb3a1057
76738657993f176ed3e7dbde1631e2181e8cc2439f203441e3e29e2a188694415b61566d
203a8d06463cdc7493bf90bd942d2b7688879d7d7e6256ad2ce08363e9d86ec3846452b7
a30fe08945028a1529a3bd42516dfdb1b190b04eba7c222f8590f5f3199e8123e1fb5dcd
4869ec1b1b3804621df78538d7daeec441a22aab8f55a6f7992fddb97df484a585bd0a46
398e378d37623bded0687dac15a9a1f3b4c135fe81310cff74a7b799434c421c12e75d11
1544c0208db22bc01dc26012cc93653d24ea4efb0cf714f2aaa2c86f4e75b2526a8eac0e
1de8858500234e2c5f23dd9ec920baf710642029356cec4972c6e452bac0e95bb9b952df
66197e5081aae01545c65c985b6cea280adf017061f6abf27e74c4901b26ce408425b1a5
ec0c79e3d5679e855db3059608bf49da506428f21413f21abfcca3687c3593879511dd65
1796f8f1d4a433510c074e2adc21ebb87bb020dcb75139f061807fee919394983c1e7b6a
a89e53b4f36739cce53a47cba1b4216f188316444154af721cd850d1c835e6a0f385bcb3
f49f717614c0cb62bf1cbeada965fc22cb95f70367e4c0edcfb052940e7d126e149cbfa3
36d9fd2d4a09c2b82f00108273c8b5bd6eb1e77fb2ab167ec3e5296da76a5f025b7e7265
742e10d93036fe1dd412d6e3e2b9782e4cc678c1888a3001eba80423a9367cfa1d4a1d4d
782c91ba762e5d54881be53b0a66510b26e6dfa8c6485fdff21ac5a2c33993f5900b0b3d
564a84f34c880db8c2936620284a0dc47199d9737c4faaf8c745eda2282d65479fbfe3dc
6b35ade06ebf256486b1ad46390a08b8092c747ef12e5ddc3c69d756195947833df4f965
ae63e779b727ebc7506ae472fecd7a9546c42fab50564bf22edb144980233411e16bf957
e1d7718f8a89757959a91b8becae719e8d38fc85ffdde60719fe885522e8c9881795646e
6836a784b23b96130e172fdc3d3f770d933c87bb1ec92d2698505ffa559e776839b133ab
4ac16f08edabd33ae1f017e4136db9a337b2682228ead7497fd73c455ffa05ce6a2c8d3d
aec593e5e55bdc7a256a15e5e6533af854c28ada8e0071bfacf7cd619eb6d8a9ac47a64d
e04050bd874a1ae7e5ebed91f4825d2a77a1ecc362f86a3fce3f4c2e2fbb11fa0187e168
5a8d7961660631bb3c2d50c1f3ddc02e45788fb59ffdd00568250110ab2f637d0a3dfda1
96a68eb2d673ee41bcca44849bb621da37a8d1d734d0d34fba945e2fac804162453d8de0
ccfa7eed611368d311eb02454740caeb23861e1316dce8cc500262957b279724eb1e76d9
ff7299147a2bb4851317aef81de2a141a2190f147862b96e32bd99ed57e0842dc4d2070d
cfe7e4e8daeb1fb13f5a76fa677e3b3f37bcdeb0da47403026da3e31da0e26df18c10ea5
55ffa45ab98672e64cee5cbd153dcb5df3e9160538202b5e04a1ff7fa866f75b170e4ca7
b8ad18fb271c0d394b0a44efd399d02177bb8f810f50dd60b588257fabc2fee924ee9371
8167a1b758c2e58fdca555474348ba0875a0e04fded2880d27885a1f529d9b0aca1ed01c
2d218353622408ac58d529ea78dae94928113f13ac5f6421181c199229dc25bfe9605bd8
87f3c9776e52cedbdb9ecaf3e0e8101c252fdb0f7b94500f49b6476cac74aff712a31d3b
b924ae519ea08df9a2b03f24ac17196baeb45a11c4858b373c2e53df8a56f05fb6181b73
8d0616debbafb07004d06b0a79bb630bcff4198982e9a58ba31246f8102cfbca67f69bee
20f1e3b3f7672a7ce3eec65a8279c655bf29c29bc68d799f521c3bfdfac38eaf744d2a44
c988fc3cfef196e6e952b0c24e3bafc455ac29a99a5951f2b598b40806e114d2fb9505a4
1878d7b37cf11021e7020c8416ed19077f52f28e9c8dbb0dd64d31cc758d00a1d27d4ce3
924215781fed7a072e848a7dd6b9507bba47bee2b97e4d6c945fba51fdbd0c3cff9c6d81
2628bd84a035ceb1926cc17008f24c45bd5329bee8ee84dcf5a6415b71cdd756aec83ee6
30e28bb591a50ca876a419710a4d94058bf31040a5cbe51454ec100c4f8bfcafb6d6024e
a9bf8a9b39f45c8af2dc4bff9dfea3f681bb7c73d18b1e4f3c9d34773703cf0847e2fa46
743e444ca60e6aa6f17266213cc6737412415e4d6da7d99717e6c058c9da844eeddb693c
3d50c1165817c56fbdcdfee2885fe63787493c5708e53d1e690ae30f1b89939d45fe8f9a
7669211eed85e695f34dd0c289f48bb61773bdda75348c3c6cd602924852062c14f2ed2c
826e0470a49c46088fe019c2474f7b7bbff9710ad0735e5d8fe0d5a8edd64d5fa71b130d
da0497a00183b50a5e5ef8ea10b73924f4f2c95e2eac74a76003c2b26ca1c4c6d78d9a81
ceac45b5b2ad6bd19eea7578e178f1e42d066ae5b9cb660f9b4fddd49a51a52441f2fc43
4af04e639a158229f28f35d59fbb098afc1d91bf190581ec835aad8b64005b4ae41e699e
8c0a64d8f5fbe14fca8fb9ef13801d378bc4183673eb21fcea725b6958ebc1b1c0609ab8
99b56967739dd1df180a12ae36becaa2758278c8491a5cf9a4090c47d279f9061725e742
18a69f7046fe216567ad611f0e1dcab5860ee39b137d2c85b997d6569e05d07df69769e1
5301f9df3ab94384d228dd996bc1ce85df6981a3814f1c9fbdcf40663570d4c86dc6c57c
40ab5c7d0f41fbce02cefee98b9e64e0f8721bcfd47f68f4e3abcbeca983e3f1da73176e
d73bd54f0cab0e465138a7b2055303979c4f9adaa9c291722206b5c793688bd5a02c5527
c43d018b1b72ee498c07ebece857386afede2a2ce3367d1a53c8a872f1a00b01b873e4a1
326d8836facd01d58c07e66cec84a4cef87a05c8a82c47eb28229d130e671264d90fca8d
9fca884f31a8ba7c574754b4e3a66d9533ad81457844421008a1ed154a7c58f534dc0dfd
1570b8506117e49cbd5b98ba4cb3959a55c7a2ece4ba3088cbd50583684995671b81a3c4
38e2fc55867bbe226757c5772dac61f647c18c4733c275ad61b8122879d23d25c9d70510
1009b0eca2d9e612b8e78881705bffbc7678b4fdf947193fdb3439e95c7dd19bf19a77a5
7379cd258031dab3d92d3a02ad0787473b10608b464beef3feee7c4eb5d6571b52a10e07
aaf4bd4d1be1f623bf3f44d608409a17ff721accdef6ebdf8d65139ccf9b54d6221db16a
7aac08e47aab7cfd39cab4b5c7f6792888f2292443d67cdfa7a0e86cbfd70c0c40ab9124
fc853490831b4bc50ce6fb5ca27bf4811669d395fd239b894156347c111f6a2ddcb43032
6ff3475c291c8ba0a41b485c04b23e05ae2be3756e38875354088758dbcfb9b9b2900e17
ebc642509271b535072e4e980a693724557e58146963fe8d3c5446e54608a3fccc76c489
9ed8ec450196866529c37bef7e1c486b06ed7d118971a2619c28373808bc6ca81ab4f7f5
ae869d188ec85ed7b8f6ce37005bc2a5bf986a06734188f845bb41433ce6464438a60043
b56f7dbb9987033c76fb9603a8e01f9b296d1ad07cac976c7c50bf1f85354a4ba4809c30
330133bea72e5ee36ca40a0747819a97b67cda51adccc08d00aea45eac8edb8ad8d955a0
6336ddf7fbb114d0ff06e7d6712e8959aba55df0b6bdfc96f81281661ddf6b3739b83451
70b5bbc794bd7cdac9289d7417a2443f12a79daf81edb3adfadf5709278532177c7c2bc5
50630c0d32a9779775178955b239f0dac103a272dc177e926b9c67436d879dc9986ee019
9a1c20e10106c4c9e824603fd9d252272dd6b8fae8fa154410497d394ebea4b1e1febd8d
afdb8a85571c4fa7ac34a498e465143bbae217ab906557708ba0c65349bca4a518dbe400
2b5a82fca9367ea29b62e7bf87cb485caed457de6bb3869b310878c8047370e5307f6a8a
5cc645d4f2ecec2a3dd8dda07a157fc7048c51a12913508019ea72a6894e205f5c31720a
bec094564e965835c76d56f433ac03797c50edcdca92055c255d3137029f5b94407f4bb0
50ba92d62ae512b5a986290461ff2fc4591b24b8265313b15df26fcc13f8ebec50974c53
f7418c7614c26cd2ed5b1ade11b4c857f15f5bc76a2ca03dec95cde2393b6b454d4a0642
38f95fb20de91396f3ed09bf8130e75bb2df07050c197b8a9122e4204a4e60253686f22e
1a17b17a8031d7bea30588e381761b43bcc653c91001ab3c22a7f459fe98a3e2a89a7de4
493b2c79f2a34ab195702169d2a1d56a785c9e797d682853e9caeed330633c70d2ff41bb
a608fcb2f61d881a018756ac8485b6c532deff8a902528f67461a53739df165e5cb576f4
b79135b8e6593896be5cf49f69f8a15f59294ed33849c97345900e749c8ee265756b4ae4
d8a89e7336c08a822d0ff6ca164e117200e29986e1af0e4e267831274ef366dfec6724dc
83a3b11bf3f239eb79857710be5187c6c209bcaed23922097cee6045ba02f3c7ed222ddb
9f175d6876b60242762385e96d7dfae4d74b4151c847bb7cf2a005a184e5bb7ebb32c20a
197debbaff71121949fe99976b5452b130ba6ab070a86b58956299e77acab71994746e28
f414fdc57dd9a9f6c0e310bd356422b69a919c06711bf1ef073f1a6907b873a036d8583d
d417377cb6c55247aaff0864997887b99122b3658be6329f875dcdb526e56c7306776629
6c423ebd707d743c76268f4a57018c2ed2b6d48c2d8f3021c5f8a0d1ecada671e9c268cc
6643981f094550fa4941d83f76f81ba21cc99615bac2178788babc71789ea4971df11ff0
65c2a19cdaf6164fb15a4edc8083f16815bd68746491be85e6d73ceeea01d0f57474aa32
21b82f3b3a4bb676b1fc0117cbc86efdb0673a27fe3bd3e13257e40a8cbba8ed9363fc68
fb09b55580e03809e1798350bdb902502cb14fe5e44822b4b46cf4412bb5dfcc1d15eac6
1f4dc2ceb23e86c8844e34c833a7a0395d6053d6f8530a4ccc1a630d6e4c25efd10667f1
d39049217f6d0f363c624eaff617ec519ae2b14fb25141dc593e2f635bfa074beb57741d
d6ad32dcf13aad65d84ec2b4493278882164b423226cd5262be8070b64100d5c0be3b185
db7828edb82e606ff81e2ca6e4862e088eafca5060ecd637af08169b37abfaf2eaf66fb6
32925a7b4650830c2db7e901344a179cc90dd949485790831ab17c88b80bdd2fac07a00a
d5e4da0d6a9101ce4d07769ffd3b160be4f7592b4bab847480e6f0a7f5b1f09c54609927
1370f09b1882aa303a5c8d16d9ea3fc6efd6c049d3a4c1fc1167214f3d23f829781b58b0
c41adca9e1ea3ad99122ec1980001de6bc1247f8678996c82f078640104181c8aa611740
f11821844f13fd0371aee4ce9e416968f5849d4bde70b50f6c1446dc251d30902871ab53
75a9aef47f61cb1a489f994ec2ece22b7a6e09271ecadb2a28abcce05383087bce95056a
4290d8fd0af00b0cdb772523a1fb7833efc3586d9c32c708f1b11945e81b9cda28a2c1f5
99043e57bd84de1370a8d2baacb20a89d1585d24e57a5e408703e641bb55c5cf1f5836f5
c8641bdd3d6c7acd006e297d050e32a713121c6bf96d556e258f68389ef6a065984b3c68
6c4153969af4e6c2a63809fb32c6add74a434847e46551bf9d1e3fde57eae41118c0f711
2d3844e9fbf785d478ce9ef13bdb02c2cba40e9f0348c0cb6dd609caf75a626213493d4d
36e933855592871e25e45d25cbcadcd0f66837afadd9dcdc49200b60e702d3fa9cf8ad15
5cd0ee3b14292cba288d8720593cc4d0135d551a91292dc1321ed01fe89e36676bfcad86
b7eaba7aaa9a13d5dfa3bff1e917b2a5c042353f98fe1f0199470fd15ead6c37467dd75d
2d195342f639335a259e82a0facc25dfa73c92c89ece2ad842095406a121aa6eff64d7bc
24283544e7eeda3c62cb6142ddfba49836828b7a8b90ffbb8f4be7ee250bc7903ac2c9fc
5c14c2ea6d40ef915bc03157d008e33bea4c4b305ea928556d6319f90b0ea6a06f1a91b9
4139f5aa76fcc15cc8e2e9d101204e7c6381022c556f6894f5dd3193439618cf51d35af3
29f1d968fe3a83bff1e6ffd2d5fe1c7a5ea309202f8e9b507ff6ee6ea8d425f8b0d7a20d
e3713ca8112a5ea9adf65149bb758b243de8fe522c7095cf4ac0d90608bbc1bfe5b9e2af
104bedd7968d9c3810d8116f6cc9106681896c5633c7cff4c3843ff6706bfb909f9ba0c0
134ec1e46cb32557e32981e09648d12cf3337f03310dd32b8dc434db40bb170910a7f5db
e18d25254115cb017519f8762568193c131e0a2079452a487709a2a031987778216099f3
ffcb1d4d97321509357e2c59ea6d9dfd4d08304c2aec043a7b068ca33e09f8ec77f14729
fdf43478e17b1342ab2d503d828041de30468fda642d183fc73aae6e180f0d023e2eb283
407d7e90ac6202d4295fa9bccaa8e3ea0aa1f694891e7581774af29072aeaf5ecd43a69d
acebecfffc5699115e98c14183512a3cc53740881a382f416be4e85199044ff8927c0c98
5c71651aeb6a876420b169218921a0985164a6151531118b2685344c1e531739f2be82f0
aff5ce58a8f7d5e2df051270478719898959208ac61ebc62c400d34486d6dee468112f3b
df191171bd88d6f41e7353ed34b6a71f7343f913ba5c278042ac67c9cebc3f59fffd908b
d43b698dc2d027f80261f22b50e8e3c2473cfde0f1680ee1145735c71dea404707807d63
0ce48495cf7c9ab97bf1dc6055d994c3f6a0a742edb3bc60fa51f36a2b2a20305ff259d8
66819a231521dbca621d627041f9c5dcdc32b5cb874ca0238422e434b28598729c54a461
82831b69bce4f0a40d34fdafbc0e25b483c8e8eb87ac47c6eda2a2ef58d311ab84daf871
ebe7dd424f50607e798728f78a88a00d0072ddf58226daaae87e03144b537764ef7e266a
31fe9f1baefe5235b7e9dcbebb981a9f14bd05186500e7f2e486b25951fd76ef1cf5c5f8
8481c39fbc2bc2d364d7d0e0e885b569544a51a467bf7c1fdd6ffce1201d50f9b58f495b
abdb8bf04203721eaf838a050f63870a4ef0c5d0a5e8608d0534cedc77fb9d2c72b4071d
5c3b27c66ba9003a8a29ba653716e3890c5a3fe8162ba5444de6c47c5f2468b62f016e81
542c42f3938cfd6f8b5efbeea2a5d7b39b56d52fb88ccbaa05ebdfd7c1625aec0856da2a
30635804656e170532d908100dc6a01080543be7b176c45c7de7dd5100868f3dd5dac180
327941e10f0010ca9f8c0be16aaec6f9ff00770cafe0ac0ea0ebc4193dab383d43ecc956
16bb0bb1ec30fa4b0a94b868750b2cf96e6dfba6c226b8c30db8852a32a5d86f0a63edf7
96be559c2ddd2333e190953e0634cd3d7883190ab532d18d2a14dc3a739df6937e3a6282
a2ef36ee4c5704f76852a8ca83bdc6a416312de7dec88e49d728d4a2b933fd29e7a76e8e
3d9aecead045c7317909668cbfbbfb0b182c301fd7435742f925f6bf54a7df7626e1ec5c
9b2e264c0537e08368396baa1ebcc5ca7907fc347082580ac757d1ab065c09db3f961e0b
1afe3cc4ab4c2fe3602dcd06f5284bb2983d19b2bb3717d4be1cfadd81a890623894eb4c
d71f7899260436d5e2eea26f385b47f060eb29431e106f35820fed679dab777c2e09a2b7
62322a8b79f1362393d2c7514b88022336887567c2edf2e4c185c1f911b6e328864ee6ce
9df35b746d4e43b49a2b39188c0141b1ac7f0dda8893d6e005e3910e584128ee973bfff7
a0811ceb68de51a7136ec6bd5d8ba3dbbc6f3888d532f0745a8026e046dcbc3f26f4241e
7b5238bc138f755c10cb3ed6cdf859a4435d4ba5d1607a15bfd9ae6cc606894fd2c25b0e
3f87a2ea01bb430f68e5a1c701ebb05ff2f52061df63f20c6c0052b683223b73100c6c95
4583892816480ab218117b960adaccce753ac462dbc604e1844c9e16585fd45c225c374c
83424ab00cfd5df0b7ab2ac915330cd0ce0247244b6660a9634bbb1a2dbe2b9d1fbbd4b8
8996d8d91c8e497c31ecd38b5c76f261162eae281e3d65a3aa0fbddb53d4fdb70fe8dbd5
626a9c1aa9f2ae9b4b964bbe1ef7383c2991b411ce2a42750de06fd278c76b5a5eca87e1
15266587bf17d0fafe97f33a6f227f8da7cc775a95f6df34cf17a2c98981c1408a8150d9
95a73a4a968fa1655c1952b5725403ccdc338ea5b53d8cbe55fed74e1888b3ac990094ad
37959d1cd1ea5b2b72836c3815320628b792418c6af4ae1b3a90fb89d6b80667b8323b81
a3f5ec90a3d56f05098f474f77036f3fb95931f7986df08c7d2245334f0eb864fdd0db00
b590d94099d806d9db9bfa3be00f0e4785c9f8d9b32278df99cb0f39d6d870faca2c9e36
391eb36f3c03b29cdb51d50b88469cd1a5927f857382a3a907dfc943f0bb9065eca6801b
e6535dabedf8b5d4ebaabd96b4ed456e57b62d0884d7fa68f27f5cc5358a73f8a45ed855
940e692ee6753c2801e847c918be2c8e9fbb0c773bde5c293d6777bcac843aba0bc8f712
5b7f79504ae59821d277750a48e8b0ca6f1b280a2a9f91019cff38a0007be2e317530f55
ac46cb6bb2eacd002490a88c2189016fe312b471107838e6ed5aca93b8d8a563c38fc794
44acd20fbdd463c6ce64998d42e2b548ea64a0d0b0ec5b5972574ec971c1d18e0e7a8c40
31ec27037bd30aae273aa6f2bfc0c05087f8acbb608109c1a8e8b3b3a3e5219c5f8f8ead
08a865ac3aa9de3b5563a7e01c84e0305725605526192761d1c4bfc78b61adc7f24d641f
984f4f6a3a2693fa680382273afb49833ac7b461d16a8802af0bd0ca9bacc2cb2d6330ee
3b04f1ad222186761f6b57c3a60efec7344f64b42f12ee2099186d03fe82e8d64e391ad4
11a114be4b28454bd6ed8dfdbe321be6fb93d207d9fd063bd9572986c2840cdba86893ea
f276671b6089ad3a55179915ded1da3731677abfe67139afc369b55f736efc9b9b6a77d6
b55d96d0f96bb74f6f738d86338a120810c7b48d670e8fd189b9e3b84f22b69cac1f46e1
324da97dd272f699c452f17e253a0c487202aa67977cc625c36c0fd835659f44d674e0db
e81e7f8369ce5180c75c19b4cdf435192e491b3f41839e7447d4a7501ae92bddac53221e
bb35af1713d6fe3afe41445330236c8b9deba58fe485293b35693fb98398ceb075d5e22b
99de521512eb77bd7b995745342ed5cb258e2a37651877bdd41eb9cbea2a38b32a8e085e
d276e7a2b80387ae916f458817dcc1bf4da97a0fccdfa0e117697ac66102049dfddaeac7
72599a191ff4fad88aa5dcd4ef3e1d6aaa1d24c7510d8be7684ae67cd53907e9c2b7f047
d280ebec0241099a341961494fa480343103927fee4e336d1606643cb2a81f40bb297533
eb854be56107f4369a17dbabedee1d9917f4c6a483eda34f64b512dabbea6333254440d7
2557a8fd5e4f64d37ef0b813b1001b1e02fab8462c0e08cf36f1d5d0257f3bb32d7e1fe6
aa671b4622c34b9729907005aaf3402a6b19ee59bb1a40edfab78924adeb22c582f44915
91d7cc6ba572fa8578ea8a83b1def1f2555b0335961758ffc96abffd1d173c678686907a
ccecb5ff95b3743833cac82a8794b01c4dfbac55b76c6e4bc514b3cd23d385086e0fc9ac
a0a40a92674d4299e854d5668b266044b8cf2bef55941bf61a042d551f80dd44c8ef32d7
d926368b314a6a5171ebfa267cb44b62731db6db87883f65edd84dd08eeb71fd27176812
7c6e86719d6254c4fdd54747ac6d1a24ceb8206ef77a04d17d19c12f425befca96dde4fe
e71a768919d5ee36faa898a2904957ba2702c7092f2a016cc4fc0086855d7a5d2b9d74bb
5e35eb4d7fb91b1c783f72acaf772553b96ee03df3fb9f60e9a8e45160da5df9d14222b3
2a885f41cfb5f34fa30fe7fd68d207f332344e0a45260c8f6fc21336696dd3a5988c7317
d3e0a8a89f2f12365f31a6d554ea150415dd57e513790bc93ca73bf2bd51c1e60827f790
c67aae376912f93746e554fe6310889ebd11c2d13397a6519080d2a60e03df07d3efdb1e
803b3dc88da079c2c851a302d5a4e3a49abcf1e07114661dcbc46f5f95e63618067a1e33
e58f7b026cd18976fd5f857a2b2ad55848a5c10ebbe929d46b40925922c7b323e60cb440
2616a2dec87bd56d917f0a7922e80603a5ac6792a0ebd06c01c9ff78ecac83fa4323fc7f
f20999c1d62a89b40f36598be9d0dcfea9e7a408cda484552d353bc9fe9d56141cf00b15
0cac91e92c9b0caa0dc5bd606ae5c4c9c7db6865434394fd17a0a07ae6870501953bea6e
198337a35dccc49d724c35f3b889bda935ac1b554ac4d1d4455efaafd3061f32fe1cd09e
1e78a9ba5e0edd007d4876936753753dfa89f34c4253132eca54d314793774901a4fecda
2851c86b891e99b84512c638127d6cb4fb78e8a7e1bdeb030eaa147d643338c9534b91c9
c849d4ff158399c6143c54d6054d6a448d900ec38bf77afe652f3d7c2213ef5bfea08201
ac9246e6e36b1a97087f1a6c2827acd7889f19af95ab331a0d340752258e70ae2826d205
de9ab529be01a2372aee0728beec6297c61b7b6ff6d91670760c07fe39369c63571ba17e
fcef59f2b97d04bd6d5377f43f0595f000a37a9f00aa530b99cd0cdd176d23b9ef745013
12b617ba05c1008d5e7eb04921db051f45ae3037b037cad6f427ca2191c4bbf626db87af
75e23e33ee45b40ae093fdeee68b6216a2493a18a06308982b253e69104d5e00761ea260
a891e663c6ccac3d76e268407594c091dff1822b5ee388763982daab548d0743baa05727
3bb48617b65ecb4a33c9307137518b48043ca3f53919b2c206e7153f6f52fe86ed30e51f
53a2cff85214f002145d3baffaf0c358f27e9996514c2eafb93384505eeda6bb6a952cb4
4d332e5b867a757dd659499fca98015c5a0dacf95db7e6e845b07efdb513c0e5984b65bb
266c24f30faeaa31c04fbee63493ea6e5124c8385c257b582bf0874117bded51f8f00d5e
aea51d2bd1264fb473268822de48966ce4fd867fd3b38f05e935e393b544144285478468
396baa1ebcc86bae2954c2b4d7ac9f26568a3c12733da3c96afdd3443b46bc2ae44f1098
cd550a2140cf98e90b51074ae34fddd6b48a5c012cf927e1ae4dd58aa86a2c650d940792
e287052f0bebfeb20c0311fcb830d18e29103c66bd7c2206fcdf9ed43bdfafbcbe170b0d
d887e0c0fc950e1c866536e4677244d945538440d20594361c3fce33d3f2e5b883c46356
692635ccaaa6d28b4afc946264d1e0c81edee61288269b768fcc29c2181aba8e9d6ba82c
4e25f6aa793d788a058bdc53dd5545cf57992a28740f5f5918f3fcb2323818d867b2a453
e36a465311d0feca772df4fc8c7053ff87b230968312c6fc98a3e7257bf66319cfc8d965
8a34b340369c7ed4865043ace17712ebaac31ddd8e2a612cd42da27cf9e35b2de7ee1027
cccc3a939cd91c99b4d28d867748857d9233b047cef9e9510a76b14dac58679686e079a3
5436d915bf96fd97599a2d96d8d3c319400928ef195398223e402a76cbb6552349925aa3
42cad13ed2c5857270b0388130f1edc35ebe730682886659825496d6c0da518c8a40d49e
04babb5c4f9aad3bfdc12e6ccd91a54dc9341e57cf17ee6a4034f657633f0226f3dcdaf1
df7c228fcac9d9e100f5e93b34bea164eb756e2de16291486c4f31e30a9dfe725491fb58
f7f21857d69ceee7f813da5d4bd4e75a65acd7d97e1a4cf3ece58ac9261fb235f6e4364c
f6f13627141461844b16b38a5d56881d21dc64fcb9598ef75d4b9742bbc23ab679704e7b
f2d97496b56db5c6c986157160fbbeae0787367d16c6cabc83aa399df2bc12636516c628
8d6aaf9b05718512a29d86791db77b3b1a3f6a698c49ed7fe05f98caaa5f084415a98fc1
5331724903e1b3ff6f2ba0d0f87c8c7a6df6cbd285cc541604a85e38a827ec09f5da4217
45c15fe276d7ae16dc4a8483586eee63aff39a90789e0a31904e77bf8af9049e97957c43
1eaeded8fab230f95731efbcdc39e492e94bad59786e02ffd77a4fc6c262ae040c9c0001
73bb306901f950db0adf6eb65544d6bf1f1c8ca6787e4b2f4f94a020bcfc2246510daf07
839da01840d79b23f95a34658ed0498f2009e557555644ba0d054b8e8b96ed04a217f499
92096380e368840cb3029e430afc37304fd9525dac66db5e0c715cad6faab6bd4e94eb42
60a122dce74810c559be7f5245c1804132b5c582245968ecbb667110d96f062ddbf87a9c
8b354057a0b30c6487c8f3aecadfdc4ca31f3fe03ee61c4629a16369d9e7137949370303
0809d855c63b976f77f3aaf24a77be214dbf42e61ddf66c054448334247928aaffd013d0
d20b036f0ff352806f2d7eeefc20f2e9d75a5199a0fa295926c36d203247d1b816f9cf07
17d8c436a63460acb49511c0cf1583a3d19f98b1a8265f1b3471f63591f383a6ac1a4338
4e5a1e3ff892b42f0e9d717587b48d24466519ac6b9c6c27e1a1c1eeb93c8e526c03c547
2f286a0cb19c7bc197f7c7d4efc2e14b9f385d00e7433b1d57be7e49265305d73f03d22c
0b0382dcaef76a947f9ac65e12923219961a100c5e1a6b7d5c2a334475b669a9c8d1ca77
8735ee2b32a1d0a27febb029061d0105c2d2f8074aab606ac93a2f8f3ea3471443b51265
b8cbabcebacdca54a809c325b48ce521b1af634697bcc17672367d4ccf4b6b8b60c972e0
ab1f2358efd704ba6bd3b893a308099da1a52d30f8169b25020904c7305e53c894036032
62628582777169e3bcc2bbdb9483e9b5e90a77757908daafbe6bf49bb63281130d7c4c45
3eec809b6f6bfbf5d914b3d37ac36320303fa4b330f435629e41facbb80819875d6bcb69
402e72408e904d2ad8512aab7ebc1e62ce5b99e22aa1953dbe61f8b63b0ad6b9e65fc7fd
4ecb9784c298b21b393ad9b9b10d51880070ac9e5b279c25b1df026ada820115f6003bb8
0bda13e5317421d08009470e12450de811a8497b08e2e05973c3c4aadc52e1d207c61c52
e1a96712428766e9ff95b4eee2eb10177aea312e62b51ac901a360a798cb182227dff13e
0945854b3a7edd6d747f7c4baedd8905c57eeb012fc20765db8f037ec45e1bb4c4cefa3d
1696bb901a4f133b451837b7d4f00f62ad22008c073235932dc51217e44bebf5d4631baa
f8b81e6a4a41f3778ee33a827937804d07137ccbcc891d548775537ebc9fd10efeb21b5a
12778670b030bb6977c20a44b6ed610715aae70325f687d21da8a9915748f394704fc630
317d9c4bb9352b8c707d822e5f15bc52dcd7d7c2514066d92c7e5791717434ac6c71d717
2aa42b9f1b9979bcb2d08be87a6aef9d5e4095c86d243b967ec7cd9402ea7d451e9eb1c2
8b556a894c3d3b4f381d4786ebf56ebcfcc921f19db14a18f9a8bfb6c1f4df51117f15a8
8c1b4790aa7d532fb92bbe0639dbae617929f83da72f21906a7fc7cb1ec3f0aa98489e7b
0a55572e5df5a1bfcfd1d87c0ec7c43812069fffafb97ca39bbb2c50da2074b177dac64c
522e5f9c44db0cd419b0816483c58f1ea50d22cffe86f1b9f8e25c6358a8a2c59db0f62f
f4d9ad46e7a88273193812dc125fb21535a5b07d03c90641251feeb8a71630e77c5e17c4
15a03100ca0a0228c9c9120ab09ba64eaf15582dea5f0974774d33b6a55dc40c24b7ff35
4c6eb509cf8b417e6971cf247e471b9931c273b576f7ca53aa1c92664df08b4444a19bb3
4534487d5785e752064e022748fb2e317e31aab0c6819bed4ab6b9b17e4a8bdb0077a0e7
fc095eb9857db082b134cf7aa17aac3ae52d43a697bd78271b10101573045ecc1852872e
b2be05dfb383093bbef658dee4ee347ba618dbfec7112a3c6e0e7d78812ce4de64aa6be1
d441ebdd284969cb145ff47fa8aed5f25f29298171242f149ea46d0d255bcee583e3a5d2
35bab70e108f72bbf1e88f13bb81f32a2a0175fca20ad0f6ee6ef1263fa1ee59cfd0bd68
e0b8541b6975c2296c2996f08e09619e223c12fea0ec2f3a2693e63fa00e4158ec42bac4
ff942c261d42f52ec430488a1e841a9db58fab65e089a4eff1e3046b3e3992700177f5c8
e841865783c39956c842acdb064e6d872a6c816b31c99a9e16a9f9f8751bc0687e564973
3005e354f4ce1d774de2ea7dab965ff7b9f475616741e8d8d55e7c365b4e4593b8b97bea
5f2a488639f814cd9f51a15abe3f057a3d4f88909df176992664861e983ba45f078d87bf
d01d0d895db64f4ec333e17e3436f7152a5c0697eaae6cee14bf546f85a386ed0bb8e525
436af23e9fd687ec248a343c06c71d62bd1b3c2f38ddbf9cb0a6a825c69641e4ae192e58
1ba3260fe7d4e2ee7bfc7366ac9682e9c886640cfe35629a151a911e5636fcda66fb6e87
8dd397f3c5dfac2bf06ca18e2549335002b539a74a60946c55c168136a88505d5f199fc8
0a2fdb94fb38f8077f231cd1479de08253a1bd72bfce8e5c431f69a6797b3e3ceeca7563
890d42e5c7769dd38f509c678549af1b4054d33c7970b5eac199f5e69902a6d7ae4c4210
ce139775c74def5c3b1c210a8f7290694e39ab75c921d70811e3d379cc4fdf4cd25aa488
ec0c32d5b3d68451abfb1fae25901999c3b2e3f9ed0226bee143e51b1ceb7d0833671fa1
c4ff3824453864a748b7a17770c55056a14bc2446888c4f294c159b6c6c52997698ef42a
7f031293409cc5614cd663172960e933e9f59a9b0b89147859a6801e4cdf86b9ca7a49e6
783d714473f32ff50aa097ec663a51e755a2b5c44148fe429c4c0496f3029b976a9453dd
91ace4ed37d5a683d31ada09b9f2409829512905aa1eb5054b8f5d15d133a00308df4875
74e13664b72396d953cf4b2d1e8c8d5aee52e27e1018a0205281c1a741345b895e1f40fb
817c151d586d944ab3bd41d9478b999a81ddacf7ad861ad981570a0a191ec697ec369375
79e8269f378ab5eece778397b25ac5c5d924a61d1ccfc909615914c059de8cb204a309c3
33aa8991289d3cea4e68f7030e0e926e4358c428c02fb9b6a9f54a11cefe3b621fbe46ea
d31b78b2fd7172512c7f5119fb04f36077cf538b0767174953cf48d347c33d8b4fc933ce
8f6988279b2d02fee2726716efd07d7f548ec68648dd58ff88fb6084ed8432bbe5bb9e8c
f7cca7e86b145eb40ba6eea7177d03e5172f22acbe37db21c9da58e5d1c6035baef83f6d
381806bd57cadf9199d41a8ad5bb5ffade434365af7d8c8a775f4fbd3441eea9c624956b
5e7bbbfb3da7ccfd02e9bcf7ee6ee8f7235e10de46bb615a6a78e92e15911f7de963df5f
ff157eec27272a6677c38d8181b63f8c2b0ad4a0a78612e80bd29525859e1b2d9f759baa
74642094b07544a4e29abb7701816acd2ffd822c13e380b51f460e3c040cf2048c4d6b60
8e69ace8b20a40ef575cd52b0d563fc781c7c310b7a2015ff79e169600901509257cf07a
4e2f2b68dd0a0e8aeb701169fab98423ad33f34edd9730c96bbde3612ac587dd9ce9fcc6
cb9baec478867a2ca1a6214a4aef8fa796de61b062e64d593a3e3e4e117543cc1bfbecaa
12417a64acfd598fff07c015a89a9ab54fe6f4463d4790ca3c4f527126caa9835952a8af
324a213cc7914e9c521f79f1fd94eb5311a61a5d54c7614df488d4b540d34d1f51fff2ea
50aed28f65467fc4050a19310c69f9bd84492d4b01c86aa0b439cef06067fdb044a9b994
c7267a544783f053ea70b5c8c6b9444e060a2182fabea649ce39fd6ef45991d47c1d08f3
ae9c5fe572bd5c3972f766d4ad4d594d772fcbe18928ce580b9da0ae1d7c3b13fd29e030
b7ba049b4f4a19bc80c7e73548f9410f9906723eee057cc984e343fa8fc2b60b8f1d5fea
b212639e55d8446fac7178a4c544cdfb309ccdf63e069c1a8dc184e9395879b6b94c6be2
93f06292d3b1bab17af4e7c1280441bf5b472da98d785d1e12d7ad430966496fb55b830f
db934c1d55985b5f59c5cdd299f1548e319ad4f40b487f179e538275b943bf0cdf80248b
f65ebbccf111eb288f7efb7e81ec75996dd5ed1c4f9fcfbaf52962740332d5088369bad6
997398d57a5f1833a6f06f6cb6d57fdb85600b3ae9fc7470730cc9640a84ba0c160149e8
c0f4aed6855f97728ecabf6713f6118cb40f832248930267a3826390edbbaa9f2e025202
9253038487dd0f849ae864fdb6306d70035764b42a0968bc98c15606f8c4d1e403b7f2f2
bbce3d3d19baa6209472eabb314782fd6b11f25e9b14a3e045ef8ac3d8caa7ce17ab945b
0a37e982ad9780ee2fefee85e17f8b27cb35ee3ca1f9f808bef7c8f5f0a3a02d764f6e85
3c519745b57f8e6beab6cd7f0ba88f07d933969f79153fb2ff99c3919b16993fd96f6e0d
5ca89b7160954ab4d407b9e1cd20729719f40b6d55e0d18aad3949bc456b1f18fc0af740
5bef9bee7dc397eb3fda91e814981410e9d5a5ae34dcd37031d4837eef519bc80dacc0ae
f8356ae7a3c68042d53b2a275602920af6cd31205d8431c53723c28551dedf0fb83a2bcb
5d99b84d948a10860a7e92016d19c48dac2ce8f16f8f30ecf751c1a7bd9942471682a097
aeb010f51fc32c30bc833c9d87a5bdc6ba3efaea045450b7b3b751e38ea19212673b3249
4cf34b12f4d39b5c6d2f7c98ee7eba19ad9295b3fb094f8bb353956e72cc08bf22acceee
0cefe3bda5a27bd3ad70574a8a725df2ff093963f5e67362cf88bb820b07875b77e8e9bb
eae91b39d67741170128b8a1b288ec25c50b73c49d4e0ea21f3d099647348c533d8f3f10
b19dec05336e4adb869a7ce9acbf9f6b69618a2872000fbfacd0d19dd168d999a4115445
fe45f5b1860a3b989b455654283cdb375bd75f609bc51ba9d373d9187c423b61c36b107e
f48b2031d300e78238dddcbcad48a02f56f07b3d30a734227a49afc15b2f5f410e854cca
8a30c62160209cb651b9324bf9fd7423398c18aeb1ab74a6649021207a1c0bc612447640
17cebec4e7fdbbe8d6d533c435cfb9393826fb9d24cec1694951d639632815896bb485ef
90ed09529b120afe9d80a7bcf48111299863286ea245c88a13b7d18b998d45395664f75a
88f4657c70f1f7dcb15f23045e18d43c9db556fdc1b45cc5b194be3c37a2c84d27eb9234
1c4dc144166627e0917a409e1e8a7e475f90538b7d3413da6a894c2c85c2c1b53b02b478
e606e770f402fe4240bc6b1c1f12a674bb9fa95c8dfd74a7fe6be8ab02dcf8993321bec0
b8f3f8697b1962703e795615c4db2190b69d36288bb67e44844ce87d5331cbac34803dce
b4fbe874aeefa995dbb2901905ee782739320231280457ab72a4d565490bec75a3ea9a01
b915f474643d302998ac08cbd739d330651cc8514ad6436a0ab8b3c3ce67b2203c2e27bd
c7bcb54c146a9cce7daca427df61b015421fb3cd8161056482340992b6a7f2c791badcc1
68011ae919a3f654ac9a2dc1f84ceaf333c3c2791ba3ff147d62d2424fb4cb4995b711be
4c0f164f8e678386fb2ec8eb36df748c9d73fc9b3e69b9c87bd330034621f748a21930fd
1aad6b21980b3331e43616b3098b3aca4e32446ee68b9dedf35fcedb9059a749e23847a2
780f21e9cb186b45227d872648102324bd5ee5de52a661567342b9788981655e57b4b0e1
5032e5722fd2f0ff3847e54373bddff49caf392aa66ca62395f8dbe28e3c781bfd0ad436
5a6bfd10262f600af8d76097a1f1aed3f237ba535309cc2eed4d3b47bd97297fa05a3900
ef304fb9f18d9c618bbfe391d35291e40255ab403b4478aaa35acda7f71b34b50728be66
322c885cf0c2e43ded6217f8171af29759ff9e3481707425c83264cd1b1fd8981812d735
2bc407570380bae17ca8639556bb6302ccc0a536a09db2bd939a09f18c09fb4f90c7ad45
78c14c0f4d847c75edb849e847aef785cf8e8a7ca5dbb0dcce9d94ae69054efccb760f24
cf2e2d1c3fbfdd42332a25ef781e8781201f55d4673b29f4092f1d2da5ab526cd1d7a6cd
b09130aa2a009998a5b28b4de30ab641cea1904a65684d30c9f5721923ea9578695e7485
fceea331df8c4aab47cdc852876d18e75cea29109eccbd5fdc54d921ca1c58d3f882d620
f37b4c614e7ad8765b5197ee198501a98baada52b4842d005df39fa9b09534a043fb3c08
891b81a346f91bc9f6c40ba6da5ec999c55240063d4266cc1989b8c8fca1e29abfbfb147
99abc7d2dadb0bab8e0a2ae9baf94f03ff3aa3db6ded14d0361ab91ec9c739bb2c76d670
4ed9da9b5e30d3c5ee2c11b9df83b501f6820cb92ea6f0d7b681f150a67ffa3783a8134c
d377f2afc1cc65cd6632d40c7bec8ffb05076b09c435c36bf166dff2bec78c922160836c
1f926b6d9daac19f2ab99f2fbdf78d870ba6ae0632d871191654c039e0cff552f0afbf51
b30bfa48a596c80400339a11ea0f28b0ddfdee04bd2edba9b452ffd366f518ee6ba27d48
7794354ff101c915c883fe129432ffb089fece9e41b00e0ec85909b625f31b0fbac3e88b
e911639bdd7277a89c83759fe9bdb938c8c81bb7f285a2fe1dfb884f0ddefa50e21859f1
b018d815732a5ce74f2703a43dcb3dc90d4fed365d86d3d467937c03dc7c038324c7fd28
b40e69ab5bf70fccae34b435564c60218126a0ae40c28a68081185d6a216925cf64d60b8
f4f51b5dea64e553e5813bd63465e79a8c147d20b5a349f337aff5a53075560bb0a5c54f
dfae25752bd354cb64f757ca657a2f6e3bbf019c254c00db5e17682d8b43633a305323d0
9104b9ca7a720dcaef4201c7e33639cdb83d4ea8058c8af1f6aaf467f9ffc4af1749336d
f67b317f59b197078c11232ccbb08a3c1bf0b96599691812b64a529733e85c396c85cad2
e7c17e5748e5653cdd9399aa84d4c197565cfa97d7c806ea9d2e2ab7a731b6bc961a69dd
7997674707d3847c67d5707c3b0b473e303da544ec3ee91e5d74f727806eb48ea5fe492a
dd73a2b920b4494d98069837cc15838172dad1a73e1684190ccc00a6b58e43c0939d1ff3
c70d856056e6f24276f13b5d8b4077bf26f5e64dccd9589f178d36339eee314aca0be5bf
d6d170168a7845f12cf418fe8a03c38f3c92b8211fd890d9d92b80edd9a560aa8c0a9af4
aab8fd40f240e41129d0d06b9a562b12fb1b5f77306509d152ce1a06b62021d60f9556a2
8eb27215e28a367bce7f030f1472f6407acd9477eb4f085e668339a733f1003de8483bfa
e0a7028ac7904ba5d4f06d99411bf191f085fb19971cbebbb401e113c38334c885b08585
83e83219d4b445e7a6f5a3126724bb107e3777fa10547fedfacdccf634358ae84e2e6aec
624b142f9fb7ea720a782075a2e445bb859404f21c578d5760bf5b29ad37b5341e9a2b97
9041a1ba4fb2c5c070d5aba085224d9ab42558b131d4b9fd0e36e12ed86938c3d7166471
40173c92dd82960a4d001085bd7455c307fa92004576890f4e2f2ec93aba747e4bfa5136
e639a8b8b2a86aa6a9630026a97bf7f8593d2a30f1ab9d45a03187a0af54e6395e924009
4e7a0fe166644ef122cc29e85ea33f3eb8ecc3d979cb63b0cf547aab8729f88731faeda2
8b33a5eaa17255b1a9bfeb9132e433aed912cacbdd38286b770fbeb3974eb2d16b0534fa
908bf1b398648a17de09717322f692322674fe06622f7cba5f4feeca1b5e584c5b3923da
22cb6b62c27332da6c880fc96de2f64858834af0c130402be75535ff32f7104ca8e3e0ef
62f7f7d25427fcc6a5564505c3c18c663a87ac64f26ae10f94c865b470411d7e6e6f4306
f46608312e476cf70511e9497504c041c203d2791f2ef8cc516b4bc1707823a83b6e3039
895f6159d0ae123277ff42beb2daf8f1add5978b315f43d9fe913b5baea5aa4edee9b5a2
37665a9d746248405b128ad973416f6eb58a90f6a804f2b817ee3aebb01932f2bb3577f3
0c727fc9ee5333f0fcdbc0febb006909262b2308a7d228fca18468f0a463964e41753bfd
3ef90bd65f3773e53ee6a22d49eac9f3d79cfc48061fc43f7b2e187ea32a2bf6db08d465
1aa770cf5c4c49de83189341bbc5a20e12816ce0e4230e6c7221cf4d1145114ac599eab7
4912a056b151f0807cc7c7b72b282c779752fc6b716da16161dbbf55f189e8b7303557b6
92bfa4e3ab76efb61d1309859bb0246789fc50f33e655dd6d52404596b023e7431882645
ba28b1a8d0eae7e256e5e549f4133646fbbd3b134f4de720cd10d584d885e6bd1a7c9fad
d602e0e617b95e46fc01cb5b254cb3ce0b3ad38ae580495adbc984129b9248cd93a224f6
6938e8d3dbac3bca9ce9fb2977c7096e12ed36aa7d43bc071eff6cb4e46180917f957f8d
9320d062a366d5040c1e3ada32b1b34d70d0d280391f87ca1a050a16031e106b934cde3e
cb65da56a13af64ba5a83e3022722695af1d4820128535e01387e42fefef0dd39183bd9f
488e1ba235c51700f570fa99c8b838a0670abd1b7503b1e1cce49bba67ac7c0ccf4679e3
8a48e5d0a220809d36f48efccd86634519b59242787032d46c97e4873a65de895660fbd9
5ecbf5684d41a99e7479840b44e4fd6cb59e89e5dd98717b58ede607205951edfe4710bb
b25d65891abb243633676b4f1e9028a3441d8b516d3aefda468d8b890c9da4d4966fd33b
0766539422aa7d6b535e2f0af3308c31f0b56ec1586386ea8d9db2a9ea49f4714ae78fdf
9b0390be0f55e02c9b462643ad7e000d975a06cebbe5a8fc83e222ab6046ec3e7cdc5431
b3edb65776cdf800de6dbd3b9a0d41131aa59677f52193c62d26c84a58ee3dd39024eb49
1961dec3e66af0e5914dd29adb2ad981066a39c3ee94e7edd20ab2a801506e5025e0ea8e
f60e0913c389297165733295f4d97ae47d24cf5dfcc3112f53b59ab23954173203de838c
87c420689131a577d370d99aa2f18af05b5ce908ea53d714be4de5078765ac29a4e1254d
bbf03068159e4a583dbec943a6be4cf86f8bd1ed7eb15c66c16eb1da7dc8e05bab12b06a
7e49c2054bb400442b477599b77a276f767f4c342978ccf3beff83fb867410e1c7c502db
14677dd1d339543919649fcf0c5e6d99c8786a3d2351e717d4b43b45225ee8287537a5d3
8b7e16bfe26834b83c194cf52adc416b4934ba85efa801ec0254ab98ff3425a5cbd29437
cd3ce398035d356a3d8453943f24c934bd51bc42bf4ca749c1183a2fbad6b34febc49fcf
0bcf892c71511730fdc10dc5ed84ce2ae199910d2bdb7cf2ed5352a840e40a50a9a0d1e4
cc002d981396c52c17fb15ea2fee3137d39a8a3be2ecc545eeb901a018712d354cf56762
8eb02fe1963b03653d2091e58c222b81ebb4e18c6021823c4cc168e8d01cbcc7b2ef331e
6205cc28910bb147d8afdeb08a4d9973e8b9634c6cc386953f889541d7038d4fb3dba42a
79c84b6193ba5c06de1a2d184eebbc31b5ad05a80a95d4d27036cd96d1b74425d3b7dcc1
30332ea1171d771fdb03c633e8133870b0d2fd3499b5e9f98b0f4779fb37ffce5d7a5fbe
ed338b933e0b262d8d9d8a83a0f36c560a7269db6679f77ea8a6a6c89753859f878803ba
200782038923b427149bf91c30331dd9b933b64a1504695956fabbbd22f287050a54ba32
547d1272f33879d32174e270808f87a74d072eaaaa702cdcab0947d40d60e660f400c384
5c241bde74ce160e9558ae9832086b3739052813908365ca2df2ca8daab3e33acbc148ac
2911131b5dbe9108fe773f5f42b6d63a0b9b64fd8ac62d0af8d28171963f48bab585cb49
281668fa59682139f86ec5a308843d8022a3deda6d391c172d040d2fc412f2e619929ba0
59252ea7e4eacf17f7935b505547f3c3111d85e59422386772d344890f04d212b6d6241e
827f76ac99f15e77658087cedb048f379a4506120258d8470129afb598edc647ebf29be0
16c7d28e4fcc4564f368c284a977845ea575a6bdf1422424f5346070575561f31e2a25ac
6d4c3c774bf88042cce30cf9ce353b102a1980d9e8a33495c3b0d04d6c4ff345f9639828
0cb2b0a48ffdd6a4e7ca2b5a19072011f86bb56a71b92bf5ccb29738268544af2d5aee05
e65d6c53e4beb18b266bd48cf83a4b6268dac9427e874e7e34391986f6aa9e1bb7439606
d93e846a107f02961122126aa2b285987668222085ad99156bb520e12877c31ca6520455
81fe4c74d35321a04daf171c2333193a458fd1f7d55f924461178008faad04dbea28009e
ec6f26340f63d920a1354c08fb7a50894a3631849b55941884e2587113006f3851601516
8970b7fb85d1745c993097611ceea53eaf5a69e4ff26d1daa56aa69596620f685b3150e4
993f8e6b81bbb5674810ba20ef24ee066404fb4fe66de850e19e4818591c7b68efed1829
c9ea9adf2546935dd467649dd95afbe9992317734c7a3b7bee020adda972d385018f39eb
bed33967c7dee218d1bddfca6d8ac6388520bdce15bcc5bf62051a5db3df17198edac71e
fc91c233a09648bf1661be40c9c37969fec4d6751b7a031eefff0183abfe19f077200a36
49011f0f89f936c3869a6ab9cf49059eaf51ddd9216ec717079958542550c27a9e4061e9
7fa8e9fe553bae11b1bf7a496e8c6bc199af3bd67d7929befc7e12d66f8f427da2f250df
27d922591c4e6aea245eafd1ece02d9424c92b8912adeb7f3cffb9c054b1b5fc4965a3c5
6e84882bf5f3f52b6ac0eaef85bbe9768af862f79589c337324cdabfc4c38fcb73dffb55
7e32
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont: Symbol
%%BeginFont: Times-Bold
%!PS-AdobeFont-1.0: Times-Bold 001.007
%%CreationDate: Thu May 30 13:11:22 2002
%%VMusage: 120000 150000
11 dict begin
/FontInfo 14 dict dup begin
/version (001.007) readonly def
/Copyright ( The digitally encoded machine readable outline data for producing  the Typefaces licensed to you is copyrighted (c) 1981 Linotype AG  and/or its subsidiaries. All Rights Reserved.  This data is the property of Linotype AG and/or its subsidiaries  and may not be reproduced, used, displayed, modified, disclosed or   transferred without the express written approval of Linotype AG   and/or its subsidiaries. ) readonly def
/Notice (Copyright (c) 1985, 1987, 1989, 1990 Adobe Systems Incorporated.  All Rights Reserved.Times is a trademark of Linotype AG and/or its subsidiaries.) readonly def
/FullName (Times Bold) readonly def
/FamilyName (Times) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/Weight (Bold) readonly def
end readonly def
/FontName /Times-Bold def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [ 0.00100 0 0 0.00100 0 0 ] readonly def
/UniqueID 28417 def
/FontBBox { -168 -218 1000 935 } readonly def
currentdict end
currentfile eexec
e8dc61728071abd4d5bcd230c4e186dce095a0ca84ffc476adfaa82124268e60d2cc570c
5f52c10ed4a85a71ce8e5bcf26aa13b27d7fce1cc0c72c3b848dd5ffb2d56d06a1920fad
e4ffa3b35336627e9ed1622c1f9652956d4a424488b4c4ffda9936442bbe0ca749700ae9
8a2bf964fad088f0cc64b7c1d76742f25e90e759aca624a321402b1d20863faf5e04b86c
1ae66f450b1586041815e52f13d2ae539f1725d11489898a83a05fe04d6d14bce66e2cb8
55496ec301a39f6ba7c0d0124721fad9420f653c6cbd25ace8d94718c5d216a2bc6cb347
5e61c8046dfb7a3ff1b9c50f9d56b3b152ad87bb218362794b9b4e67cfc100addfaba614
718cd5998513d2d75251dcd7a00fecc94b0e65f6fb072a49d9f195a908023728504d9310
4aa501546a97c007c0f17feb78a26ea031862c2129c789a0136a8be43e99ccf1f4887dbc
d432ed6faea65c70007aee60e02ccff22890ea1a881b7421b7ce27fc97ea226ee4c4d042
d805b3f926474f1410b625b21be1ef5ed427e3dfd6d90e295c97eaa64ba76c61563f7bf7
4d37d4af1f28077ff0d764f0391a2fc79eb2a832f4619200bcd2549aba1c3302e3974aef
4ef44c936424756fd3e86ddf7b05de94a0b93e52a657224ee73b724e8d5328b8e67add94
3584368b4274838637620928fbfee914c36eceb72620fc79120d8444a77bba6ca939b54b
c387fdb60e90ae59f30972afe9b47be6b2a957446d6c9495e803173aa87afadb99fa4e12
a9f9297277aaf41e268525b4e5227f21809662bf27949869791d04b85831b2b508012470
3582b995b77d954c291c1f3351d6e395db01927426d84ebaaf350f9171b9481156679b99
7f730c255fdf0d8f8bcc6bb3a63e1bf3bca040868cbe4156d28ce1fab33c7bd1fc6cfa41
4445c93b71d3a1140dd55bd595ee7b6031afa7e116bb6c07d2110807f07b4c35e626c948
50f6fa3fd4cf3491f5bd665f4f4831af23bc67b1382842718c8fca716ef411d2a351d811
ad5dd5a0026cf2543b113a63aefbd4b31546e023f2673b4557ecd4a10940679487b28545
c616679bc3e26d69e7a42143e0e07dba876a0551c23877cadc44322194a88e35f3d87a9d
c6e6f7835b735aabd114b250e813e13daaa1281294d5b24cc5045f768a3c51d4f65e2a5a
fd271d037db52aab496b022fd8b1f59a73467116a41bce9be2a85adf7c169d9717f3b437
86ca2f69ca224c5e888b07d19129781c23e9e891b09de6e614d1b886d73d23e21786621a
2954f93c1ea679e70a6a84c816185610a830f9bd71fd118979dfb2c90abb252fe8c6e69c
54cbb169ad40fc0f4228c67848c563e044ee7803c8f0b8b9e4c68daf5971db1dd9342328
a822946bc927928a1e77e0c2030d25a993f9bb46aa3f47e78c40288b5827106a73f566b4
8b35a198aa0d9482cf1fc1b5a95933e7b4912e5d86e47f5553e906513ee426deafcac2fd
1a186ea877b989c29524e3d2afc9521a6eef2aef1923308ac0f616e761f8990c3b85ab93
f6441ab27d5dac5275e99e4d5b2fc1be7ac47d976012b12abd026b29fc7100bf1579746f
ea14d0cabb9be7d6232af82c4d982e5f96acb475aa79400f6584a01a3946e22175fa8f7e
1ea7421d5dfce0adfd998cbf156c51ad92648e502f8c1844903572d9af8362c060516b2a
c2ecc63492a70fd4126b12e0d92ff1238075c9420e83d661c281539abedf923966b6d57b
ca6c51ba6d31a28699d9f188f4ab575c682138a09b79b1e96459bd818cbdff9a62b0a7fc
00652914bf05179bcde3ca1fcbef34ee877f926fcf3050c1a12fd1ce60566dfeae4360c2
97d763d73ffed9fd4525968ace61a766f0a2e9b98070ac38dac39598f7ff5e45c17086ef
019ce5d958f5e9cf41d5232734dd9b75e4d7604679e4b8b5bf6d72e2cfcdeb4b568c5523
18e5769d3c479ab7cf7ba059462940a9f58fae98d2599cca9319fcf53b248ff1a6b0ec10
5f415d87fbe4bd7bbfaf88ffda68ed73fca56f4bf153805a3f6e81ca443b71973a55378a
10fc4289ec577e7d7f8c1b348210069dacc461fc754cbc146abd60a369db698a51ee0df4
9e8b5b80c4aa8de38aaeee93f443e9f8fd3cd8871c9f65a29b40ffb6ee3add1b1f6cdf91
e5ca0654169fb1524f12b5903e5399dcdc6989b109a2177457294ce1880254e5e9de9362
7b44bd9095d645b860b5a9f4cda3af62d2ea323b0b85cbef1cbf62d1fdeef0ff25fba50e
26e2b56cf46184e4bc07cccc7cfad7871ccef1586f034b3f809ca672e85d89fa90141310
2d49ee55e5f80ca084ebb4232438136d1776093a7e2eadd4dee0c340a7a5a571565688e2
1525709f70c6b2bd848572d362b44fbc6cf3532c8ba79d63cf6ce41cb05037d3c3d6e52a
c08eba53e13c3f488064fdf1c1ccd8482ef6dfc67c27fd190075adcc43a0a945215738d7
fd9f7574afc3eba20d767f24979688cd043c477c04339c1a336babb79a090acc8b5fca21
c499735f6af1fcd02646187997547a84de04cb93a537c6587d2c489b5bc6a589a85c1630
a057d354a1d8ec85ab64afd78c98dc2c868cdec8bdb55140a02b39f745befa31410819e3
840d25759e4ee10a30414f5cf5c421619fc5f9b1744707608d2f3a6576d673717bda4559
439f69ac60d079fa2520fce13543b123d90c7f14a27893e647553296d3bc5f5f58f2535f
a1e07410847ce023bd996d8072e743a1037b387ccb4fe283d01ddd90f8e31d4c3a3c4be3
c9edd0c52ec55f4b833e3c49e53e303c947d8c06f65b11852fb9ccea8456bbc3551fbbf0
c04d52fb1fff3cc9c2c89f7c39e2b8ad50e55ff971074893b33fee9262add568e0dbd82a
7b1183660d596296088ba08e62f21458005aeeb98f59142d1c612ff5570271288349d319
101d0c224bed30eeddd52fe953ac2584702c5f690f265dc3af9a9028057da5beb998af69
0c0b9a28503ec72c9fb5f55e2b2c044ff8577b79b21b32acf913c02e821c76a6e513e17b
f6689ceb0a80e96d3ba7e78653cfcc1685a93d8885e7ba1aa70c2c50aea07c0caa94578a
5c78589271d5a9962cfb80296d5285aca1c060c54ac7ee14ba0a96b06675c053592938d4
45f2a375b40636e984e3fa7b4daceae6a2e95cea725ba2c18e3509ff9ed6b4769012eb01
690d595dc62cf3988e853fe62ae8804ecd0e6c946030f1df31d677075bed8d1d922cffc4
ff52504de3d781ac61d1488d81ecea6e1a7bf0764e9e3f53731fb2170a7aabbf9e438274
7ddfc369959a208a97c9b01b6cfcab7ea656ef12121bb8e7104235e969a7a39e3784494e
800d998b1db866e94aafaedf19663139c2c9b5ade9ff0281b4424015d5bfa848c448457b
bacbaacceec17d5a5e99f7a83b4c54a325fc6ad3bdd7628b92d5231feff2c28a61d9d203
71fa6e9b9380e65053bdd0d4d98ccba0d666c13d0b94385889963d8e4bcc3c7439c078c3
8c2e326cd8e2025cac108add8b8ce4085e171bd35cf677cb3490efdb142553ce15d7405a
4c8d0ec8ab1bb2d2901edf03a1138544466767b07a72949ba4c4b322873aa5d85aea07a6
dd3d2f67d2fb01652491a30aa01983f131c7b0c5711610a84e2e89794fd506a06466d16d
33c467c5c403bddeda92c2c3e7f4c2de3e68bdca131ce6c92b6e27341aae16cb509e1b53
f422fc69aa03dc9f2c1441d3f7852a2710aaa930de9179cadeedaca987363b45339c71b3
d3ec81816740842d63c12609902209f10eaa47ffa6a8779adbc29681c185207a705b2f37
218dd8aaf6648275b3e4b9611412be61e5890634946f44555ad85e27b86b6b832a6bb12a
048b4498ac7b1d8052a6b038b57ae9817e492c7c7e4c01ed6abdab9192395cda08831553
5b30b4aac76a22ea960c2f415490ceaf93b63477fe0e8ed275144c202c5706622351a1d1
83ae185c45fab443aa958b11dcc45da61681c79f03608a06ea75cce9f3d7e904e0a5e517
1507106bbc63c31d86964e9dcc58812e4891686a1de49764ed264d5fe145d2df60cfda35
71f6057c8f4bac23d27fb489149ba88b1297755ad2a74325b581dcc08383c799b2b6ca87
69e1e1243b62af5b5e68b136219e40c1e13ca91a99d0ac00a7e0b39fed99be6f614f58c9
69974be86d42b76caa4e33ed6e8f3ffa99dcd891e46dc722f59cc52302c7da4ff6fd3dc9
cb3ee6d5d929b431d2e8c3734488fb154d233569e8b5daf155f14107bd198e53f04d7de7
b090e733e05a3aadc101c892a25834a0107e4b8e6e1a1d0d66835f57cb4beefeabe9d816
70b4c901960824b401e21f533889bab203f59a223638d04e3a50383cf30debcd325193c9
389d0acf5a4f60a86fede26c75e9b3af56626a320033c950dd58f5896ffd63a1a7800267
d6165f21cfe417a16de95c3ef9755a15d585f58e318b5968e5d93c361368c0ce1ab06050
f7021a7e13dce3af0d45c7fec73b61379cd4c6cb1fa649c442a73fd8fb4206238f06c86b
1a07d9947e53c9611b63b16bee95de07ba94504a7ba11320850e74f6f726bc0b7894a6d0
76473d914cc14bb5a8cf67fa81eeaeaecd0426c9fdf4599e34a0159f4316e1ee5c4c1418
082bde8768931512aa3096a58dcc8e1579e79e38b01e5da144812dc7a931dbaa34310812
d88806d9774da5efefa8dd4104522eb721193117e096cc7f39efc4c56ca2ea073960b479
671a8743f0f8f891e445dbeab27fcf8f8bdf73a4d2eca7a28fd70b0495d0dcebcddda82e
ff6873f2001ddda58eb11ffdf1da712ef1d854a0edc631c7edd42a15ff377721cc70934e
4ea33089730141c0ba29cb9ed13b7283b51a2ef973b6ba62aa351ec6e278603870a98faf
136ef4ecb47665eed24515140a411e53000b5b816258b0e50df1f631e3c44b885d2ba3aa
ced5af645aafb10a7f20e6e88750be2237e5e0ca2fd5c0d8c16650e7e13a8fb95ca4b17e
7224fcd0977a8ebc8f15fc7b2706f42c650105d9db8db601361729f89b9ad263e28dfff5
1d1ad76e3815e2f01fb98d8f5f99daeb7bb4313762c20645112a2bd299ab3a9556e5e796
5f0164ce0f7fbcc15869c1f9d20c07398b6e1338f8456e5cbe20aa195241280de7d8c9c9
e8b5860f8a4d4bc865cdb53b75ab6bf7cb079e42606884935b9f64191043c102ee39d32e
02872641209977444dd9c3ae563c5d58667fc61f7393e3ae8f77f63b59b384833226f5d1
6548689cfaa87c9a05fca73e6a273f6c4fafa9ce070d8cf0bae63a8a6c6b08ddb615f3ee
e1450469cea851d84830a83d8443da7c0a3261ea56a796fee4b01aae6dcd4d8a20bd9374
6795656d118c5389108f136a226d1ac49ed2fb6284d6682bdb349f6604dd221bcc9fffbc
c2659075f02f885e21c5ca2e761a858b9e951173d20677053a75e217ba7a34c3ffc0210a
261bcabcf3bbc2ec5f368b2efd3f102fdbee5aadeca669bdc80be1e1e9070e62f39568f0
eae6d7e5390056ae794053453f02452471919c4e9f9773202cb8f00b9ce83f9076eea155
eee8d77b007993fcc23ef6ab85e4c6618cb00e54441e2913d1f7c2b1d5ccda01cd12495a
5fe4c6e3a4ada05da93313ddd72616158625e5d1cd544ca10080c3d80d271b585df0be0d
e967b3f62a425702b207c73847b9411786654a043a8db0a783140aa6285a4ee9ccc94276
93d01f4ee4f7ac526346039abd4ab05d4d8c3bb344bcf0e65d6fa0de99dbee202a4492d9
3f9d46c775e47cb54e1b3331dfa05f3579dfcc9c8e40786d618fae4b638b002db9a2a4fe
5a57e81ba2451819938ef20ceaf3a9f5fb0b0fad27407a0bdcbc28035fca1a2754d1dfe1
2df7cd8b67ba8614e1650b8e3e5913c43224d18581ebddd9c642a3804b19ee2399aa1fc4
34a8c5e5c0a585c8376622c2dadb75406c877d9ec8f2cd1182c9fe8a1b06a1b891c6a8b5
932de668bccb07e4faa38ee4719c5344cb8df1045963a430319dbe33330ab8ce763a3693
d93c51f04c160c91f5c1c2462a48190ece9ca958be2577cb618b561801592c1ad6a84e9c
517ab8770eb39281a3adfcf6d01886d8b4c3db2fc0fea6a5a13d7ea81ae10ccca1d77d97
39a39a471138a7788b2b5fa54f47ff1f55c845da82966cd5c96eaa02c043c01ec46c5ac8
f4f951ce904138fd88e4b51489c08919e82f3e54841cdbe97d67dc8356e9d779a7ee0894
611865ba4614b25c224725d61291405f54c63f7c55d1c617567eafa52dcb541330279b51
7aa0a83c93effc88dec6c4f8de03d0cb3328340e2bd093d9a69e75d9d33d6107385986fa
cede726dc677ad4790843bcaf2e1ac5d1cbe5e606c364e344d0fbf9d4c2900ee6dee8ebc
14ee28d07ec86a53127ce3739b87aae1fe98e101698fdce1ad64fbef2b77300ecba66160
9dd02392a9fb8994a63b8d6cbe364c784bee0c1b568663861923b2c241dc0e0fd0374b76
6f641a63817ddaa394e08261dd9d32210b1a215e85023d3af415d422580837b6fa0ebaf3
121113cec6f5d5d8087ccb7685c29e777161b0444d781e47688c6b9bbd07e253191de377
7241ecf99e36349b16de618f77924d67c6ef8cd87556a2ebf37128aa11deff71287c18fd
36bb0ad18de9f6c0595ccdbd4b0e3c2696c9e3c04067c074d32dfa0d9ccf307f675b5c26
7a4b0756935c3bf310331e71ab9ba9451fb20baeaa1f99a0dba8f3d5be6b85ae8813a10d
82e726d4e4b9f214dd03ba3b6b1ae4978ef2e8bc578a8865bda2b104b3b3c43c88047d7d
f347e47528897d83ab8ba57f9b0a789c222eb8ba0bc36f787a5ea57443e133cf7bfb78ed
0a5006f7548d34e30d0d24c57a3e5fa75b4d58a3a26729944e6a368dc849733ed69e7a6f
4b82193fe92aeef0b40aa8ea851fe36eac15f21e76b177b4728efa468ac8531e0a9cbe63
c234c9f5af6c4b0182a1c73664abf0f61c3354582d8e9d8c34b29f09e89e3315e557c043
0bc4e6f60c9903b245fd263656c1c6cfea8100b9bb456b8bf06e5ead6f1379ffe15660a3
3be92a9905f0f1c77e2497666e54f35f075ec2a8434c81787bc659df21d64e62999ba24e
5233579def173b87b4adbcabe0de0d41cfc69b53bb80949ad6fea33f0fa47de45d2a851f
5349951290f3f4168dffb29159dd3c4eabb0cc388f65471da09d78fa2c155efa508d7d49
d7658282d9b28fa88398390ba1b5e1337977b514c707fbd13f324b9043c1f196f6f47eaf
5b07922d070c90fb2988f002506b445558755551b07695c543b611747b38a83727820634
f2b30c80716467d0bb16a58fc39276d25068246629b2275056001087d27057b05ec9b6d4
f92e47de52bc0d2cb1c9c87e26ba3281591e1e44a6e36d4c38d864cdefb47ee4374f481c
aca50878626867d3b931086e68439144cd1d850820b1939bd161c67d2dee64e2cb379b70
4d0a5600b831e7c9f75e0ba20fb03cdb92fee638ea9a6ee23a631e3acb2582f76d88d0ff
3780efa0b6f0116a1bf55f4f3c5a0562c9771d390c6159288cfd222cac2c776aa92e079e
0ea453c19641ed2471d16f8e09ad8dc99b948bd37331184034f24c422881413b759f942e
5c78befcc7a3afe6c87f756fe7cbf813f502f59a199be22ae67a96ca980462108b1e985d
d607b230316ee1e48eb679355266babc153de8f4865cbd9df3bf648789149ddab88473f4
54d2fe3a069a4056dbbf9accbb724162c1ec0f675707aa1236725eba4e9c34091d7d3858
41c2ae9ac8d71e9ffb9050cddfc0ed0b9c6cc471a10af7284a1858a335e6b1be393bc529
caf570e14af722feb76f8ff87fbaa625b4df7ef94c157f5bbd2a1f758e319e07567fed36
e9066f1ed1c9eba9df89bd895511b4dc6ab515f3eee1450469cec0ba50fed4c3881c7c1f
fd04f8e58977a4a3375409b12ac8b5932847fde3643a94ca97a7ec140768126ecce94df5
aee11d35e56a7bbc4585d52c65b5d374235b7a004e90f0395814205c9168f8c8669e833d
5b0dd9344cfa4be85ee68ca6a6a9706a4159649a88df8f04dbe777ada73a94f6fe3e4fc6
27c1d04d6e37025d96c78b012fbbe03cf6626baffb3931f6b0d9f5814d146c19025f6b34
a0c970ff48e4a2f08c6f639f53c1d0060d620eb0525fd020cacfc338d0b96aeaf05385e9
50e2f01fd76a9d6bfa01cd8b8b68bea4bbd1b9b7931371c7d8c9b8b437ddd66eec110cc1
f6de8976acc4f7ca99b51fb536fe3cf86173233cfc3082944de7ca6fdcf2f7e039f5b42a
efaa64fa82d22257920d86442b0c65bcb86a1d545d668a5f42200e085d62e269c24fd7e3
f5211ccc4e6af1e389832736969cbddec9578aba011d07d8201b21e913a6fc144f27d552
11650f5c03bd127f5eac3af9cec87639ed7bf952dfe364ea17f3ed85d54ee3694884a3ce
c46baba6a76e6da5620e559aa79982164e3e25f97d31a5e399649dd7c5a83a9abc0f31de
743a51ac9e26368ee5ac3f6dcaa73fe4103946352c37196b48d1cd587bafad743af5fe16
2cd1b1988bcb32151e414cb9ef614680ad7eaf063154e64a4eef50fd4a769c44432bd9e9
d5e4410bf72a54106f3c7b7c162d808c5287095481864fc0099a984799d1322ed55991f7
e284024b797270df658575719dcb8791ef1597980d0d3691c462f398eddf4d2b27d8264e
60fd5bae6412ffd140f3cd218bf1656b67e40c448f26339968a6370b28f47117317899b6
9670684d8faa57df904f0b126bbfa4e027fc942fc7ca61d69a2b62bf5971df2c368e755b
38d56346a9add586ada43b03d076658ae9d00aadfbdfb6dd8950d074b816104e1175ef85
4b1c041f5d486b1422c9339d3a9a37869387ec53e1cae9a23fa25ffdf2f3a85972205c43
d1f5d6253611aabe24d5b7d30fd82cbaf3658f3c030673e257214a512f86ef3804f87954
83790a510e7a49e2005c040a9c5ee9011f9052165e7c0da075f6ef6bcf8488a5feb1655e
84985fefda9da58e4726f0c38cf914ba496936e2e0d98248eddea06a1b264079acf5a7ba
6d15ce183069019445b41592155adda8d643bbdacb4e0d933901eb5c6ca17d9ad17e9686
cdc274f5c54b673962bfd8062a086184bb8960444581520400765586bf451f89a3d80a0c
9698a018bd48225e1137c44aa7dcac889b998dc23f1e067c64d92082c3f343ef93881272
3b0d188eaadf3c77d41b6cd02bbbf51db53aba675d9b4c65616de49979c095aea5559007
6a43f950e47709f8b6ed6c55e492d9f02670292881a8d9e2dfea3e849e6a3a2fe7cb87ed
a10fe2aa4e0014dadea55f5670f93fcbac138cd95edf2a54f2def28b5ff650e55cf22da1
429c5016b6bf88c49f9bce3d47f08d0ae6610a0f71a73c6cae28bc74227ca80cdc15723a
332c9f8b57123a2cf5a832b6e634aab583e7bdf9f763c5f3a6a123aa187676f47be40cee
b5faa51c1a551ff686dd2766125055380563c3d3909386b61ac9205b6a37e9524886a7c4
defccc1735e3237722ea09ad85865d87ecb42911440f027557e70158946f4cc5572ec73e
28ad5db2d22589115437af57dc545e030dd0d91f1855cfc940890c4f8e3d611fda7afb31
61060eeca5a0c6944be42827d679d8120f9dba0e8c078b55d02c0e1ef83f1e257e5f5aff
5091fbcb652d2b366105f6e445439838141b8b4b06c584c360ae4ca32e51ca524671aaf3
6840f703d0628ed2b81b5c88480c2f4e7c854f2a29270d7b262af4a11e12a75070246639
6ee57f27f537f790025f4841b906c8a046181a93561e017dd5b013f3e4f3bbf73cfccffb
07c179bdc56b0fecf420566772f4588900f6cfd404ee78be46d7cc676049c0dd17a44a01
2f987a3f3d55b99e6c1f4eaa794ec4a6991ae319e2db82fa1e8693ec8e3084b283628861
ca3a1cc8f616a8d9832d3721ef76fdd5bbf8159318d13acc635ff127ba859ce5e0279401
2187a16bb94328ef0f138f985ec63ad37f8245732d6c58bb3ad6213942b92624b26e7359
67362a9c6c62f298d264c53f8ecef89dfa5a5b0ce6229ba323d77edf67f5ad517b8b0615
65b1a12f66727baba143e62e3d9d0f9896d79de41e1e561004bdfe1061005e02fccc5043
8adb78d43cfebfd93ef37b7a9fdb29113bf057fc216fea4a7902468047f0a7acf804d7e4
53190d0d4a0d88ca4a47ae8ea819bca162bb353ee053078475a861aa74439d24ea0a9fd7
f534b32134ce1638c6ccc6bd3396f7739b7ac00e37487f8b977ea74b8240609c73919ea8
dcd4373a84414e739f21642d443824a6d20aec3151b2c4b9492658dfe7843a51aa1f0fe2
71af59b3db0dc3eefee15825f57b49c6f8499a74458afe776caeb2050e21475edb79cc96
667d39d17f1a8ab3044b74cc8314ed9422ed6cb660c2acaa4f5b979c9f7f8ebebc4d6c6c
497f6e1e1ee187f0082fd11f396304eb8ab41515735099ba7330a4e025cc51ae063c4cb1
dd6f20766875008212c7de8135247e90091419a6692ddc1809c53e16a2a0c947c596bad4
0fd4e24a3b2fbe8adc147d4db3c9f38236620e4b06609b87211847205a4ed6a5886858f5
e91b30665cdb77f7baba9332a9393ef4c1a40f0fba5e85dd3eec801a8d525888ed8c61dc
8106ed0b9dbd86329cf748a4836612a4a5289987ec2fa4588c2be2c51d3133948f3e866a
0940ff7e26a0522a1834bdd076dfd093377421204e23a04e17f5b842cbcc273d4c68f411
ae83aa88456d994e84e51812bc16df4a09f3de14930d4037b811adfdf16935607ed488ac
1a513e9e6e3955987134fe9ab38da3f77ed95e2f82cce81ee1bbcf00e1dea121632d5bef
fb67a4bbef2499371ba351064922849c8057f3ffac06071694ae2995a4ef270371487ff9
813803c197f4913d28f0646d2e0081a9a6f256b19a9664f91837b01a21dff4a8fd4fd9f6
1bd94399dc7fe393057a3d233066125bb315f8dae50556c47a87e612072590a554e64a8e
2e0c6f6d4b7b375466832827f4341704f9738a46cd0fb2e18bf5d0d4034284cedcddade1
8cca76b87096ae49b4054237d570bcefdd7ca44248e4f5637947860babaf879cd3246332
48f5ad2fe2dd1be582871dcf0bad36876f2f88443ecf6bcb35a41cd8d30349338aab8cc4
eae46df667b38716dbd285334376fc7a553605c6c98a48024caa97c011b9d110650d32ee
942b07a6ac77b78ddc9f11b96742517118434d85355951d640c741c4c1c51e8120a5eaee
42a15c99e71d2696d832911c056edb0417db6225373a77193a37f882c746257cac1e1102
fd3ef67de36bd0227140ec93925cadab7c42e439b8fa58be0fd47fbc189dabcf9de7d80a
259331fd585efcd3b5afc5e8194121b901571a87ad746b2ec0dd0d32ad098c0d7f3a50bf
f60b0bd037b1bda30a21c0f835b3aebce54fc40de4c3de71a4d936302717b8e7251e9b0f
6470ba0816833faf7f3e5151c14ac12d7639af0cf5f0be6b71989a2288434b2115bd3a29
f1ed4304250452d9a36b7fcdb2b0b30c5da1373304895c5b9462ca4aec586ccd96ceb81c
137e3a1639180984d2126fdd45279f39bf77568df923fa8df755a2d259e5ed884cafd080
dac37ed57608e12e2432c7c51ca779a6681eb0a218d5bf51e21559e38c63226b30d3a4da
99cf4dad6d48274f36fee14a79594264b06914d5dbf3c93e5e1438ec115787aca98a9ec6
72123900f6f3750b8a5dafc2d3d78aad84c2e23840d23ee2442e91d705e924617a344772
6604f977614abf0efbc91d794ac61abe2706b97cfe11106868785b2c955907e0c95595ff
d3ff144a6ac46e85f8d84beba482bc0c906ef10e65c54f38a480e7bf33069544903f0386
e2f501f39914dd2fd164e8c5ae76cdfd6814df84f5e8b40ac203854fd163c00b6ed7343b
8ec820623bbcb42327c7dfc5e7a68e92103b29404d2297349204348f4cd02ec9872b36be
1a272b51bc2ec1d1392eee0a73fd9b0f37562f80cc46b5e8d0695f7f0e16c753540a1a89
b07ba3cff7e495795b4f1df09e0abdd9fc0d831b51afa0fabe9ad7dc37839199ffbb11cc
c717d29777f768d00872b0ce396571c6b03675a5b68e738aacbeb5ea106e3a836118d638
8f345ea55c2ccbb6e6fd761553327f094776c3b6689942c69a90af6117c4091f72604dfc
c55d3bf6095d488d3b6f12b8489cded9ad3cd370abd262e96d01b2e0696a62a3ddbb6aa0
6d816b7dd77c8787bf973324ff349c1177d26fcd3067b9f516ee94871d41418c32129926
38c912726f36111a5f5ef746a7f1cc73409450ac182d0c87f057786cfd273e4da8c0d10c
3a48f882559ab6bdd61750eb7a4ca6c0c0dcca555890d8f27f14aebae61b0615b5d2858c
94cde1592dd0791b345a8123929ecb679643060d79ed70bbc96b7161b9e8c629cc43de73
ae25828fc83cf9748641d09fcde994f30015674163e3705a2990bf8eb30948c31ae439eb
9880e83a7458c6c1a92aa0879d8a4d0babc60f43cd2784e33881c6f4a92ad4ca4d4f7ad1
b232cd92e794045f8550712237549f45ee81a01a4b3ec80b89e5a70b8822c453d23d7804
f3a9538e1f1820bc0a75a3db10064ffcec14b29018c30a993e47aa4faa4e47d35290fe9a
66c450a4585d8cae1f4821354ff5656d1501dc99a31ef1ac5160baf2963afd146e99c4b1
f77011145512f4dc3d5a559d9c03d91435d9345d63525020f6472a533b4d0d50848a6f0c
d844aaf4c1a43bfadc50cb544450d181383f47068d73dff0455c8ba92d112883568703c9
47d6b1cb204c206ebc641f0e0256a0e9c4b860e48db1a7a61b2c4facb525cc932bbe9315
25ad61869afa2ce16b46524aaf728984a9134e0bf4a6dad86c0a65fd16aeb7de5f935111
7293e6590b78c8c88467d75353a927f93bd9ffdd5dd0d2f835d40eab03ce61e29012ab5c
fbe7e72533e6f9245f63033e87df9a8a0278f990cdaebd5112b0081cbe84f2541a95da59
913fba6cc8bcb2e2f48172ded65b814a2d31c8896cdab7aa3bc6982e2c5db61e1ea3dcae
1f50d21ec7d8bb9da3a13e7147ac3ca79bb73eda68cb1f066ff02251635839eba46cf336
9cc71012926631a0c1b1a92c3473807b43c7555e6850e49ac871460d1df8825157b00b6e
acbd0e0e0ea67084d1aaec206a3f1aefd4526bf39de74ee6bfd40b8bbb5aa64c58683f93
25577fc7dffe8ff011f1c8f48c5d0e6cabf718d08c679f9760c35fa3c11d15f791c55249
98fff1453df5eeccc04c56da34607cc7d7fcbf8eb91fe624d55a9c9b7894d154e0c0ba84
86d49a519ab24f02d8fa21f28b5a732bd5a28972cb62a5cacd075dd27423191568bda85c
e288357f0a9eb269d1dcaa4dafa4c417bc693b07bb6458414cae9e3316261891567f1bc6
ffea1b52d94f101e55e51938d636df425593c0c855b1e0b767d2fc94602d4599ad28f9f2
cf1e3c1435c4fc730ac646d86e8111d7c6dfbda4dc13f0c33b30c9b2004f8a22cd67e931
f594c32b491edb5ec634413c346ca18039c8fc1111e7fd4e11e80bfcfd1f6f2156a1f809
79260c077795e8d83e1e20002e6b7866cb3917236e49de21a44acd2ccae31b2ba35baae7
3d1754595c38d27c3f07b806d99135cc60be59f7952787c6927c5ee8470652c1f2cd2c76
b214c7e92c6f2faed47347c39170f8a82d99cb2bfa45a2a9e12a6c98a47b3c0bad1cc767
cf9567f376463029ac4f907b1fc02f1105c41031ba3a38034174e95102cdca85f6049332
09ed0c0c04cc2ced4574491eeaf7baf187bb766e4c833a112f341abcff0284fdae0a344c
8141ad8efd1ab45776af3df38367332ad0f4fa80753851492aaf41a1743019ede7afeb0f
742eea45705f5dc01693e921023d1d0f2e8bca9edad5351069e6e4a714f299f0f270a1ed
53889dffcb3edd28f666de8cece1aca8e9b2369aff21b543c15dcbe1b17a303569fca6f6
2a13167f841d8cf89574493d145df3f208568d6893fa296f6382e8209d41c953830f0359
5de8f601da14376aafc2c830419a978a7cd81c7e8109d29f4b3d13467cd05d7e213b49ce
e4b432e708cd7d3c1a8fb6a3c5f2c97f1ef6ea2f97cd53e970faba3cc48f205e06f6079f
42bc0a796539afdf3037646ac1263f6559e1484d05f91c03c909265e7340c8f70bbf08e0
ae8902712b43b83a9510e5ea51c3c98b8951333d71b379e1bcdb54ebe9c9075d9ad3980c
3100b2d9fd6d4e541935f7ea1b75d9cf96b628295045602af10058c72f2cf02d8bebd48b
e0e07a18039d89b583107076f8c21ba45f62b4b74046e7ee4f762834ecfd3f5d2fb92125
9bc452c97261d3f37b74d33ad451834313f9c354160f226ad5d24682dbdf3b985dc79fdd
a701b0878c4ecf5326c3c212fd8d5dafe443be7902863742de8a3045593cd92aaf16adfc
99068e8b660bc88f3b87bd40eca979d4985f776b595d89e5562f9b84b37d39c944aacdb4
c16a9d75247cf942a43a3555de9a67b7cb94dde23bd5383ffbe04c97f9692be638316556
730e0f16726971411da4cfdd014fab057672667d9f8448eaeb70d9b936d3b6e2806bcf73
dce53438c7c7e45e8e92783830d68a556bfb942cf6cfd1bc92bb532c851925904363be7e
32e2a439aa89380b016fb8720b3b2f6cc6fa4af5b3ffef026efa0d000f0479a7132cfe5b
4aff368ff7f463fe07f65b0ca9108c5c7b02f8c9a14996a1ed9dde050f33fa443211a442
9dedac61bb7217ab44515a9942628fd0cc68e703e3a5c237eb8778b38acf85b11c20f5b3
94b9680cc3a89722cecee94dbca1ec74193037f6d19383f26aba7172f480a08468c48894
b750ca4abb9f5c964f1d0c52f38751f20118274ed04f22dee78b795dff8c09e25b01195c
05887e34ef8c72569f3290543a6644067c4d61db4330c53278145c520ffb62430a6713b9
d9494691d637b4fd39b8edd70ba32e15615a3f40bff88566975da6e22fd941affdc2f5eb
b188fd9eef83afa85e219549ffb6639c634601c6d708564aa0ddfa3bc50a4c4d7b0214a1
59a5c5402aa1de746f9c6e8ff84a2721e2e81025e44e3598fc82a589b70a60a16f9b0738
8d6caf864a2afdd47fa21d975260b12d9a6644f73ca4a7709fa6f52c09881c57b9e25370
31efac37e91201a8d413cc20b917ea382b083277fcba88a90f846885f6919f084542f410
7180a2c3d785ef04bdec07f45384a9d0931eb0572a63ab6e96c96b67e2c82e7bb8654352
59f03fb72bc2d2e7d25dd253213a953721910c9547b6cd868ee24799e78d7a6b83eb810a
b24d27ffa87191ff203c30a52ab93f3d8ca16545e707e1e657e70d5613dfcb94031a6f00
e19cdf2714f9dc76d36ddb83dbe6c99573c42bc220cd2ac77e5a2d758649b1f8e8fe9f08
2c5245cc08e606752b24f46fe9a26f3752b5d6507b52391050ec866def556402ae0557f6
8bd493d9186b4d74f16f1b39ccf626063b959531200f875fc0e4bc4c65f30841fc9c109b
20a8b1a0a37e65eb0692d0fd483bed9c063d6b4c7510fffd3216f0a687194128266aeaec
2c988f5c55cab1c3bbaedbd7fcc45914dafc1eb3b8a037284a5c1c7d1ee72ef01d4dcb9e
37c4d923a14ae736396e10b56ee3aa2e716c2a0a332db3a9812419ad89f0b6f88e49598f
762feffa0befcb614d3ea9b51e876d5da4e8e07613b919eead7e6f3a6464d913337a91de
b76724fac8dc79615accde6f64518247f695933e810834d566570aecc2a47798a4b181c5
3480ce5cea4e1ec4d5ee502b7dfa98d922af820ab8bfdae8e5d592f63362dcee29636098
38498a9c084c56c8f242851de8f499ba0f9fe33e9e96b72411958459cfb96c9951c1e656
0013fbb7f869bf0e0a849ce01f9e26381af25fda5658c900f351b2bc8abe923d1e66ac86
81c36a9392167e07ba61900b2889e023af9d42d6e79302dee081d87b94108b32edcb165b
3f99ede13f1ee80abe886abd77d262f601e1b3f12d064d637728108db5a38fe2d96fdc6b
b77ab26b79abfa1d77e0bc393fca9e6922a3424a9f0521c54a669169e70a2f4e54752b23
9a92e60001480992a49467172167569df4843e54276bc246376c4018e0a8b6f8d8909d96
c7cc936e9777fb7ea124ee2450d7083e9fd1af59b7057c21fae8996c5f4fb3d2318c0d0e
9631101916ac6fdedb29e7a2b27333431222cb8fc4c4decd568c3a7f33861a036fef810a
356660fb6af1bf0a7272d50125d881bd2494618bbfe391d35291ea50423eee38e8a250f0
e596017af444ac5dc2c8fe760f3b430227fd7b5a6b0a0f1401d06d2ca376fe21a90b921c
158aab03db11817ef7e5aec8573f7e5ccd8242a613064122704ba94128615935c127451d
39d35c2eb15502c82b49a67842ec7f3ec3fa29cd2ec06609820e46a3db8c16c4eefe5096
da2541b6ae9f93bad916c9bf3630c930b2828cab5bc88204e93358030cf85ffdefdef2a5
fe99db277c702eddaa1117012c37fc37d856d3e371f83f03d2f39d628ac0f712f8d9e690
0e1f8c3c0a810fef564b3a844d66ee6bdf83308d3c849d7ce3a9061f271fa6e3f0667dc2
a91b23d9eb1d660e086fa09f1f8a714976e932fffbe522dd2cfb0e330eb4707613877535
3c780c7bc56f21c539a91d93624216741bb26aa033bf8c68aa7d1f89ed92d1e8459ebd6a
e85f7539c2d5673813a98bb6a0a1f7385d0c0b4d8fb6fb04d78b93218a550d8615df2098
e0926293c3207a26a705453237200bf5a06f8f2655eaba3e329789a15fe09daf6d16d698
975b360b6cd2b642a725e210101449496d172cdf3cceebaec180e7ee70392abbc6871421
9323c0542e2d22cefa0071f151d655b402a4111e5134c8259fb582d4b098871dce47f5b3
ec8b735fd7575d388d37aa8b32907ad3218ebec7257d2f034c47aefa6f35471a0ee6838b
642e58e6ea58985f6560033a852f01a11fb882244ad4746c4eb3455639cdba6b4feac85b
f310c0a4d7a56c26d27b48b7cc5f12ec9647b5485159109cfbdcafea729bb3bab37589f1
f7ac1086fd6044890f56b5922873c2964b56822b9d6effcbacd85d0a6390dc067099b4ba
b9710ff6a9dbf2d8952c44f7c908417c66a4c9ceeb1471d17a96aca8a633d4eed8f30484
28560fac2bf16fa5c220f2533bfe01ef588a8eac1700ed69d1e6dc73fa1c720c6c7b9dcb
3feae8f3bd804b3672f7467efda71709f4e368f141ee49e0a3babbb7d38782f595424185
a756ce8c91a59e0acf9bfb0078f04bc07c4b09cf06ca4220638cfc577cbb467c4495a918
8818390b4f5b0dff9e98dd288428ed29975ebd11dda27483a76e13fe77129b8ee1000815
f41ada3d6dc334531eddecd05d22c92587eb5d7fc04a4daede9fc6b3464cfa3bef8ee28d
802a47c2163d695db5d944b8287bb4ef09a7927016d4efc03579ca7069065132f227613a
460772073cd1bb57851f4b66965a14afed1f301f3ff69fb5ca4de939cd9697dc6fc4928c
09e65e9df258220e398e20253859a20bcc661d75caef8f002eef3e851a8c1477473b2bf0
a0c6ad99af82e3f7f6ccf05ff67ee4e72e7f8437c97430853c3fd48b6e7c972b3cf16000
59d35df00fff7786569a76c4721ca78141d3a9cf6408594637feae1e2847d217f048f7da
1354fbb7096339b9a24e85284889507e1c12b360226a7a37b828cfdfa62379161f4f561b
25bd391c6024c43986e1a7f666a73d6af93ba7d52e98562e7939827caec8f0c740402745
37f776ba934c1fbe3f14b790774709ab025a1a346e72b339dd78e171e753f321f1cb2b2d
c6b98018344a2359201484b69b1003aa9803faf0d04da8da8e54f38171619d8868a1d6c9
709e5d9ca83288069e715679fc285cdc7db3046d5bbb8aa937eb312db476e71af776ddd0
e35b4bd0e5dfa7c5a9e47028d75ae248c51bcd17a23d1d09392414ce67cac6348513b032
e4b38f2c0d7b4dfdbdf63d096bdf3ea6d8dfc94587664b81d4a6d9e666116608e4e2c421
f14d714d7d72502197392994be1000b7c4ee2ecd74bf0cee93fc4cb9dcdf854c759bce67
1a53a5e4468e53f04491800cf50b992e0292a266cac01c5fd1331cc51a47ba6a284b21f4
a9725d8467b7398b5854441d8eb3c0aacab4386e32e2f37d97e10ad892df2f889fcf3163
d0c105d3c21710b8cc1a106597e1595d4942e5d228d742bf14817bb76839be88029f9beb
cf2afd5d406d1897cd957bcf196605298f3ececf27d2a9a2c138dd5399d570779548f18b
4a9b2c58dbc267c71e842043bba524650015d99585dad0b2e1cdbdbc5a34a28d92575411
f5b74a58c0c30620f3710d7183aa0af3182643be455650d13d2bcea7043edcd86111a4cd
1374cd8b65b2ff79b4900335cce7254f082420416bee80814ec3345fa746c684fc28214b
4644628d7e72ba00ddb7c3cbe5d9dbd873c4b13dbe3fbcd7368eb958ddf16544699af0e4
cd23a5af58f1ecbdfd6ef005740dfcd2ad3b9237053141f7a9418bcc45fe0dd1489b5f55
cf3fa4e763d0a2c110127b81ef0c28aaf68f71608358e50ef218278a506c43ccd6a1ae7c
3098f53e95ab642a8f2a43ee69864d44b059deaada6f160a107017a0c177aef946fd12e2
ae6e855e8baebb72a3d952af918d459017ec6aa9c111df545c103689e8e30eddb1e2e6f1
744a1f1434e1c438715f84269c1162736d5822a79face2d7d83a707392a5669006b4392e
796ff2b47315af3d82d58f1f606f904bdf415fb10d875f427b9fea4c4ca310bd9a02ef64
49d942898b447372a89be0aa19d8f77353359aeeb75d5b15e32e041ba2812f4f19e7f01c
657b8b823c8443c13a85a9f6b56b9489e35e4bb23d28c4c541e208f72925c9aa473bf185
52ec8eb46d46b93c3f7769c793d1ca9be1526d827fc556a6f462bb769fbd56cdb874e878
5cdaf5186a848971e1174d3d009f95f20bf9e08fccc70b6f133877e86b150e7230f592d5
1c603895bebb933c2317cb541dbe314f21444da0c9166eb7fd22572b3e7dfe9dee6efb92
e11f1e2556999acdb894558cb59d78b950f79aa6bd474191acd16c422a8c20800101dc5e
64f8dde2bc9c9686c7aae6aa352c40148dcb33a871c3894ed4ddc62f5d7221bf8fd231d9
7d7c018a4dffd0fae7ba1e1daedffc2c9ea6cc8e238f4d3fdd7c6f8c1b7e4ce8864f0585
52223381292bd1bcebc831eb82ac56d7d9ab1a51c08539a76f26023c25ff7a645965b243
99438d4f05a8d2a65f001eb3bb524ec7f64e87f2259d6e51782334bf9658fcd18766f978
5584b335fd9676ceb20e6c836b8723145b688f8b5f6645818fe6c7e3af850877a22a19cd
0eee41caceb1b3d1a1e745e36a80ba801a1a2f9c968db5fa1287ef8589a0e539dc1aa335
4ba80d84b35ff93666c5725b4b59f6d093d3217510bd480671f253b5cdb4af92d3014e7f
3e66223f506a49a8f5191d6ba74b6a46ad0bd48593878eb80b16c358678077bdabfaea53
410bc326c2a12ce22cb90f9b62628ad2a17639868aa1cc5e64d2a6b30c143acfbe7d961c
1c2b33e4a47b51fb8c8dc0e4cbe69fd720d93861576137aa34e7a6bb6032080bd5b2be35
d961919af0120526af8d76b9252081beb272e8ef67d722ccb138b924369478bc8677c999
3e288a3f374a5febdd6c12899849f76a595d7d00eed94de17cf30293aff1e1640978e438
7be9dc2bb3a4e1e8332ed4be075ce37c30f526311e6979658f16bafa37d6561eef395e92
5ef0a3a3662c54822173553521a09f6cc35392830234d144aabd4e902936010594ca4937
7869505c68bb181a76c73674a23ea874e334e6754cba6dcf15cbcfa8bcdab0225422e5ab
07f307abb97b74a0d88a4e2092db8cd0d3878e07455c47bf298f2687c90f5504d7a5f7f4
88082291df4c9052182c399de0b899c43f310684e90f547b58365b996d19150a7e991fe6
d445d46ea9da4b8dbeca5de972cd979054fa9c53b77a00eab0d099841b7f4a92f088f413
22ce2f78fa9f714ca869a0b5ef1664d361d4223a5be4781415e12b38165dc0489a077bc1
19426c7b3207c2c958c2504f5f076537127537cd06aae235e9b88522c27b7cb30a1aa084
5e681a7cfa39a443668066c983811698c1b3ef15d7c769fe2d61d7bc9aa4a450d9e8ba00
61f48424bd4d00cfad01e7fb4b524f3a50a6c30671d5e491c0833704ae1dc2e2ea872953
cc01f2808f91e20d595530dfa864e0ff041a6376a4959c750a954e4cae60d6fc3443f0af
4e983bd1d25a6543f3c933347c21768ba1f8e05fdc441d096afadd16c96342ce3b40f757
59eca96a5943fcb75cf63e56c6989e7973a1351ecc31574ca30c3d5321435041c1c9f88c
460fc7d754e486c6d9ff126a5830df72634b7ed9ee5564bd91d1ec3f7756e753af6720a9
2aee93f95ef0617bfd870b33264f62f1a32cbf932ff6a87c722c8e5deeaeeb4aa8932dc2
2ee665c46c2334e696b4d0af07d4a98351e424d6a3a12e4c53db973b44cd602763dad088
cc8a3cb5330265dd45aa05efd3b9ec438a0f27f3e5c9399d7236d7295a8c8dc7c7f36e65
0fe46bc9413bde2562b1c022d62c042f11d95431c32229afcc3f2b05b19820868c3626d3
4dd595b311e29c6135789fc140dfd622017b77e3576319e69837f25f108fb56a10360778
1b48c64aca288d31a44b11e918e9bdb14bf62a9fb5e0d6ddac0da0e8201abcef830957f8
5930c60371f69502e5946f991134614b6718ca5d2d728a11d1256b58c1afb5fe229ba38f
60f2d5348a12c2c0ab23b7725306cdd654da6f2d344a49cd2fc1fb89d52e44e5a7893c62
78c2355d7ec8c2737c80bab86140025900f10e1fdf6ba1220fa3ad0281e200544b10c78a
5f4506bcf739a3865a0bac4039c1a1fec7ff8ef73fa0d6dd40afbb554ac8d58a252a61e7
b820e3e14d606ac1c12a1438e9c179262399f9633cbfcc39f51dfef7fc091d320d426db5
5e40b84b7c39d031226bbbc8bb26e926fb5eeebb7ccde403d7789eaa26e000a60dd50f7e
274110658494244c2348cf2a30e0c5f8306e63f2c96f78dbff960ea8edb95184ff1f7320
fbb6734518186fe61cc2616a0b713f3e0822021716c96448aed9fc28fa1da545ca77f393
b9013e5fdfb75b5dd3de76f74de7029557fbca0d822bb4c40d39706899e0dee6754a3f81
3986dd79f664512fed16dead7ca6645b330d0356536da5ca82045237b40bcbf6aa51d1f0
f152f2e13485b860a9df8ea34800b161551307ddfdc9b333aa7b83e48d316e2008ab1ba8
c86f98e188a9ee8eefb2b7165a3def5898ca33d646d36144f5b8a291ae2324b0898f19bf
34a7ab9d472f6791d420b3ef35cfd0da4f4e276f7296ae94e5e01dfd0ada7c44a1d4c5b7
558861ba965ebcf40dafc770ff2252727b0bf21a9f9a161d8409a31017c91466f2ab3a0b
0c82ed5428c2a8c833827e58553974ecb51bf58fe5466556c74ae8ffd9104bc316c880e0
0fb9f7d6380aa5bbe28fdb506f02b2cf6f04bab039c3a6cad21d4d63334cb7767e62ce26
f980371e190ef169684ccd7f78ceee34b4f32e40dd6f998d9cd2b1eb1d914e15a57d243c
2b89bf64e19feb24251145ffab9bd39d82940849b47898fc3b8251c2c0df46aeb90706e0
4f588fdc5db409e467e0130b0fe47ab4ef72eaf3a14f74f2d58eafa2fe4b93ea56c74ee5
0617dfc3db2e7520f04206f2d92882451568cfc3a928fe13e6d40b95d5d859f57bef42f9
af82b50254ac5003be1d081619b440120875d79de1ffdfc7be8a795ef1a82519be4c7711
dc1784acdc4ce34b2757e31c109ee054e160f0e800e5620a24d4322803ae773ce590df83
cac6ca77373a446545b0534ba6fcbda396fe4373a4f60ec8d82baea3969fb13143d47fba
7e361bd8d62975d659732083723be959b0a1a7fb8abc45171b425467eb2a4e5ea1b386c2
a6cf6b8496507ae7495c7d09fec5841c1ca1abc98c73d400cd426f44abf2788c93e80953
5f510f10c2b97c76ad0f010bfd13c6c681a654bed3ca468db65ca4a306e24cf52c615cb8
d41f5dd092c5a67d9259608c4db890fff7a273051ca1a24080751d8f6206faf5dc8aecbb
368b51255c92d164035fc8400da1c41ba76d4c40b77b06f8c5338ef8ea9b78a11b6ecc28
a710e80212a2a6a1802b8241aa2176ccb52efed609c5f13166e3eca2728c2b3866996ea1
606d21c232834da6d146461d46c143bce7011734ace98c171f215aea24e1708941971916
98e2c6dde4fbde7b234af76197d66ce96623f1c6286a47f709a1ddca613f2dda039a52d1
eb3be0276ec2f5558b18e6b1554ac20633aa4ca7f6ea6e2dd4db3862ada0bf9a19fe6aad
30ed188727f1197c541865918626b358cfa12bf013d63e73558b3001fe8dc72f17207318
79aa5eb17ee9e46dfe23c82f3936ee5c2fb244490e5087d6001067e5a5bf94a688104173
2caa26cff7db739c60b7e662257d62cd27930eab21436cb8524bc65bd8e594295cf68059
29a242741d3443ee5af489e6cb81d597db50807e51971ab513b7f5aa49be3376b5100b9e
00f745594f4cee6e909ef0be5d5d154f8efac9945a4d94591b065b78625b7666c46683a8
2b55c84278ffc4b393ed86c6466c87d7120e8d6ea89df9e9407eaa5593feba5f176069b9
f0bffa8877745a2a978560a2e1c6ea5796c61d2d1ef08563d0f589a98c5b102d8f0c344d
ae12b8daba1c1f6f4c129bdf21e5040a88883792816297c8ef48e05474a1cbd01fe73938
96c35b59bb6b6ce8255ccdfe425e51d98fb48ca8d32ddf4bbe2738f37ac65ee6c0bb6c30
30661be3724de25a2ea94f009586527cdec76b1eb298365fba2c584f3d31a3475139c052
7bccad5fa2fc41b2bb6cd8affc77a56fbdf38edb288ec36b6651cb860c5d0cc3cf04bc8d
1a706a56a682fafcc178e39390233bb38c3ac2d9a85cb5eb5e54b309c3d58e848c71ef00
f44b1dbbb833a7bd2da7952e1576f696147b78d63f193e0460ee1f63ba481391b759e63a
5c9536e8042c94b5eb818a9161ccd0ab2560817d1e4e84ceffb33d6e7ca9a0af2b5b1598
e006304104d497c22e6a5c68e3407582e51ac0c05fe2e6a80d3c3abf91fdefb5f58fdf6b
75291d86672c2d1305e38563a2865d305e3664a538f57362f5793b1ec0b98ec48bcef5d8
89b876b54bfa2e5ab235e6725424618ce9de0d99f65d5c8761f252887f8d81da53cfc833
68cfce1b0c55c3f9877c0ec800788f961f872f84af258b52955ae884128d74766fc56ca2
dded14b597136301fe8110d66e7af3c21fcf4db8b8250c9ab1794c8066b2d9454999df8f
a91697f2c3479b7ef56158535b7aca414565560886be5e89bafbd87e455911cf749dddd7
597caf6456fce2ae449fee8695c80bd0e2029837119767abd9513041dc30a4b6048f3939
bd6a73f357384528348b693dd9085a555c710baf315af5ef68650709be82e496b347d87f
1b6fd4f0e88d2e025d0839ee10838164a9eafb7651b42e3f03d5fc4b6304baa3b74772f0
c789d25b65703fae52e6f48d08a99e3d8248312dc81b511c9434a86547c30ff725dcfa87
acd44cd7add4fee404d0106e3924c316a2da7b0fd6d772063e9244b61a32b9f5d4f39747
61a0a7c9d4d0cb0319c9ffb951891c67966a88fe1691121d74d0902ef981111a05ba3809
15db8bd00e65f23857f6a0f8463a6be9575b6386baaa861b16aee3e052d2ffa938e714f8
a31bae6ab02af96ca0a6ebeb5f2e7788cc554f4f84f9a522ea7f02a25a37afe41112283f
4a8847a60d34621d3e0f1e9962458e2d975c0eeb1983ffef05a6e3f5c730cc19a2bc59c7
d9f8eee90f594d3a03f9ba1307f1a303b8d273f38a65baddfff9f6fbcc945dde6291e84d
57bcdfec429a7eab65050dee6fea7f1050da5c3f708d5e92690f1187a76f1841d8b1b25d
7d93a28cb6c1ed4f7fe2ca1e70f019bed16cef55516763efb1512316e03217c91a6aeadb
97e084593fe5b6060232b36906de88d8908a15ce0f3f480bb5816b730400220706dcb118
acaddc2276522f2575b7089f51afdecb288a7500ed87c61bd737850987c8b8e69c9c07ed
270fa0507735439bfbf7e34bcdc38357a34075883d97247b7c12f5ca3b9664d6251fab9f
86a96d555d918bd3c942fbfadbb451b13e3aabe1bc6b14f2947730dff892f7f638883dee
2788ac4bd122e3544f47dbb0ed66f92f08623df9aad610e03bc3eae4c3a07cc66f30f585
1688d554e4deee722d113427de8d15873ccb96b5f067dc5d37e75e0a44c2d0aef362ace6
7f15197f6a48d4402766b955455debbf9a219b6cc90f7f22942f6f3dc71447ad41f308ec
15debad7574db5a3a8a78801dfc0165a82ecb62173055ee0e77cfafedacff466bac42cd6
738e553adb8265a579152b5e3cd1249dd762d30974b0b8f18376c84b6dda55d733eded04
734813a45fe5af5c684e5601d0fc084efb0b7fd14dd98ee5b5bd5c31a4a564892d66eee1
c1192cbe600c5d93810938f14567fb9a1432d45d2cae0f98e55b9786298faab3dc315b12
3b18040612840fc752169861da31d6cda589f8f0665baa4244cd01496f86f243eebc1392
c459f3d1f8bf3acf29f8385684cbf00a03478647c2ed9b429e4da8b92d3d6d7f4a2e1253
32535c60ad69789363abb9bc171af54104590c93270b28bd0b46d9c1da4254d0f1e14831
f940f72dc979a28f0821faac7fe952a17f08dce5ecfb536087e546c6d53268276ab69740
574e0f099ee5a4e5eb5f4480b1fb5376de3210bf747ee09b0d1953914c73c4b6658b5b0e
a8f77c8ae7660e6ce8050f07d7019dd905aa86bcb7c6af46c36c6b736366daa82f12fb66
4ef43609cd546a70d6686a10d449a0bebab9fc7a3c11ebc676604f18b5b2501bcdc830e5
17301d1d0609f4ae8820dfa54ce139a51107aa2a5ad6478b8ac922004875a848c62f43f4
3e5b2dade60241b2420f46dea151a6c3dc21a267ad2200f1bbed8ae17f70d6b2b97af229
5c84d8e6e9522c155cc09bc9ffef4c7fe886b147dbe6f20c77d71800d8993f4032c82baf
1cfc298f21cda74e4d4b3d642e9766c591943df244624f239c81700898251a5b2e6578b6
32f1369cb2659b0ec7fdf3c72506b3efd136a22dde4ddaa1a59b982e4283882f39c2e6b9
1f69cedd703d58fec56c36cb04809b7aa79c3f6f48f76c273f6a93b7239cb4488ba66e32
5c6c6742d5174a882a4cdc63dba00c97dfe35fa0baae99769e95c6f0bfda8c920890537b
4b15b9ef48ea3617488b47465a86f01b6d38fd1cbaa0809f10b667f6ee4bebe4c301b7e0
acc8279f242a4391dc00f6eeb8ee11f3d7aa82738d0da742525b3ce75cb0c9890f58a5c0
0b89e4ccd337250251c771a0d59f2bc96eb425ebf9627445a9d04944e92fd5f4ff8c5e77
5e10baafcbe7311d3e09578390c2b260f9542309495a363f38b3022c48629bcfa6b95722
0d65d98fa08c305164b4741a1de89eb4a9d18616d8a45cdde5da81a945792a805e5d1fb9
1ea0bfdb8277399ad3c7910521b7c426cd2b2ea906ae25036d59d88b911d31fc4ea23c0a
9e749f3d13d6e52ea9e2e12f3f140ea6cb5a79d3c45e84829d257311f0ba0e890c95651f
ebf9a83203d2426649d4240556aa7f6a512242bf0fdbc193f9637f012b2d88509d78f411
bf5671d9f4a641c088506612e30818c240d954eec341475d82c7f8bebaf53c4eec14ab9d
af2f9d97bc915d2ae2cc495d078296c1bb95459aa733271730e965cbfa86be58f34565b3
3acb4da12030c19ca08e4cfa2a1eb19595fa4bc0723ab66420cd0c29528072ad1914be45
feb8f6d03275c36d540e508f4436e55be47b76641748197eea9c66ae5e1e813f7238b771
6bd8c7ea03547cd54e84e948fa69b317013b6ab4040b17270844d484fa4ec61395533b70
5200f0cd0e88bdbdefd52d1a8f0a1d150b45343c04b2221ecbfaf2b7f921ba1e2c7429d0
cf860ecef25cea09c313d94e9c2a898139ff134d8b5a0a4aa25eb72281b608e73ede5807
4a8e237e9c3e5629b1b8242dd502b9d30b0db09c6893cedf3a5ac66ecfa505ab2d9ef965
3abcbd21cbeb2481ccf268ae8f560cdc769e7c819b0ecfce19d930252e9ff83737db7c7e
e659079dc89678ed6f2e1e50a6c2fefb724163ab1434ca3b071295f9160c8beff47fec3b
4445836dcda2671223e27c2fa0d1beec8a7f9f3c0e017cd1849038048af28eaf7a20d12b
68d71a6138af507c947e13ade894ef4580c51561f1fa3df4c66ee709b240b84f8bcc58e0
d8aa573f2faa63735a321374df1522a04b2760d71368e8e5f81c8c588135fb3923439f83
adbbd3324b7941a62346b2cfed6c971f16f7e3feba9630c1dfcb64f2c5458dc2a55a7945
1f35c19c1008d2619573c12ee11071e4a2dffcbca6068ec144a64e39e7b26f2b5b0e6e59
093c840b904ffda783d4f504e91186e1b45c2da871973e2b706ecc4689d0f7559cbd2ac6
ab21d5deadb14d276dcce6c0553a73efd888ef3a35815009cca4c9c294f5f47630340811
3fbaa38520535e5db44bc82456005e541c40a789284a6afc3176b34b4d7796cff0c148ef
2b119af44671f96285d8b2aa4fec0b6c099421a233c63ebfc42e12d462bf37b664fe7a86
0c64816d8a3bf7965d593663c0aec531162bf7e0d15ac65d5ed64f2637583c6a28ae3efe
eb3c89287a87bc19a6eae45ab007081f2e8a4e615c0136a0d1345374c6bdf265d8d365cd
d8ce4a186a330dfdf7160df29f02782079f58aa2a37d4a9ab585cd0bbaf1447df2a7d264
3c7ef1f3022804e6b1b03dc7bd65bd4ea61c2ff1b3a68e735e7a70b19ab454a872cb324b
621faa32c2f57f8099aa2df8ad6efcbed3d626f3b8c4b2418dc519ac794455acfa413226
c36646d73e695964d814ecbd1d7bcde30f0ee871e1732d1c0ee84de2335789cc059e962a
9e602d853f1586a5621d404d12fc981774cb1df67183a74ea17d8c7736d4a743ce21b77d
5f6d6b4a467b1cd36c5c9b74f06b945a0f4bd645b2b9b5d69028508e6967c3eb1fd02a08
c5247dbe76e19571473a751b37739c113d21cd5b1f8507acfb0cdd7289f40dbebfb6eaec
10b8c5bca208d0185f10e708533d9bbfe3a9ed7f2d4976769b7f44ba915cb9a392d0af3d
acf6f6ad9946942b95c67cd3236f42e7e3851a25ad3f56dde5a158ce98095135397c2e27
074303a4af0a790ef686b10e56d9c37afcf9084d8afd0d37b9e17f1cf38422331aa62135
f8c8d262b037cafe998f77c7d785562efdbec8ac2a1b68f0d5c02be9034a13641097e7e5
87e395b89d04feb8bafecb98b8ec9f8e52b78b15ae5abc7179a3b8dbd2e8edbf6ef1a4bc
68103916dacb8c1e1aa684ace788b1167a71e88cd1c653e7ad5d43f7cc8d40c2b87e330e
79b51b3eac39ebc82fbc54d0402ffdb2f5d7077d8f1f3bbe31e11c22738d57a11252da37
83c84b8f2e0b5c93aa19a51284b658d64abc4d52ac51d2040c7e8d6740f3f04698e5f385
c0d220b24d3bbb46befae4318401c5cc819c81098df3a2217b5d4cb3ab6728f39b0f7b20
a64ba003f503f420b2363c3b7fea8d95db94aae5d441b72cf0d5af47bfea825a46cd3616
0ba0d5fff44ad9102f7a8f9b1d3128354b936b4d9c086783d158ff718e59dd721d1a9086
1f78fa8d73d7b89d21edba8135380bd484c58283c9b0c11011af40386fc39df357e66294
3bb7ee23456c07f7e22fd5acdd8838fb26e487e72a6d6af1a44a8944a81ecaf2fa0da61a
f147166818af92b8bb5024fb3b3d43922d77a5ce6ffef781a111b4ef6d7a202fa858a862
9c6ea631f3fa4f36d82bf4341a07c0254ed327f30bda219a386cbf36d86bca5f1daf2a37
c28fa4a48712100fc3c9fa20bf272c70c23afe597903ee1099b8c0c2ef0ce3b2d6b4b9e8
07791602a2c064fbaeffa543722bc0d12ffd2041aa518075bbca981b674f90e7d377b721
c3824808dd03b37907b0d2e573306d7d34c3f9ed5ec17e8ae6e904bfb4b996e5e9e2b9dc
80dab291d030d4b17a69d59a17ef58a633708519d25a8ee6ada5255d8af3fabdd5169fe6
3d359ee5116d08dc051fb7639405cad75879bb89f0b8e6cb436de8392e5247354ab10346
0ca2370564b05fa0d086e9e238fdf45292ea44cab66e6eef2784b074101b35154b6445c2
f7c524741fb0c4ef8f4a98c2a4d54044982669b3c18e8688a22cc7f51872fe1ad83fd637
e3a3e1a0a2e77cea518902576d4f5751f14a206977cd65722dcf53210bd69433090162ae
709bcbc2cc98601fcbcc105f201013f9de1223f97f4b0b1aa5b68194794482c9a43319a2
1d1eb74488ed56bc4fe0ae632082327754fe254ec28db42341c62f76dd7da578fac4fcc0
646aed327dda7930b2312440487798fe17900f916aff49b1a8aaa1a299df78158bb3b8ab
4d68c0a6234d805771b2525937abe0cec4dff2e88e3b3480dee480dd1d47fd9fb96cf63c
5499a085330c3c30907a9d2c487cfe27e0da256cb67054a33846cd6e4b4930bf011885bd
1fc16c7f75cba386e3e1cf23291438e05b800daad0f0a7049dcc9e000c03bcb888852790
85b186e5d658262bfb33536f3433b5ddc592004775d0f61b3254afe8d161d05f2a3dc051
1a7ee358b9f4f376b9e32804a0c242934a558d07bd44b1d58a4e271d9b00b64dced67ded
840c30fc8945f0ff2db97b4a9c91ff4c6d8445ddd9694979cdef5633c71cd2bd414750f9
b5de144e9d57a74f4e5d2ea9925c055e61d1528b84aba8f71fddee4818cd5353bd8277d3
4275d02944759c7d9dfeffa81a46edc7aa2d5c1c44de7294d7cb1195fb91f13dfc072279
351525618a335f32b155b900b347021cf67dbc8ff75a03d7a27dddfac89636ccb4227610
f1e7c2eb6f069dafbc88c6d53d4897a7d4706f6399d06efd66159b106f31f3b15c422e03
af23064500acae83411c77c33beaa1bd0625aa309200800a8dc272f2fbf1691f7ea02ad3
fda3231b05713db03bae6d65da11a4617c00d9f528b518486f60074f8e0d4e85e325619e
ab225eaff055891e4a82b53b59166a11461ffb74b7991b9040e8a9eaa28efebefc4c6ee2
305dcdedd737b299f77128a8b5a7a667a78ea8920ba1c4e6224928632783170bc64b632f
db1a6ee926994fd41f8e0f6896de0e3c7a8c2c6ac8684d09bb43dea9ef6334fef7fc44ae
cfc760807fbf28064ad9f22f0b76eb79ab4a5464760ecdd60f44d07f57b1a28e271c311e
9f2ad494342a06abe79421c48f4e3f580b54fc18734cb186af05a29055504387cf6034ce
09c143e0397796e8a6c20e914833415fb82de20de13802385b72d62a075001b30189e099
0f167c205d579aa54528951ddd326a23f9a251f1d830915ed418f098ac74587ef5d7424a
3238c135ac78344d8610aa31b5e1cee2a19f3473de218dbf05303d4b957bfba069129eb0
7d82470305adf0a2103c9cb4deec1aaf7ad1a3cadb0f14bd44ed6e107c740f49bc9d5af0
328fd7fa776e7d8b0cbe3578bdf44d7c8aac2bcfe329e061d95e743bfb78056c1b5e7135
abae704150f92689872b96c9256497dde4740514f3095cbe9f5915bd6c856780a9ad0bdf
8c38dc26913bcb63d193817633d0b68492b85e3c9e74ae665ca48c35a97d42e4974c46f9
b67eeebdfd2a7694faf3cf8004ed692d303da1bb23aba98e0b7ba6bdfcb675b27682d5a3
8bce63e852bc0bd70feafcc83dafd17769c46ba234bbd60ebab0126c124fa6ca4bddeb68
ffde7f22c766061426842d8bc6af6c70459139f1190740aa8ba1a7088ceaee0ffe008db9
253ef35a312b3005a59175b8db347cd0df926c44641f5bba302d7f1fbdeec73361618f8e
92ce317c35dad227394e1a1b83de312a84759653291f6d23d14a13d8678ec8982b04d829
8843e16d70b97217dda391f547c06c7d819d81752fa35b146d45398d9cb3e3880482cbd1
29a77f196ab83fb77d4cb92d35ceed904429192298d641442380fc5107708e8f4ef0926d
93c6ac5302307bb22b1ca6163643f51d76028b2bd1ba4fca111f6ee0e2d98c7f3fcedf29
f5256d95bfd49c6a50015bdbfc8715c754ec23c2f39ce8e2b589999fb37a9a42bf670e82
fa987755e5d6ab6bed6b7a6ff232baa537b72c1956c2364803ac75a1e8428d6d3dbedbb9
c6871e7f8c62bba2f7d3e00cef745bd3e249b6a481e8524edae4811079a5c1e3a5160547
28fce6c2175a79d0852c49fc9e9f8b3756b65fb3c0bd70f167cd673023e8eb7642701ffe
ebaeccea9fc74ee53af771e04dd559050c3975cd3eac5d0b929d79cfe256dc92f4414052
b07d3085d41c5e45fab95bd73c1504f6853a8fcaff8c24442bfd25bfcc6311cb81f953b0
c71ffe590ceb4d727e3a6a0597254391023d2d59b91291cf92ec531c6f984835aa231824
de3a439322cdef4e5c79d8e4e693bc3b6f99efa75f733b16863cd940f09212d0844e17ef
29b7f63031449ba01919d94aa60db1e1648ae2e019a25226c4eff4834809b90f1739e639
b398a843b9270038ef21b7b3d14fc729a666ffd2e1b2fee39ff1d98e366110751be1e1dd
da2b7df7c75753e0fed352521c64e9367209418c64bd9609ca2356aff4af31f4006e2b9d
6fd5d9f87ee8bfd7b5567407973a5d26c3425b0670146d2fb9b82cee2c9b03d4bc32188a
48115537c349bb020bb02854a02236046ae00afe677dc9167b7370f499d761371d967cd9
b1154241f53bc8884392d1c72e74d45faa371d009f1d705bd36041a734cdf2a29d1a3089
fcde1328d511dff851f435e249ffeca1cc206995e0176c140d653e49fe971eba78f2806b
44dee805863822f26744ca3fca2b587b8d5fd0b42668819579b6bff1e6e1a98a8948108e
33bf820326db10b2e872c09a3625d906c66f33b15699e855476062507d31f9bfadee3462
696b88d7656bba0802d091c27b12afb4901343274817769d8550af787b30560f781ce5e0
23f5a21661ed0ee5d75675094432b1ba8a618c09550d15cc6d53d93d90b48c27aba023a0
51fc5cb2676bfe25a8f3b810accc7512f453176466c14d2ec212a086714b4f3ea44a0e52
3a845003882129e8eee0ffd48e6388028e5264722103e5ea27f29ae5905d4403b1be1e54
8d4b05a4b219e20f744d2ef9d8587729305cb9fda2b748f079a140dbcedf7a2d426f4d61
84aad3f9f620daacc6b87a7c6251d60f90c1080e5127325d2b7defe94f47d7a9c68f1f1d
f3e63222bd6677d577cda6b13360cde51820878d9adfd61a9b9209a7a5427bc6587935d5
eae734f7d3872bfe0d26f2c45f32e4875cf1515f9cba12e7248a1e79f68c868e6d0fbb10
fdd484e36abdef22fe522e3972bc762e3c3660202efea1abb655a1b3f9ead3cc6391d46a
8bbcfb07b4a99ca777206e33b66a9dc07293c881f41df8f256684f00f087906ec1d4b098
9695eb95f6375cfcf3ce8f91cabc9f47b8c150d57b64f7abcd9d02144b0522a2bd48e39b
a08bf10486ce2ada1476760eeea6b9beda2d76468b979d56bbc54073575fd8e63b0a3314
cebc5bd74f4cba6a55f07f9878cb5fa3c8da40cecac8744cdf52e680c75ad384eff3bd43
39349da3e006721b1e152faba3427c89e1e8aa1df9cfa76df3229169fca13cda02aea761
0d449f3f64e534ab9c2e7f7dc91f7d6a6cb9c6cb3b0a44a8b5a3fb46471bf3cd977fa4d5
dd5806b40e2b65160d452a6f8a5613a8ad61fb64613da21653d327accbb8fac38e6318e0
51c40fde770129c06d623f075ddb16d4caa7aaa99065d5dcabef8dd9d0f0b430cf0d90a2
a9c505d05efde4ed216ddd9031be108108a1bb0e632bec58bff15f9e7f2c017b4ae23836
a54c468336e79d01cccb6df6d622c57ff5c74fd1a32c70ecdf468e8e4d192e1170f05dba
d508983a75d78f3abe403b9735483c44287c6a148135a8b2a05163b914c502ed6fad4286
45406d425d1d2e41cd0ba1a75a0d0d9b24d0ec3ce326fa78955fe0e86de54442db89aaf3
215033f78338e21c5651f71d7bb30f581fe46fcfa322fb459562102e8de46b2bfa392ba9
6c88221290ba2cdfb4d07a8a5c706025a3d93c04bf5dd732a5be1b62325941a20ca55290
45d55393a56f3fd99c47fb7cf302c4354d7a578b87ca00f460e1d9f8d16b0a89b1df6ebd
4b3e91cfec73b3c6d8c1b68c7b6a12ce43b01a36087d43213a61e4311493b91a352135cb
a86172cea39f723306d5e30f92b17a9cc80a22a25eac31ddd14016b295db4d88a11c6db4
13edda15be69db9266111348b5a395f4ef7d4cca9205e3862be8e8be55ec6496dfc6b684
bb092d407bac5aa52291dc1f45b386a5fe785e720b1249b217bd36add14b0082b713842d
c05c1650406f77e350e3344b553cec8af35088eccf1f5ab674c283577aaff7c7c990bc4c
9ab19539e864dd6c5d1fb50e7b3a50b02f4e871764009e6613baa3af07cda81fb070cfc9
5b2a25b18bb3530fb7e4b48fc0da799944b74b03f8c6749537c39bd7fd53eff8d846e0d3
5c3e02516c92344478a96fd9cad42ab2fc9751dcbf2d10d46a835df39633498add5db0b6
2029fed6100b2db36d854fa6ad325098b53100d46950222396fce7b40c3abdbd8e758344
5f259c4bd53225b28ea9997c2c438b9cf04fbb07faf2f2c94aad34731adff8456b446c91
95459e35ac28e954c1e90670df4239d3b9a44166f450b083966dd6d9d4da695832c30168
596eed38bf508db5aeebd25e91100f43380cf23ffab6b88f3d8cd37454f847a5d374aca4
311cfa3d51381034f747e573cf16a20be4b7d4c7089e1d39e642004c4fcb543d4acdaf28
1150add71d0b54da52ef0abaaea274da048d0412089696258e7f64ded143b714baeebc97
773de52d5c4b18af32edaf4dbffd890df1563a1c7b73d7351f556f3cb2b46db4846ff1b1
0375f6876881dbe4ac8e42e4868e0b639c0b7e5860ab2b018d9a99b65e6137ec2b794bce
21df3383fa9cd8355daa11c795b0c792b96ee46b11f7b8bed303b481185d189cd983bc39
ba666802643806ea1fa8be945df0c9939544caf2354fae152311eb181889bd62ae79a51a
cdfa6ac1c1f5325040cc35d5ccd00cf304857330940f9fba118946c464c3cf22721c9654
3bdced4db1c48d5ebcfc17e6c6779677c7f96a3efa887ab5d6ebbc6643c14b69307bfa5e
eb2f18ea3a98793c66e21beb63afc23b6fbb161eb7d8231590656e838c7cac81a8cae0b1
22a278ec07f51b3fb9d07d9c77a252e1c49dd4a0bcfdb31c796267eba3661f15d5609681
0a071068a890d677853c521d84ffeabb320a533016815d9f07cd27d107ce6a70c6d02e8b
fc12f3cec4547945b0dde4418605af74e2b5da1de19176ac05e0f64dcba0ea1a8416eb99
0523e3044fedc716f7e64870d7851ad120ccbe7cde277996c2efa27f695c87f745898197
f2b5d420369ee4e2a9dbb28e3be007bc194a3cad319a2389d9f2ea1ae6b2f61d4b27e5c0
2b64b5add036986b89fa4a41f175a38fa9978c5be7448d97233a09e0151a63f31c895425
4ba833a85a7311ec8d1b0a862170e9d3ef0b3cc794b1b3baccca891b360b36509a628d84
e87227e3beead9930e346ce642ef4a035d3e6de3fcbae5f72dce573ce899b0471e68543d
810dfcced4065878c9cdd4a0c45c5e4564db7827533bdf78591c1d94494cf9b302a0858b
d6aa2e8f9e33d3c27f84f4b4629c0260004e04bb861ae9231067459aac37f7f2502c4506
038e472bfb4101f0387b6747967609833b98a61808689fc7f37272c8e3365b77d821ddd5
e8dd9c4444a7192ce1395dbeefc87ccb9ba82c840d062f459855474422435b9467257d0d
d923a4240179b8ef87b757cd64eed36664d82ab1e68751994f0551f0d6e9b7e26d9b940b
a8012dba77a0b41d63ba8eb8d84ebadf87c753414064ae13695a29d1f0f9eb864b12f787
93baa25f0277fda7284551dcf32bc9b753b46797dd0576044784d1ba54f1b8e6e8a43d1f
7100ec2454c0aee2a779edcd1165f8b335548dd83a5d68e948c199252abd9c312a1a716c
b224297cfc2f28d4a567e3bcbc28c5906b2823a624ea5c872b1ffd0ab14a9bc8e5072e38
134d7ef4e40d50fb2d8a6fb22584f90b0c4edb55d8e6973d3890ec6a6a6329cfde2a373f
fefad44ee331ca7d31b9b3d4e820964684e341a3db064839e45579bde9d25212e15a2efe
0013d803663d3b44b5e4c1955b3e9a8c930cd1078044adc7a6bd7b896303ba8749652b2c
6aca8285a6ae0ec678c65878329a0865a3cba117eee17123afe2bc8d1fcf9b0373b7cc48
d482c8410082a339c959632084fcb3680b3f8eaff94e135bf84cda078b7798f03f173b19
8e897bdc9051876b9cbcbe0b50cee3cebb8c000d3477678b5643960a9faabab44b7929a5
e38f8831f3b43d97bbf11d52b75e7f0e26508f52b8ee0a28d25853fdf035fca79dc09a8d
46c70e56858db0fe8c01b7ca4a09b80460400930cab079e892ed6e81c1d5685e8215effe
33bf242d3b5d3ba26c428bf27a1a0b5e515815a8e180933a617ec1169020245ff8843a45
2b2aab9302ea8163e2618bbb59064d50ed5165a8c58604e8e9fe298d204a5e5d3f5c30f4
5b1be688c2d1d59f6dcc8a41c5ae54f4c2278338e195cce14e230775f0d2659a41f740fb
451deaf76367a95930a509a2dc54cea7a1be80edbe73f495163bc05034ce9a53ee57d855
e8d4b55001072e287fb27c744ef7d15763dc898a00f6846a45b633e4e8ff06ab1d431036
bcae921c59e606f6ad2f653a3ffb319ae622dd3f77d07f31e76852798424a165c12342fc
2f37c87ce67a81cd797818d8de335fee4ad54f809cf58c3e75b0c25b66ade24949e0e72b
fedf8b14e76802f67e8e67f176a542bdd58b2e3ff3d24a3f1c09920e38fd943a076b21db
a9dc0b1cc7283f673de4ea7be0513113b09cd2fad1de023d8affb9b6dbe16e4c13f61df2
ea48d5672c8e2acd0f4a209036a6986e495f192965465eeaca266cc6a468471edff9051f
7390cfbba93cfcdffa86a24a09bffc329f46dc26b045f22f3c7cff15e3147db830f26c58
65819197a3936662f8b9fbecc71a160e4bb6587383781399d44a762d902d33860d5e14ec
19db66bd036d0414f01d22eeff6a1e6674b970e5027a94c3b09234a20f2d5b0f30eb9e86
e16c5499bd787a0d55a7b69e3950dab55b2cdbce31e96a107dffe0df430c0f42bed2d27a
8477ca63d1e39a82855f732fec293082cd9b67461df49e48eec4055bbdc39b1241a9962a
3cecbf8f1c828a893e1984298c559497189cdb1d9e73e1cb427a2c92afeed77398fa4629
4d4b9c64ce3f40a62384478112aa1e5ab3c3c47a1f7ff66690d90f59f15da5105a3a45f1
9658747e953eb83bdb3f70c4768d7d7c33400c84f975ea3262c92a94745cf950b6db5488
0e98524c880bbac80b2a3504bbe3657934800dfc3d8be7b56ebc7dccad5fa2fc41b2bb17
b86ccd41a7ac4f1fe001174ee8ada61e876bd0ccbcee3aa153ca4425443268735dcbfc43
4a4b6e7033a55a0bdb15673617df72b30a97dcdbc45b019f1e33b2cc59d3fbd7b9f587da
0441842f7de92fa0b97ae996160e7bca501c67c17e43a328b96863f4cfdebc88273d1fb4
2f3343ec3ec58053fd7f3fbe6a557ea334cd2d223736a6c1c86d5916a3a21e570ba877f1
d6df68e517048d9cd5978512213209d0e979b800c4b4e5c493de2f6a23dc48d15eda8682
105e230c7f8320496846acc6096c727033c01a6acb334a5da787e1c14943d4c9c90446f9
761b50d0bdc333fcbd2a30123a1e113fc3ad648787a64582600c43442800f0f61daa6b09
518c4ea196ab6c7e5e7e42d3d465a8d78acd7193ffd8631b7ab76610ed93775bcf2357cb
daaa525cf3953ede0d8958a6f63b8fb76adb123ea1e7f4d89cea4c94ea87344b6a784cd6
a33ada35e63bf8261cce83917c2a4e2157fabc62b2183e30a4fb62136e55fb48417a1870
8a70b3f729727f74be30ca8eda662b60e9440491d83004daf2245825c28e69ed10d40f55
0647371a3acd0f253ccfe00737a89d6981cd739a97bf023bd78a7d7c5730a1c7a91a7953
5a43ff7caa2d5127865f33c46beb065d734e901c7fe86d03dda7cffbdde5ac24d2cf36dc
e59ae7603589aed960caa85d9a24779a6cc6db35717f481a6a9a501bac5586c95cc7397f
385c5ac989517386e8b0498f2c748ae48bb81e27da233a7c01d31279aa6b37324644f87a
a1cc191c2dedbaad106c2f503929fc5dd69fc209dfed09592e8b87beb6c0714b50ef5b3a
4bd89a25e2069f1e7e9f5aadfcd00147ccc7264b4ae5c87954b7c1830fd44f934e0dc3da
ede47ad01830288bc22435ef0cff102959d77f920e22739db01fa23b6a785e93a13bc120
73c29da01b5c63fb415ebd27e00dba7d424322eb119d91cf9036b56ea34682f3e1f5e382
22065c9e62da37ae28ae6973e14c0520e647f45c61788d01fea5c306bcd28be9aed07ed5
ab09a4c58a7a025d01e2d463ebb75e15ae98ead1378578a74cc729f17c8f188993b03e9e
6956b4951eeeeab7ef24b84786eb46fac8f25f648a7c8b982b709843251c690f119e11a3
532d04fbfc4b96ab107425c99785c800dcc5785eca2740b2c4a02df80e329d9c9f70978a
a7aab609670bcb43f89d10fbf3d60e604e34330a284d04643be799d05f0f31aa923db891
b06f06b671250c92f08a862be11ac94a70967ed72ed645d649766ef87451ee1bbad37e3f
698aa7bbaa634386a5c14692bb0b31ca00233d8f2ed545588182c7360c39ba08e4e05c1e
69a1cf1b4c77c1ba1f39eb460e960efa4f3d8ad3036908db2149602dacaaf514ffa16b34
7f36c5b57de7692d7b1865de85238cc8fb9eb3e3c439cad5b2d92c90e0bb4f2297d53d63
94ce083f4428311b809b6b8ba8e377adfd563695724e4eafd1c3a61b50ea404c02cc2824
552899efc7d76f9f962bdec627503537cd1be969d9b0b0fdac5268c8d0702d677ba9643d
6f3287a486f30e029fea6e5e3aca4953f15fd63be83f998a8db91c846d36080963860e0c
ef4955987da4eaa4c149b56ea3039586b97d590eab9068cc045965989bea038a5468ad15
ca5d583f7727e736308e6c3648d1cdf8e83eb0d524435a6b2b3207b1fd3a36c7e112d9ce
c929a94cc5957c0a1cfdb349ff0e185819b63e481d373bd85bfc368f5048d1933bc9cd78
a0943d5cbe0edbbb6643b8b34791bd3f5d051b270f1a07ce2f63bbb197d77084368109e7
6edaee5830fcd09d87b290319dfffaa6fe2f4a1aa2be9916fcacf09e3d1d2a08bfe36b44
9ce57520d0466d0b14d86664f335ad86ece6f6b11b8c668a2890666be590b5402fb94c43
9e25026ca05b70b0c4108341fa35ebc881f1af83ef5245d769e5c199ed10ce121fb9fde9
44cb08d319f2a20b3e0c70aba9cea1fd1869212d43dfa0b5c19e45f39a0787f3d2387124
6559300e08b5773e28fd18010e7639dd3517483a7c9dd2389727d3b428bb028e60e5f7b7
7da8aac60e61c912074f199d5c4c5e1978ed810c568b031835cc1229c5c3a971bb666cb1
ce7299aca5207d2b3a54dc3f13f5a5558969937dcc87c378450251b489fd186845ce0d03
da36492c5cf5265214a5acf24048360b8317c63e077d2dff3783b65aae18220f2366f5d0
38d5ce1b9f58330a17ca9f100f285246c45534b81fb28cc036ed0b0e3d7bb708b9f05ebc
0d2b4ceb013f88f5d9cdb3381b33e72fab7bd5620802136d0a61e74833305f4216377f75
b4e587024fa93e9c756e15a28fab3a59ca312fb8ac2a35f3bec51ebabd5a38e26484ade4
e7596cd16cf4bbcc126cdb7ae1cb82ec7d4d0fdd0ebd9aa1abd8ce7b2c24bedc202d8412
2564135bf116ec08995300a5a937359445ff13c548331a690b0b5d8b8e4984900e809471
0564702f2f927d56991ded5b3813479c299af398c20c2b4177632accd9c314aaed5898ab
f8193aca780032ffd6c889bab597a2585820c653e01522fac7d78936fd00439bfc2695f2
66c61aec2376587e3a96c27d85084b119bcb1ab4c94f3ca59f830a03b0e3beb1d0805300
1054bbcc60adc4d367e614f44287a3adb1edb1ec8b32d3ab72e055ce1176ac95d3aff01a
519e9c8fdb24f80aeecc4753bb4b0aa466b7b54562352e1d1399dad58c4285fecbfeba92
ec59b91b8cd5af278514d57190eb37b5b956c507ba65df4608d143f4ff2e2ad20d1d875a
815c18a9e05e409b5eb37d6d760b1460746df76ac4e6d6607b5d5e220103d4a64d461990
c0fe16a4fe24f92d96fb96fd02dcdf42c8a13b4c9957cfee5ed9c684c9a5959665d5d1e7
792d4ababf34fdf77daf68f868deb1c9a62d3872dc954e94a16098185c0820c6b5e6a564
8ab6f5cfe2c426446eee9fd0ac2c1ab8ed206e81b06809f58dee5da004162e501f801a4c
330e66dfddd2a31d5012c023d2cf236100776ab42a6b7bfeb80c0c80c81dd30551155ae5
8b4a332290f34d8a8c7639d4d21fb2c612e033b25c22c5caea03011a44068a10f416dac7
d1040a4872d374fe289c50326e9a53d64d80bb88febc24140df1728bc2da66f0f1df2ba9
aa90edcbdaace8f6c666f194dfe45f2e31030a961913988cb0e579f6071eb5fe4ffea043
0687c415cd4c5e740986a957ef3270f1cf7a1daa0550e6b5e3d760345b526440446cb7a3
8ba42219ddc25c848853682d4e808cbeb58d2a3511687236b68ed5960857b5bf42f98762
b387628ae46427f8f4ff30e6bbed3775006a4460dbabdff1b8bb5efed3d65ec85bb6e79a
1639f74ab556be3f13ab2d24f578f7eaaa56a81d848d07a2825dc4fa26b91061603c047e
e54ae8f0cae00b096dd78663e9f19a6fc07bfe794ee1b874fac6263cc55810136f7bb5ec
8a576223d896ac09af7cf822e5c79f24541408be8c87c831923a61ddbe9db21b73fb82e9
d8fd53672cbd04da88c54a6f6eb52b2c6b102603a8eba77407f024f8de664b48fe9d1d22
346046aa41fc07fb5372bec62cb3b8527c8473802c1799068d5e849d9d9613dbe89e29f9
712a1dac368ba7bc18615913470043bfc0eb1dcac66ffb9dd5477b212a8cccc45f2f5832
b86672ff3500b9ddbe2b9b1512c28b073fe722b7cb91007dabf8f9d2ef446a9a427609c7
bf3296acc8878cee656a9d68bf49b366afd2a443d7a728758bff44b6a31dd26ea165532d
7b4bd9d68e1af29aeb83615a4ca4c66549d8cea3235905014e93075a113d9b8d6ebc766d
0d9021f144a62601c9d7e17b91e3c367a15a1b42afe30f8dd4e54ecaf8c356b094f95049
bb01149be816989390888389959c143a82194607d1dde1904b67ae9e57d716851bc4dfb4
746516e799b40a9c7230ec53268c1312b5429b52d85443d32bde70a08832abbc941c6662
24120cc5d532d59dd39ffd8233d3938c1b1579434828e7e25e2cc96e9de578dec5487e1b
11e654561222faf966b858329a683b9d5069c30f9235a210f7b8089e5fb03a81c64e7fe2
2672d05ba2cad0353935f92bdc7eb0cb3e2bd9e94ec94ee1c763331f0e285ba84314771c
adcb09f6f12d4891fff8c1a1090ca4795285c3fdbc46f2c427042585672f2e3258a1c33c
151db9e44afd34570ab32203c7cf81e34e2d7cd6f9b67b9502ae746fc2d2bb3d094db91d
8206185b3cc3470fd77ea619ee627c12d3ae1f7cae75a910ecbf5fbafda550f67db07c1c
a534866056de205ed1e56d8765f206fb1b675d6f0160d95a9184c302facd770af0639469
c851fceba8c501978d65b6ebed51db5c41120515ef7bcd9553101204338ae373f3ccd54a
085d4d882164cc12b6ae18642394ae462a40a69d093d1d5b9ddde46fcfa1fe72e07b8df4
8bba2424980f18e2ea32836a1ba65f96feb7f0ca6b43cb4798f6d7502dc91b7950e2e684
c57665afe9b449698de048fc790a5ef3c6556f4cd6df938c176eec39a6ed9e841fae552c
08856eb3fac62ff28bd9f3055bbeaaff0f4f623fc7a15dd4ad9598854bde2da8830038d8
e9ff104c5fefa396db85afad14fcb3aefd8923308acb99fa06374ac56b3371bd3b8aae67
b64383b641e8c5df4deb46c49cba9d66d8fa8091cd06799102aa07b11acdabe673b7963d
bb4e629d599c3b40419fe9482d40063afc022f488bb627deba1623d7e18bef86d41efcb6
cc55c974abce20faa9b4044d80e2f905dbd48bac54a036487af3691b1ab60e8b12130827
085d04a74f96f95a0bb1fbd373163a9018e6af4bdd9c280e7a23afcb21a40e3862300495
2a9f5f2a331aba0c87441d2da4cd88c431fbf7f0026992c2e7378a2707c8cd4582940606
e3706c80102b60ac04b1c95ba7bb80edf6b19149879f1604925bff40e9e624bf81f9e293
5c66b64448268369fe89d3a0c80abbbb364860d74e21d4d8b0cc04b70d53daf7639acdac
b20c92a416a704e4e06e973a7de601ed761354ca410e0b0c73e7208cf278c4f90b3e9329
4afd107c69d024c43a6305bc97643e43dcdf957c5708ea19c75a72bffb5acaaadbf229f7
f6d0881df93c457136bc141e66cd04addffccdd6ba55745525c2f3fb73feb10a4fabacce
12763dc46ba61ab50e06fff2adbd6da0420852a09c172f2166c44789ed3c401196e92f59
cf88bae7ab632365365e009344f06f855e279540b1f3569327be09ab76da59471ae3cb16
51b69eddd482fc35a85070761909e371de6d15164c57d2ad5c82166a96979168a03a192d
dff2ebcc8d6144d14dd10aec452a661d8c11d8be406205924b3ed77855b32d915a181624
5827f29e3ba4b0d4b5a4cf456089ab85c17a4f891ac2c0bcccb8e093d3cd7edf5b8787ad
ff2c0f0ce41b7d3e9d2adcdaaa13ce5c4409a4848a36249b1b97035cd08681678094717b
2f2336ce6748b47bdfe634e07882cb2004eed78aaa90a45745c080aae43a3932cfd19dfd
0c4dd5a1b984ad0ed3c689537989b6113f99dd4732b1a3f0f63e357d15e3681ea76e656f
ab3acf8eb6ca2b37ce1e7ceb8c333ac71824eaefac8c19710aa34a748447f798315f7de2
8a39e71d2af14f593a89b1d175b43ac330fbefc9593c8e13b7f1d895bf5358501254d398
3fa9879d40c11f8d62a0db77b249ac4260fb5bbd6d210be3c27d77e3ea5039ede29c94f6
43da30c0b18ea3e96e6c31a6ea04adf7baffe174d3c36c8be7b95f2e60b805fbb74b3e10
f11adc3e12505f00e6ae5c0d804fe612f756e2bb2073c695bba9e7b6a945bd5b54f35c9e
d701721e6c050d70934c2b18b2f37a93d3a7f4d965f315f9c3e46129bc9ae9f45497697d
3c58c177e7f1b3b7da4611feebbacf9c9d223c067353c9db58140fb0abe4f5a9fdabeb39
5b78ec65765a27cef5d322dfa2bca64a35e2d592ab1ffdcfb49469e517a07b4a6f5c98a0
a3ea3a07536a2cfdcef1f7217d607e3f346c9c72d493c488910cb6c044b2e8cc44c6f09c
0abb065dce0345b9d8b95457ce67718b558e9324cd88783a6fd1ea19feeac563ec972e52
405cf148939e7593208d20e031a7650f4d501a0a637a302f40dbb5a524b45ed4b1dd14af
ff2636e03b946fb25822296462aeac52b6ab9648094b4f343026272df7258ecf6c292937
7069d535e54812e1760ca353133d9fc4ad6bd139d24ca21958ad81036917fad2b2956243
889b0ca00b83ae3b8acf19269f2d357eb9f4aea68b2f20aa0f89f68dbdbdd3d186c003ee
dfb4ad6783200cf725aa6cc3f8f9ca98eea51730f044b9c1a3b422bc86de6bc969d9f77e
73540d3d6a60ac29c31fe90ade96375afc8b2537e0d6b9855bfa7ac7f5e84ba3833ad8cd
d5f179c8489ec5e5fd18ad7674666c9c69b2a6c3013aa0dc6ddb20ecf12cc88a335d64ef
c2c386f17d7347b80849f1dc460d9b2052101305c57facfda20a351594f11468cdd49b76
af2c0bf1804aa6805d0c22a2f1817dcc4f40f906436297940dbf4d4ed3c7f34aac8e88bd
083bb33198b11aaed1dc95c5687c07fce76409c3fa382c156e9a3229d293967b2c64d1d6
7d6fb05df7a6bc3ade669523b32efd3fccd09525c5dbd93835f0cd7a40a6c0251188414e
083162b423c78e1e5dda5d2f29dbb9e00c13086d596d7c821c3d766b79690d0a341856b7
829e7028895ec6f59c0e7a7b1aee9bb7f9e7f1830f1462c159e5ce5de5a641b52b83d45d
a81a051dd2247f78464369116d296afe7c66852e40db8de288124cc46c5e1faca81c9faf
7fb08607e547978d4a10cbd63691975a6727f073042598229f7f351dfc0d1b289281fc7e
50325286a0b500d1df88fde75cd7af97a2e4fb14f945abe0b0de38b14360538d1610c211
21152670efdd3fcaae836c5f6885e1cb38065d469c67773569124f28d4e04edad0ce1aba
47bf27f2f5b56d27d2dd81a4d3fa0bef528b9dbb531f9289fb98fb2fa7bfbf2f5e67afe7
304949ca8b76e0cabd98a3a55bc346eb10ef7915ba346703b2394cf1de0608fbc2a96bff
8ed2dc9620fa0b8446c2be48d046f607b8e9124bae85b87fab9c46e204ddac4aab9558f1
aa0e63542ab9bce168f571cb719a5f038bf5956a5394c096ed5067d910fee40025034669
9af1db93b149501dde3a5f232ca7e18f5416f5bbeef939b01ac4427c650acb512e418d27
9b81236303369ee4265c40e73623843b56a39899b3c071bc5593dac6d8b14fc6e5314496
e08721204c901e5bd0136b07b1c071bfbbf3758f612808d6a32d719fa60455d9302bcfc1
f01f883c38e2fbb4c4e383fc7c46e767adbb463c4c90fe4711685004de16205d9731db29
79b3c1cd8627dad601d247d94351a468382462bb33d49362a9b5f041d5598d6889c4a8cc
14be4e45cddb95bbe5ffc32979095688940636d8ca369ad76342f36d942c7ca365670891
91752ee9daadcd8680df3da3c9974acb09914450b734e34cbb594f735d0b6b526a61e2d7
4d32502c4a4d9246da1192ce075f0348c6694a273839b3fba3cf561f480f4df49e0facf1
5079699eedb6d4a75528c5761c746cfeaf29cf51de5c58301ab819bc04c284b8fa929634
0f63cd61e25dc3635ccbbab5add0d452bc57e0dfc0066d4adcdea3efad964b845d5f4587
3d7a9d54e8885b72422abd18a0edc41de8838aa44fd8bc25fb80af202c3af112b0c72853
cc9a8a3adbb79669fa9676a3031889553f81d6b0f88a3e4946a582637665c70dc081da89
22f76fa49b11ef9576f8cc59162643b5ed5f004e9956706d3c167c76fbcdb3d1c8a07966
b1a3b2af03ac68b8025f4370c50d40bc4d9dc0a5545cbe525c8935f8cbbb268690515fed
a05db441a5641899b64399226e34fac1b2913adb629f6cf12074db0571f05ccbbc9887c0
78ec43325683074f77228645747523d948c6d4a43600776cfd06fd53836de1fb5ea32e3a
94d926f26be5c6e59c68bcdd8c7058347f8179d593f1bc3cfb0d29255463f398d1109e4f
ccd88cc9cb8da07db5a19c799ad16762a745ab795665274f3a0203b9925a7e0c917ef7b8
6020f1b40680c2ce5ff98fee14460d141b98d77e55f7d106c1079d0be8942817b73c749a
ab5613f2d8c2d019f7d34a19ce7a57d312e84676be6bca214f7ded72ccd18e1af5cc059b
651874217c3e5a85492cbbeabf5b158df763959c304e05ad0dff52c74687a0c04c86ea22
c809afd71d8e07e0f6721c3bad4027ae7190bf78d37bcb88d19879e81d770450c66508a6
e8de8e6091bd3bfcac422579a47e3f33f5690b0d1d918bc95e9444e54873701aa769a487
4c31e476304b3782caceca462e953c80ded24315cb1ed8d9d791f5179be4708e356895a5
bdcc1a6fd57387838fa044575621c7ee9d673a395621428cd282b7aef8ca028319828120
b96d35d812d6231164fc7e3587c9e75344cfd5e229fc6028d7090bf4a14dce3248849297
c0d35e2ee584bcbe79035533e1aec909694225b400c6f418be3ca0a2f9a72944e16f5e80
2e0637e6eb89764426f82b893cab878df70a041215b23e59f36b6c8658e273b7790c1b31
5a8df4bf8dfe6abec3e8c864093baf9d1380b80403e0f2ef8071b9c038f113ac8b47031f
93522f60e3d6b01f41a29b5de5cb1b4b0a6615393fc639f758606e6f39dedf35734ee285
bc9970124652c8e4153b6cffa92637c74fd5a3d53dc67fa127f4aac0df16fd9299ff6b1b
b058b125b723db3ee5cb1959151e5f922cf66344ec50887b8461ffe7eb11d1f5f8ab823d
eae49ce85998f18172daf7fa0eade4e6a82b27b28857283fedee81f76c0aa67db4d85e4a
f37ddd0a60ee11e7ac16867be4e71a15176e17340bd2f76edb0867770e0b0960971930c7
015e29aa7588d4029eda6a460cc3b6b5b375fed3a4ee16a7a4116a7df5bdb495ded6e001
38fdbd3dcb531b484168d67cf56f38640a57843fe2744b24367695e059e83daeead8cc34
265498492be281cc5cee6bee05e1576ec571240015760a60aecab2d7ce67a75d1237ad48
fc868e3713a1433c409a6e8c293ee5438b9b96f350922cd79c22855fc96284a375aea191
6fdc517ca0278efdb0f27f9e09c5b65acabb3eddfbb4ace79cfd1f3ee2739e3bb21e15cc
b86597b5f626323f5427bf8e19a75ebecf9025c38032bd17580f1116e042a9387145f449
264692bda47f68a0ebaecc9b4cc65a3793c5defcf8655d8b69c8bae6d845cc19cd0e9db8
cebdeef8401d5e1be059db8fa0ad973ee54ec53b18be8969cefe99aa2e8c4b504f368c5a
f9cd54771a1106fafc0f7993c7565b0f0d3b3fa7fda50ca02fe4a8312a7e9483190020fe
3dfb24313aeae7dc6b53efee695866ce0ba0b145fa927db1ddd1ce67c00f640030e2a7bd
aa536506e8a05ca55ee42ad2548175270100df9185a60b593a491f0384aa93fdf35d0bea
b3b9bff48ee36c2695efaf8d51efdbb2cc6fc22ee2aaa5ffb602a25799e7859d5cc93a79
5b0ccd09c8796b455d888c994563fe2603cc822dc37387d0f2451e579db64a150469749e
9a28bb72c9afee2cc028f295eb45926e0966e9f559277d6783f034d0ca0b1d3f532843d2
02e176c8e7967e1d5cbb3a7e9898f563ca0282890a5f55c1ea6a95a1407a55eff232bcd1
6a6d8dcf4eef9edb530621043a1eb6354c88d774f1252e1368c2f33ef22bb6b998c0bf8a
8a1d12806af69ec187b6696efda7dabb1d99fe654c6c6603badbdf18f6da90a6e3460166
f9c51ebd909005c00b68e54679442714bbf9639771e5cf4bf0a5824d98b50f7824c5361e
37a53b8598613987698130867ad45425de9d935bb5977dd9fed426b0d9d4879a6018a2ec
4630c24024a7004593fcaf8f680debb78aed6a2f0b0df36754558d48f0b1a72c4839c134
b19b318fd06e4d452673d153b01bceba1fd2dfa609b3b15d22f6f1cb8be602b899f631e4
da843dc76f8e4f7bb1f8519df94285fc8b802e49ed9871abfdef80d34d77b2d2b48e3924
66bf621d175f4902f0eb896f65a47335cff70f4eca7f46059c478b851d127989cc8486ba
d3318eb94da23670c21d77e2a67dd5da564b5d439f41999fa95f66b9dd74ca5c4353f4ba
07e0f6699f70c4480304e73907a4b491e82aca2377e06d4e754a138e67f8b87dfad96b4e
1499266adc0d62b18fa5836efbeec5ee7854b97102f1d8b4093d8d627e793f8a5c42295a
4044ece3639cbc78580d77ba66b1d910bef6273537ab63ffa76304d0b23cfac6251c5527
376af7ce1640d3cdf4fd930474623faf4cd5d680358c29088343d50896d55c7f6307071b
d428cd55cc393df1f90696263ab976b1ab6c831483b01c0d127e2ed7dbb90cb1454a25bd
1328add61ebb9f5e2ac4a3e37d723ad6ddcb1bd3f27c19dcd5609a551c6adc0a0095e1ba
be44011c69535250d1bbf1ad1128616fc4f64df5af827fc6f5f274e6c4fb51658fc4ffdd
22a046e6f247f3663d79bf2b434cdd0bfa84e49dec298ff204ea94b958ee256df71126e2
e71e1ff3a7b171a1ebcd967621656a148c1ae9e6d9780641ab0fadcf57f7015657ec7b4e
6bf1f4e39e65b56de94cfb462b84579070fb6c7a10f2c94b080d4b6f024eb102b83bd05d
157e7732065259c884dd9003d18bc285d0437e0b19a734f417144ab043fe023bb41a1372
044c64f40af106cbdf4c9d437f57a5991eb7d5f28ff68c5ec53f7d91ecb30118f3e2d8c7
becfd0e428f47d1df23a00c0721e696a299dd9e66e50db45988d3de732400cf79f159db0
5d3cafede87eada2ca4986481f1ca8f16f64a93e5214c42f4c09967d49ce241d0a9913ed
9c0eb95bb78a509e3ea2be4fa5dc2285c60e84e964fafdb398881906bd8e19fda0f414a9
e41917b79443da852609ab5b0e38cf933029da048f41d06eef5a3de175a85ceb5ede6835
0b6508b62f889d6ae12611aadbe078000b1450fbae4e987e4fe08622ccbb0dde6f92d981
58780fab021e8e9ca0a4fec0f76f58dafa3bbe2f7ac6b8a3ecc138a22a947e9687bfc5e0
5d9f03f84c88340b3c6b51659ad49894165b456de98faffc4b7cb45098808a273526a59f
eec67903cb5146510376644db3a629330251c466e05c1730351d74712375f781935f6083
d9f5c0ffe570c169c30e1cd93536202e6b0ffea8c76aa35785899897cef0250d835ef030
e214865460462e9ed0f97f4b35b578577f8984817478fe119e8c8675b23985b511f2e695
065a83b12ed8477c705e33c4679a049218d80db45852f4157fd3ab776a17263c54dd6491
e63edf91d487f36a2fbb5e237126196af9b986d6ccd05914340ccf92c7b904d670f97d0c
d67a21a22697ec2bc0cd9161e0806f26c147758eaa0d250ef408570a2def555226259327
9857ad79ded6e1197c5c34628822458a8d1309f5957dbf28b8a6d4d5626ac1c2482a3a1f
0b60dbf5e8b90afcfa2079bf32a209626dcdad4c9e58861661d750c87a6c7f4ef8f3db7e
201ca25bdaa3c005f253a6974e838bddbd2e31e6bdb90791d0ac36066128e12e0d745362
6d4aed76b9bb9895a9e825e8a1c17861426be9cf9c95eba88916b9072be9d9167f583925
759ae1be56376b5624afe9b653d332b6acf9831d561502b00d83673251d2de495b75d0f8

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont: Times-Bold
%%BeginFont: Times-BoldItalic
%!PS-AdobeFont-1.0: Times-BoldItalic 001.009
%%CreationDate: Thu May 30 13:12:43 2002
%%VMusage: 120000 150000
11 dict begin
/FontInfo 14 dict dup begin
/version (001.009) readonly def
/Copyright ( The digitally encoded machine readable outline data for producing  the Typefaces licensed to you is copyrighted (c) 1981 Linotype AG  and/or its subsidiaries. All Rights Reserved.  This data is the property of Linotype AG and/or its subsidiaries  and may not be reproduced, used, displayed, modified, disclosed or   transferred without the express written approval of Linotype AG   and/or its subsidiaries. ) readonly def
/Notice (Copyright (c) 1985, 1987, 1989, 1990 Adobe Systems Incorporated.  All Rights Reserved.Times is a trademark of Linotype AG and/or its subsidiaries.) readonly def
/FullName (Times Bold Italic) readonly def
/FamilyName (Times) readonly def
/ItalicAngle -15 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/Weight (Bold) readonly def
end readonly def
/FontName /Times-BoldItalic def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [ 0.00100 0 0 0.00100 0 0 ] readonly def
/UniqueID 28425 def
/FontBBox { -200 -218 996 921 } readonly def
currentdict end
currentfile eexec
e8dc61728071abd4d5bcd230c4e186dce095a0ca84ffc476adfaa82124268e60d2cc570c
5f52c10ed4a85a71ce8e5bcf26aa13b27d7fce1cc0c72c3b848dd5ffb2d56d06a1920fad
e4ffa3b35336627e9ed1622c1f9652956d4a424488b4c4ffda9936442bbe0ca749700ae9
8a2bf964fad088f0cc64b7c1d76742f25e90e759aca624a321402b1d20863faf5e04b86c
1ae66f450b1586041815e52f13d2ae539f1725d11489898a83a05fe04d6d14bce66e2cb8
55496ec301a39f6ba632f50529a6e91dd704e817aa996e0400b793a4d0e5775535f5ffcd
1ef3f427c5429905baecaa85de31d02b395d4359cb86d75518512e609fff456f4b831477
85885b8780149e641919003b902059b4c5b9e82c972686bcef5776048945c893a2335af7
2600210c60698b92f1f78bd83df75668c5011f8e79830d8d6bf158ceb6199398167ff1b4
abc0693d2a787c91fb42aeaee3b70925214dff2bb43941d428cd55cc18aebeb6438cbc55
562afd8f079d662d917557ba884864fd81e9d5563b2fba664e01e3095570caeca1108cf2
c6078d650d3ba65a223005eb831ac08a42f6ba195a0d9a3427d76fba80fc0ad89b69ead2
5d277025af27dcf8aea7dbd46d25a324100aaf367efd029811a6d77e135de4171486044c
39815c16baf3bc4dda645d058ee1f36a200edadef281a00749294cdb4e7659349f7a3a27
aa349c64e01ebca8a3b0adae6d11437cf7d8b9d5299b794779207759def76db93e65d89a
43cdb038384f37b5fd7e85caa854f309b95d70a872bd7f51e41966a6a0350e07728eb6fb
8a426d8ef01e0a311459ebb7a757bdc999e3040c3e0cd2f588e15006fb7a4cd48f0d53bf
41be39b9320cf5c5e91f8850d8a893723c033013111bd4eaea2d86110f5a0a79ebff65cd
c3a934cc7b3e8ee2285d08e3ef5279bc1287619ef335062489e5aa0762a32ee0ef111657
58833d93294a19169c4c6ad6e16a21471a3c0ba5cc0af3c3f2f2058110198b3bc7039c59
e38279f231621946b6d570273d59cbe267fd984e246bce4ddb191c7d17224827161eb71d
fa58e8893b93fc097974a389a6c2d3e90d2670bb3f5ad88485e4e5ab551530ca4e0fcc43
bbdd33abfeb9521f168589735500f1fe017d110b90b4bc3b6f13b3a0f606a1e5aab3ee02
64712b161d76dfe63c89759ec0d41358d159456f3577f8e5a6e40de22b179770f09464e1
15d0aeab9f45f7a8e5de143ea02b6115c16d2b530e0f49a881aa885adece58678fd1d5b2
1bdbaee1492475c93f8772114e95d2901790d2d2fc1429bcc97f2920f431dcbba217c1b1
9af797f9639362811fb9af7bf71d8c79f8da17fe2885be8ff0e36d4f105ec965135c6673
55a01c7033617f83e9656321ae13a16a19226d0de0713957f39d51ab8bca7a26ef18eab4
14a6c8520959c2fcc68ddc8dec7238692eb2ebc862e482640ca8fb1b157f92dcdf0161a5
7cc4499b2759addaac43ba0e8087b779eb7571d0a32840fa3167865bd39385c6e31dc3df
c0c317221193c5178f7557a7d77a29b2ee9657b2fbcd9b195df311b83f1d70b261053764
5f2945594117163cccaa3efddede5fb46c22886b497b17d32ba7010f3e2e517fab151754
fa695648c9bb1e3d56b3abbf7780f4004c27eaf1b0399d1b12fff1594c2fbf7c2590a3fb
ac800d7bf42fbcf8032320bc7289e68c1915ff0a37ebbf6fff8b81d466ab28fff5eccb5c
1aad7044e2a9f70dec7a8ff9e4bdc1b326b902f355613fa7fcfdbad4293ef5056f35b5b8
aecc1befbc1714681bd87540363b2da70339a4280d7f681bf743e2f211c6f87fbb34df1d
17acec6093816f237c9c4f70314c67647ab9cd29dfb0f6fa42586a307a82ed8da7d063bf
ceb4a1954e28c69760b1f14a1a1fc8f7d575f1b691d379e5697f2892ae7b0cf6e7ddeb7e
83d80cc6ae8efad760e7fd636297f9dbbf3de74b66f51f7368468bf542dea2243c535c8d
0e180c4e324509d2e0ce0550837a7876f1bf2906b4c4d0ede0f550dc71af73898332bb68
9737861f32d21713fe98a059f96a4df62f5903e3f203fdba229df1df56d2d6eec9e66d36
44aae2874fc57cb35a73f62f584c69dda80d62613c68bd762de61c604bd393e3133a18db
6548bf9c17826f674ff8996c7756d33d4058ff07bcbca57a27704b61b7e030bef3e66dcf
182060711c1b8277fc92853a712b2653ec80ab6182258b4493c134a41b8ba07ea1cb1591
d35a58e8fa648f989ba10ded060b114deca92c452cd59f832275df41e78cd82fe7a3f601
f6259211b408159529b050c7f656ea369c3106725a28faab7f2d3bf369ed27f0220bd74d
358e8bbc0fdd87d137dc0c6028206443de93a43494022d7d2de0b4e03082a377e25755af
755a2f15df09d391eabba5cb2b7a80e682380ab2fa8cea0ebb414da2bdf16a62f6c49cdc
a710731105940a62f511a771552df16417f6c0a15dc14501e33c44d222fe2561312e2d1b
5b0424b4aa46ee5cb90677c74b917b9613eecf6da871735ed8ad671ef428f91ea8d0462f
c4a75207cf97d1aaf37f9af77482e87a79664aea04505307d3653172dcf8e2322734d0ef
8ea5609573b02eefe4df08cceed0fee6e03a7ca891299a50746d52ca233ba3063dda26e8
c94c0f8432dbeb7335b564a04858e375d9f8f79300aed943d1dea8b09b5bef74ec07c03f
22c3380cc1cfcf7b07ff99ade6bc0a027452d603f963c132e6e00f83aaadece4699f78e1
70239c4db9a1085390780714fb6ed50e3e6cb481cd281b0050dc006740917e6a9f22cda0
900fccf7086c5a61ce79029d80ecb8f4a408dd9a0639ce07af49b0ae4e12b45cf7046027
23172883be21f0579c8651286576f30bc3266541e1bce995a97831907aff27c7ad6846b3
9bec40e9f95146da7d8f040366eb2fadaef7e3f5870a6397fa5182b85a32e2031a79db93
1969d35ee0bc72507ee6ef0006810dd736160e4aa69f32d7e3e1a16b90cf30e0281db3e5
96e20fde7d21c26e6c48d6b1247f73cbe772d4cb1e762d1f98c0e48fdfce8e33925bba2b
63e5fa25f24d78a30ad6bf3b1e7369a34dc9dc1476e86cd5d8fc0584cf4525ee19fdb952
b89dc88223f493a53c0df833493b875a05d0b9ce8e65e5e60ccd2358380f0f82d19ed70b
71fafbe2f97fc69f1a03dd9273d43de541d31471f7a1255133a272ec12f438113e5bc68d
c8e83b4c44e782c20cab4619fd1d62b84eaf7dd3836d12dd735447e0dae8ead7e359ad88
0ff10466c79071df4bf549706f7a36ad3a4d6126bf19b07306c622f7245c5f344d5baa54
045d9c27394d1346ebddd49e762e84e037e1e9e0044aed02fb840b90b87a01937b830f9b
830e5b18f4c1395916ad5e998748d12c7e8f003c366789e1410d77fcc21d8667d2179ad8
17a5ffaf269734524a94a8373a4e784b9cae3d63df4f14407fbccc8af03df51ca71a9621
e687f57fd72c7ec81844a11e02c87f60cca90a99e1b8faa0e11b9c19e3ebc3bdfc168731
23260bc16376bc9d90a219ecebcbc6858e9dcdc3e2cce7d279fe6c78dba285c50441480f
df927dc2ff733ad6a7425d8a4c5808b0978307b26b4845ba840d1db5b13a4defab03b79f
a9397b57fcef636b2e11d8eee8b212ef8bbb1eac9aaca54bc71997187e1f330a89ab1cc3
873b7a28a16a05e13affe66bb2ea7d22ebfbb591dbe0844e2b77291d5a2f32c1fdafa7c3
80512a6aaa92e985846fb1a0d2474f777a7153cf68292acc988098f7d7f2d7a1373f3307
2ade4b0251f5bf0447ffa1f0fc45b66f8b15bbd2c03674b7e93ebb7814b35147c52e918b
e6d54d3499579a39586b9579819189ab2b7b572c54852003f1610dadd9036020e49de2e5
1b7666ba3377ca2cc7401729de4d8321b975d365a28d44a19b9c0e094eeaccf62ba00294
991d9438b170952d504ea1f91a7bac5b6bcc9bc4e2ffbb5f9fa58b101ec7702484bc3e3d
c35874d116aed69717a51d3b6710c5b9c10fa7bf09dfcf1c863d9bc6e3861f0168861809
2f43718a3573ee21115bae7fd77cb505341dc046c66f25c5ae2f3299d92a24b039f8e600
a09cb4711607adc43057def5ccf0cfd229c90a058597c02e285280481f7c163e5331bd0f
96e05466d6def2b38d7ceab4b61251cd17a6aa80ef855352b4a11f657ee6b279bcf568ca
85daa0ae14cfb09ef5240dfe501a8c94732972b5ec2cd95c429eff6338c89055fa94e254
921b8ded5a6fad5f9560c3288bd1e4c0adb76ca85dfdf1a54a652899712d167f235b34fb
cbd9b4e9bad4cd2ede43c547a95a3cf8a6cfc6574e47a67001fcb99511330e4675082c82
a6f2449ea53112e2bb6f6539d2cfe77f0a116fa0b0042b06131367224ac225404f3f1c10
3afffac897208f8b90c799df127f9be2566a8feebd5e84c76925199d2697b534d6994ee6
98ad4fac22773de766f7940a0c1f0eeaba5086e6762008874a960e95240d64f634ee942a
b4882d7c6fa7fadc2a2b8747dfec57d3bb96963f39b60bbbda80901e58bea861cd6b1a7e
4b1168fc6af984b9a16f7db77b8ab317bd04ed351868bf749695336e0730e7e63b690843
f73f19b211deb7826c23631853b128b7fb3db86ce63038c9bd02dd59b923446d933701a9
bc04add71f0788c9f191833bc71f7e6ac7d1faf6cde6a7e474a447fcc4530dbbb7b772f1
d456fd36d8a0e1db0a96fdb8d2d3de3c5c5249da671a668a14990e839307f6c400728211
830a16f694b28e3223fb63dd847139fd66367929189e80aa129965cc9451c0e0c84c3539
516d47b44a9ba666c46c7da0ae0863b61470da4057404812869a3840a0161ea7802118c3
13c54aabc5b57583c08ee11c4d6503d136beb2a48fe5a15c3e59bbbe3d7b56283aa56972
ddf65e6c8040dceee16ac846c84672135c2d7fd8485da144f7749351f001fa6cb230017d
dc3d86dee7a3ecfbcbfc8929dd7e8010f76fbcde020146ea679f78c20faabf45bca77598
ae2d872ad948242667937243cc888bb44c9d419a74f683111af05d0918157a66ede50921
d7070c7f763f1e19f0c477ec1c283a7a75bdc9a608eea74fedfe4fd359196c94bc373041
bd21afc67844e5947ffef3a900f9f41f9cfd289031fff0748c75ce2cbb6f339a7d65f401
373de2f2a02cfa540864f24317d1ce97b4e6c86c6a9aad798540dfbe13097f5636910f7c
4b249a611ea1ca33d03751238765816a56bca5b756da4b9e9c4f13ef834bd8a663025057
298f3c1e79797c606df0838354f811fdea71fbdbb53faf4c6a0e86f1095f7197c5d748ef
372efdc971e54b46bf7b41fe92a76bc48b76e185edc700a0f27f27d8be23ca8f59bba6de
a8a28e866809ffc03581a977c7bf3541459033a158e8cbbcd49f82463f74eb9ddc0bb1ff
92a654d28bfc815eca3070969cfd64f89233ec1e93f1b4bd1717b4810547dc7bfd9952e7
50a7a431980dc650dfcae88b6dece528644ee49aa773d4b4132f9b345470eaf42102d075
87a824e8a36a44f5879bff8d8436ce483774418d7014f317ba088f043462e91817c31222
0668e2c8dd7abbaf5e1e47b6da11c8a0a7ced648cd714e00905ec947d3126966f7dd2575
822af582e30131d771a5cf91cfde1ad3e24b5e8ceed22cdbf50704ce39e91d8f1ea79c99
25a7890f9bad32efe5a31203fda7cb21d9686d3c578e8878e6282838b285633462443c44
817f603c716c0bf780a696cc63547f7d13182dfad8dd40c441084e1b13ce04f2c6fe3e1d
718e26b52c86f98a8eef7a1b3cdf580fe28fc9df704a7c052b4fe8ebb5e068c3ab3f28cb
70a7566e24937781d013292cd0711e3a4badb0773aef45df7f67d7c86dcc924a246a722a
9282f77754fe69b45149c944ece26250ac96fbb35086541c4ae041aaa05107e0eda3103d
7df5857906c99707f749259440eebf905c9d8a64f50c9b354b076d59ca79b0e3d686cf11
9a896cec4cf64e71c79e5e4030d77841dc9f1ab9cd18941f256e9053202b785ae194d938
e86a86d2ec1a5b917c50874c2d09a1bcf182cb2e28474a111d547050a5b40c0561c838c3
ca405cb95f128d3cab4483530b895edf6b0af8c5fbff9a72c364e1be65a42031ac3fbba6
d9c5eee80d517c50e12bd79a56c9afb21a4d8067f1724fd41438fda62cf6d6e590150477
8cf7be13248c0baf882094fdccb8a02e740c848bdc22f90a0178c33c892da0c54427b67b
fa2f50267d67f8cd775be0548dfcdbbe4bf2172cb9f35412e1f47cb378e3a48fabf22cd4
10e0a47caf4450deabed7185ddb0c38046613bb8dfdfb9b516fcb1207a97075ae4788968
6d3da1c47794e3ebba7b5f2ff2eb4c962a2cfcc4d32da7f13259728232b7efed86b3f95a
c371159f3c82a92f46e74354ab7bcc2dd2329257a2ca867b1ea96fa428533f94e3aef59c
a250c081ebbdcb12f379067a80e18b5ad458d0cc6ad9f7a76cd126a046c0d9436726c960
4b1bd6c993717b7c9eeb907e4ea142a0de8e9c7adbbcec803b397bf55bd2d4eb502c29c5
5d44fcd3bdc6df23b7943706a402f399211076244fabc10e641a70bab53cf2633331ed4e
ea436af67480c36aaa82dee1b801f6a9f6e40c857649349068067ba55887e869f1f68669
a86d144925695070b08ea237e993949fd27f5ebceadbcdcaf3a0b29bfb300cbfbc676a28
73b916161b6d107f353f2b05d4b5754101b910bd17db9f93de9b80b05e66702b92904b4d
3cb8a24f9b82e908a388a3f3e2da16331c1d385e27ec7ac1929a62cacf54870f2cc622cb
1270c2dddb7285c512bb6156c794c0a6ba444144e5862e9a668e77d928085c4218eec3df
fe7217ac70e95df77e54ebd5b87f4485ce06a481d9ee09e7c17c7f4bfd22713cf4d68adb
a6fbc49c6fa2e67fa1d6d9206fc7c0d2b01480bd523529f836d0c2a81d6085547d3e4252
5d29080d95fa932e55d57ff920dd799302cb26ebad56307f92e2e37156aa714b1a6137a1
b19e1fcc847c011fb83525c43e7f3c125fb6d2d929dfcf4d419f68c704992c9a700de727
ef0ec514868978aa2815694b46c63d291927c918927a5ec2384346ecec62192d9dbb8266
0eb56b35f000c07b6d3059cb90bafad94fbd95603f105888047a0dea78e8eb76f2004388
9f32bbb2b16bdb8441314c6d526032c2fb29a59589856694b2f88b97252322aa2996a903
332d018ad98b8def64764e91e120952ed987987c4c402db8c032db99c14bad6bddb4d396
c130092989a262eed4102b97b997fab4242d3a66e9308ac29caec46e60c27ff5bfe161f9
2737b218f23abe3d243fcff78c4542c7f5875c8caa9f3ef14a56e8328cc5ec8f1c39233a
626db493ec400226a75cd20ee5bb3e20263b477a704cf2902b8467e4c2104c3ff1fb287c
9883169c2697d44581af9a30c761f04e1468078630b0e3d300984dffd97c102322b87f99
15e8df4d6949e446d37cf32edeedaa9eb02065f38cdb62e9f66fbae3404202b8852e47ad
1fc6cf1e5c4900d906a4e32b0962c837620d5793750f8d3ffcbf8d01e76b80d214fe5ad0
f818056865b1f68680b379935bc1faff01adcb35c976f9448577390666c3779c8ae4994d
fb63108cc7df697f5c1a077029c527894f4818a917edd82293d333479279ee15557fceb4
b4c111bd7b1ba5fdc04cf5efe8d380213f1be25be9d8be3ce4189d4212c60fab12269b70
6394a9b6c3eca6de3f7a5b0e079e95891e50d08286237abfc9468ace7beb1ea0b36c1b2c
07ca7934c292a589100805a5dab4c442b6c996c9f536f7634618b75865928fd5c3357de6
90a5bd2bf71de5af2d9a43bf127df5b922ac11a14094cee4119e8e937c8518927fb59e7f
b074f19c1b8eb266468069bfd3bcec91908547757063e130da0e5ab2605a00d66f4fdc0f
ffbdbf58a8d9c73e7fe3880e7c979a41d968ec28b6fc64dcead5ea797c7c332964593de4
23d0b68318966321faa0117aa56c0b4ca0ee77e710aaef778b1471f7a1255133a2700eca
e382440556c59fc0a29d6e30d535906be9acfb995761443d1da41d73ef39e03a9c461fbb
6dadffa569cfe3c212ef4a5ff7f0a23fcf21739b58dd2698bc3377e9fc642f82313a5719
fea2005cb262dc60cef9a0b101cab5b6061cffd972520082cc234a8fdacecb5fbb7d2768
47dc4d5acbfd269b2bda74db0c43a648788d77264e521d6de63994cca61a3c6aeecb5100
0a21e6fee79ed5bcda2f68391e16a0411065d5a2a5ba4cd7bf6789bde08b3f0c63042562
cbbe6c1516c8cda734ba2215487d5cc89a23c2ce3831f90f74fb7d927e07712b8d0dbde4
68130f1af69f822917015d2039e346c399acff7c516f5a5962531d24bee3dfb641627d31
7590f8a2e4d3c25d71e086769851834b48b381ec493bb77fef8ea8c0a54bd90b8c30380a
b1d687ac81e72cdb19560107a99feebfb13b6ef9fd154c2c8f4a13f2c0822cee3c608c46
78f0af12f4772ba4b4d74bbbc8a42ed095ea2620b6907a18f84b3354ff9e9865887d7f8c
c66322f882621df4dae205d1f2a2395597ad7a2c22b676b4a05b513217ada2cfa0d7f46f
1766f55bc4818939c295473dab3792e051a70a0ea84dcad9e66e50db45988d3de7322c59
bade9b855b558dacce4e2a67d97192e4760547cdee075ebc1a71c92c169714a36e126f84
8576ea05dc6ba1cb4b74565164e5fa765da5e79f82b0169ae3c88e4d95cbd4a8d853e313
0e2c1b14d2ec8465ee3e28bc6317a7461a532e3d0d31e05f64b6824f7cf5c153008a7f3f
66f419b971a094d82728b38333a91bf564ec916a580065461dae5f969650807e3ef26dc0
1409e4873405db083b08cf034b0858893d1d41c04e9a0e72a8f7025146fcb78058341ad7
3d4c9d00bbd813267fc316fe5fa1b41badf682dde9a06d2be392f7f6edb4d77e9120b90f
7b4c86fd0f0738902efb52ecf02ee998f53e145ccbc26f668ab090b3abb4445357fcfd16
48274d9d714ee0d225e636bcb784846c97c0ab2eb8f3c91e0a91959937a3e026c84e288e
0c63e3b35a1e73f90dba5949ae733bdfabeb376250daa186ec8a0f2935aec218ffc4518d
5022c580b26cd285b4d1d3dd86789d5439a9654983d3930c03128756dc4ccd2b72601ca6
a889514aeb682f328c0964f11ab95c06191e99350cc2b4787a78629cb63a236eae175e8f
44a65e2d9209587ac3fcd4b1694550684ca5926b8d02e5d9d2496d1dfe08633e24caceff
177de4b95afa035ead398aa1910fce4c041e6265247708f5110b5eb437b8294fc65c0dbd
6faa14bc2c71891e6304929578ccacd6f6b9294d6b97633dbffe432c4187126b5802a016
2448b6f90585f68f8f9f5c60b8183479b9216ba355a930ba24ef7d79bf7c03d4a54099ee
7804df7b5a3f44e9033255c453cbdf44c1152c516fa0bafabb941c3faf4244df22bbf5ed
cadab62dc6d14b44c7083f06557c9e52e5bf7badf843fb8a4e41509e5c6147c6275d530c
e836abed7ffb21ba32376ab22551d57290992d1b9eb1fdb2be30905917af0aca49837ab3
bd8dd57ccb58f16906623e6628b5d543e9ba648fecd513f47cab7dfdc33a0fc9b42b89ee
256c14bc2abf4acce6ec12997d6e357ce5ac09fd3442d47bf63a64dce1da8ec6f5e09758
a40ea330fc50a95e413894ee1c215bb3c5f8144535e75482e49095cbb16ffdd901175e0b
3f0a4aec0cfa281d52aece76c4c4ebc8c69fe70a87fbb8f3f1bd5f0654591d6f7c9d6986
c0f2c4604dfe13f58d3b213627e64af504b7518f0823d3bd7a5517bd254777c3c89de452
90f0f2130c01b201341ef5ff90ab1c0f15053c347558235bd056d595fe4b4ef4af30ecef
3c59e163c4882e15f7b7b0fefd4e5cd25f3ef9b5efd5d1ea00255bb497333b73ed5b7b4e
0ae061068ee91a104221f83503d0c89db4f5a480112d4801c651d4a5378d8425b3f346ed
812906d1ad115d6103abd4424cd35daa1ad150f73748a829f81621fecd0e4dfa2cfce610
e20673f8d7a44a1192eb39e49ecced45f873528de0f168d4e0e9edfb37d2dc38b595f1f5
1a9e1a35808c3d3c099b3136ab1f233e8a680d38081c2598e1e44c143a39f2ed2f59577f
d41d76a82ff7a5baf4030e19172619ea5aa87ba1e01334d3c4d429d0d10ca2d62110ff6a
f73c8bdcccac66e8940076611a2807d70621240beb1af34114f8b2e7b09f359e124e4b79
b1671b24b91ea569f0a1404d0c33cccc2e21af34eacccba1c1060c03e7c77b30cffc90a7
448f94f072d748e2554e9e55eecc91baf97747c5f3d0f6a675ce802060f9bbb48f6dee7f
80cae197463305fe5e74e5d147e055dbd4ff2c9c16873edcecab811c22ab2fda4e6852b7
063be713afa6a1e87684dac3e7fad97d13ba2527b6c04d5610d8ad62282f1bdcc2e8cdd1
3c21b3ba262d13103124d7fe4b7d66e00499e305a2232e21b5f9b4a93e7587a2f8f0fa2c
d78eb37856033817be031bf6bb1475ec701ac13f7a12dd180fbae7d4b0b47a5d61f2b5e1
8cd93495d6d73d2799f1142be66d6b611849051d0d855616e0e9dbd7f08e1483c5b141cc
87f53b274c03e319093a2bc2d55e9364070b1fde4e8a037eab4365264542e9fc3953e1c0
f6e4f5ccff2931434889339667905fa856124616154f969df6cd6c3f1488edbaa8fdf4a5
09041d56b2d5e3430d9da489f69e9718a21f286ca178a49796b5e4ac9853e16f7008bd55
b02195059481187745cb403968419e54c2c3a4c9f52837375f3e168abfd3e2679e36dda6
5b51e43e17013d4d031b527ff9a534fc4fb01ce7efc69b205becf6d58af0e3dd5f8157cd
0d9fa5da0f7fdfa9e6ef95a66b7b69af6aa227e8470e2c2ebd6d722476c371fec2fe922a
89b9fc895515e6e5fca3f7d2c50aa23023bff7d5026ef8fdd411e31c16d86a08e164b107
287666e4109d5e3b132ae95682f288c0e9457907af1305470668775df39e2957180c785f
e08342ca2b2cda99b631316bd91d185292db53ef9c6462c898a3a5487ac68c2a563f68f0
2550a353745e68c88215fa9479d2f5ea4756894a174bcd468ab282a22c8d200ec727f5e4
3f20af91f1f7f4a0bb9505b224742c20737e7110e8ac82c5a03945f3add237d92026fc00
862e08e07fd96e993ceb30f6f3b26e479da0be638b4087fbff2d7e7813b7d5794f19b3ac
78de06c12f56d47f9efae47fa567ebc91abda0f268afb74bbff3d9122b842981282d3458
bee4953a06efde162f8944a53517808175bc28560f713e08c67452273c1151f6d517247b
98d9eb94793559e8e52e5f486776b00d7a4e23bb83e27fc0212048f0b56eab299507604e
4652b2876fe0c4bd865be74d2feea2752448d7457cfcd7c704581be2083e05f4d6c4ea49
ec18f7de49c14b3868d95acc6c0c67938f0956b1b9dcaf2a2277d5cc840224ffecec9629
31dad7e002c5161c482b1f585372ec08d90cac3989bfc2fa79975474a96b299247654460
c2dfcaad4205cc5d755a02f19714032c37b8b3b7f4e39a52fa8b5a65e35917de8de28d4e
84d134a833aa0013bcb9c54b8fb178334e6e57c60fedd6b74e02393a6e27f87e6ce4cf2d
50313b2a3fe4846b794095fb8a879868d17751d0bfafc17a8993741a4c198a9d394ed906
cf810067b3ab132c915307c5286fa2eba082ee851e9b899a6c68ffdce364b682bc80ec17
e3979f7012312cc8b368f80c7eeac87d2eaabc3ff8fc481c08ece2d6249144491129ab1d
b6ba68094a8dc2edf8e502f23663dd3098c9155f31c8a54a4bf9b813887ab3fc018de20d
211d2e1265b20d9f5293bb0154a7ff81fc98add477c4d6a70e51d2d2ec60ba637b8dd3a4
737473456992ab8057381a3354ebf7d280e5613a25e8c41a04bcf4e91467517567c8fb98
9a60c7cdef1ea159b757faa842dbf5cc6354f4e19b0bea5e39a5798c903bc95fd7e05fad
1e36a9ec5cd240ca50a60288f61504485a6c08ba7a9e09c3777e8d0ec70e0a5cb15151b2
fb3848aa7c86ad45d16ab3922b04d8f52c74a2cdde136c44afbec925d30223c98a1d6fe4
9721477a4f3d654f397cafc584a0b865750d2a5b1ebb7d4f9526c4c37578f8a7763e94db
7e06546b40974e460e0d2b3360bd5949e3b23186160bc9ac9d2a2dda76b833d4c9a5c874
6252cc7ca405b84a9436567ad43dc74dc282b09df89c12e798bb943582dbe78e3953ab24
616042d45be41680d57c14abb3bf00c27c013320467e07231f6b2e6cc11f40c3c272971d
f20b98ce39d9434fcad901074a7f261cf14f6211868cd48142585063992b9da3ff8417b9
fb6343622c0740cfeddfeb21b00b2bdbf485a9b20d87f0464b4cf4fcd7ff6e674c3cdf8c
de242486ed11f6f633c9b30c5d2010b522f67bd2f4e0797aa8918320683bc9c8aae5fb46
f78037710bc22d078fd27ca9edf94cf4ba20a12dde50c59645790de0fd37941b46e51dda
91050034db28445b166eec08c51ea995b409383ccca1f10b20f2270d22ef933167c76d36
207dd96ae9b4cdcb463c2732fe07491cc4cc3d2aa01d67e74232ca1c1014241728199245
b8349bea9eb8c7d3c9e869afca067aaafd5f8344896a3860672c5e80ed7dff74c130a785
3a79635474ddf28e58e3473139f7d3fc074db64b91150932d40549957c3253ab2fec980b
0aea6fd0e0ee99d5cea6d3436b2695378c589e179456c674208df99e773edb4a8628c255
4adf75447b77289b8318df97fb3aa04f1badf7b977b07164dbea6b217fc2edc5b1e0468c
5642c94362be4866eeff3d3676b26970cd156d1fd64c9335fa0f4c93a21f25966c551a81
9cbf4bd9bde29b5bf3cf4ae862bcae4489ff8b6d6c0b4e1a3dac0d1695ce5e9dd8d6e274
a1d1d8e732b2b243daf3e0830cf6221cbf4c1be84a68c6fe7ea5aaaa97d4657cf92066a5
54560e8ddda6dcb87aafe6cd6ceb1d844f824e79644246b146cbb23c63f02639d5f7e708
6c5bcb849290f94ef05496ca499404236ebaffdd724d20f5ca1356bb3140cfa437e09739
75a9bc24cff24b7b3de2dd544dc72d76c38ae76b7674c07d6a59f4b3033bed18e411cc2c
4f490310185e95a7c1a4376d4ef3d238b7ed9086b707fa5240093fb516c8e093d91d58e9
b9f7633bf1647ceb4d7ffefb70e632b6f580e4cb52ce3088a62f441f1bc25349d865d984
50018c623c27ed24f9803023e5d70b1875a4fe2d7d9b2dcb4533232838bfbb016ee18c32
30462be9717450f7e502c1dd923a8a7e7c399b86ba5cfdff1af603609608e98fa7ed9a6b
7d815f72eddd0eeba65ddc4f48ea2a635bac632ef0b41086a75f292f290be84b56364556
47c20cd50e7e754d13afcd29ce7316ac659309f8ce9feb3435c081f62395df58d3732940
2a8fc477a7de059daa1cf7eeadbb3dbcfee87f6d526e9325d117977adfa1f18a61d4503a
b3752f54c07cae275f52c4ef81333460856e7fe0b31141b3cb886941fad42166ea3caa1d
77c8d1824e41c9bc27f76115da61ca5adf43c4e22b01097cb9efcfee4ff3b4ffe7bffd1e
948980963e2451c7ce1f53f5d6bbf2244e211a9e5c93259e9846108e9e71777909d29488
bbcb361a4669135e5fca53371c73b95db2a1bb71eed8bd4fcc56819405d17a8657419133
6a7f77826bb0f20416a5d47eb23b55487bd40ec9aa8f971416fdfd210d52bfd874c3a2bf
1c534caf01f3e29d94c0a35879c62899bce6e29d254b334ece244d255b6555b31a67ce28
a9acab55be60d7fbbc623c89923731513fda2d086a192a347b619d1dd06604adfd140862
23986d41384a8a9a990cc3eb89b2aebd5099924766dc5bcd7dded14c07335af7bb660f03
de2b98b52a0b96301297377242aa6a73192dc97bee8a48615ce612ef23823c1f9a390bc5
0de68ffd75640666af06f2ef108aaabe10a17c8475226b0ad8945516512835736b3cf6ac
836dac480401b496a8a7ba9e78d9d5c645ada10e5f1e9e08b6e7d2ac4729c7e263dbb6a6
b50fb45d6d601f14ac9aed43c5ef49786b37e089ee0eca2f36df1c78fc74e805fdd6b540
53316e8841e05e468136adba7d8b06f3fbf0f7dd1d1370d4fad180c3e78de0f0cd4cb623
73b3150675adb2d1cecbead2465d7f5b222e5de7572e74a0363b259c51ea928481876ecc
1ae085a5b7ca666cb60c13c7abf33321a9c7e327fc6aabce846253076676fbf74f3133c2
31ba675aead7ea40eabf9a6ea1d8aef9a1c0359479fad31898aa7670bb4d223c1cc69987
fc913d272dd4375b4124e64344299df59ce08ae20b2c5be5c7e730b76d8be291178c7d53
53a53c81a575dbe205ea67cc2b3e670ea2c1781590cab4f4fda39eb5f85beb4fedb4fae5
8727ef95ba8707a58db799d78d9dff8a582379412ad0441e90016b05d9941a48884d9b82
36e9ad6b9f767f5aea0218180c86316294870da23aca2e101b91e421132df11c20d25ac7
0a9b60ea7a222263d6625ef5cc3e1ad1593408064eb6fe09655f438ee222fdf912465317
0f7a4defc58cd8482051403246955a3b6cec549582fac2902ab3d824a4bf81cb23af74f1
8fb7557c3989bac9ba1d256890219ba37622b0337ec6b4f223922164a4b9acf24248841e
9f5f5ac85f20a1c15c46d6c142a8c698c35461e28e6232bfa776036191ce6c843f669d99
6a0bdcdb710680fe3cfa6b22bf3d4637d3468ae965dbd6407db65b62e9f4857bfbb4ff25
3e9ae9ed0e5b42d559e8d88c69fc0bda957e949dcad23c1dd637f70ee548c7b8f11f59dd
6e46628b3790c87c6434d31618eda3d280aac565c9c0ff773e8f3a39280ccdd7d87dae01
00bed5620840bfc867af2d68c032c7234e50dee5f65fac7acc83ecf8870e4ab961c66c1a
71b7326df8b7b869c7b242b48fae47a9f07822da74e370f3eafc1543c114499d6b5572f0
cf6869c78a5b6fc296bde344893c3904d16a05573db16e32de277e789d138b43cfeb7d54
17ae8dba4b0cfec14c89ff534ff0caed539f6f09cfcef16fd5342a089dec3f2776eade97
08b13777286965166f18005582accf315e45f67d51995af5887bcf513363bdf926341d71
7c541f663f05bac60305b27332bc1bf3a47df7ad579f2a3275d3c78c30424e121c577aa9
ccc332726872230cddabd9bce6c2dd6d68296f58e28a9f67c310beec3f79c8ad592ab094
68d45935aeb33a4c77d92cced4334455c4b4740b4ed9278377189a6ff320dcc0d7f951ed
f1d5d2960ecfe3449a2770bbf247d6e838173a49bfab3cdce9e95e3336b36e6e326b41ff
5f1421d8795f71903ecacc435919305553fc69f2557ffe14640ee3042884e89b49fce3ce
d3f678e5422705044b22c0a33f979a336d808d6d40018d5218bc13f8fe8a2fea6ee2573a
3f008a8fb3c721d7919996fd3dbc8c460e227ff9f16f56e1ff4ee8541253acd2160fe10d
dbc6cbbc553a312a8f067d781aaa625aec3a30a77f834a35d5e7336d2edbaaadf390b4a9
1abfeaaa51449cd2a0f3ab8ff8f2e44d82152ed52b4a45aa80c8c02e3d0951299f02c85f
6325d67f1e5edb4fe7fadb8dc379707037b38c2e27ec68d8441dfbf915012dfe6534f72d
6f6e9e6eb55e2577fc6d6fd8b02c566fb7ce29e5b88e3e78bdd7bb9f19edbda47f68a0eb
5ba62c8affe0fd109c19a72fabe99b9795f7745d3d72964718a0181a34a0e92c7401c439
b0d1a892c7d0b78a959a4af7358a2a305348e8516a8429d9ba5a29c2eb6a3ba2618abf8c
a4331341ea59f3767bab290013bf08e65acad9cfe4bdcaf2de199ad07af76d0e61d2a98e
a0e151e6b456f670fee0df0c18c0a98859ff5a8cdaf164d85ffb17f821e1cb637133088d
ae268341e0e44896494b4eaf424217213749a18f82c207cbc1e003fc42dd406564a77589
7707a9b558d12b36e40d9639706dffc416bc44a48abb8d725955252526bd1fa90fa7e0b7
eb27fe0f9a0ff90c2b8062262a8f70416d7c02a9b47419fe4effb505f0dc39edda2eb160
ed06bf93cf4df20b8b2dd97daaf061dc785d3e63aff40fe3930416367777c3675285b7f9
999541f029642abf1203867922d872747892b42589c01393a0bf720c2b4a8757aff10f9a
1b6ce7bf7a3a8bdbaa1828b41dfb76121a3c45339e234b2f50963ce232521b702712b026
ccaa92692a55066d7abf66e2438d8d24206d28da39c481686bcb138e9b34b58f884f207b
cf439c7003578fcd5e18e71c82a75e4127e7e0409ae4b6b205c3721e83a0b8e9b820c5ea
bb326f4aba345d88ea97042556d2e98260f87c1ca5c100d88cb233c33d76744a53c319da
79d642801fc7d9208b0eb173b627c4933ae52391af58b46fe9541a4ac06ab7f127ff7737
0a24ea9468c6899daab06278a5cd2b7fe684b59c23b5b50ae037da387367d007a53a243b
2e8e81461c5f7416a496f9745bb2062e809827d5cb8d60a19db1821121d5c2b87bd65152
53711ab2f31d6b8de801e6b196e4553c84200d8188a139dea56f7f87bbe914b889238556
03744e39c7d621f30d152ec4ac800d0b9cd914e30b7c51499e80031e38ac2f2c21b1c997
3aa663a909c2b5d7d56ba88bbfa21dddc405317840ca46dc130c04691ecb9efe83debce0
12eb956f5c226935288861c218b0b4a18e8144fc231f0554d546b269c71f3d996a59e84a
798117beecd6c8bc5c8ebe801127b0c355ad7e57516a02ad10a755721aad0f779cf07bd0
c51315aa6da34c15a7f19a9e4f527b2a46f4099b0a85e3095a32c1d756edcbaba4bd3ddc
98937d7bf51aa2107825f0ff22823f8fdfd521e6a9535747068aa7690e77a87a0bdca7ea
678256e91b8b662c4c6f8e3cfe02b8b7e3f301cb61b0ad6282def5e5efce7bca902b8659
2826fd3a55d51481a81f4c833792b1952eaed7b880b8730425de46daf8f5c5c8dd5dd2e7
d28026147477de003fabf76d775fb75a04019a7ef4fc7a2202c9a20918736dd044d6f603
e0cea067165e82202fda8f2b6a6015c8081207e2762703fbf63a6c913b03dc209d4a73b0
b9c6d1ea2e0d43492f4a1ee6c2180476792b5eef55f221a0a3072d2261d58f38e3d5c9ec
c9e3bee9175002c51dc7139c0dddf1163de6f19dfef76d9b5ff4e91f70d4a7308a641902
bec6793dbdfc7fd8b142f9e10fae181a7743060b85261e0f795ff3d089bc52606234eab0
acc7a643563477328bf796352368740ab885439299c9ef0148bc152b3af003b50610301a
74b85fb59de3e67fa91ec14f6a186d253710299684cbe91abdb6a762794a43b29f120308
25de88e3409ab5931ad5220ece1366014a11956702031fc024f7313ca00729b3c5332681
0de64d6fcba1db3d52b6cd1c16b2d030ea8a556a4e2c28a0701ce25ed756f47a71046405
03c53d52a1c6687af04e71ec5a3d8ee4eda911f93b748a640c42e90a9e138c610cbfc5bf
2821e55e69d8c4c6a78f40cc6541bac5738c3899ba21e5bcaa413d7ff386ba1c19e6929e
264514003124ee3fa264186fa703a8d1341ea8194854aedb856c78b59013ad9b20293b8e
25d2dbf2b4537407c649d2bc2c46a1d22009b134511be98506692d796837652086708287
61c0ac9e722d1cd8917a1380ddf61374cdc36d4bc1afd83dda038ff7d826f00df97888b3
3eade7b212706c8d287b86bd02a29a61a9bb3710db33c16cd36f1d861bf6699ebd795706
32f7287f92677b0d3d927bfb74e8ddb41da9e4564b5650a1fce6ddf27ad49799c18ece21
5689b64789c7b93afe5d4c7455bdd3d72e35c7087ad89db87294ff6eff801356ffb99c51
a9adc8d388fc0b4ef76ca2136402f53e158d4b03560c135b781efeefd0b838ec86dc2b57
a4280c836f027d7af4b29c9a262ccecbe291fda7bbe09db2c9bf0bba5101bfb5b497dbe1
c25f8280c97f520360bf08fede231186efba4041a12d069b5a29476fc168ce00c8aa223b
e3dea540757a020a5ab37662cdc31718409108c91e1c76036f3663a6c47a69c8c728a7c4
73b79c3525a9337c3eaf6e2c6bb529d46cc7929fd40ccef761637ffb1b2f32255da35c08
d71e33d184dbfca3b1ed3b43f9d6aac3f8b2170141d34ec056d9a6b19a06a21016330151
4b84df135e47fca6f8f23bee944c4fd1fe257d5358770be5308ba37323abf3d165e5fe6b
b791056ff4a538a6291162e5be719948e70cf8273d5befdbd745cdce3bd06facee8e4ddd
3cc531164f9bb51a8c19541a73ba5758e3082fd5d35bdcd5f34180e0217e5ca8fb2b4769
1e7593980f06a8f440a92fe48b063f96de8b55801f66651b630b5c7ac244a408f34b6ee3
054ec1f212c8dc4c0b07b0a0d59a62e05b2cfd8e6e750034297e327856d939f13a919db2
6b8e13be2c4b6060b43644f88bf9f10ce1266a9b7db9b94c424b7c03102559ec1600ecbd
153dd13b7a23d631983aef51ec8d3b4d951cdb6df47d28d1f600d80519150daa64c8bf92
b2ab61d7bd4e486e7485acefa3b59b5c5bbdbaa41420b4eac7f8dd2f62e88118d800c2cc
2d0e7cc76f393d6660c2583a5f7fbe88427288d1c1bb2f5eff00f62f8b21c0e634f1b469
68ac93c9b3f88308afe469b52c053ca6b1af7f6c5796e42b57413c9d942fe6b65044869a
be79754214fb847787d8978292469f2fdf8820fde2fd6a4aa6942de77dbdfd13cdeb550e
c0e351516d9762df4394ab7413466f410a8c8db38a3062daad94e36553c88edbdcc26249
9524f709f6c7316a0d445c398c35d4416c420caddeb43ba6708b93b10eba844f91015c43
4f067f297dc7b0ab4f4cc93eb4bbe4e0e71013a8981bffb1a2d6d05d116e045e2ab43ffe
66f72acad04e383d192218e3918d31eca8b163d107402186c8656d101b4e209d281ef772
98141eb59f01dcfd78b31ba16dc192ceae9abd44906a9543125df5792d271230198da071
f4b6571338bd777b53f70915221be27ff8c82b7f567a1e21a7d266e5227ccf87739c67c7
1711ee80b24fd44b82869fffd4610796c1ab1de6c3cf627c309fdb1534bb02f30814bd8e
511564a0ee0e73265390d97c5f59b536774d845c3032701c294ddd0136b35e413ee44487
d13e25bc0dc8538cf2b42cb0a28f0c8cbdf4d61877437939f07b96a1a3502ceaafab408b
d098dd39ef97bd8e52101bbaafa411044afcb0c30db8936e9f9077e7d13615b32a4fb851
15d23415ccfa2c886614b731cac16cd320b552191ce2e9885b1153da926f24fe221269c7
7dd685c59c31dfb07edd6f019d45765ec87525a044847e63a5e148efeba75d6b47af3658
d09f04c064ad149af06caa18a5a5a1389dbb026318be5aa91bbd6a246bb19fee02e5b9c4
0a64bf3967342ed1e5aac488d67b99ffd1b7a644cd5912790bd512f084b3469e07bd9388
b7764cb12c101ebb68a9ffe210047bd4cbf0e9db5cc401b36f769318f499dbfe4e4669a9
3bbc2d0684301fecd46980b3bde2ebbd9b6461752b034828f54054b519ba3f26fdc1e213
9f266ee181e3694c9e7eda710b1c8527011a77c267f734bd42f745702d22a439544920d8
d1a261fd0e062bc0d4ac21fe996245094802a879ca507556e6e4f191e1fff4d0b33c6088
83c9f0c120337304bc226a3633bf2b0ab1ce4339c3cc9bf67db240b742376929a7fe865d
6d52ac599d1c5f86b33e452711579a01dbbd7a6976fb0b806c2af2a9aa830815509836cc
fcba87f47fcaafa3ef691d579ecbab91d996542c3b4c81d7b5b8253fd98ca965ffd22e4b
290d75a347d848c865fd0b1987f9e85d04dbed5b341ae24429bf71aa27cebbfe4e005742
21613eb82aa2d6f33f3428765a27bdd6a0ae505bb9d378f0f8d6dae1dd2390764bd0333c
337f4f0249d7ae6c9a4faadb92c51e20e6c2d16cc651eb85d797ed1f401e9a699d1b9f2d
1f9c02d745fde924e0b72e5a450a0d472889d4713ac2c3fdb10e1c49668f0f18d220d7e8
a0b7fa3279f8f6e96e4539a9b6d9be3b3126fea6e6c62f11d8d7034abaa08a1ec1581681
0242fe9013f53351236af92d15b00ef48fd9f2d35d5c6889f75e1d9f475d5b6e28e9e513
55c5c50b344de7be7a8a7412c49f5a7c8cc61d677eac68a386a5a271ed38ce57cce51d79
5c467502d72c2e4b0e640f02510163a71a085165201c2ce7fa11c884cfc48e762e263fa8
616f2be133aef625cb69ea1138569e865347f6fd05f2a45fdb2b9daf642cf98f9c20318f
950feaf14c146f1c534b383c1f1ac37e7b6a5312e02d3fca98e71fa1b3b02c492bd8c6a4
d2ea99d89d9d4b037ed59254231ef384111ddf80f1b7918f073db7918bee9bafa67074ba
1113cd3cc657427bfba91cbea9c94e5593c87016505a8dc68fd71b3a1f04b033f677d608
7d0f6628c2a8044f14e7efc72916175903d21c04f1894bdbb3d43dd71b425992d008c5cc
b11f8df33b3ab95baff4367fdae5814999f4dd5c4ae16b74f9c5ca5f7f84d0e5cb059372
2d37fa1d9f86bf9679b71f179ba0bdcc0d8fd78d6bd2b4fdbfa6cafc60442a217261931b
200a298f5a85bb88dba97f0e2d6a6375fe9c7e8bdf7d9a304ad810a3e21daae9fbda9fc5
833225ed399bb06e415c8a5588665753309ef993eaf3b977f83df309cc5dfff5bd490dcb
cee7883f9b702ab4004e76deb763077ca00ee274a324ff022e06a2675c4d8a1441f2ee68
90c123684c171c775410a5598cb8edf26172e562048e314686b2df67a5ab3fedc6d9628d
8a752f59c9994819910d2db0ec2516fa414dedcc5d07bc0d3fd60854ec9fd881a82c9757
25db0b1e2565e21da51e0ad897df07ff09287a338d75c7342ffd59bf694dc3a6221c2ca8
601cd305556ef91bd1ae0ead4e8b389bcc2403c2abc964ba97b6454a294425abe37d6e67
213dcdff874a440d9cb138b46d311c7401d14cc2ae2312d3d892760ec83c48773557af61
803975082ddd61b31e0f264aeae530682a299e33af0e50b24903e8ebae0d3bf47ebb6531
499aae46487ab1c752d29864591a93b55894582ff45177326caf6cbe064e133fb2e01146
0c472f5a8773b4d9d7713cb129c0cd6b66c2dc85d082436feb18eff740261a338488c867
30c151ffeb33327cc68c51c70f7af0be8e5b1da783dd6d94fe30f61eb49b28cadd8606b5
7b44000ff791d29961367c7e52ba69b36178d01720715b2d79b20b9bf8db10c7f2660e2b
b49b1cc89b29fe6dac209946839a26c00ea537b0a5aa9f2e4b9fd034c1aacb1afc46606a
e2b134604c2329c11033e0c145f648462098a8427ae4bd625ceb8938ddd22b1ee2075cd1
4dfef4342162d1a5f00b4e885b56690f890131f90e9a7ca600b936c5ae8549bc421b4da2
f06545a130c6ffca768dd57aca04323a0a679fd4be12cd2b46d1f6e6b6d0d6458dc4230e
14c4220310572a945774b62b32369d8d90d601f0eea6a30899c91b138bd0cb8c62530c94
aaf3470f4ccae78f0987d89f5746a1c2d0e7dbac29c5d2f632a83ab2d1079053dd5774c7
eb60f4ddd3ef33e94686bd6c71af94cd6a7c7e77ca84f217a35e82f998b92bb43ab93021
780a591c2920250f89405c61b09e39d43e34736436fe395c05ed27c4b8464406f0c6f59d
d80b5cb61a17642f42f2ad30bd4dea3d0cb74888ce996fcf2d2a0b049df4160323b6e8cb
1b9e09c1e4c64adf64dbdc5c8a06673e233604d8c352cacbcddc1843c527acc1b89fa6e7
c08fd99384bb5bd47c324081c356862c5ec5c19320d042a6b4a6083f6ce60a313cb5152e
8ad94483524522d0f12673c99ccf28ad2d28ec09afef29cb0615a1b8276b2589467aaa4a
ded7487134c3cc48855a553d2c41fe63fc93a9bddac86daa4e3fda48df478de5c8324d61
36cdab2a26a75c6346b2a984b80ee5b3165c67e349e0c52a55b9518a04d816b02d212527
90eaf63d84362470fca5ef01b423cbcf3b82b1a389d6e6568490056a09c7e3b7be775620
314128b3d900fb1c44e45eebc9eca364c80e1e99ae655cb941c18b3816cf10192f17a69e
6900b50271ef2e9783317a9196dc930cbdc5a771470926c54f8f02b2bd0086c79e4380c2
3cb2fdbd84793f6b163f350daa869b02cd1a959c95302a281b1cadc8104de4ab6ee403e7
6cf8a953f1df7b23c77795cdf90c4fe50e5a92dbd170d8f2b5516c8f70606e63c197b19d
4a7e5103c71d1a69b091fe8cac3b04f0489eb611f2eca33f8e62ed4f1a6e9066ad9d69af
9ca14a942f45d8cdea68e10f8fe4a8df0dd979c0bb1dcdb2503beb05bca9a0205c278bf6
27424d7a6b466b218b194c4bc6d318fe87de639e951da740b3349f66b3397a2cceefccd4
1f93717f0a05f54ee695046a420cb086e477148ea2abd145c7322c9b38f4e47389ce3b61
26425ed588b7b700b0f8a14a8baca02fd92dd6d6f69baef1f3d18aabcda6a318c908c6f0
094f5a8c6e46dd2c44dd7812802f9da46030b9a5678c4c974c900a85e8b8856ed6b9f662
f9532172df6641969620f28dbea091972b76e8365525fef7847577517513072ba1cdf7cc
0df344b7a1b7b2e98e705590e20907623d8b0437e2236168cd17f14754d8554a8b7d174e
64d6b9684d73c52f1ea5af87a18beffb3d9babbb1c74f996f0ca969da3aacf4c56027a17
017070ae71a08a6428a4678989e7689b59c59e27fc3b04718cd60ddb279683ba6294b191
41b8c7772db7a881ca0a63afe9bb305a188e90688dc713015b3769d2d05ce5dbbc476ee1
64e30c64e30186ac715f270892740a91ce4f5222f4dbf03c93287f4f28e83b24f6b61a11
bd4bcbbef9addc1da656bbad47dfd60d8dbdc4202011b666f414b852acc64a2711d93474
0ab664eb352ddb02abe7878c0f2d4def573e155bd62ae7b96bbb309fd8a5baf3f7a4d90b
a099de93add4b04aa8d88228a03d91d2f42aece9b59dd3a1c68b4d44142c19824b81cab7
46ea9a9c55c38ad03085ed8a44995381f654fbbb679561e86b1f601551891f9a8a26c43d
64361df50b0f509f1acef6d5bad361f81370582fa75aae57c4e4895a201f304fbd4f2d52
a39691dd6f5dca6b7b587b5ae8bd9acbfefac19a74c8ceaf273d31bb5b861d9ea4210bee
b8534d4caa757e09d2f24d465879662993982100d24f47e89ad903f804a7df12f5c77731
284f527768132a622c5f483be46987bec37921fbf1cd21abd8936afde0e49c26562fea13
d910d1a2039706aa5fa4f48f82b83bde9fb29287dd40ee1e4a391f81619bf44d5a99be35
c0d9390f75ac6c82384806bf60c4bfbc0be15fbc07944f509f278a7bf8b8d697dc753025
fe2b07474b035b259d80bf6cf6507db0004dcdabe82f8241c0bfcdd1a6c87f653437bf98
d8d944ee78ab3e063288502654c8d92608de2cb815cfbe0d792cfa1ddc494919e943dd01
40c01d337804df322d967d58a734b0607be25173e8d101759b997b3bd3c0f9943fb95726
ce2df34439848161d5c165ac32fd478c2f6d194767b3a7fb53d1fc9897d3c6461fe681b1
d89d8a0c9c1e853a4ed78139570095ee8311d5a7c4cbe8505a9f1014a06253a238f585a0
d63a4c7d08a4396c82eb6fcee206c0d9297df1b54dba700474771dd59b16ab2d1a2d504c
01e0cff990da85c1bcfcf1641aaf2bab2bb6f2b2db83a2e5d737a19fa372f98fcd3ab536
296e6ec45150bb8c2a7f3dac63f64d8a1b7158b2dff7102c86eecd11f647ffced4ae0059
4d16604fd2b46d3a1bc3636eab7db1c3bf07b3e04ba9fbc669f01dc942c69521dcceafe9
1f50f1377f25c2647173aa9db5c4c7a990ebb2a09591f84812e8155ee60722b6ef24452f
3969f6f863008ea4d879e216032ee39e2c86e6f7154d3b77a6c37ff1de0395d7dcb1f9f8
6259319065c1d0e2572185ed5a00f2224f703bbd837da2770016baec459449e4b09a7acd
9c9ae4c3b1cdf44d0d1f59985a187e244f6e6aa7056dc3b15e6217e305170955803ded5d
17ba7fb73059debe2f8bc511674a2fb84c8bb6f1eb22c29cd63b3074e62be2da027e5139
d1e6e965bff383477631b3684f057b1bb39130144e16aa860f149ff89ae27252aa241078
64e1b46ec8537974a658765080bab7e47d81bb6738239c7b9f288c80c186fb3fb0d1d9dc
2573cbeab4ed4084cf719b3acd5778f205518e2663e1fde1a57ee8abbec73b49ffca8759
fb9089b49fcd328e02c53932e5eb4421437085a617be25df4542d6592341a5f319817ffd
8a673163745fc423a39d738124675b21ef1ca8f886418245714552267155d87780ca5107
6bd455cda5f67df829e4f47066c8b18fb6a981aca477696a958edcb3470123d9cff20099
b15ba6d1d8cd618c7e658ebf8dfad6d66d0aa4f02e39beb34a1f6449eb2253401586986e
09fb7805e04a59e7b02e73206c9932ff2d87d10750986cdd3a632343ad58fbf9886f4149
66bfaf0be22d90a38f41288e269f107d6e3c388117e20f4ee5ed0e0592a5a7d7f691c4e7
c0200169a7e894e4b31582d08a6eed3d927f125a6cd35e4b5f0b77bd06635415658d8f55
faaa6031eabc8d336eb7d8549062c4237b59c5e32d23db8d2b4a6a80f395950edf76a583
573b542ae00e1b0a860fe4ee9af2bc32ebe073a4f1a82e068e490dfe641738ea8694d983
6b396c7c45e7794e4fe34a391ad7c7f6646459ab9bfd28dbde7f1cfb647692e40533e952
4404d22fe4e08b37fd00bcb40735bbce875332613b0e0e0e278a0005840472607bdfb8e9
d687087c4b05b89563a28d2a100fd3f6e37eb183c5f041ccc6eeeb5d78ea30a9824094e8
177a10422d416f1af4b593ec3a2b0d8e34f0fbb331a1bc974fa7cb14f428f4aa25e1ae13
24c798c3ee41d82ea975ad2eb6e8aab001754310d0b9e89276c73ba28c219a7a50508174
04deaab41472b1325e4dbf17d73d12b111e58e343ffa192ceb177fd2266538135309821f
41ca5cc05510276606230b4d4445424280cf62c6456ea1d506ff42f9e1dbc987384d2bd0
6312b0e67391212a9b239915527ef3da316bb4d53cc0618089983c9f16120c184b073459
ae3ec8a3bfa73ed196116d60ade6da8c08dfcca4cc758c98e514232e2e98f87b4780e0d5
fc433ceaa5f73cc79c8e09dd372aa6cdb82a079a9fa0272db0ab27c56796105ab4627a21
7f47d576847cbe55e8b05db4a94a1811cca056419706381a6c98a2348b55eaf9117da0ce
043c80d237b710f0e932964fbd6052c8dbaec50157e735e0efccfc1fd125f4398eca3af2
40bc31900b3804dde882a4326dd1ad832df9cdd7a0e96f56dac94f5a0ebaece7e9fa8f70
11bee789af5560fa51ba911b250f8011deef8be32b039c90b7f2b550949830cd354e1330
36d1cb07c80619cabece9f27f95c9ec99541e47c0237ffe9c913e641e5091027397a3709
ea8e852453c3f140731d478b9d1dd4bd04eee2bcddf7803a4531473e67104b5f660e4d3b
2aa48058dd534ee1d590e7e8048dc38c894f2dc7aecdedd2a3d6c3d5a1f2c5e92ee2c8e8
c021d2223bc42f12fcc53be24d2d082daf53c9cd6276b5e0886ad8bb1c57c274d7db1fa1
99265d9b5c2cc1fe8f842c1fa034b1752be864a1d723676c118ea9479b01f65dc77c3c54
e04a722429193c898927a72d88a9fd398e96c63fadd109683496f233f15dfcfb91f9b666
d947a317bf6a051f5a029bd359d3b400808c258bf07fe381b6939c8c108d9eabe3400be5
c19fc8352145d0e978cbe431ae5dbe34b6ff8b7cf2492cf80a7fbe6ae65969dde418b6d2
e06ea6b37b9d2210c9774ef18589ca30b580f157ea990934ae69d1c51993d84ba8bf8f03
732f67b35849c011a7ec67b55dbf8696eaf04916dd1d1001d8da2462478cb3c0296fedff
81064e8692e1a61168039015e44c7afdd81c089214a7c5798c52761d93e1a7b6febdfc64
01ccbb355e2693350ac6becd85729776a3bda0ed1b184f6f8b156796f6897419ecfc93c0
2d811d8bc596344124274a7783d07476be4b4eeb07e0a1bbfca6ca572d74a52907ef81a9
770813df1aa97323e39915db4f840a6895ead628dd76f7005c259583ac0d1e8958ebb859
ddab45c504b0cd1cc7d33d16c7e57d3a5cc320a8ea9673b3e6492ec907fc4ddb59958087
486f2bb314a838d8757e93192d5be6e45a3da9222465d8cac4afa5291e677a41c538e9d3
1cd74f777ee3a3a70d56db56354d56d6ef2c666a4ec95cf8ff28d5579d0da127e85196cb
d6f36cbc9f8750d3e670d746b8bfc9d85a7527213e8fc977180fd0cf0cb8c1b11715a241
78e1f27b5f877e80af39b3431f262de90cbe0f8b0a7837715eba70fe0d598297e8f30bc9
b021bddb8bdb89df33df5dc6264a61ad1cb9724b9100cee9b4eca189f59b3d68bc5b2bc8
91793974441eabc4f3eab1cb874f6d5bf96dbd3fc70c4386564ed36d21b557ca56842f21
c00b2c3b148daa67d8ff58759367eac310fea09f38a85da710ecbfc30848a58e431b2584
beaca913715ddf5e5fdcb47af02b4ff20a9a2ea4f61cff1f83f5c47c82b0c883fcb708ae
16bd7d95ba4f055301886b03a537509b96600fe14b2c8a0c1ebf987f7c0089b051e55ca3
94aae3d5e60019a4dd861c2b9f56e1f17a7ab29fc3db4f81bb31b7366ce212d0e4f752be
1890d9ad76e6eb42d3e7333bee8c3993a32378b255293376f83e897448c576749a25d2be
a885cfac62c67cd1ed23029e34991b6eb13ccbd235fe25ff482fa946ee4cf713fc7f40d3
68c7a9bc2923f405df4331307070da9657673b89279cca7a4a84c87a7620e1072ae4a325
2278f1181d4629f7b08e884c0a26c093bd340f2e1366e25f5d421be4a7dac3d9ec07359d
7055839892cc5f4a8c4c27b170426f28dee4ed909e342e7d702219e84a98ae2760c57685
69d597988c6255bba9fef43e1aee91afa7702281484d7da97e5b91e3ad7eec12fa982711
5c39305a16d61f1a521ae0e8bfad09bdf5245f1b7f37a4b221f6d66cd4793a33371a8003
6be993e1a03b786d0278e0517a4453af21d7450110a1a17e364694d73247db35fcd20906
e91db3580374f1470c9bddbce7a127e41450706c8a46d5fd1af221e81b0e0d0c95f462be
7b08f8fd636dbedea199621d2efb00c977bf7517bedac9360606a6851c2f03186931e1fc
84ed8eb0faa92885d9017d4e5bdbc268bc2a913bc8f0c3d5657ff76128191828a84c619a
1d6d6be86b70104e3c1b92123f361904990df7106142d937bee9ad6c40fb15af809d3681
487634b33102c2e6c53d8cfa4a16f9da7ef62fcff43f0841ebbf62906f4c8be9a8c665e1
4434ab7531991caad8f5c3c202533f230f64ef3de1c2cfc6f9dac995f576b328f7128282
74888032fb279ed808a60cdaac6de703117d801ecf04d4099ef84c7dfc1930c1bb400b2f
f8bdd1e8fa75f4271a06287b2e7af5d1c74b369a3d26ddf9bdce48d969b2e1d6a696fed8
6d486620194095d2ec379cfc98ad17ee4e1b2c4900f42d8dc8fe457b94081818a5aa2635
f85c12df1b5913f3db8ac6f2acecb216e42bcde9cd21ec7debabbacf92c4cb297a7a9883
a1bc44ec5385ccb8d7f0d01a7b3480c348376e3778bc3f23a74338f5d9c4dff1de2a1abf
ec856af9123a1cc3134dda76ffe837edccc260ceeb615af3a6e181cf8e2c20c8299bf3b8
c0264e566e63d7442873166f3dec833d9554810cfea62cd04fcfead75303e464f577fdd4
7bdd42e46847cdda9d9e2d9ba9949c79111223e1404fae358c2435b3b788e943249491b1
c514d8e84fa1c8ba8936cdb998ffde8e2081cb895860d4b2acbaa9925eec951c63af8637
7a8d7161683fc61ceb32e31bee76ca7bea9a17eb9e50943d0ff31dbdafc5165bf31e6b59
2ff057aaefa7945c3c1087f77bd59540a6323089e7ec35e453a6ebfeb240473b0572e685
750727cd4ea2c066551015b4dd16a6b14cf9dd985998f6763bd47f244e7cfe82679fcb9b
fd37fd35aa4b58989aaac8b93dec1c48031c0fde4f2ab39a8c30a2b9f20f09c8c4de41ca
3966c207a6f943d819818e277710d918d2c87a4cea573e54497d41980edc09c6145e2324
e63a841e43c4cf3ff8dd1960286153ec6329ab8b25aeb6ec34a98d6f3ffff0d334269eb3
4d205005b50d6cfdd68e32a73cbaf293dd51d69138f30d2b97218844b612eaf4d21d7a7a
fc7191aa102c2f4cfa8e2311ab8f64f6a5a453a46b24014a3aec277dff9e2e1c40fb1617
8d88d46b4a66900d142a768efc7927e544afe2d24310a4cc2493941614cae95cfca96174
302240b80d0c3485c574f0c4ce34a0c2b7469671a6d57bdac76d1f1e2984f123993caa1a
878ccf2b7ff8acec995c6489c1f56592b23107adcee8264214c0b0787baf10e638d7cda4
a72234669da8a915c508230f010311f19a098d7dcb45f82aa64fb83720c035bb483f3aab
7abe3f21035b37a79fd004d635ff0b187a9cc35f2f3f52c6dc3fba98b42ee9904a6d23a3
7b3312796fb7bab181e7413b57d047185a3f9b3294abdcd49d4a67897c401a70d4dd34dc
94db4c92efa455d383557dc25e36681e0d340752258e70aef3195fba164f9350734f7604
614c99b0db09c29e935347f763aacc8866cb2aecaf644893924cd8e6e39e26cee779c818
4a99732c52c6970d438ec3a5331239397143edf3748925f2eb2648bf16c9a721b9bd2d29
15a8f251b6d9e6ab718a41587576d689c7f7932ccd243563dfb9c8c469abbcf559608123
dc4e8eb2e1bccca30e66d8f560864c407034b8b0a9e78d6b649d7ef57473f5e173d62886
7143632949369fa7b219aca2005bf5f21c63e9e36a5e67819c37e32d26ab83aed2378bf7
6ec7a9465388d4e6c28572a8b7035883e8db6417b173785989a831423fe9f7a8aaed6849
e3accf07ce48168e17237da3a81c751ea05cbb5d1616d54966b5eac2f7b685c6b0da9edc
528171b82033a21355960b915b3b5318446fb6dff051ec68ef921d762786cc98001b09fc
493407be13c6f907e6d1e9d0542cf6099f2c0e8bfb551836c69629d4035d70399b733826
c20f259244ec1b275b253884484d35a3bcacf338d664fe551bc46b23818afd0abe18d95e
b3d358a0a74f9de23fb3bb53316f1406c75181bfb6d89b613569bbdd32255c1f65cfb0f4
e3de4c16aabb3f1e6559e41caae3354c4164998e7ffe7a1e7fcd8c4d48069ddb75abbb62
c7ed59f27db3b5a3e1585785c27343470e9c2377cb1f3863a192bd148690bb8cb0ce635b
b3ff58242f274ad2725758753d9995911b69d16f5330e23abaf56e8b6283456db2e47f0c
2655b83914248daadd4223162618d18a7024fe8f013b5212a7cc43a0b08258b046038d60
a79e74cb004db87f5421a86b6ba26f5e2c4f81cc511b5e65f5cef9d46bf0d7d83c4a3337
b5ab098b11a70ea067b06d9a300b7dda2f4a22a9632b0cd4bb1d80cedc51d620a4a45830
14c45c334a06c7cb5758ae6288257e331eb3e9d4929241653fa4281992b81d6082108a92
43c54bdd2bbaf996e71de1b9ae6927273bf5a6e1a96d09756b1beb510985e62577fb229d
964e5d69621349b6cdd7d81a0609deff7c90d654541be15afc6d051e56dd467da03afa8e
78afc84f0dbb32725953d051766fef01d70df0ce2f0313f275c619c8b162786b40386df6
3b8f7bd1ee494bd1695b254137803960325c9662954d38a42b243106ca93b8ab4ea14ec4
c921fde907e959ebe086ae1276831eca6fc981e7acfd78dd5f538f0fd7812dadc8398b5b
3e6eff25c8798940789c025db7cfcd7b5146ef66ff2d15e8ab80f4c787db06e70985fa2f
70b044c31c336c7fb16876589a44e996811179838586c12884576e3be72208e4c566f9ce
2928e5c3a86becc0aebd1778f7f2004073f9196906223ba3879d1062927e07712b8d7080
6e46d9bf8e94d4b261da40fc03035e8f466f716533368a212cacdf4555b9fa08d65e76f8
2965a6e1a26999f28e58288b65abb45c5ffaa10f8dd1a7f22f23a79108668e30ed6d9d7d
da7154128e39238d89dc3099da5eac0161be375930281c3b610c1911db47b49ebf3130df
1fa79a5d66920bc9a7e0835c01f2cb403a3110e16722992b66a0f08f9bd6e0617817ccf0
b101581ed33d1990c8e5db90df194f0fad1480acf890e4b9653de54eb5565d713427ab4c
8b1f7f13db1c5b830ca46dbe84f148f385d0ee75e8b76aa5f9193fa1cd58031e33c7b52b
9bede481371617cfb9f22f2ec3cc66a75962e4fcadbac17c380d03c97a179c3e004ceade
fce29b5bec7b45d48d6d776211a66e3edd68a5edee6018ef6de5046e4224ff1f9f4c833a
efe498d678e3ed959c108265615eebd8f6c668e1bc59d5b053224942892ccb12cffe26db
9fbb3159de2745c100f7055c7b66f50bc5a86598a3e759b5c2ca46589e84c3df3a539cc8
1ec8d209eacc5976ad901a4afe2deacdc29de0657509b27cc792e0c802b37af26af2dfdf
846be77dd7cfa9b882a391684ba5863d4d21e8c8a985b6024dd0a50ab693410a64711e45
9dc3e424d8bd0ca17b4d8fb8764a0efc54cfce77d585d36cf139a7d7e3b2767609e22746
1e24af09c463cb9f5fbb1cc3b214b627a0d5a2d69ae37bce098b6e48a209ddeb0cbd56e2
93ba662999512bd5a106544015acdbe8c70e3f21764f3b40ffbf2f93d72b53edbb230e6a
e9358c8a5ef933757cd2751416bfce94446c7d02a74244a8a9bab00379906c659f190342
57a3ba3eab6f89a9bc4ee5a29b85443df7a484943d9ae333bfe7833bb051b3f20a858f7d
be04998ba8775d6d1228dbfb4df271cb51f4ee2ce92f0b591f083f67030370a16a445941
f2711ce284bdab75620913e1b1c71b5dbf99ab87fbd1dbfd469eed0f19a89e197d4aede5
6568f8a895713a4027b8c82c3cacc628c3290405cf8082e3088b571816aacfd9f0bed8f5
3f43ffb187f7e7c9141ef6266147a558c7571f4f37a7c4d984705758d0592d383c2de7ca
5fc2c0f57bf28bb7ffb12372d18392aaf6b0c56edf58a3ec9f052e03dd0005788e2c8f7a
ff84894d1aa379ef0bb694bc0485ae3a2f796e417021e5419342f09b1f9aec60b05c0ec5
00f0edc1aba7bc478dc31a6992bcc7e1f626c5a0a38a59b6bfa2fe94999684150ea2e2ef
d8b5552e5c44a24efbe795721fd8d80cd83541804ef6544b96455c731543cfab2a521ad6
f39d665cb73504f7a267025a3a021595408eb8aa9dba9454d9a17c63eba2839ade8a40ca
44678bafed10919906c2800359423a2607d26a9bbe6355f442ccdb3d8d666eeabb3dfd2d
21d43233b6cb1948317bfbd124af6a986fc9f3ce232bcd338e6a45f677628f314fba2556
f125658d1f5658d7bc36dc641a17c1ad48c99ae916a288f3db33fa3621a358144ba45007
e31efba5a1f6fdbb8de46a22d351fb6dd6d0d7e6808b587c7030f06f82d959f4ee3d1d8f
3a406ebf45465dca797569e49bb8d20d9401fd8862a85c7ddc44dca72839d4171d62e1a5
9a4af938991d7c999bb92c009bfa29b7de88325f307257b7e668677dc144fd6797912049
cd825e3a21bff8fb3c87720045736fae20b8563e07152aa9db7862b880d9edf6b54619b8
b03ba335573c30cbd2e65fd1313bee0513894003134d0d05e93a74331acc104a6f3816b3
c11b4e3005a793f790892da233e51528dc142fb61d99d4e22373982675392bb2a473b288
c81549491a59e238e3683ee0ef650ff233181629fcaf18718949792ba57198b52459c4c1
f53ce2fcb89d9fe401292009302cf2795e67782f8216a1b9e30897f0067a43b26d506801
b9f90826987597a7dfb8c5e6f2c7c46e1fec65c07bc004c816841c4fe88195e873950b4c
70b3fe9b2dadb61b5f7f4f61f89bfcef6802a5688a42e176d5c50d89d5ec620517865e3f
a8db34879cbb760427473b52ed4081dc95532710350abbc6401be849eefcaf3b9785ba67
c0003136f2cd65d70349dbd7f50da292a83329b9ede0462b643d6dbb9d6e084710ad7de7
6dd4c54db36b0d89ddbf59ff5873bd0eca4a0925ec459dfe0612a98fc79921cfd4ee0697
490078e78a11b448356886580b4859f4bb77edb09251484d7704e292351ebac98e72216d
d41c8f8ea769f35c4b2c25cdd51ace79591874a1e5e0eb189f40b9595dea8691da455e1d
39764ad07b59cf057d994461c4a49ab3b43cfb610cc2c9d78d152d074e04665630dc8b9b
74e77b37439764c96d9c248c584621eae6eec7af643a81cff70e29a0765c2c39a4084ff7
efd1451e9b34863aa1311f06fe6e985f260fb86f886daf1d8caa9f7a9dc55f3f1a2f2a54
ef22f9eb1ac7f43a449020113fdc9269930caa6318f16fac25bc70f2137af3e6ef3b805a
f757eab039b3b2e58b9237f065400998e09709ebb4524f5b1cd6d153d393fdc96113f794
97b464d856c923c7e29ca6e2b5ed14d8acb62c4ad9d0bed41b1fafde085441de5ff622c8
cbdd68ea0e7b0cb2294b34a2f830f960a7128712c5d19a868b46ba85ec25987543aa02c9
586589a0a96d6bd6e0bea04d4bb9d5881987ea2b01b43af8e251e7baea59a8aef4bed02c
1e5a4912cf22132ce7e824a72aa9dd77b90f278515344287012b5e3776426e88be7f51fb
e542e3eada16d8dc9e199cfac89e4ce91c6bd5c8157b2f4824f763fe53dd7ba85e5086b6
2767d3c34737809c7aeaef0fba256360b04cc1501b2cbc105193fef630b7806f139ee8e2
eb3d5f5c6703c92adabd4423066c803ee753d9eef6bb2e0ae8dd982d22f61ae8a571d8be
d8ebc032ff5c88230cc3f8f3d517bf17ed57eeed9c8c6e308175e8bb569d676fd13bc38e
5f04c3a59d3a071226bb17b381023d7106d1f0f711aa22a3d52bcab05836651cbcfc3c0f
77590b4865e6e093c796e5b5b359d8ea12f5d846f213debe0fad1436ec1c7e1468675136
c967ee6069b30313fd283377d912d56703affc558e126f3cdf461be4a55e2b5dda40c0db
2eb891efa634f1a2593710a37747d3888156e692d5ba795ea722eda8347a33e47ad6621f
3dbeb0edfd45153dd9eb89be446042bcba8bde28268a029e7b2d4c5dc6ce739c7a76a0e0
de848e1ef307b89a995072b9a5400a21b6e970b784d4666543fd5605acfa3db251e75258
8f8f168fd12d5c02a4d67358a9ec11487f5b5729cabba59fd744305c206009b03e3cf7d4
c009b6bc699df02bfa0eb93580802f7d3ed4929f2cb73c4f6024443535701526567456d0
0f3b6263039d344a63795f1ccf4884742ffddd3efc3dbf55e230b7a1111333f5216bcd6c
4d68372fdebac01a3e9c8fe41696c158c7d3c5f1ce721c1a4828ea2573a7ce93f5db14f5
9ad25f563d3ab5495b40ddef9e9b47dfe252e9ecd44ba5d22aea5b57b935f3bdfc6fcdb3
74a08be293512c301be5b91479c39e826f34d0be35cec4ed0bd6594d2e8680b0e431917c
7ab727ffddc287e415e79e6c5c19c62108490e190908db1e980d8b4f1d04c58fb1556978
6cff34036df80c7630405972b93ff13b7c8de5fcbc77b87f5f60cf9d741ac79dbcf7ed48
576a101fbff913c555f209226c12d5b09c1e906646af6a392ca0477898a3d380b469fe57
2319c4b771930df57a8b35386d881e6c04f949362e3beb1052b19956838bf809a43d8356
765bb4356d12bd51e1124c38d873eb106c936c2fe36a652f4f2ba7f6624de18493e9ab30
e614ed4c632530d58aa90f6779177e005ab327cbc86b0031c20496e09fefebbd2522200f
6a4055f4d262c62b7a2da7d434b50319c3de965e6626d7e9361d7e8d5caf3123a8751926
3779b60f317c6e73277b3e1d92b94f2db9b804c8b23bbf5587d1bdbf3c117a2b5774080d
1b10337a093a01101593e6c98cf4bff073810cd0d5af2d3f5c2c72a80ff8a5a8deb6c4a7
0299800391bdad7481817da1fb5d6180adca30b62f91f52685b5ac33c5739aa778e82227
c3b17fb1df1a1429f43b3e4e038e5f050a3953723569c7abe4438c1677ba3e0e48f7575f
be2a332a5a2fb0ea974579893664ac30f52985cde67e675237778f745bd808b59b2853e1
24e8c6c24dfd8bef3d2ca6431748faf632203f8c6fc9b3e7c2801cc46825053cf9a3e57c
1e8110e1784b81142f3fbf1691a39b7e500ea327ef52329f497abf5c35d7a80cd2e3d154
851ada52817f4f702a47755fd8ff9faf121b1e449f6a1b0f25f9eeff5397d81f670fae35
8b840c66d79586347887ee30b0f8f920ac3c57b55b314c7bca4b86f860722b89e65d3411
44fdb88033816d568b9a90944555d88e65198b12d36d3afbb38b8daa2c98fcbc8741aaae
1a7dea251d842bc0284040f18647d31af04166aee3b69d7121b1bd74ec2a0c4a3fb7e90a
56137eaba43ada677825da3a11060675e47f4edd34335d340ca36f7a8e9dc3fea20b564a
4141f6a8433deb96e3ecc0551703922db054b8b52815f06071eea1749c261ff6736bf1a5
a26b8688f5a797ff291c573f58c48f1bfbcb43160e55f221418d0083eba41bc1844551f9
17aec9d92d42fade3d40678974b9b746c416dc8b8a1d73f62e92b39985704cf60130a6f8
b88cbbd4c130be88138f1f257b0d22158f000e1a757a024c59913821c031f8e2a3d5fcfa
8df27c50198e850b6c74d4b7ee5b2f8ec568bacad119a81e6fd1d64a116a0b5a874c91b2
fcfbc180fc8865944c517b860ea58b2e00742ba19e6d7b0cdb7a67ebff4d20919dd47d8c
669775eef81c3130777395cc45319836379659f6adea27792a26dee04b8a6a8991207ad5
ade1e3a87476c28f1ec2461f5463cbfca099d627722469d1c52e668bbda76970e778964d
96e4bc949f07adffa5fbaf08f64147a372a269e8c29d29d7f81bdbe697c388d7a8e1b334
f49c18f90b6a98aca0ed17f1bfae2641f82183a832aa69a204a347cbb7d55343d82211ca
74afb1238f87b99caaeefaa910ac9f9f90128281b46181c2c7f9e7103e64cae1e90dbe54
be2795dac92ae0efb0b948dda8916eb4b1a2b89e13262cda9a7a8a518faceebdf8eafc0d
a9384ee051f244d3b11e607bb4d917a492ab6908d21c0910e3bd9711bb2085a08e1ef0e4
bccc6ee1520904b04737f1f5dfebe86a4039eeb0f470600a738bbc50b10bb253f66c1422
79e1881ef16058a11d643fd72c910a85930b34aecf277e9318f439dc36fdeaaebc881025
13f1d3c6bf16b54d8d4e856123e65c78c048b6bc37d82bbc9a33dafdb933b4c505054047
3ec9af65770fe4422e9027bcbd78f55ed919c34546e37d4be3384655cc73ee89d7e581ae
a2f62311b48c5f746dfb312e50b9f17b1769a2aff0f3ec2a59d9ee7789c500b8095b9d69
674943be1bd4b041c768d1b203aaa0e3c8091688820eee9725a1fc98800d3e9e97d7616e
2f44f48cfe40c6e31efeea9491f7c397892c7fa87892b240e3e47d0a26eb75c6e19a33a9
89b198a7ba02600f3c26b6705d3d5cab1affd85b71acb542951d0ab01549ca7c3700e67e
ce6be1f78d3a81f770ef1661a8d195f714ef2465ce40fd3dd2666d0113a19212f711a3f0
b11189caa8f63d99939bedb394afdd54c2382f19939f2dafaf5e8b7756de4a320615616c
bd9ce0e7d3be0bb8d2ce890bcc260e82f59aeda93a86b7cf663f127cfa6762dea9e5dd56
ebc4be669e44ed8d0260e3858a1e9a2931f7100f2023925955db7351c8781dfd2f41eff1
2be9ffde2422032e8d52a829e0b9d4f422f8fb0491d6c56f56b6cf8b55bafba30dd81c09
fe53fa951c3810a7735cbe34ce6d1bcea1c900a17535e8683e9f31f5a864259b6e44ce30
8bb515cad7ab6cf96213e0e9fce3e3776ad18f84a8bc5db0a8f7b588b47885a58c7256f0
3320d22cd51b246b68280b3e94dfa4f0769c190ec79b0909910c2e851bec2fb374b19bc7
2728a0eb0e3f7466b37ab4f017aeff7e6dc0b6525300af871396bdc5f7c26201f6bfcb91
f3721433dd9a533dec88197177e1ca76e66a1f357aa774705774ff73d5bb01dacdef6da6
aeb4d3ffe5c3c47e9050133621a31c5800d5128dc9419aaf54a3e622c85f809de6e8885e
aac66cb680e49b001bd340a0ff719e1a9056d6024930071f01855db9e3e71d8c3b1220ec
afd884b3e9e181c203363b269f6127103094ec47e947db55e856fa2cd6497b2d9679a523
cb8ba3b6426c8db7faa41c8fb0925c303a5415814b9b58f24e9e91c2ebae2d33f24c302a
6f2731ef893ea4abaafc6f493c6fee0ccbee16e1a4168559d796d9f2c4a12f12c94b757e
ef3eb7a8eb07ef1deef9e52fbfdc1f20e19d2f74326df80cdece4f68b081d6bc727d216d
d699f96dcab3408de1795c322a448436c9603c5656f5f7cc7a210571c0089f9e4bf64c16
77e5cf43c9adf81cb8f56bff5967e007adeb4636230ef2fd4391a1906feab76b0a576ef4
d76cd69c0128df63a06ca554e6250a3c04e0958d4cd428b3e79252560ada343d35442242
79f52a64578025ce910333823020d0dba754632c0f837300adf68009128a740fceafecc9
2012253a17e92bdf689376f540d5f26d84263ddef18c916741e5813e9b578f99b19b2e75
166271a79fceddce75eb5246ff96466b07d74195374c9889e4eb86f824c020788195a6e8
44268126dc8754e0aa32006ece36e74c7f069b09f6228e067e1716f312ed402a0f7706c6
e83a91c21f539a999ad6cf7be8f021a18d3540d14a73ccddba01a0f6c84e1a51ed8cdb99
84bc9181e78f2ef49a26d9bef7dd8db46e7404b4ebf3054db24eaad96f06581e824e9611
c6404dc695ccaa642bdb06e164f371c7a056f5c8f002fc58d22560fc6375d3897dc9fc07
7ca4c07c2a6106362f9f025697242635d048d219e03405432e9ba7a4b1f24ea18f6daa06
aa763b0c7df1b860b3efd664b7d68980290c9dc5a67bf607b8a8eecd106b3425a0c52be1
1ea91b3ccab4ef759cd9b98a1146998a04a28adff3b8dc3a413d09896b0bc32e8347d4bc
8b2bf20e6e3f5f1773f94c63cfb612ccd1415f4a96e85606cc0069a34ec4d6b456149ac8
446c9548b7e64ebed024c0758cd4a1bf8d3a7d88fd7fa1e4ecd5158483c59d9c02158a03
638ee39ec9537d309d3c0d70de0c93f8bd173b73a8613d8860d9e50359224d17a3552da8
f11d2ca85f4705ca2acc9bf36990dce7f52995d96199829a6527ccd6ceb8273f6c8b84ee
71a0fb1c298086a5ebf3cf88aa3fd0fd2dd72f634507e517fc3d3bcc96a7641063e1823b
0b054a144d04e0cb7162ef4ea455e467123b1739003ff0ccdd939e7bae9de00d831f1327
faf04df9dd639371ab2d8755f5cbd49c19009e279b5c1870441fb2e0fe9bdfc5b0a2b80e
6358e86375ecba5496bc4beac72f2e233ff063662e4908bd6e2ff2697e8165898fda0160
a0feee2d7a41ee0423e6c30dae24b8e9a853775b0fb4b7e8954b60921e6a17cd82eca01e
42a0835196d3fb7cd6fe2cb65b31a23860ea9bc350dc26b8630695802d5b7de75d60719d
93ea9f756550e27ab82c6191b072f244c1ce4495cac30344ed649c2d4c21b68374889917
94a508bf83b142df0a8c90554cbe8be8faaba2adf57efaa198911bba0f1bdac78f5140df
908128092bd8a1f14afeb8a7c30b91711b357dd36053819caa22dbb55f8f3bc1ce06d7a1
6c6c8dc396823b72419b711b664dac3041f1e36bd75ab25398e17c110efdb13f81ac07c9
25493f71f926b8c8545184f95383a02447174c335fabfd2399e4a0c6aabf491561c1d65a
6ab17361fe8aad7d9c2ec30d8017283f22a44fdba804c1cbc025a39c311f24b2f2ce72d0
ef019ce17446026ac7287f0627c78a34c12ba5c312d8999af89fa2dad9aa3cec82cad96a
72727e66dd5867ec4efe475eae8ae4a46c62ca2e439e69dd6509158c73e9e4443993df55
6ed14c0aa6e579e5c1ab9ba8386ad625d86879d621c8f6474e815fb88d8117c80577bd47
40252f8e73226f829f52af470972c034fe30ef9c8b3abd6ed1a2b2988483887532fad897
d3b682dd09369f66ff7cd96215c24b1f0a5f6e61fb2b62e9827927358d5dcf0b5ab45a4e
e2fba448b81dd598e0c81be88524f6875aaedef48ddfe27c17f03dba60a4e537676d1e6c
9f860cff2609a5529dbb8bf7ef96b67bdfd20b1b6be6a04ef69f26bf8b17940612e6a828
4ff57fb07fae71e20f3460425a5763e41741c4e1118fa2a7b71194377885ac4367550b2f
7cbd2f8ee66a42c7020f9c0fcd41d11497b116a92d6c83fe402b340322c5bf87b4e68a1e
e81c183e948dc0e6a6f16710ffd3e79162adc673d5bc8c8df2484ed874e69c02cc8b4bf9
975b7642e5eaeb6bd166da3ebb8b420127a6d5ff36f5d16d6c75476340e642ad288f4130
cd6cef2f82f9d26372964ef3d9713e4f97acfd18e1e7eb32c419743da57317bf323c1d99
164f1f68fe989bbee5ec434c0fc1edcc66e0e0e713b3ef66977042a3f2e9fec40906a703
99abcf1103ab83d57bb598f0ee087ea0038127c386b88b083a592b56585d42f9eac4c86d
21e58e84750c99e3910a39788a2df92b42c61c11d5739d7b0c5d41ceb91005f356e8a411
8a3d65b707a1c67a2810f57da3852ef5da296d1674857ffc37eb938771555453144db921
2fe3e9ed3c30327374bb962fe8f38b8ee864bd40d6d0fde954f2cdf3ce35ae0fc9304aa3
ba7bb7338017de308e7a540676b185127c5afb4e17fc857adac2aba4bc03b6b92502adb3
5262bb28aa3eaf69cf7a12581e6c16f1a470c264462d2c4bca0b65869d0ff0c7cc756fb0
04ce2e6b247687d1601c6e1a48b34d8b4871ad595945c5eb91053d4205ee57b1c2ada79d
4c20887673d274318e7e8d7c9bd294fc1dde1732fe0f6d704ea7359a3608890774fd54cc
ec6d554b0f4b508d082143b25695523bbac99b28217f2c729855716c8147f9b67bceeddd
8467303044a38c159552ebfe0ccd3a05492c581f2de9208e205b6fd9739246d1dca8c322
1918ee17411ed27cfec4c1ac2c481b10e17af0fbffec765609c3fc88119ca17ba19c280a
431436e18c2f456810692106ff3782785ed3e08bcdc194133bac96b094ada655f8de3451
1f959c5fa14a864c0d04e8455eff2094b18ac309bcbf042f5ec7f281d0378d2440294075
a9da1fb9f37c0448ba601453a71b5e9bd52953c0a143dcc14350b6d91f0ff95a1f35824a
200e776f0d9edb4c51333f73dbecba4cd993982f463d41aaec34bc87d6517ca046fc31fb
1f49927065c82bffdf3bb02c0fa343aac3e6f406fe27cd8a8feef185b7b605357f5140a5
7f5219dee28976649b79a27f9374383516d75be33a4b46908d71354079cf4e6a290a9e6c
29d468c4fcd3cffb79f2400428c72a315c44997d9622ca49482db08e190079628007621e
f51ddb990ba3f7b921e7ef7ac195e63f1b592f0fe45c2e1f8ac60b906c9cc22062d6afba
4c70395471ad14e3d5aeef172387d07026bd0136aed09d8a4d59ed09d9873abf7ad81b3e
397977ddb9f87e52e3bfe6aa6e6153f772a8d44bcdc76667bc3ad676b95e9ece892b7e54
a86bc5f0a9db5c9a6a7ef65884ca56a064d37a9aa8f28f75062efbd1631b2b875ca04042
4aaf8e179cb445805d18048a72f34400e84dce04eb23780fdbe6658f11dbd7285b6478dd
27870585bb55a6873343d935d1cd85fc02806e6d1ab23e42ae46f6a14a68f0ea8c1b845d
dd98b8320d803be27b8432bd2b5b0e85fb450b51220cc8645fc47651ce1a62cbf0da9b6b
e3732d7734c12157bf18d767436e3bf8872c052c5aff452bfed0999b927df9974911c50c
2e619c6d04bb3ed778596379bb0d2e2eabcac0df75c3d78e11631d197fb7b57621cd2a46
4396a0c1c32add41cc46946c7f6187f85fea14752920d978b9d8cccce53e30305faf3cdb
05575ef147cefc855d33ea5baa2f7c5445b7a4b8c4ef261f0cafad93d68befb0005195c4
bdcba85ba8a67e03f812c83f65dec5cfa8fcc844a6384be07d194a3ffd1900bd2ef03588
ebfb3c561ca9fe1e455ab076785c39a3b4bee1f57250655f52ff6617cc640c5bf55eb926
6c0679d1f16f8c635dec64e0141150584e11463fced9e4dc80f7811d027c0b85322a45f6
171da0d5217175d36ab294b24c3a9271ae39ea345a9128b512ee88da6fa4f38e4bd48aaf
13e5567b3f77ac6a86fd6bb639f2a429dcff98c841adee79296a37b4a818b236c1f56cb9
57c12f30ce1b284db0d4c9ded893d279c38c384d5b543550bc614415b8d1d22327c7e370
3ed269d03a3e51e986dc282d3f435067dc669dfc56344b3406b6f546cc5d072cf4a23cdb
b1e084c935cc99fc081c863f3683f8d96867d5600f5a0312938d79b82eff62db10370f06
1cbb4c16b2597f34f17836c159d4f7aadba241c1e3f79b5d0118db1b9025e905cd43bfd9
2906ca52482257ade1cef92b45b7701fd6a81f6384110c1a9961a0665614fca3f10a97a8
1da5c763a18a96f98f8361c1cb6e17874c95b7c94f506f9b6ec5e5e19492bb16b114f3cd
b2d606298eaff1c2535a6993c4d2d956c30981af953fb27250ba367ae1df486d63ce3da5
ce5df7a7882709b1757adf718db54b95b996ccd570b631a139f5c764a4a90e152036ad28
9e399794c63139d677b4b63b66599f25d2c4714e4458ec7a76666bcfcb3949bc0b6db51d
ebe39a6f80ef00b8fb4efccede0a96dbaf4a1f8af7e1288401243aca1d22d849a66f61bc
f692e905b04735bf5f573750e22d43ec570929e78e46d571075b42ff63547ac12cd47c83
e6217275f06cbd4cb6bf6d2ba392bfb5007a972badabedde109ef12f1f261d1aeed1a540
82e31c7264b4ad888756be9ab0edee3ee9fe33f2a4c7c202a2f02ff4d7dca8f49d4d54d9
3105b71047df7e7b6a5312e4f80676818b65f9214fc6c27fd9ae8d46f4544e6f76fb0431
442ae6f42c874db7194de2a00d58cf3b1abb49f228cf37e956f01331554c1507642a479d
59aa252bc3e6e5d10fd09d6fbed39c6773cd13c40a3b441e08e86e88180e11a9e7134b65
cda5dcfd6abf0428ac0802654e5805c45fb8d7edbfbcdb3e3def12f7a62248e86a73bd52
c33b2dceb0b1136d36abc5cffd2f18474312d8dec32f546ee3621cc2c5fd1dcb19ede1ff
eb99dee876876d89143220b17f03f1e8089737602ec233bc26dfce6323783f28077ef499
a39a2669eb73add3927b761cee37a6a26a6ca3e5f0db4e9bc908d8273fbda7a0b7a19d45
43ba41482e9a39ddd5e6628a3fd36225efa46adff779102f215f15244acd01e383919ed4
99dfe38c0e15175bca379bf1ed08aedc3de857cc39e92c0bffe9fb66fce92dacedaa4367
37e1dc622a9723e511b15e08147f9f401ca79eb1175669c30bb3303cb0e417340835d710
f533bfd19059f1e3bc9e960b1c7a308e4350f6872d22ac4d8ace057b33104ec56ba7d647
680f638ad8478f9bfd2fc2eb742a330b5a0075519d699cddebdc12f76d6e362b37bd5a8f
dc17ab5a25be299952e3f753b79cd048ecf889c7c5841f5d9740e44a9881af283c64f5aa
b481f0673eaa824ff7bafe09852c3d44680d63ab83148f9cc6da1b2b50794d1c59b5c3bf
c3bdfe4bb11474b8e13e5dc017ce9597dfa6ac1ff456835b97f44403524b053b8ab4ac2f
fa6b4204801fbe1560e0e26212a04296ec6155ecea93f9b12b3af3a37dc8367353547ddd
48f9bf58c7e0fc693d996f9ca682edaf69e9dfcf66db517a78bfbba3c8e68bca343842aa
82abce60060dd6e66a2aa4b046491f10bda66708808cb7b61c7749431780c0f47d086bab
2f52045e714922d10f74b6b45d310da795b4186f718622217169bcce0f4896eea4f2137d
3160783792365ce7328457134f1ebcdf3415acd50c6db85a27fad851176bf0170d4ec924
501fc14d0fe2bd762326faebc17fbb3631f8a0e35a64089d9de84d5acacbc86bfa81d573
169248b2b89f9c2b8abf7f99a186529e8e1fa91c1b58464ff5d9d288dadb89ec8b054e91
2049a612f89250559367306ca12090b81c1bae78f1f0fec5ee5489d2e909be14f5a9e44d
170a91615583df6a89688c7859a5479a84813faa608379fc6861fcfa6c6952c13353338d
c915ed3cc1f19fc20f85c3d8e85b471b557bf966712d8c22b42a089b95991db234c0f33d
0ae2dfe86ecd9ba64090a0099534a4bff535342723f59f1f16eaf5a35869bacffdcb0445
bb7ccacede59754799497f26401fe0bcce8585d45599b84ed6f9173b918fa71fe27cc1a4
54b69fad65f425567f317adcff44d0a5bed2f7b358299322a91255246133340289b82877
3c61a8073e5510863e0de41f54e9f716c86185c749c666609a4ef272818c11bedd66ab4e
cdec5491f97af39ebfddae8ee33dfc00e52d439eba295c274002005da677dc5891f79780
b1759d0c26f8db5db04fde5697613cff0258e958df795d7e41bac3ddc321cf0b8c10350f
c9f5636c10aada61d42821ca722836e86c815475327557497a7c0342ed00303b27ed88b4
833106dae0bf5961d1c192409125d64a9bcb643b2fe383a80a0843c52a8bd215e8e773a4
6367b3acf71b853ceb0d62b629b6bc8fed252de88ef6755629fc4b43281dabfc71a029a0
a110fb73580c2f03a7f6c822bffa617c8a9c2bb25aa1b05cc2dc124ac2bb4dada23288e8
17a75ca5a774e358853181a12b2b43a308eda57ad88f528b561c968ebf111390b11d8e62
e9cbdd9ea24b0f6eb1dda9632812f7bb9d7622d1a61f62c2fcbcdb0ebda44f6471dcc0db
95a0a22266cb5455814466e29b442c99370505c4f26b019f4225c1b9f0a286d0fb1b20e6
4c31c685e7083be79a98e7e35ac49b039d2f94d2aa40ba1d8e37b5f5fc4ed257de753617
19ab56bbf29fd55696fbab9139a57bee40a989ea7fe452c98344c249b2de2929bc9a3022
29206613ce1dfbf3f18f6c9269d6aa04b86eb0658e402ec70c3a22b67b3317e653f842fd
0d2e1e278e38ae975824d36c3f39aa791a655cb02984df3942e750d0d7460feed81c7e27
b1f6ae095015c3a0b3a5fcf3d38d203dad4e455a896eb7b24f5208d9b1e2d0bcaeab194c
9e19ad8136b969292c82aa235a3b8d984bdfc3c8c4a69916a03d420058046460e3651ebc
c98b1c14a290daee9b2704b8cc8fac0c9c8cff3ee39db41fccb4636992cbf0cfde5a827f
04bb7f00a3cc475a331fc6ae3b50a0ce2f37fcaacd57976ceca0d2415175dc89305b2359
3546040179f7653a54cedb43af39efaf64f1de21722a9b7b571e3d97632b1d98e990d598
1fb12a0760c30d33a21b0c9fa59a41b2919baec05b0bcc13495da0a89585c4372b43d4af
1e23522523bee0242402fb0179ca0b24b38f350c58f237bda5d4f7d003db963ec3e61f24
5515979052f346c57e8e7fa9ce2541733473f3d143e10e302f9a0575dccd45ac3538db6c
e095766a557df9881b06e7f5db6136598261ead0346e0823070d8fabbae34b38e9d88518
bb0d1d68eb88add71bd1fe53f8cea916198ec3fc0683cb0c7914809c59187026707d90da
68c6da055e4f4e0a8ed6387a626066c5ea044e84833ad17b2489fb86eebde9e08731cb00
a241a94701926a68149ffadd4e4cac79a45c413e2cb1274a3fe39dc309a0242199e48deb
8f3c74e1ac9cc5cdbf81c896c04dac01c2d2f378d93aa6d2ba1b4e63b6fd2b749a6f031d
89191fe56ca13d9607b077aa39c86f8c3391b00c091bda9faaaecc1c6da72f510b2c34ce
d53e54eb44f9473347fc0d7c3ca6de880c149d4be34af07abbd4493ca019896e34637ea8
b81f9c129e3e9a9023a51e07b70bbe94291962b3eacb38ba7e429a4a7c22e8da6b6c1e79
077cdf2dc6d3b3a24bd1a424c714e7a896f782c349a6d839776b51ec24c99d04d9708aaa
16f36a173d08b24da14e9efe40202b1a59dcb58d720d35ec6248e73a0a5a5fd2f1e0f4d8
0d63516165972f3ea9ffa0f6c6bb5f119ea9ee34c85bfc7e0698dac3cc554367fe559faa
53ae77b2c3fb482b5d4219229ae312c05d386db0ed5656307812550a0ffe2a53272e5762
56eda0195570a6900a6b2ae2ccf66dd17b8c88b32b08e08e8c0838a07a75bbaafd2a82c7
25ef29b6d6bfc638bf0134ce3c66ca9149d7ca938b5a60b4d1c2926082e83fb10a38c292
b0b7f42a3389d4b183af248e2be27963bbf2bb1f4a41e419789d786fd154163593f1e354
c2adc17c128723146cc7fa6f0fa5990df29ef77e2e9a079f04198f0544a66d4bdb05e4c7
ed8a7ea6410178ebaffaf5a681fa840deacbaff848cf64961706e89422d75414d22ff5fe
cfe0a3423158c20908e3735df23b60a8a2111ac9a5e1cdfc65755bfd7465c51112d293a3
5b7192bdd4e8d6cc791ef07d079e8efa41b2fccee9925d3da775578a587a3d6b8e742398
df713b04707b1e72bb35f6e73a5e9982db0f66dd1b8c8ccdebd2cd49285f9fa2a898cddd
d31886387d4e49212810ac63bffa604f9ffb38a7084b03e553f26a0b056d51dff64b75ac
8664982ef54f268a5d2cef6e8f107d2a5882289c3f7983e5afd56eeaf1ae9b2b4db8a100
a7ddb13cae6ea3295ca9b517696303332b924415fff9051db99a4ad7057c8bc7dd87bae1
9923e302b0c5dbb18123edefd604b7351f7e396baa6f2956f1d6f0b934877042f96e491e
25df1572c48d9ef4f3b2feb85497ace3af98afed2d2afd09c39bc4b6d297c33eec37f920
0c9f15c908856807946743c904c95540887d641ff4dbc686bc4949a3ebee46907ff619a8
bdccdf28db6702dffb269de83a956a15460df0da2cb658af7d5d3637d245c71764189438
377d9044d2dfd8f3e22e3f736048f1fac0f1984fd87c6a7a31e2a9faa07d0285259022db
d9f3c6ed9507f0fc31731c58644ea09bbf2d9aa98e5254eef028299a91a848357b60338a
10d1a757e4ab43e49ee16b2f697f954371da5905e882e026e6817f6b87c5d721319fe64d
9bfa66f6656d96acc7e16e5ab7b54d0a4a44080881c2f915c21d1d375b39063e318c2907
a2b0526023ffdd3495264bdac8242e4124aa882736b154b3400d43b006a62e43e712a0f7
1ca879de32fc2e16af397a2318871ede394409328ca7992e304c2ff9beac7ab3b517d24f
278cdd16969b8ee43ed9a14d384868186433842cffc5b379dfa81053da78f4b6d9782c71
56450e95dec2a4d5012b54d504f561dac31e1c371137ab394bc9b433de72f4dff8bee167
07eff9665c52089577d12b94892c53ea20d7d3aeafbd4b751fa2cad7e06282a56a8868bf
820dddf7be48636c8cfba66b7eb6c83e3327cdf7b766ccc33f51365317073319acb1cd22
717c40a641f50279fcbe5bf401fef4f5e16a3a34676c0b20db945a92d26ec8a60c08acff
b830eef22f1c30a2b5569accf4296abdf61c402b40b48b0a64d1e6f06171ad8eacfa21a5
957b9e5c549409d856c1995dae22f53142c38cc253358397611eed3bd554c9632d2bd81e
8dfd8d6916d41dd48ead860ec3c91674759267aaed37949a21a1c322ba15413a5768c899
2b956933b5bb890e6cc97baf23ed114bd4746d18702cee4f3cbd20cf87fea60746c67fb4
243201bf7c0b6f6ade316dd424d5e15fe21c46f46d2526e81b18def3c1742ccd5c941a7e
a5cb34e83a49a7dda33d2983bb920ad132919608ed2a025eb602ed394979cbea561aa940
acf33239e67f5b77df374ae6517a1dd68b190c2901821577008d7df36164baaaac95d7ec
bf81f08482cc18dc5adc9c960a45ae396b17053b1c2f8a5b42a20c4d0e8987a15aa0dc6a
6e4a62205570090c35e52d22c279bdef1fcd7a7107d98165da43c17e9201ec9f16c7fad0
7896a5b2135eb9477973723d820fcd9fe087bef7e71049dddb253d288e778fb41f330e55
34e28de9d06d47f681b96210dcac531cbd2b298b787f2c2af0c5f7f5f37dcf7a5c92b505
618232c13290a86b4c4d280b3a8a2c270404e9a6429bc1d37fb7a5e5391236e328a7d0bb
47ba0435d3a6428bf0e022ede939811dd1e3b9bf860ad950e3b15ad324b2c5f6b3847013
9d863ce0e8f86071f07ae621406d95031cc5b117ec8a42726dadda781849d0256f496b54
f232c0ba1a698ed9af8f8d687476c428202789eb55e5ded3d776653a2585ea24f5a64268
3b1c14cce9515e9175272da70071491871e6bad3c7d08326f65e1aae89c9e52b878b5436
6447b36f983bb8e7ecb5838d483a07ef10226aa7b89cd024a845b242a6026087a8c55704
e4338016fdbf53388c05a000829d48f4eb6bda1c375c210ef04f39895e0fe94b42f071f0
01e3b1d8fc1780d292656a540dae2ce2af53e03660869075042de3856d26d8520c1e531e
d55ec60b6d9e48e8fd49fcadadbf2ee297aa43f80d98014cdbb4ddcda35d76d35cfbf9cf
bbc47c10183df33ca37f4a9ca09d2600d1a1f6db32864dccf6fbe1750a395ef34e426eb7
2310740fba85bc2f4e00f36f48cb50a553c7699e9b227582f1de47d65f9aea9640985193
29f12a2bb35f523aa647486ae1e9a0e3797ca7fda23aee7f5f8f5b3ad2572208aebb9a25
0c99e4dec0285337eee9319195a273f1e9bf6ccbe72e933072cc990ea4be46d8e5b1d035
79003a1b0846b5fb2c6431076dccbc2fb00b39261c9951b6fce8078b1aff94fa88d87b25
1c9971e8e84bc59f58091fd4026f275bd25ae64884dedd930b5a4c2ed8f2ff2578ebbc35
98b52a46575094bee46fd67f8edb403cc214804ca6753cf67c8578a7a9ee9f06869e28cb
2117fe2c78a6239f0e2d3eae23a4dc2ae17952ad5ea330958b5d7835709d3e48727315ca
52729ea690eba74052ef06dcd53a48e5daee2fe5c7a26bd5f365cf1e6731a181d0ae7a14
489fdb504d62c231907e42d8a6bc14ce9069c712f77a78ee32b1e84bd6818cdbbaaf8284
9c6d8904e5aa3870c99450db636b338dadcf2e7f82485533355d0e4006a2b0787a694755
c9f5b65d86b7d4e9ff4b6b9e0bb61e20cb3d54a2823c442a2c4934db2c3df5849bc8b750
16ee10a6c9b7fe871429ca306d87f1bfefb013d367b9b34d767ecb8dce78157bf2f87863
87d4bb71c786d17a8c785b55011074d7da1891aaf1c5d2baaa7b6132169e5dfeb7b47a0c
5fc6d2add82ff4ea08dcc663d11738f3c2094918299d9b17405d48de50069d2f5e237f40
157414adcfa52e10c3250387b7e1e644f89f813e4a9fea2fd4f25f700b74142ac7517560
9c1f00cdf9c9768aebc632207cdcaeaf36e39432de535154a84db959d66b1859e536f14f
92afbd3f1ad75cabf80467ad7059faede00fc9c2db511110201b1698ca9adab80acbba75
803d0a2026aeb9a36ced0287929fe6f74a976728bbeb317df8e8ae360c9759fc5beed9bf
fde8505aa03eae859a47e6e6af5fb8a723bfcf9100d30db2a362dc16d73dfc63a16d7458
1488a679de2fd14bfae1dde4cd906bd97bb09b9c77c2904ce55ee7e915fd4f78413094bd
90093f46638ee350f4450aeafe09cf003e69f9ad6f4e4279358ffae2ebb697c1be071f0b
8c4c3f20a59e216fbf10db19de751f818749c8bd2265f61147e487a3a78d0681e30f0973
38d05087a80608956f9279dd90b4341478f4eb36c3c7939e8b9e5c1a02021fabddbb4480
517c3fc7f4244c4ad42714b43637d0d2abe32837249791e3b31626e3667007b5da55d5bf
c4c17d74c6cdec00ccda8b014c8c287e741c28a614be511241c2790f8b4b4675d437087e
e591caebc72c5adc6530afbb474680c75cbb27d85a0f9b8efe9fab6d10e1c5354099d432
284482c61fcbaf39ab9585978ac12ad70ad9236fc61a93bbfed04f26aad129c84338b722
cd2a59bad8ccb29ee54d71630858ae90b6a55a8b692e42f6284a24ad5410bf6bc8c7b0e0
cfdc83ecc1de78474eb0dd368f33c533c2c71d69ac06ba735a31e925113f6821a7f64bc8
bd6a920d7de5b04b3fb9d09a22965623eb3ec5fa518dbbdf76347ae9a90540136f92471a
ea892a0acd53dea394c6f4f871e3b7e032061c02fef37dc4ae46169c410be54ee01a5ef2
add5f6a2cf32f256c07a806d8518f085d22562e2d7756088386b101858b5689ad53c6883
7d3be6070cd4af3e455e42cd1d9e54566b72f54bdeeb8c4919c7d16bb653a8817b7e29b1
bd4258adb9541cc8a6307fcad37d37602fda0f5395add9d5721e77a63dec73d4d0ba18e8
62e00c15570f146d846c61b78ce60320f9f98583c1a727f1aeb224d907f095ac87e42781
cc9ddd65752fc4837e457493a640db961e3c8d6c2bf7b6715e289bde2fc699c0a546104b
e826888a67deaa52b87aff91d11d2afcc0e6ab9a35de5c83b71d54a82c85f224052b7b2c
1a5572c289454841572296f85cf2c52e2c93b0fd74a95a08bdbb973423ff717e070bf176
64314dfa04787ed0c3384ddc133845ba1e837fb41d0016bae0e8cbb7769273ae0bafb12c
93613e43f047499b8c9f804d914fe3d4cf789f61d09807b6ce8d0855883a808922314206
84ae32977a205dc30efc7ea83d9485bc12fc74a175b39496858b878fbe48d122cc7cc10e
3564961ef8d6086487205da78820f5f84fe41aa1cfb58267756ed78eaa0eab594a072564
3fa57b65d1e84cf951c94f02d80f2a3f13f6b3f1cef060fa5e88fd4fb343a9889fc729f4
5dc5fa9a7e5a6190d73f1071e16b7d598929de942371d865655350bc8845c0e57e72d8b4
1eb1d67a2b1d3a59da91d630c269b1ac55a533ff9c33a74bf93b5f8d26c96db277c1c5fb
1141747f5767decfa3e2574de25f5ab3089ca0c75636189f10a84cda67c08948a9b5b2fd
1ec127bedfb3aa917d6f3c4994a776811639f1ab2e3fd5d0bd0bc3383210dd872e98f509
5abb45a0d99b02ba882b48e2bffc394303c092601510470d25ebe2d431fc2a96f1bb103c
d346bc6c80982207fe26e1bf2bc7191101d1487f7157eab625fcee9501dd2320de355078
19c71d68aedd2958e40bd1a6a8389b8e0f02a964890b4c58a18828ee34504fc18f825bcc
79dfda7c4f2374a47f51030b2a3440fb27cc0f577cdf517c5a5403d06cb59ad5421fcccc
076968b3f07a2c1694ea402c76125ec893f6795a31a28d30c5749481507f814946679b6d
df6d9f1150af5c75d98d1434cff616c0457a4909a290a7b64220a2d7cdf5fa3e0440bfac
d1d55a9365688b6d05da9fb8b3f13a383ecfdbaa5faf7b487b8a7f8e16e0f2558bf4e08d
021ac7e8af13d96a844a73a8575e069e7284fa2355e4408152552970df346d7b0a82706e
3792a3ea343975e43a7849b6d9027f7a49b46253df5f764ba70f516f9a12546b48183df2
d8819cc54eb909f80c659b1e60b7da94bc164ca96b67bb740bb46bf76e6b60a569f347d7
df3b2b2451e8932b1a8152287cd8b8f779113efd17759b466dec06196801cc0563ccce52
be2cdd30b9fc23d902bfa02a71d7f5d37f5a11cfaf8e393c7c7a352b513503f7c3e4204b
14971c5951fd06895277007625e96157a665e7af408b0ff1f8c63029b3e3c9a313b9b623
b636def832d39bf0e7360cdb06b106adab23307f9f302e0e127cf8ba21e2c0f9aba40dcd
328b331e42c9821d5f92b0c2228bb32b69996ab24b3a7311fcccfd18e37288eb55782267
c1534a07a562c1d10bde4d91e80d1d48696bf423a7f00fc24aeefbde9023c87c0c0a1a58
2374ea978f2fa67b2d297cca519e8df1f4dbf79a437ff887fc11ddedd73eb21e77bdf416
4d5cd749586212e225619eab225eaff03e54bfd0eedda1ade0144edc07c78c0f23ebc5ee
fef15fd92796d025cd05a3ed72a60351eb1b52c2e08da17234ef823265931b8b86558d3f
dbafe2ee6b1093e7969285ad133a3f81a2c4c6e88dbc4711943ed0fe50eb8b6175ceae92
08be3bb2bef8f129be0127d81c3e8391e0813a76909b8e90cfbe6881050afbb56b082bca
1298b9d4399ae0d419a58ddf28b6a48f652ec0bcb85e0c4094cee75711ea7df41f671e8e
093b1c9857bbf06ab66f8a983b81beaab8f81e5d4293ecad73b898efd33310d4b39bba5f
2aacba52fcb92fa9e77e6f39f7b028e7bc7143538d18b7065e5c893d5cac08f8214ce463
664f6642dfa62b3aaca53347db171eeb39a408f3a29ae2608d89c552e0c44eaaeed202e2
d6e510b755b23015457bf8e347c3c1c40e02bbe4c6bf4689e498cc4ee804132d54b58ef5
dc3b34d9756682b9c0ff7f57605c06f709659d011ad4303ebe03a1bdd8110a4a217a8722
48b2b9714a71cbd9e3c892619d408c4d0b8ee440863132c749ae35d791b08414960cade4
0a3addeb45cb6a0ebc3a16e256ddaecbcb83ece1fb20eb519ecaf9c33e908c0a45bc4578
9df3134ea7372e01a0d85a1d588e9bd5a9df0a00ba5a3e6fda06b00f94acb79160f2a45a
87be5c79b1d811fefe99a055ddd7c80be40b6f2eaba2e71d0c52082eb45fe7030d317a32
081202d340a5cc64231eacdc017d31f99e0e0be719935058a41697fbe8eb8d2f9f304784
177ba67a6d7f617ca970f276a5a9ff379d1493efef70bf5a055d21cf192b0c6daac498a6
ba7e71f2e9fabfcee224b03c54383e35606dbe9f496f3c9480e7d1a8b6c55ccb95a2a911
7b53f10da321576ed0e774febe4906f3722e7ee4bf6c81ba482692e8f53f4e905bbc4276
0b96e72c738983db034e169aa2813146019d07cbf8c910034f5ab3a4d4cee75b91820983
afb214ac11ba55fed903a440b34a5bbf8d60a1efe81a6e3977b46d6c2aeba1575447fd89
4d6de66124b258c86cca581c95fc3bb764f51b3c23852a470119688cd7c459e344f969f4
90c0653ccf852efec6cb6c37bf5ee125e8ad93567c0620fe03b54fa659829bfc83f8a417
40a1be9f2adf9dd170d8e56b1c51b717cb23bd6dee6e93d7fb6ac02b0d0a7b57b926d61e
554129aa513e7439387b9d2b3e54f6076fb246a3d783a0e664717b213d0fcfa837683175
f7582346f77db54c2abe24ce71452da47372360fcf0abab2733ecd7efdf1e0b0273b44de
b241c0f931079685219e3eaa7a18841cd86c75de0c1816388ccc8d9196ace6711ff9a6a7
432c2520b9f15021ae3257870bbddbc92365203375ed8b7abcdb59706a21ca2a820be045
3b5bde0121d255808076b10196e3bcd66a6225b0031d897205eb9e20467ac9d7911e9861
f367ddd71412f8cb5d0926b07e9e7ac062cba9dfce19fdb5290f181cd31f6701bcd5b6f9
95f616d4b19085a779e572a0c5fe67d965053ada230f536e3e8204010e8f580712ad23b4
78241c1eb880068ea503bebc2d3afd7e05f2d1dadf47bd5462427ff9b665d5c8994beef8
a67e16ab03ae3d7d06b7263804ddbdd36be12be07beda22080cf65b2692f601cbf7353cd
30f26aed3da26043f860e4c54c98535f5b164b22fa9591b2bf15c3784a566395ccb349ba
53dc1c2164793d39fb26b403e0d42c822e331c7349e89e250abdaa2519a6b8cd8184fef2
fe2f095f6172a4deec277f73a3055c85e0a0319b425a24269d927bea5b50287277d209db
288f7d78355fef8ca7c15b83cb40483eb43265a0131b87b8d3803de6224343e679882b3b
51cd9dd8f93a9190cbdbf6eb325b086eab72397032fead130d6c730b742312fda1c06bfc
4c9620e8ce84336fcd00eec00c4769d4261e3af2ce8bc75684d4b67abf19368611617781
852c89648a3a05134f1bc4f22945ff186d7c96a81d2f516de916e3743a7a71f67086fddb
d539888b73c7b4b70cbfdf1c413a2934e40cbacc5f12ec9647b548ecb3c1ffaa7559d8f5
4190598599d3a621e12065debf82cadd75f76b505c6c904b4f604d17cd28891d3607949a
0173129dd978b69de973ce4926ed52e6009011b1907ad140cdfc98b68394a217efe703b4
3546d00961d89c9188ac1d1d61db29b96530b9858a1caf6e3cbaab
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont: Times-BoldItalic
%%BeginFont: Times-Italic
%!PS-AdobeFont-1.0: Times-Italic 001.007
%%CreationDate: Tue Jun 11 15:02:40 2002
%%VMusage: 120000 150000
11 dict begin
/FontInfo 14 dict dup begin
/version (001.007) readonly def
/Copyright ( The digitally encoded machine readable outline data for producing  the Typefaces licensed to you is copyrighted (c) 1981 Linotype AG  and/or its subsidiaries. All Rights Reserved.  This data is the property of Linotype AG and/or its subsidiaries  and may not be reproduced, used, displayed, modified, disclosed or   transferred without the express written approval of Linotype AG   and/or its subsidiaries. ) readonly def
/Notice (Copyright (c) 1985, 1987, 1989, 1990 Adobe Systems Incorporated.  All Rights Reserved.Times is a trademark of Linotype AG and/or its subsidiaries.) readonly def
/FullName (Times Italic) readonly def
/FamilyName (Times) readonly def
/ItalicAngle -15.50 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/Weight (Medium) readonly def
end readonly def
/FontName /Times-Italic def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [ 0.00100 0 0 0.00100 0 0 ] readonly def
/UniqueID 28427 def
/FontBBox { -169 -217 1010 883 } readonly def
currentdict end
currentfile eexec
e8dc61728071abd4d5bcd230c4e186dce095a0ca84ffc476adfaa82124268e60d2cc570c
5f52c10ed4a85a71ce8e5bcf26aa13b27d7fce1cc0c72c3b848dd5ffb2d56d06a1920fad
e4ffa3b35336627e9ed1622c1f9652956d4a424488b4c4ffda9936442bbe0ca749700ae9
8a2bf964fad088f0cc64b7c1d76742f25e90e759aca624a321402b1d20863faf5e04b86c
1ae66f450b1586041815e52f13d2ae539f1725d11489898a83a05fe04d6d14bce66e2cb8
55496ec301a39f6ba632f50529a0c17d8b6e85ba12df6727d48e02fbe1aee8aaae159b9e
2a9b89a23dc87136cf0fbee90425102e15b4f190c4c6686c076db45092e8260282e4ce72
ccfd7300e925387898e5fedcd419711498cc8118c5685a8b9715888a62e3fe31eb469842
0748707fa21a45035b1e6e1036d65b523f1f44ab70647c868d4312b24a780e7d1f25a9ce
72da03265f12c97e870aa82ca04094b7e224299eb7bd3b4679630c8fee30315a7a408bf5
4fa48c8b140111fb3a678fb67204f8c432633bdefdc30c2b990d9ecf7030a6c7a5f1b713
d4dcee306b5051c483aabeef43c488764e87ff6842990fa25a6fad5ff66dc00bf6277c82
c7b30a6836bf4047c5d180d5d83cf806798661a284646d8ba15d1427483c56ab5ad109c6
9dcbafc60b57d08f2c602cfbd3a4d461e757c3779db3838d75c1715392e50db9e7feb345
423d9096dc58cd9c2ea324e2f167a26dd483a2da425c332f13b1f300086c947ddc2026ef
5d3711f7ff52e1e2852c178be7f3576baf68c1287133e05494810973a7bb59fa85a2448c
81d61a9fbed685ee0d58fc438504e6f21d4800121e6d0ef2cc3e3ab3f5e2c15c340d0de8
8015e8762d89f0282e36908b04976478556e24741ebca87b22e558064587346c73431400
69b9aa1dd2f2292fec21754b6ee88c67df9cf7c1df31dcf488700822bf07b2abeee45ef5
b3adeedc7cefdc2b1859c37c4291c5d64419125b705addb0c085612f09d6ab4375c5bcac
6c9c8d66a38fd608150bb58fea9dac242591d70d6f0b81b2011b710b186aa7cff05499b7
9f4671254ea02f546e9b66ad753acffc905a296206e43c3dedea6e03194c0eb8a1228348
dcf6981fd73ae76386571a75808a5ffc9215a7c7be49ec2b84a87bb235512e00bd7327cb
24057d2300afc95707891e414e5f33c32c5497572e8f8512e19fe7c0b86cd28830aa1574
e13773ab5e3115a2098f462df5937a263408885905d591fbc7f32a28208aa66bc8e14c05
c2ff129800296032a2d96fb77035a6ec814a7198cf03fc4ba47f0298e7c96968579f4acd
7269f34c5b3e45a65e59e7ddea1ab910ff6641fd5956bf28f64947f754eb01e73f4c8b25
4f728990e5aad264b26607e6b9c65d5123356be0c1e6709d968e3863d84637ad18079abd
60ba4772dbf8e1de3e6e3ea1e77500b2705f30bf915a60c6bb52c0eec5bdd0a5f092a3e4
5c20eefffc80d699691de5ea7f2f1f4816bfd3c53f304e27a9e98add7149133aae37c738
def412a0dc9d532e2aab2c81e3d1b58d683d9f1e3426287ab433f19b1fda357829946128
7e41d4bb746686ca69f36be3b965292a47e1f7ae893c2bddcb2abfd30f53c37eae86088e
a9f93a2d788edb1016d39593097015e0f58a59f3324ace88aa820ca39a59d94571163e06
6238bb27c4fbe13ff892bd3ea6608776fab61cbb163dc298b4aca90aa838bfc242893081
d52e12069ddbbd85b9a8393bd3a05cd0cd5310c439c1771c123f8113988acc6d43ce5bb1
a70ea97a9ecdd3b450d855b6a4ea87fcb5c2a4ef67bf3c1b78ff25c34c27956594684229
cf7a8553a9327a9ec6ee6e6286becd969d37c94a8daabeeaa56471c7550efe5b97fbff20
32bb957cbbca8475100d2945846fcdebebd869eb0afcd9c57c2995f076c55e0e44ce8eb5
fa9dd18506104eeeb06bd52a21daa4300560cbd73a6bc36b369b7bcccd77fd467f4bdb7b
c33995587484af5f696de08c56dbc5f99898bcb79e0db99e8d99363b92febac34fd9a30d
1507150c25354818845c538e2e115166ba36d347f699fa130a43497bfd4f403d2a736fe0
419414b9dd4e1531216e6cd8bfeba01699fbd289ad0ffe9045b329753649a387bcae35f7
df85110517aa85f0f3a5e8b03b84e30e7c053c39be9672c10e7f0e07d3975f2ec1bccfe1
f45061b43ff6dce364b0ec9be8c9f135a36376a2f135acaf6b0079a59bdd04b08dbc70a3
0f24d7373bf445b08f9d36612b43e692a1d51881b74875701cf765ef0305c7b2f7da1f22
2e2ce5b3737c1142da0195411c4711b005aa89724d843980dae96a24bca2c137fc5cb590
3a40c3ca07dfad6fa491219b2f129d8b112044b1e58b23aa46bf33d57728f60ce014271b
66dca4db1d943bad041c459effa8b8ecfc15335d6202ca43476851b01eea9327706a6b60
151ad51c35236f0cd8affe5a615312a343ec8e72ea8af7347475c20101a01a7f906bffef
6a9cf80a4b30664ec67e25f2ca8a3ffa91d1ca9be1526d827fa9e453bf563f65f2dfa40b
bc1a70bdd5852d68726dddacf8d82a309606b675a95ba951ca7539efb44cabbbd8087996
40b3158d48e72c1697019f801e163013e02ce79424337e28a50204e931d8fed9fdc925df
aacfcb027e35bc3ad1c70b221a920a7008331fe3d7cdbea6756886aeafb58b44b6c5f060
c46c80dfc49b97ab1ff48f8dfa71e079504294e8aa9f335e8a9e07edab88888010355b83
a484155f5062e5f9bcb0b9cf8ea043973b8dc53c16d379fc7e1a71e51309b7f7f03e69db
ee9f0fbcab7155ca93b8af9a3892a5a62dc8f61771e933cc0af699208b2e0d2ae24a5b24
d2cb1bfc1f284b2376bcf9671b163ac98e54eaa105fa8af88d0f2bc5d68e5e432315ace2
4fbbf985f676f0a75e81edcef6f0b4e9dad17baf8c943dc877faef06756200917ea2f59c
3f761092509ae28f8a72c3e41625b6cbe22459045edeb99df2537626f45ee877e21c59c2
3637902ff56e3303fd6734b0b460741a579d72cf4449b69dcdd963e7a1e8650240d67012
308907bd9321d3e8e01a94eec995ae58fcfc0dce6d50afe89c33bf4eeef22beed7e4a351
57cd65d3dae199343e2e482acaca82a4dd60fee86b0b414eea52bac2e3864060ca2583d3
a40c3a689097a4b84d613c99c92ee9f3cca303cfd1244f888787f679c4069c033abd0b28
c74ae7ff2e5662bd0fb3045a130fe53ba5cd791f869b5226bdb8b74dec0fee17384fd788
75f68a7e3908ad56df11ee8a9da3d848a38745af58b7bf0195ba057cb700d1a9bc6f5cdd
c72bbd7c642db306a912941a6307f634f146a2e8a0d9bf596b90e97ef6857924960fc7f6
738df41dc6d33d41c8a05c76f929251b2f30b97118633b64fe94c578048ad7a7880be045
3b5bde01218c6ad52bb80e57cd57376972fdc6e77f6a0e3c13c1aea1c81bc3e7500e7863
979b04546f230fe8bb3c45a71b6380c3c8b62c980f23172a82ecbcdc177b899bc44a856c
88ddad0b3ee7dad2bb47a05b0253c70f5370e75de58559a79835fb6540b15c99a1ec18d2
16a797ad2e1fd9f88cf842b71f62be71eed8bd4fcc56819435d802fd3159d1f29a27bc34
88c77e3d509674714f5d81a1dcd1e1c4862956c67571deaf99c4a25ee3a129bbf183df50
98e5438934fc65ab91b507e1d0d848d4669f6c8e688ba7f22566a37e2dcdf200e1f893dc
2d36c92041debc8086d82a8153767d63ace3aeda081621e07c8be8eed21b1fec53cd67fc
097a86e397dec5050670ad03649a77429765256f2058350e767e51fe6783576dc9cdf738
afc5cf2a289862471a283debc48b6adeeeae11d19232046b30441d39f7243d51dd9306fc
9edf32c62ba6a5e8216e56d90b122b397ea097326865673be465dd856d007b7e878cd996
616f6b28f7c586987db6f3f2530922caac02597b79638fa41911cbce8c3e61a645a6b025
1af19a62fc0b89fb9baa3cfce656252077e2ca1a710622c4bd172d1af47ca614f8884803
233d2839fdf75e891c877500cb87b62778cf7f2febc2d0dae55e91eb15d7e7274f2b52fa
3c595535cb5a351860b49ac931fb1186e2babdcb2e2d2f38d56f3c5557e3fd7e4d64f026
e25f047232eacf7814aa03e6b404f3dcc8f850eb65cf5151eaf0de0168ad6e449f809e3b
3486575ffde504bac5614528605eb563fa988ff2a074ca60d8f17fe3f5996f1257e5d144
8626ea1b049d2503f89632751a994250a72236b7741969be9b7717daa24ee53612e607cf
e6abd8bdc5c0c45ff08d6efff6f278e2a28cb3eafb89d4636fb9d3b11338b89020cc0636
2e9617ccc5d421423366b64ebb4295d8e8b06f18a779dec7614c2512da4ef3fa97e97985
2e9f23a1c286758b7ead316d6629aab3295b5d17f6ea9c9c53aab23f63af1e1727ca6623
c51f7061bed176970d53d003ee1d1fd92f42d3cb48daf11e7a33585e112966f4d60ecc58
023a917e4625252942894a0c492b318b8b9265c3930a2d0624b262f610b00b579ff6e9d0
16b0800142eb0284518382abf77058bf6cf045d8795a7a9718e9e4463d1dc2ac8db42cfb
b1c1a498b30d7e6c2049c2dc040257ec06efa401561bce667203227fa5e4c4e7a8ceeb93
5e21204956d5029a4339f92084cf21dd0235df651cddf8ae6a977d483fcdccf71a83e687
dda5ad2b3a5bbcc3489c3596a782ab367ce9c25903ea6c4024e4ab6b23863d5b84c88389
2213d8a686479d8d2ce2972d6bc111fb7d031a40875d0a0fcbbdb9f7f5d2452bf179da5c
9ceaa94f6fcd1e40099f7f501cb473c7ea7ee3c21d6fba494edf04df2bc78bc5b9ba709b
5d125bfe0f80ac2cacf4325d74c8d67de48972b5d6b1827f8bb34fe5d41b5ec30f4a0ef6
5258ffe764d85d7016a10b1afb7ef824738b6a33045ea3b214c02a665b996ce0c1f7d3db
9b39e3ff1322b33b4f15777b8abb88ff8c71e79a803427f77d9de03dceb8dc0753cf6ae0
52939dda0d4345283f7c4d3336de730ec0d65e2cfc527e73b5a0f95cd0310994ccf7bad3
7d21bacf676de5830a1a00f5e5eac20b952e8578a8902e27e98f0cb552b78834318ca083
40ff01226409a05e5b55d1ab594682b7a34c6724d7fb43d1ef4e363ecbb06001e331c9fb
aabf77534db8f49bd8542b76e32851856f426e77a2f2602a6392a9381fa4b655212bcb74
db2cf319806aafd4d71f5ef5422b788f5d0be2f6703a6b7233d07b0846a6dff37487eb3e
44b7bd37b7cf83a86ba637de641bc7d7dfecc811a58978788620ee92457295f4c9d65fdf
5c92312ed3f85d932f9c753f06913ad718555b4e2119ac6b37a5f045271b87832fe4f988
4f5bab0306918032bb63f409ac959d31b834536d84f074724547e6c405f4f01bcc71ca4a
e57a8bc3310a1f81cdc577df72c34cc53ecfa7b3121f1fd9a06c320ddc37a44676bdabb9
5f57080499b1fa2e658469054e39cddb766d53a16000fef2deb6d446b502034948639d1d
1c4794e8bb273fd14a4f034c092675b5e24fd9755d7f5f88436603ea62822dc685693085
432217949688f53b1d7239fa59a481ea883b2cef1ac13a93f13ae0e0513bd2ced7968399
03db61386b5932940cf1eb4e1d1c6f636c7aa4436a4cb4d9185cd6686a3fb4c323c9b1f1
3d9cc7a837328f9a6d4c40fea75610975536df72ae53f678a4ee6db9333950386e757cc6
be48444fa59b61dc95676d92fbf9fbf21017e79df15852541c078a5d39121b289c40163a
74bf07b4c02c92a85d7d7b7ec1c253e91abb3cebb7acdd4cf75d6ae43bd892a00d2181d1
6f5f55cc914d97a97ed7c8cb6ce9eaf04755729ff204d4b7556cf6aa926d5a477d296102
9c9f84766db2aa1eb5189c1b724486cca8fe5b2324a561832d80a679a1d2498da4e16636
e7bcc26de1a46fb5e7ee24ff80ffa6445d0a579ff88b3d28338e659062ac70d6c3d61cb8
a930da5c2b6096dd33e6136df33f2e0b17f65da79d94adceec84f6fcdea3d0dd375b852c
44c07517ca5b9fc66fa1ded2c51c674fc0ad5bb562cfc1c39abe8b632d15bb5f1a5f338d
2e7712fe92299ad6094d77c6e6e511f9eadb35d768862e7dcb2a72de0e9150b78d81ed11
e59d419000d6f66b3136ae9738629f578b6ff1fa88c56b2bce19d23627e56d554b08d212
44a70f615b56bcec2b2b7f74062e7233d236baa1d8257c9c60225ffbf8d86eb29604d78e
9f8a3456c40cb8c8273d67e5b801fc08162aab90913fb9fbe59e9f0db39bfa369e77b7e5
b0f9f7939389254ffdbce1a31f51db595321d25b8ef575e0e851058cd60cc5fdcc48e185
30fccf4ed74ea02fe17503d81a669f4f521c1176963529f2c30d5830ba356c6b2ae1225e
0b0b82ac7344711185611c39ebff5045c4f54e81e85a280497b71a5938800a288cf53f26
b3f48754980185c0f00cbbb810c05a52454ba332fe48be94e416bc23464376c609f0039c
00186e323ddf8514c9361438390b2d157303002cf9a47b2ab5900a8a6a3a548a0ffac488
f423bb66e36cef819f0d3ac189ca3b5c1a4754e11e8769262e73f8704b69913187a9ea41
7e2616b6047b23bf2a3dade6bd997ec5755890deec1c456cb878d12e7cba0d1a4166e51c
1d1358b69c61cec8faf7c1973cdcf9a412c95c6f262f9652e53420edaad90b94187d3ca3
45fe2794340e742eb2098c8a332b76c4587feb25a9f510e5934bfa87807ab38ab4944a8a
db6ae2ec43ea00d208335599d8cdcbcf093573e9026ce5ac59f9d1cfd21e55b42b5c0614
6c2c767989069bcfe56e29b69342cac3cf05a5f07d3633e2763547d39845b4f0eb0e3212
c5c015638b1b30709f3060e7c61f82386701d9d90824b64066465e00bfbbefa3b2a5a6d9
5e2d3471ad66e4c6e98afd6867970e255d337ce10e942e6839cd599133d58a408bdf74d2
238093231b2cafaacf26ec7a1a5cde64115a805f9a4ce10cf166f538857eec8aa07acc7c
6b400e299a6d6a8c375b841ba8fc97df5bb25735a746d979632553e9f6e6430d24038035
5c06dc67af6712998091da419765d076b73a175ac3449c34b5854983339968c0f778cb36
cf08f36edffdc4691b7c9af6181241c2037e0e76a11eee05e95d59504257c6621f3cd4cb
969fe071e4d3e173da6108737ef0cfa4b11ca2cfa8e5e051c207d488d80178d6aa96214f
3f765f3ffe41a0308b2aa55801580dccae49cb406b778518d825bbb85f0f768ecbf07513
9eb94da424126c87b2df7b5d65cce833971dccf38940d44575846b09c674454c1b6302cd
a158e99e069e94ad76336ee786749794e0aad93a0478f0aed9b585f9d239067f81f7491b
bf61bde8a2173c3ba1841fa0aa7c58b2eefeb450b9fed40ff10358a66b3b1c4257740eb8
8364e301119c2d417f3cd6540c4913ae3aec9ce726f0cf76b7178c0a63580b9dcd65f01b
3102fe7af62d67ddf9ec9d2a712e4e9bbf4d3b68c3d0ef1aba9d8068828c2cb47105c749
5dd8c926a4107afee3647140c22e26c4c8db2dfc385c4cda05bc0945446743fed0fdab0a
2cebd4adef44f93b8ea4c60f3c3ae285c0c4e2785801d48ad12f905f99f6b97655abae07
8fe430c439f659b1c1f7a87eb64bd4ace138474cb89cf95bbab6f6530a3b54fdc1061fb8
64eb7823cc6f434d0391522d292f6f73c03a759e6dfeb67ea9dc66d1a6367b9808ab4d3f
9cc25bb38cd08b77a43dcf5cc6436086bfd994be5bf2fafde280906ccc768db7bb3166e2
7fd389fdd104d7edca10091d1cee6c3eb9985a6f05280486ed4c3e621987471821fdb532
1ee76a7776f10bb0fe0fb6a5f85da6bbd5f94c385926d32b7cc61b4dde1a8b59ad74cb7d
36831f389c6bde8b42dc90504aa621b79d21a1107db061d67b9268a9ed4d3e616d5b5d02
ef46a5c51e133238418ba417913b81c7ca270aee7c759416a6cc9255c7551d1a3b853265
c91183d52bb2dc95d93e1c4ffaad4336485246307931f3c2018bdff3b50c547332234e9e
835e7691f77b928385e9602d77ff7839b32311e4d01705a06355ff0ec98e040696cfecf7
0417df4d9a447e7cd64c35733d8ca1908e5b0b9cd17f7b652ed3d7a74045dbc8825e3f02
d1b728b8b33b8d15e8731434f849af3a8e7b1a83ae9a74cd508449768f4a78d3ff2ac93e
aac7079d8619394811e802ca711b8d1e6ae6f9908ba090dcaa642f5a87ef3f0c40925501
f321663c80b012f78313ce7157529d9e867eb10078a1199133d3030290b00d7c697c1a63
d8cd3b0498913b2164faf4b7e8c30726b991ef0bdd8a06beb3e6cbcdf260a7c7fac1d2ab
e613e94b199dbd599a354f4a85a2b9a839f1386bc569aa228b9c76048c44541606de69cd
5eaf8a08d5817b2c306dbba50f26186d0401eeb59fb2082aa902bfb036f5b875d6440943
26ff1c0a31ae89367a4c2d8a84d28fc91e55d86e0e4c53aed23b0e62882044609ebd5ee4
548e97d9c706494520c86655c7f746dd394982c5148ee1b0ae8a5409cb3716256a466b69
583da2f7310e1a491642b2970824c7fa9e28f21139a4df92c63f7a9661ffeb505abeb025
1879ce592c972a80724c5fd1b4e90cf5714f4d9cb20a6143a2a72a147cce4a41c86fe3d8
6d475a4ffe52e9f7dbe525fb12ff0c1a7ee7676e430958a48a60f5605eec50005213cca8
7b736c2ace8d02acf9ea6d57637eb097348c0772136492422f6b4ff38badb3303813b7cb
3ff1c77595c0a0e79b81d0ea8281b6474289bdc7e9739041cdb1e03a0f046a772c155ea8
bc4ab4c08432b890b345106f9d154648bae1b0e18bcbb1dc55756c09c3d72c793c659282
22ad24664c9e79565b7d75f1642f97419cd09af1ff59b140ecb04dc3c896c4320bd4c521
6ed2b909e68cda10ad5921f806e059abc027f3e956ba4ebdc3e64218f62882b8e42f0a95
b44288307707225acdc6e90dbcd376255c2d6c2a5b1bf509fa02d42bc71b3b327cc51cad
61b90d8a904390b7d296ac7af4eacf5a40a66f4b701b3e6ed7711a90b1c9b07152ec43c9
fb68c8cbfb20ae590f8b9ae5bfa33d54af3d7cbbc95e85894a8797282701c9065a54a6ee
003634175a9d6ea47f516d0f5672b4645f9e7f5917b780ad3d7badb406493bf126e211bb
5dc1f1c17f2bd9b622507cee584fbd0365ccf95d2daa5199a485042901178b9a6bc19098
355151928aeea1d7cda6089155eb38d287a0deff73820ef90297fba53f3b1a8d1022d260
0aa86f7c5e18e24f70ca014102ca921d9844a419b211bed4b9cf81f4764f9755aa7e3628
f74eccf338540041a89b2176d0ea8b26eadcdb2d13a7ff345a749a94ab17e31b6975b73d
2f71474ef84008275e717dbb55aa2f563ae8ba2f28674e23d48cf699300e97b67bbd26ec
8ab15453efdf4fac75dcc36bcd42ad6f1917805494ec1f7b8f3f099465d51b971d8dd963
8c8ec57a9e94607b4155fcdfc8e9bda5702d5777ee77de5110a874ebbe83a473cdbe34bd
ab46676ca58044bfb9fd2ca9a4ad00042503e12d79a714d62f688fab1d3eebff4ea8fc60
cb19ec1e4e0ea46d526d19c8c34fc9d5236fe2f413cf819d4277e3aeecafcb05dd8ad361
a052306baa58ea559887bece09f065cae7f0c219624fe0b9e5e1bb5de4ed393f9c52467a
18708a70b3f72977904796fd0b8cdad59d6b5ec96fddad58cf3e9f8d621caf7c302baf91
b20fb1e918eefd9c3927a8b02759772d608bf43d83cfe4a5022bc89e6fe3fb226b1de502
a065534bd2ca8c96c275d4facd92d786d074f159febbc7d0a3deba3c57a43c58f8c501f5
00a6018b2c363d1a5c71f34ef5436345539687cad312c94621251a287a85ab62621b63af
6999a43c80553b86afb4bad634690babb1f50de693a503f2a65a2d56f56eff37dc9eaa8c
bf528d152bbffbe438a579da24aef3ed9f3ee288c80f1d3fd06d34a07d6f3bc8158ac13e
1ce5aea3543ebb5f44fc1e7f47c933a94c6db9396892810cf1d082d3966af2d88113cbdc
e276b4ea3fa9e489bd441640fb4ac5e9b633841c8d756db8001fb7fa6030ba40de3db159
dbfc782a9862ff5e2c3ffdbe4f36e3521dffbaaf68526f59005666d4cb27b714da6de051
339e541ed6b5e6e6c2fc9d22fca3884bb01dcae45ffd2d528f6494e822ec273b2e7d1cde
cabff5ddecfb3161b0ea0b01525b144b0823160a7afec7a5ed9888751ccde1ea43df0dae
04399f6a30891d097abc995d3800fe217be71179f69ef3b86abe5b53de7f0441da56855b
fd258f6bd592bc05e18745fe05d3555be6678d8eb8b1b3385900a64c80e95a12140da701
7b43ecfd144c6214a9491370fc23d4c6e35693ceee9a057dfbd8ee777103b982ce1fb482
cafdc92615f647558938d5d238e0512fb4571b13d2bf2c53dff19a0811d0edfe86a3c717
96b0b53d9cb14bb36d1bfc745ed8657cecdedf17d2cf2334ca287229763c4dc06028f113
2ef709dd5d38976a89cef82529c7ff6a9f4a95ff1c26fe83cf4700b6e254b840490b82ee
2a83a3dae5906e7a7535b998db5c6e942ae9ee356c29b401a9c652e8225778ca4ba14ef3
1809aaf09f1f340432205e975873e8f5e7b129e64d43a39a609e8a141ea4394609a5b01d
2222adf9bc8303b6c2b0fade05d60b066ad63aab03f452d5accf7615a35bdf08033a09b0
e6eeff2351a82ce1193d30681a22165838f2d8f2872051fde76229ef344a8f4408f1cace
b815c0a15c04c6c72694fda1f85f2bb379ec9dfadd2832be911c99cbc37e0fdf7504e53a
a9b76226a41cb146d9fdc432bc4b9356a13555147f756bda30094b2d12de54af20d0a9a2
c6b817de3f926af35776e7ec12fafbdf3b2be1d4798dd2215d74579b7265dbd100dee3b4
177a4144e50e79739c254ad7425180870c1e49c47fea3f3c50300233e004852236e27643
39c668a5746a70cc3ac5a48a5736515100a33e33fd7f5433b3dd4dd4b811ecc7665375ee
d1c3d61db1faf78c38c7fee939d270498032178d2147047e0963c4ebd915b91ae4819ea0
b08e60f45d48e8a3ce45e4ec7c3222f373b59f0fe6dfb188455d7d6cfe211d8d352d6162
45380708a5acb214847e52b89d175a46262ce58bc47f77d7de7c0f532a3699f8b02d8e94
11ef177f49774bfad68d251fbd6474281f45a93e8492abb5c7ce5b7f2da5678197e19006
f1eb5baf47926fa2b281c714875d0b1e3c000685f93c7b79a748f84f0b05057bc191bc6d
8467d6e69a4a7cb3d7c19e3a12c299037dbb43fdd08a968f1dc4bae95cd5e9bb17464af2
16f9b6430fb0f7dc4fb59b0b4fcf6a40273a70c8b1c313772b298223a98e0373bf69ca88
6eba61113518954dbd1dc097559e87bf68af277565c82b4907be9bcf9b9d8db7cf5d091b
9f936ab8f4254e39ec3c20f5f3a3c61599834a428030baaa5325f1ff04392e1a5ecadf1e
22bfd158301e0562e974dfb93e226e8ba0d13dbf4e5530e3e37a4859bb3119134a1f904c
3074b3b5f83d93680189d3d2bb95e7809d72e7df1fdf8d583c0d1292834d8561f1a2d080
df588dc847a52ec5839472378de52739807e7e835ed4336ec307f4dad1ca0df985261414
3a603ed36d6e5d31ad49a8345580b4d4b5150904b99e39a75cd8983fae066234eb646d6a
86352b13a323cd219cf3763a98e09e5b6066f713fec3a4b9db76d2001acac3d053db00e4
305188eff59e81ac2fe4524c12a9a32c5d8dfd10033d20159e8ed7e25c19913224ea6599
f63db8b667dbc67cc7b35cf54cd77631f97e3d572ef5f10ba883fac007097d499374cdac
7abdd0d6aa7dd0f1a3ab9f51a355fd47d69efed7d65e5de1f3de6be2eb82628882d2f76c
660b796e983753addc6d5a9e4495c9bffbed739461d31a8069b91928039dbd307ff14e72
239d7eb127597ebccc9757be991dc4b7da67e3d9135435fab0c19c8ab909430f216e613c
1c42eeb3ae7d1097660ddb72feb59d224410b47899a6e47ec2368ea0f57a6fb0f566d32f
10d18ab3f64d798b14aa43bb25bce50e546775bf79c072781d5319e649285ca48b24d8b8
ce0348cf59095590c83bfc9c0560459137a2853294644ee1bc4a42870041d07c4d02c75b
f6820484606aafe1f3d2cda7876026fa62aa2b644b1c02fc028c363f8256e0bea6ad40f9
47b72381f154c85637bbae7a504757dd2e51d437d564cbe83ab523ee408ffab073db5675
004b019ffedf5bccfc6a61a486fb925215c465f93e97282a494255ca97a37771ab3b61fe
06f0fd6c9c4dd5f139297c657773e6e5b353bc5c325c1e7d99e093c7b1eaa03edc811167
a86eaf8f6f4dfc3342da82b966b42071645472e4a8e03e3b698d8ef45edbb4e24319efc5
7b67c3f88bbec595991cb99352283a27aa89085a037dce32725c6739726303ae55356586
1d30759ff543e8d43501da608b08230d3d32fb20d792cda8a2a2c148d04a610d7d4c3eec
4db25e42913ca00b81fd595f4de1a884abcff1e70ed77b3a2bc24303701c542fae0895d6
d14ee6b36c121a16515970e7a91f26bea6ee99893be186de81f64d6a875321d32f9a240e
6c56530d5a9e7a9d9ddb04341f4d587a67503d12eb68a6f45ada5e1d3d771bc21c47e8c1
47f1b6df461058621224029eaf2d3e12fc13289fa2765ee1e543778da24c1ddc0484108f
18db0fcbe3e19855bef975dd7dceaa34f89d0ab8582bbbe7d0e1f21e6a40e7288d8f6d74
a4548fd5b11e3186eca693cc21eed41d6955b0c93a06d1484bfdef6f96f6a91580270774
6e465ed186180e93724d5639af2209a3876cb32d1b6b24093b21b59c6e7631b8136eacb3
8500ce964d14e4aac916eec694d2eb3161de40ee3f64c3b88d9d7d3c972cba65bc84b31e
36c19d3b5c0f63bdbd9c685815a277f774ba09a79c2a4f833221e4f5420e1b3a6421df21
d079d0186f98f76f27f6240c0dd1460712dd97412fe67bd77e3a3dff896c1bfa87d91587
f7f2bddde0d499aafffb0caf77d72db11dfe899b05e5e6dd1bd61413d4026cbfb8a6efed
c0b0dfb83bb479c06c256144700d414824e7d3d28e6af7b2919689dc34fd79c5bc51d683
ac63b4838aada8fb46cf81c9d5af8ccecc09371d76b7450c9d01ebd602aa0f0453008bde
1713d0c9459c09c9bf06738f7775c42060a50f86c18ee79e2a618d0c5d3642134ec09fea
29000c24db91505329b3821932f064308b16306481d9b1e12cd2f83e49fd9f645b91902c
2db0a0d2da941ca53fbf264f49ce3a590b0d9e673220d11d47b70904c1bb444e74e36e3e
f8abe78763ea83e2c64a25aaff090047b6614050a96118954f8a61e2ac2057655dd6e626
240f57d7676f08f4255dc0429ace40ea6bd3cebc2072121b3c88dc88d0aebde013148a0c
7057da78f720442d3c9e36431ceb6c17459b79be24a695a4ec0fbdc49f58ea5fb7e3893e
80bfa4eb9dc696b4c295bd97abe3e23438b382621c00512a961e9165c4a31ab856e700ac
4997b255e95df61a3be41ffa15aeb4ff636312f9f728fbae30e8c33179e4a39a8630f65e
94f5c22808bb2c8fe32bfa4d78c3001ff0fa6b5cbe383a7faf26d395614ffe400b9811a0
f3b7bb522f0a4f5b36448abbc3f3c6ee11e28118f29ebf06bcbdcc32ef3252491030b3f4
03721a2efd58aa6f7b4267fc01ee0464ec5561995de868626cc9f476e2722273666f34c1
9eac2b00fd2fa562a0901d01bc7681bcc13de8ba37d1c1cf7b6ca13f84e2f6806f47f530
ff252ce12c615e096563063d78a0a4410e191e174a0563598c96f77c4492047b1ca321b9
616abd776165f70a6d9f56be28ca9827a5d7dbb7eb52cce51179ddbb8fb94c3709508f2f
de3d704fd616b3a6ce9477e74b1dd04475873529653b285cf6cac190188e8183e4252c59
2b29ac4cc8e1bdab94918eda04551f19d20d178e61be7c3b9863bde8a9c7547c86dedca2
5871970d30e808c7e16353ccf0766e8c09ecca97b1fcb7a05dd99bffd59ca15d50dcc4fd
1ace6efd7cf840171ca6a7950b3e01f1e038698f54098822b840252761ebc9f924c6171e
5640af910a0488f10eb89ce580007c6720b0e5414668cb1049f6fd73599eec232e6b11d5
99836390bb0d5e3b97eef049814e17d80a0d3eeeae89f1e81ca38d99d82695d99a7abbf4
4a4bc2b38d623896e04bf37e833f4a57983e75bafa091d99e9e24f96df42f8e60a924ba7
770be637f5e131a30cd3d8c4218d385a5a9c4f56cbe040269720fc9bbb46ac680602ab8b
93fba7fe59232109291ea36badb336e01b9c92aaec19edd5cd492fc4470bbdd737eef8f5
d875b0a1700e03c01b8dca3133ea24b88df1d363b8d01083b09b20c8a92005fdc0c24a8a
3450f2833b4e36909fef39a01d87de818fafa46048b978987b6739d657e4d8b9825997ba
ade7baf159e1b35fdb0fdca1473d2a599c7a806a650a567620f0e0bd4e2aa7065ee4902a
2bc2e7549bdeabe3396513388cbbed88c797204dd6f84d320988b4e3e781cc12602ff7d9
403594e98c29985ab0b85ce27e5eb34c19eeb015fd5fd9655f3883bcc8aab4cda388ae02
753bf6f394b225aa2b2293b7f1cd70480c141e0109cf116fc7f5c57658a0d36176f72152
57e03ae74d9cac755c08a675e591da7c2ffe7398ebbea2e57141ab50428e4bb694e5641d
2d2cdb2c28a1a6ae786c2d0425c1a4c36a2c939e818bc5127565723a5fe498764767eac2
804dbcf507c8a3b2b8064e1d97ec90f8d97b322dd9ac4dc8dc3cfd7f2a0706f3d1711049
fde28899ad9579f9e3cf704f62692bee3364a511653fc1adc34dc3504029f8641e3cd2cd
9d989ef9f102c07375314b33d3a54285a75a5567bc45454b4f16f5bf16449b509378bed0
4a336ef7d0f6ef160ccf30874abf8ea10a5f5e193fb9c678901306974d75fb8e43552819
38fb1d2a690655ee4fa1c49e755219086a25769754737143510d15a25c214aa91682958e
f4cd953282ef0d7483da6fdfc8e860e5bc754daeaa36848cdcb9fc0eef67f2b9b557e8e4
65c7798723ba0002b5c98ad7993da99811cb651112131d00cd68e498d9b2d6cd49ffc276
130d750b296bc3a38b678f3d95d8a108bc3b0c5d9d78f5c3a3cd80b5935228b181cead28
3ea093c2239e6698ae03f3b0c8848ab383fd621278db832347be25a0298079be21d3f37e
26ca5c29f5b3d55ddcb66af2bed78e56fd82cb7e59dfd6b015676b66b6b44768108aadaa
c42fcbaf2fec73045432c82972de3a59be9fc83291b48dadd8acf4f1fa778a420b0843da
3add86803aa2054cbdd1463cd5277297f9bb8a7f18e5cdf1863e0325d6405d86e6a7db52
8587e665bf90a698415f86b85d49080d9846416a9bde7fb37aee3e87027eb9e2dcbb16fc
28a8fb9bcf4d37b83fcfe54bb35f5cbc8f6dabed5f95c99b8cb5313148f9f92e7a45224e
8f122bab91b8362e1b62f7444c03424308aa68e0853469282563a8bdea3155c7d45cb780
78e09b1516b78c8e462c6c9034642a8f069972c29c0b4b148b8774193982be1de0a6cf86
40d20767f0bfbc9e8b92475116f401abb419560690086342ffbd2a0312a20d9bec573fc9
833a73adcb7024866151316595b84b236886a96a355d6f21a3c2dd027ed7e92839e712f5
73a434b6404482010848dfe9c81e730813466200a6dd9658949e5eb71a7940bd1df3d614
ae4caa4dd7b943141dea776f15636f0ab761d8a1afe10b4dbdf9f949d76d326812d75837
c93c3f339a48fdd32042ed6de3ce534ec0ba90b14f81091e24a2c36b3a0160167852916e
8489765b7e8913276b8ca31e3b66a46073fc5e8c91cc743caabaeaf2bae259207ce7eb89
9b22f6b36b9860c422de445fd5d68c89244ce5d583d7f658bc0440eae4f66410fdd4c331
13b394c3f4264086086a2146e0c429a794e340df9ac1f33308ed18e02b1c9785d5ff2ab3
6ee17cacfb9e1d9616795ab519e9675339b06cb925821a3b643615a3ea7b827925243ab2
e271630a99038755565b709767f4d142e6d0ec91415d02e9f24f8455f096eaf5634b8c24
60b83e3ea30fe52f440d7cca289349d59bb45833e3c7e5bcf7ba101115228b774d3da3ac
8947d2f5ea712f9c24e5308fb489561fd55e77e7375bf2ad1b5f1e5b537ff93e056d5245
a0bb8ef330ab3405d866e135c5d22e0491dde088972e85de1ff94eebb022d548d805533c
54e3ec0a5d507a4b532ad7fd6b22c9fa7ed3f1ffc7e284fcb2c5fe783cafa5f9abf00815
6f96d976520c02503dffaf4d118f9d0956f9e839f7097ab544385d403df4f1cf658d0548
015fe101f823d88bf45f0ae8a2c3eb80f582d241755ee2b5d48d43123367b182f73552bb
c74b277fb3a36cbc276963079fceab1396020d569c0599b9168f5cc5288d47a1f6754476
ef7cf3275b5bd3727651696ecec8e105003cf20de6320994493a7c0a193a7a80dbb77030
a199dc886b31dce7c4984533e4de4b00bf48269afe4f436326924950cff7b5895c9bcd3e
0a8c794f544c8c5e76559fe2c04b6ae73f801732cf296b349742004d0fc54a4e4bb28440
5a81d478b861e3ed0f42e6ba7ed62c9614faa5d92ee9cd183e65fd4ecb2494098431a772
df9cc308d6b95e0ddb1f5db2a851ba2b8e5027305b45b1891c59702a65d92e6fd5c734c1
b24cfe8c490267fd7c43a4f9d20153bbde943b08cc554af1fdd10d27a514ee08d1fc4c6f
4b5520050d35df8413759d7342bd9b80db6e927f6d6dc359a774753e02d01b12e9d5da21
d53ee22a0f96e4c7c23ccd5018e7936f885ebaee30a83087e7beda3ba9df5c8f8649da65
c433a858533efb8d11c0fccb8faa328cdb74ebc162139879e14a2224068abc8807690d00
658d65ee0e26b827881a2866f3a9e5421e1219bb4e4e1d32f0db4fea552ef07e01d796ff
40e99d8aa6040c4000e146443fc0c0983037b047655ba994677729264e168a73cee6b63b
6240ae573936f424aec7be6b094e4231ac48330b1819551ec1ddbd53937ebd726c9e6e53
aad073288dc7551ba9df39a283eabf2b66e16755af8b7e83502c82ea7ff7890dce0ba985
46870c8a1686dcc3300499efde05738fab915e6def0778f47db2490b6430df0579c8c392
a01dc62d6ded5a68c499054da5568914eb519c72b72bebe358d77aa9f92f089ff16629eb
30567247efa8348f979877c0cb4e3ab9ea50a1a361bd5c70fa0681806b520ac0a0a06fcf
c31ff6153962c14166238493ac03551821a53bc5b0e8f7a2b25af32d5155b41b3bd3dd90
2b83d16f4ae9ff11e9cb8a9e63328d74345936a007ab6d5d16334b810831ac2e937113bb
69777f3225426c69659defd268b3e75950559616d2fb9a75990122703adf7e7b7c7b87c6
97fbeed69f7a3436145b2dc3bc9f5862befa72860167b762097a2c624103045ae9507d1f
682efeef0f419b84812039dc53cc04883559f4ead2f49d552c813c3ca6a8c5619e9f1c16
0b9220a7f6701db8edaaf9f047e3a4cb5d2340206cd31dcfb4e41d898796cfe545ce00d2
65da94feba0c983ba7952f052084201a03e485c7d0ef1ce1684c5dac6507b1a651065201
8951c4e01804601cf35e69171aa55343df3fb7434aedfa1ee54d481aca3a94030b325d5b
40a5ddc257ca9e5d2ef105ba285f4ba6cc1e78fa2774b8705325fe8c62e0af19d90aad08
c25dda13a35168ed02ede58a8d0db2a21c2e8b520c164d7264dac5d95e633c2d1ff951e1
943ab65714264f19b3af2bb41f77bef20b21c24e9bf96a9775840413ec2da59df91bc16d
32a5fc41a267a5050889d066f5c8dd008a0d776ce0d5fb303bdc21f1d868e5ca5a67bb0f
af36de593e8819cb7a0254f0b21ad8096372d13a306e0487566da8edb1fdd74e0d84225f
821d04f63e2e875b9b51637e0796856fd026f59da07a9eefb22f799e82456fe7230e473c
ab40f2df7f1efa6f67944681ad387a591ac87e2404d597a10b8630fc2c94329fd8f096c3
1f86e4465d217e6576ad7feb23a19895ebe208f6771a21d3f90f66a26c5a3ff1e7d603ec
c048142baf2f042896fc436475ae06cea0a0e298f495e55369d47a54b759842d61688081
720717c2ea735e621abc6d277dbd726b27b502a7ecd418d818c9132bbad763ba652f8b60
0846ebbc7f550ec06631a000db3e3be5a04be0ed734b1618e4ae710f9d056d38be28f9f7
cd071dd9fb0f191a71dc5a8db313ef732ab027a6bb8b643495c76d0a41d0c21032bec18c
e623be54d82283546cbb5ea124e959a479e5fd1996c969c198073735c27e128b1af13c64
d8c11fce15599e7b517177e8f33b8ba9c937558a470e12661a42ad5a8e028b90fd95f9d4
13e502beb043e179c01ff12a3d9f07db6c43d1696811ec9a2bd0d5e837ad27f4af48fd25
e0c45999183017a244f2af8e490fbb589d3e77353734b250b3466f5257d96c0049d4728d
b4643705219e9cbb76618d47e2aa03c50d8b324689a357b72434ed2621203e59969d8809
d6a8b372ce3938f045b4ec7ffa549de2cacd4206874ebb299818f17b1ed1ab1ad2570c25
737a9ed36d85fe07ea828dfa3ebac93a114f51c0d2a31334139d878760e29e68a5035663
246ffbc52dc762c8f7f59c2ceee22949c04a65c85b17a3747a212734ab9a2d66f26978da
b7396d2b3bb1b8fa97b24c8183686a6b9ade01351398573f30fab20727fefbccae5a1df0
897a8c169026331926cafcb5466f76a8070a1159e55c225c6f51c5f39c44f6a25245dfa2
ea9f3ca43b76941fe260f489109233e317eef219ae06bbd864bd5525afc43b0a1e34cafa
eed62b6b1c2aaae85267e3e2188fdb323400d9a72d8eded5e869a7d9e9fa9443fad84559
31774804073756ed0fe7b29b4b5df7fbcb8ffa9cb6ad5542635800906a29ab32f137cba1
ec4d6790250866d1b80e90301ba05dbeacff2aee6e6a59a2ed1b2cd4cd4823719f3cb5a2
04e58785d3798dd98e5f40fde544a4c37446a674733fa16c7ba16b10857cdfe7978630f6
5e94f5c22820d4bffa34ad24510849a0b6ce67b7ab90562478cbad18486b42b72372d822
4b2ae3d2202eb893c57a186b9eec4a288af7d1a872ad0d2789cc4a89ef2380b244b74a37
40822b61f2d802cc76adb814d2cf909bbe267ca53601a529c0bd0697230b6f2f10247d3c
b0c39a9641c5d4304f6c764c07a7307a93c41e33a1c7acaadb1ef4d771a23343e5c540cc
22be0ae1d071dd525f93f8838512612bf1217a9abca53cc595647f9ad8418e861e22c53d
04aca86bbb1d1df757c4ebc2af236f911ec1fd1a0548ef3a215cea52bb0343b5b01c49b6
cb7d3b4e664720d373c3d8f07427d89253b9d709433d8dfa2f04ba9e410c26a22410d5ce
d0b879b77ea3cd0cc3164993014e2920c98514859d2c51e3aa522ebcb3a668d818140c54
7d1b2ae703e3799b828b8a1d00a9689dea67596e419dc3efe937dd3fbfa8dbbf9ae9749d
d37ed01bfaee54938ca96ba68e1ebd96189d17f3c1c917a95b6575bd87ec5101e2a5ede5
3b9dd13ec19324404a12242ee7e2eb66bf8d85e2adc54d0d61ca2b60183358d604708fba
45fe7454c270d5ecf58de6f5de5394d8edefae8c7917fbf4cc7b20a27f2d7a1fcadf7061
96dee911efe5f079194e745bfeefd7d4d0ab4f43509d441c29e591f0fbdfa334fa49c783
fd5d0aab3d6e16eeca82478fa8031e9d903597bbc5836ba2048609f9171dc0ef08482921
1a12826edad135972ac771d3b18dccae353b462aee51ca00eda65a8d0888a159a41a6e00
5c8ffcbd96b93a4321fb301299e33eebd103e009c91f0e68a7296ac816eb771959d3b2e1
3a15e14de30592008635953c197e030e672c93673d875229e0897ca9160b7fbbd0132c26
cff4f53314369e87c8ceef88a08f5425083b3f57210299557480377b3edf91aeda9d5ba8
248b1d9207ba4f5fbefbb8c1ef6d17910f1f6ca005f082821f9d3125aa6f9e3cae3723f7
c623ca67297ead9b4c7e654fdb4022f0d44dc2eaf6f3e4a8911e86055eec0488860fc5d5
4a94469c777210aaba07c24480e49f7f89ba5d15c1b8a953bbadf97b5ee34a59e9377feb
ec8ea29b3bc0406ab6407f09588f4914def6e7045540721342c9e63b929f54b0c2ed722d
2fd8bf50325016b0cf746cfb23577345b36bb17a1f7c3c422689bdf0b0c0820fcf2aa488
1d8ccf66cd17240d16f48a02422c358c95b76cb967188414738c59a752fc3bec9c6d0250
d90e1e7da817847845f2c47a93700fde9bf8f89d95cbe6c7065c24c5209dada45da6f178
0412c4316fdb21a984d21872d84c023142e4fc7ea86694089bf2ab3bfea9a53b8979889a
08c7857f03c4158e1565844f2f04e82f07eab704cae0782f6ce59c2ae9ece6073f26dbec
178af04f42f3f4e1649bc4de47f4e7a95e1a0fb1c3646620869cae269bc6ae93e1b54113
5d27f97ee5f01dcdc01a1327f3183bdcf863c4525b7697ba971dc9c61c956deb2e649709
d8fb2858c156460d1022237b6750721cae9deb930d339bd8476a89272de099246f15bc24
201b80ee1bccf4bc5d4e0decc51ac1b76f2f727b866374d9197802b10194a57a22a41906
64b6c6c0714168db92e814ff531da78abd3dd9818a2f6b526f51b35771702c108817d71f
18e25f663ea1c3582348d04a584bb12de624adf6d0a61c2eb9f896f511f3e35bef45895c
1f960a058825546886961e898cde901053b8401516311eca6ada2645abd0c9098e03f033
fd9fe8c661d764c6fa8bf866a435de9ebe1d2c88908e446a16f6009ba2f11c621d183711
824e5032e43b53af9e67532cb95a0044f2f31a3d910387cb2cdb32abe470d87138471208
6ff1d282f3257cf66850fd7d6d57fb10b1bf8d35736fe36e2d2879badabc23fc45860a4f
7568cea780386612354bee27d8b69bbe92cfba4a6e92507a9bce4198d3de58bbc5449269
fe7fc67c8593df15a6d2d7dd449f8a26568fa3a754e15912022668712940ac1c0ef07ae0
29393f8293ca731776cc8e4cebba1a7da7d8285489709f6c61247dad7337e13846702155
27702acc9b24c5cafb4674cd9fa65cd3f26f984efe2db27074849aaf4412ea80c3cc5e78
859d27594a2f92c01419bd983d6ac289b9e77bd38e4521702d2e881a2c4366c901c35a43
3387bf4a621b7e9e712025d025c3c084bcc0d7f70c785a13f9366d2d9dabe108e3e084a1
4e45e130c462260ae07d7815430552596869d84a67239e004cb222fa1c6dcf96c83472f9
218af4eac6e421ff495598952f2f04e3b5f4b661a20ef42fb4343123cb10c096a1be5f60
075b43ff225f30297e4186a0969f653c545927081bf433cd4915c18308ed8e0157e02814
b2c647a8718b9332f870bbafb34be19ffdb2eaf62c8adedf9238ab83171b77de3befc563
1cb8643ca21945df764f258ea8d8bc923d3bcfc3fc00410f0fe76051256ea5df61cc0203
b1284a61b64ec71b4692a3c85cd640373b1c9b560ed1f283b0d331d1b03639486475c319
00ec8e0def7c7fe89f00535dc78ccd602a021ef810bceaec8fc09dfad142f6c1c5770c4b
b63b3fb50d85eddbcb93afebed4684271130c963145355d51dcea18c5defff22859beed2
938033c1dc1fad5cb90b2c849d6a86e7f461833e13b2866ab1f7ba6b55847899a24cf8cb
c93c8cf480aba758e9eb65b0a3ff9988f27046ddc6a2e419a2e4ede979bec1b790348889
26993d48757566dbe9e28bc8a3294fb4458c6533b4ad60e3329a50dfdfac9bd6119a6667
51b7fbee9e4fbfaf751caf791e1cd38f60a192c6891e12b701a69cc2253ce4fba53b9e52
296f7893a91753c8cd24bd8569077cf4a025f2a58b9a2248c40762b06e3a2861991d013b
c6449069264ade474c7dc8ef0fe46e2f2d0833e9199b1bdba5b81c1860c8d34ecd18b623
41dbee6874ace983f2a3a2921ee67ab9896c1d98374179d1325b0407f22d821bf81b2bf8
59adeb0243c56ac12e9c55938667ee404496a24304cf8dbd4cd32a3c6011a9cc8b651ddb
4ffcd275495b4a0c45a6b40c9588c13f015975a93abe06a3e36c37852cca4b3ca00fa761
d8f3112a3e12aacac7f782f4c3511de7d1d7286eeedaf4f3937d7e192b048fba753dd312
5441a800a24dbb050735b871b979371b813929d103a90a362d01dd52f5b51e1fd22463f0
926848a650b674fb2f652bb53b35f7b4e506bd17062f0a67117eb3da3d6e7353cd9af141
48c002f74d63c5bdd32b4b583fc33048f2a77a2e92102378153ea63be2dc7c14c3ab9b0a
7ea1f641a57d3d1dea251d0e138ad2febe49f4b626b2d5403fde318db6e70c62db8882b4
a84b2128c9bf23eefb73c676e7b28780e495b6bbaab3f5d57f9b699319227a3003afdbbc
6ca42a7c737f52c8098ceebe8c1550ce214bc934268cc56ebfa82a2d59194f3bbeec7d6c
fe4222572fcdde3c2fb99df1baa58130f0da4416385be87d26df057c195a5218c3ed5eee
6d826f82b670f9807c445bbeb842bb7febcd63a53dd7382f30b1aa975d81d0ca565beeea
9146d3cd65aa7482c338ea078cf78edc1d257bdf393a1553416424544668fd0764a14be9
844b68c27813e9db0b57708871227aea5ef5b31724db90c9ae23954cf41737a845931ccd
c057dda6f7e1e4bb0e6b33f9fc6ea58035043fd9bcec9fcb152b45ddeb0e643fa99a5328
0c528a49dca62b47b4cebd56e2957469c20574d65f9ad9a028825dd68d7c1c30b04bcfc5
907211ccfb54147fc75a8d22833875738eb12d903c1bd49632bcc601d10795e2a45a7832
52d89d03f1bdc884c2b409cf1e719c156e098b01933d4680b9a9712b2079e6e7527dcca6
8cd55b66435c59c977fb63420cfa465178bad6bcc081c9335ae2aecd5dc2a7764b8f6b4e
d30eb947c003b97f9926bf5d302898d90832f7f6c95e844dc3a3c504dbc9c2536ce9bdc0
df3749e5fd2d41f949dab086b8f0d02b278218b43529875e2b4cbb26de0d024af21a5ed4
eae4c3b7aaceb868c085008a3c7c009ef179ca297b6b00f72f70b358c3b73c82caab4534
64efc26463ac914d2a0ea3785966546e3574af977bfa7ccd5e7a205900d522da740257b8
744b58cdd40ee668ca174d9d8e89d79b4619edd35f0280fcd2e96c794257b6cdc97e2d72
0a303a70e9b080bcb9213d7c4f79b6ab571cc11da218eb0fc4dd71b9ea06584c81187114
5bb278c12995204d44c44190fd6951119e4f397d83c3c91605693b0f39fc932842cc7738
735e860c307f1c3453f669becd8594b8b39591f74208e9cd87ae7a9811e0892d9c17110a
36a4692762bbeee8df1940579d8554b497da07a8aaab068babf05d6e81ac220fa087790b
11fc67eac409628c10c9381f29fc71f53243d70f3b52592954c636987f1f09e0751b19ff
3127dfc23038d331b461d794b066d6d834d54f467e552468b0d355d6cd35fd4950775416
918afe296e4969c8a0b0cd24b33e642a49128ed8c76cb8714783d0f838a0bd06d0fd0eb0
aabd772b32ad6b0c3f9efb1373c8945f3794bd9d5bdfe2120e335f8dcbd4ec6097645106
9e38dc0dc3673b297b020b9ec2ace4ccba02aa19b2910a1f89706f40deff8ee10ed1a5cd
8ea3d237e07075535002b58199667a5551b07695c543b606778afa572820b42def4bf811
407598da0d576ad480a9fd727d07c9d5823ee754d52d39df9c46fb2028a3b0fc62c71718
b7ab7e6ff19a771df915b081ce4fdbb51bf6db1e782d4986807be343526c9a1087a7cf63
86500a4f2af536e34e6627919b88dddc4045a4f43c7136d8dbe0065a57c125efdf3cc45a
2c02a92199079f838a494ba44be4e3a99e7743922baa6f04e3abb2a5bc8f0ea4241f53ce
1cae257a0b19cc36d01e817bbe9937141e27b0cfdbd4dde6d6bacbf76c1560d311d737c4
3dd5aeb38737152a8d7857ccc9c76348a4cb49a50e0f4f17148150b31db3799ba721165f
b3bc02e89ce465dbf6efad599fbf42280617fb279202e8b63537d423e36bee357183b3e0
c7c7fd369e4bbd11fb51f6364c3770b6cf075f730d90ec99610b532fb181285c3d83a30c
7fd1ed98cdb4e93bf55b808da8022ad7415a1dee13daf706a0ec8efe8406113c737753ab
6f78e055be6ceebcb914a36a9f4e1c07a8ba02a0342c220499c5122d19faa69afac3ad79
b5441b8744918de48b3c9c0c90e1186f953f1470840eb6b347791dd26c9ab58510187de7
259ef0cf4a57105e2bfbfbe19d8f718ba02823795217a64082379c95c17a4d3c866c363d
8dc28bbca4109ff255f4f06b2de8616d96f0cc65229cde35cf139547367fd10eaf0904aa
81a90dea53242f5bf315a953fd9f6f5faa6ea75b5d8d13c43262a1e85a92e534588fabdd
c33fb77669526aea1fde963b110416a1a8db61c2bbaca0144284370684d59fe785181d24
9480471140568992aef1fa4d44e01fc56377d7637514b5a2d9cbd9e163b119870a38f591
2ffb8897dcf46a4da7bfe5e6a60782d3cca19d2b4fe0cce5cbd06b9cc534ea55d6c912f1
bd8f3285688a4d2570980735c7cff54e1d843be0949519a3fab59a5c46f6f95a277ef9f8
4bee48f3d6b3eb659c19213f902a199e9d2e9782f6f6271b6373e297fa5b2fe4f387f7bd
fadae668611fd634ca6660162885ab6fcb99ef3f9a097a3d9ad7c82963f1ac19d7d4ad39
b7d3940330e531e78c8b569a64a8cf4d246f434e48e668a2a01baa2f39b29a72b098648d
5e19ae5e1ca79d0e5e00c7f23c5412d85667aa827ef9b5900bcf1f4b7dc3870c1547a48e
bf5b0f4d828415bb03525041bd5ed190f2983c6656e93a1b8f830a8cb3b868ef17e88278
e3b44f916da96d7a8822588ff67304fb9dfc1e70bae81dc1fb6eb742e1ef9fd7317b20ea
98fde79930fb77396ba809961cb8d1560beb4480a2e741efd718fbee5de145435e972839
b42c73813275bda1083cc2321833247444a3a74a1d5696c9c87f1ac23af14bb836b6ed92
6246a18deef67ee7b45b6b52c44018628aa6d90eb00ac9708722f5202ea983f6be7f1767
1deaf1e436a627e9b4091f8a4189247a7585114054332bf3afccf35842563e8811319435
89ac3b04f0489eb611d7c5ff92e269af6fc8664ed215e0633cfff36af1fd88681145c72e
f678dbfee2b1f7c40027e903061403f57ea6b8760ebf7a64d93010170d620ab1c7547a85
9c4e0bfa1367258aefbed7ef6cd68372086b22ee50d8e59cfe37fcfd05e7d155d3e11994
45deaeee880b86b638d20be75d7afa7a80051fa06bf997116b2cef54fba470b5098c4b15
ed4914d6eea19569bf8f29ea4bf081321542b7e904c082a5e81fb747e0ec8ef0757af1ae
e7e7b2b82fb629063a8a3aa563508c2663776b741e8aec2c3f3bf346840961fb3b1b3aa8
44d1ba17d520674e356e0694a7c46d4a4cc56a2fcb7a2bb4bdf1853b2d27ac496b94c31b
d172d0b3303b819f952d631050aabc1cfb9b88b84a628a286b3ccdfd8b223fd8d76bb09e
f19f9fd0d3d03841e9e45520eab2802215cd7b19e38ecb9cf990e51cff9d182454ab2bdc
0a7598b8cd0d6e4334e03c7fc6966ededf8ea7ae9ec25dff54a9f5d5b58753c18c95143b
6e67312ffb4e3490af12aa045886c2670d289180c5a12d3a6eb71f97d793c883d45dc75f
f49d747f32e3031d8fd57bf5b8b26123c04c0ecc18974ce6aa832da414d08a7de541058e
2de121529afbbeae900c38ead473ab30c3129f4987cbbd706e768f2db510998e5e9fa5d4
31cc96a720d91e3d53d883f6e8e502f7fa5bd294025ccc6aebd0288dc8fef8b4a133638a
832e9d468dc454ebe8c5c60d5a470d9e3ebc237f361b757c60d9a92fe5bf0da735873d1b
7226be5713d48ccf5b28fe7994cb10efc827bedd4b7aae17b3bc6a6f198642bdf7d05abd
3c630dd0c8b9d867950b535601747339b2b7b1d75c3f640000a5eedef9cf0ba7544a2675
8f09375d87af70169cf7485ff7ba3b88472ded5f559d15eff65177cb769d18126952fe4d
62ce977810711716bda7d0990402e3513c6ebb71183b285f13e336f71e1a18ce74c29fc7
2c62ae19fc260ccfe3e6dd44f6aee4484362a7a02e4da502182c3eed928fa09c665c3e98
4a6c9017fe932b515cdbe60c829f761e846c5aef7da5dfafd5230ebf3b56d14eb2180eb2
8e630f63a06f2ae17efdee7a6242d236f24c8a273f10e47ecc2841b1421dbdd563486e6f
148ec8f6e0bcb0e18deb2b646b5423a00eb5817c89ee644009dab5256820dadb0438db96
5ea7558fdb5abf099dd9f74b3c5547ddf73be26371b4bfb2288b89ee5596f122b771d5d9
61e6b405163db9d44f5fbc15894d74a9b3224c4dc1a4f076390be81b2db22d20e59b13e2
4f3a43c1c8cb5bc577c57beee17b8f1723035728fea217ad1533a9955ebc88901e451a10
302b13d1bb28b2f6aa7c5736a5bddf31b9ff2c49779be580fbf1382594a5a029ba708aa1
6ad489df1af3fc40bd7b6e8692e42c61d0ad7cf8cab835a901b73ff121765b6f273f16cc
f572d355258ec50b66b456fd0aeb7beac270bab10a2378876648b81de9b7887040a44ec1
6cc83166aba240662b0254422fc7d8064a42b02ed5396537fdd838dc1105fcdb33e01c2e
e60502e311833ff6f3c6555c3ef843cd4168158e2105a513bf71ed156cf7b5a1dacad64d
645caf910f51b549a2c1542d7a4c55f790ef134d98e96b8e5915a5d070e2b2a304326b9a
e488d580d285e103f26f13d599232e83467d2a86602551d508773c81114231b5f1fcd3e2
be708f0eea0e8f9eb7ecf5f74ca5b5e934b216b3c259f61db2c2b1901ab3fd07efdf1146
67f850ee6a81bc1087036c22aead76476538733239e7ac84095f6e3c7634d30d7ef78471
5dcb48f9ce76a31776a46139cf080df10210d66e767763be4d70edcf1537bfa419e5f14d
592568f0f66a256d4f4bf2bd058309f5f10d14d0f60ca30fbe87b944ee991fc80c45cc03
2170f06e8b45763545d3917e8122fbb4926a5f7b871124f7502ffe13f32097f6b1bf8c4b
8364052b8288e5872e7ff90a33515977de15bec412c7080cf095926b7c9299a7b4a442e5
4d26f62be2b3f9801856a83a105405604e0c0012339b004fbb7c68c20145fce8a9ba03a2
0853d29338c236adce3e7b40a30d2336121173b4ba36b71913cb87c777405bd8e82f19b8
2dc407e70bf7d197d15808666f583aec5ad53fdd832168cc0b7b7b04007f4d15770cb12f
f4524f9f6d3a6b373821f8c79753bf3926bec9624eb762a9d940da453d8444771aa143f9
3b442246e4578d602ec08c89c5b1cc50ba6de597147cf7b9e8a8d7fe8b9537457b17fd59
5dfeb3ddf6424700e3a49efbdc3153201f3c9dd1e1e35c8a1c60b2713891a241cf0be4fc
9b59f5911f6780ab602bb9c7bea41a6de73e703b7cb3d85c883f04875b05ec6749ebd9a7
64c04cdeb0a20f7debc1b19edaa9a331693788bf46380ba40896d090801390a06028e7d0
90a499926d26af951053a96e621848d7705bc7a164db75934a1b24f9acde9c0ea57792ae
e9d56f0a9edbc094f000d2f7db5f415e3b0c4454d7b94a43f5a353dad699a7f57a21384d
a52d897a9e8e5efc1ae623aee18956c38f0568ec537302fd7f26858765ebbd4b87c2b121
0b5e0ca2ab47b387124f157cd4e931c0c79882e426c4a3440f89c9ae2a9ce25048b577c2
ff4aec9948f19c1ac2fa28c6f1c41e01a813b09dfac99e50b06c94c79f34b69d50de5b63
e4ec7e2d5575a1a823c40fdb1855c3c0ed5a00c0ccaecf18b58550868ae49e061fec66fa
3940c42c88fdfed29247ec4b0412718eb6006e9a71ea124a7db6056fd5e33e8a8d0e758e
b4b4073952444968f9b6c3487b465277bd54c170f02f00275785b01f6543f042119c15cd
9063623152bf234ff4865495c14813c07a85d46eaa3accd99e49c9456a5c2c1a21420708
111b11955a2925acf85dcc4db3c6649603be42b05919259acbfb6022ec4eb2a2f3b9f8d1
f6dac2da353eaad9ccfb72b7a576327eddf04c53cda08a6c95cd4e7bb5def34999ab314d
d325b08e34f180a626385938a66a18cd684a696d33445354ec8036de2f0ca4322d54d78b
3e299a8bb95472dd11a469f245652d963a1ea674e6862b9d49a381c619a2c1b12b982345
2742298cc035218442e93cb713828a6fa97bee02ffd3bfbf8fbab87395d271af9c16a89d
a024767102fab230720a138a0c3917f01f1c54c3396a84d2132c0b0d95da0ff3777a1369
78ededead284389288ed89705b5ec9aaca8aa02bb7931c8a8b9520b1335b30a53693cff7
a98329a7f4eed5a3a4261a319ecadc4f16cf4b46b2b1c5569d773d0ae8a162d122e5a762
702603b46b44da3dc3b0c1e80897eee0f893c2a0512bcc93cd7cd66d8c3868db1a9b75a2
30e15365d7e25c343e96a2968ffb011e27d8a5f2c60e7e7553e157f6eb7e79d732ef87f7
b9524391c3e20b8db2d8493f8080fa274f69c3ed20ffe08c54c80135dea025bd6f8f30b9
91aef2e36d5417f260f3327440562402317e9fd42e9306fd440c998f8fd533b118a24f7f
0d88a1edddfc33c9635b9b6d029f3957aa46f0569caec36991f2182e75829558af172bcc
22b8577bd8354519a0e28c61f1d813196d9fc09b369e2b765569c9d47f241d48709bbd38
5894c153f27cc277fc234170fb0cac965d04af6f0b52db758f75657daa3a45f1cb8834a1
cc24c69d4c62f686da17c5d4b53da1a5508dbb9e5fc175b7b593a44bbda078952f0e608c
007cda9fb0f6cfeee0b358fae20157e62252ff704099059c3e3b1aac8b806b0f3fdbef2b
6c4debd32c3a84978db2b428719226560397f72800b95b369e85ffe981f9bfcc4686bf17
687ab847ca221898a68e64081f07470c5dd8b6cbc57594f3268dff43dc886c886ce4359a
f884e06ec9ac0c1b205ae72f05331f20b25504c88950cda07824a46613c7514a9f7264b3
c5ab281510ffffab76edb495831a7fc84898848b688d9466c3624d2fe7ce75f18d77a1f4
391ea974e0f3a2508892d62756d023cee22af69bc4eeaaae521985b56ffebb06c6fa710f
34b7c6433b990b3bd63e923bd1799b3b23641211f9e8f64c99a9a2174c0f27da1732706f
1089f09847f57cde8427284cf63d694bd66dd0c0a393b25b9b76a0c7a33afe3aa517ebfa
50600aa089bd25503eea30424189b2f3396eefdcdde8eef6f1639c94d25e820eb0acc846
c8a095e079e3ab19d5022e759676a6bab6d08f7ef472c0dc22d3f224e6744160442619c1
55bddfe7551c1d4324725f317d4a2b4ce49ee3c3c50339b2c11880601f1f3fb64b74514b
cb2a4179c747c08035855762913175914850c4d7460a6216700171c206d3294fc56dd182
f49c777e9b86f720bfc64e9900908a4b5f4a14d479bea48d4de5761eb1cfd374c247acf9
ccd49dbb4b19051c9a0ff6c25c31e71bb3772e5b6c4e431c10d75421036127c5b7c7b42d
4ad04815582bab5a456f477390bc2f46cb4aae646f032e796863877f3d45d8f87c6cf055
bdd9bab3239f145f4a239bbf8d53bcae2f7821e3c127c7617650bfa84de954b81028335c
ebcac3fdef3214d875e7b8dc6cf0bb458d22cab83ff9d8eb54c1c4898f9d1b93ae011b75
0099eaa457da7f2a9e94590b1c2a9097bcd51155151efc70db95c11b36c38ea95912a93f
bba3c2b13450a042bace25b7d0b205f5a164607e8d04366f322199ece9c3a699e117e1f0
1b25dc7cc1bab0b33444c8a2472d0ad6c121b7c2bfe09a62e6fe2a1c10fc82577d85d594
07668954cc4f5599f1ae108f2c29e684a71de4eef4785ce0f7b1c019d6d048dbbc940c97
fe89470cb83f6d9db27d74d2c3d91843c9d2405912bda5a537b9dbbc718ad0ff8ef0664a
cfbc5eb6c18d28b764361a2663a5ede9940cf3af6306d8bcf0cd194addd09ec466273933
2deac1bb61caab937074c7c59b2ccb742c931afaa49e79f2898607a684147263178e238f
fec533f335459e0af58657b24146665c7b2e827e9ce7bead762734c9501781abc2129300
edb075e8941d05d84d40bf2e8a375b7109e96fd8137326590da0fbe16ed281c79e31f714
410125d00feb4484cfef675265a85938708e1f6be2fc8c9b716436bd89ae2af46c2f2a34
072d6500171bd55088aab2d3bbd44f5506c601277e55240e2ec0752441e019391966e31b
5a9b15227a37b3a13204884c0617eb0c0f76973ee4442ad3f48b40394b8ef07d7731bb16
26a38566c2da1f2ec4033e0ecd5c73ad8cde440d4241ad61a6d53122dd003f57b7baaf7b
3a5ad15b4a870c77aa60696d51af3e305216034b412ceab5924c1e02408959d09bab339a
406e281f8db4f438bcdeb7034a4ad16159504bc01e2a0f77907d0c301c40a80454a15779
4c5e528475756dd36ac2c91234b71c6125b642ca3e5dde78d2d344d5e94b52df11d2b309
985b4be7aa3778d3a169c758547bbb15d1c9a0ecebd81f66bcb645be4cf06081268d9b4d
acc80573d44d8f5c517ad06c49c003c5ef776876f2c56c896a12c45d935799ee60637dcb
f7e25f02181168a030b62e93a2d0d01d56f4168de5399e278e95a3c16e9a3d350171f532
a7462a54a0d572521560c6de41f6cdc529fd10961c8f81937860b769b1bade1cbf511983
e90b4437b2e3045d0071ca2ae3029efbc2ee799c886f1868872a9d750ebbc06574752655
bb855fd653d9edef49a7ac51bffdaa33e76ca6b262637796ac4472b479595f671178ce2a
735e0ec79c6cec4897c5275a25885142e072832c26a45ed82c8489ffb1ee2a1023d2adcf
605821f8ce09d1a09316607a147361bebfab3134b03671dab2f4cff3dfc05d6630dee473
32783451eb5a1328e42c8444e8d77b7bedd3db414ba7d44fc47169417f6478f3f7d51b0b
e0e9f740d1da60cda862da1e372a2b33c878259969574f8af1439856a22085983b9a8c34
27551006f7ed1b28f2caca6aa56e8a64fa2417919780147f0a17cc52a5e92af17427efbf
7a2831d9b584830620c812b0ff5555c5d62edca329ad81497af276a5da0a3b293e5f48f9
eac15c9564c60ede2b7d700c6466796cde612a6b032bb50a972194349a65a4fea047260d
6474f7312bee23787a6ec4b7670b7d4f93be7ab6f7829a87a426419914ed206259fead9e
c384a425d1c19f0b2b410a92f39552925b2c5f49aa44614e74355f89ca369205cb135151
821de95b193491469390524769e6588448b57ef4f5f004bb76111f5ebd5df409ea95ed9f
acde7910a650487d2d7887b350a77635a11e69265d62f10a4e159c1a540a7a822a961bd0
2a71ff2ea4c0d7caab97d6e98be819f0ca8408c3869e3972bdb7a6f48879ddb92be1eac1
99c54e60f33c142e7c0f79644ad78e3f43b609001a3ffcd97d313ac3b86b97ed19f856eb
8ca11ab6723d1fa2a0053c3c2ba376225aa1fe45fb43806ebc4ca00174396ca78703d9cc
36a8f0173b1e5a4a84760700ab381f38064089d5ccb1f7b334e93f6f5c368d5066748fea
d9adc421a4beb5bf56d40af92e052f074086c239b5638fe2e3c1b64cde45d80e23cef91a
67fb0dfaff4c803f7bf9c7e624dc601624ce807d28ceb2d4b66cd04645823ecf155544e5
a7f8de762f6505f9ecdd73e48320f9b3868cf1dded7fa1e8dbd070204a33554ea849d20a
da5da5130a952ff37e386a27e44d3b68f4e5fdf84d0cda1eeed625dfb6ebf7cdc640fae7
ab06daca8b224ba51f894afc21dfdf04a021c0ce80b49d690701e33b87256646292fdd4c
dba617c759122373a1fa1e12e7a29930d0c33c165128362de5ff7a70a851218ec7a511d0
72ccf3acc002356fa11238e2aba46870915eaeeaeb92f7f940d9ce2cc9a35316d1c44ec3
4bf8572c706fdef4059e5aa8db64e771d7ca53cbbab10135c71fa3f1fbeb98522253040f
e12d11576822cedbb349ef7806d3bb4242c905ed0b94dce19f91bc2e5d8a08450958cbf2
6e8800173afb2c632b83bba10a139ad750539d5b757bc1a795ff4f95c5a069a31c33392b
6022c2c11167f394353691f15bcb5b475edbeba2ed0b30a581d1da9feb2265b1afb95d29
6aac3b1b82c6834f3190d6ac4d960f13e0ccd4e38f6c4eb607c9f3e7ac2d5461112424be
3a2123426d77cd36551ebdde741acd9eeba89371e9cf55f4782cab453613871da043002b
c1be0530c8a75f675538e64e097d6bdb89a3b1625ca3216976bf4486cccab64cc172b024
3d2a03533a78f6929e4edfe3e125f686034c773fd74cddfb62ab1a8484db4cf281f06787
dcc13725829c656f4b2588a84cc8296012521ae525b118a20385a9669cd22a20102707b5
0c5a913e026e22efb62cb990f8dafca17615e4610e1609213dd7c449f65c8abbbf730ea8
38f51ca633641c12b1ec2f1e154dc1609bdd547173f751659b4c743341f631c815fca540
5d495d79b0a56c34b3fbe286403e9c754c9426943616f7c6ab370ee26ae77511f21beb1b
fabcf18b05b1d17d34102a14ee8b0944936225d4d0c625186f64afa287d731d7badff236
d1aef435f179a4e5ae128c59b0d76f0056a5c2ab9aafabd35e9a6bc86f6561f336bd709d
9eb60ec4efc8a758cf3bf91665df4c53a5a2a405e7eb936c0b40efb2c07d468fe4a9b3ab
04d085abfbddffa94391bd04fb9b20e3d94b4f59e2716e5fb7f5c6d557ab26a49951d885
29a7a83037b000ac8fe95115faccc462f5861c3cbd0788dd10b803597cd8113f8ff668e9
6de665a118252d353087af8470f8b7cc2425a97a4aa14ba88d2c294ffa61d99072955374
080f67de0498e6e1559fada105a4271793acaff97faf4ed123998dc6d4fe9e7b970679a2
5031664c9f9bbdea398bc4985d5520197666dcd4e40c33851375a9db6df8ea5aa8afa792
75e44dee65163ed635e301b644da0b11ccaccdd0a08d0d6e512e387ea5ca7452ca9ca55e
b55ee262274f774306b180f4c18188f7689cd6bef80abf4c7fcb68927ad9553609d0f4c0
d2c35be17f76e3d477a0397449791a2f8d145c4d2cbf264a9f8e5331fc4031f4cad9f406
56097e4e0041cf97fb2bce41b29ee510c5bf43c0736541003db4f9521273cfa7e71acc13
b38d2709f85ac0109d46d789ed3f58ba5b1ea44e3f45adabcb3b677b0934d40ae4e18b1a
dc69bb2c6bf6a4e1bb43d5ca5754aa45a3b4cc1a1a75f8d58be578bb5fe534d615762e29
7830f9d7195b6906542f4cf2c835001782cfd6d1aba0852358d82ff9b60e8976ac666373
b142ce2536d415a90b181e9365e22d1d3d9b29b3b9e7c5761aeee866773574146c693c55
0c2e1e55fb3c2f1360b9ec645404c6aa167e6dd8e61ef21fad4aeb83ed2128a2fc46f042
c9375453d847d3cc349f89f55e8edb48d7e1e7e0d39d258c41bd00e20dd202e2911323de
a610546dd178ec8a2e8c8272234e9dab1bcfd697313d90bf8f3de058d3cc59621c01c69e
e5dd08a4dd6916de5db24a89dda19c5394314e1ffe65fb753abc50e7602aed714a005151
179f87b5eec356c407f13ea8e19f902d56044b8ae39ba3688116996b8345a2271c3b8b8e
9203e7218acd57dad8ca84e424a5448f9ba62aefc0631221792cf3d8afb23d336b4b2efc
6fcbfaa16dffef4085bde4dfe2a4e42317eeaa4b620ad37c45b4f46e4945cd824eb1e79d
83a64aeccd994c60622a4ff48a8b1afe5777e2d8cb238fe29413dae4f0f92973c2b8c510
3987585e9bce7a85db34dfef036fa94bff41eaa03a1b4e4669de9b95eb68eca18cc76ab6
aa6689c2703893360e8b7a47abed7d3a4bd74c8ac6c9bbed7b0cdbcb1a70306f6dc264fb
c2646dc9d6c0bc07329911dd60e7489b3e438568a04125853bb2c8323b23d025524bcd43
eb07bc4188f6183d7cca717e8c19f9e868a8f87bf0f843a50ca36d77e7aedd098e8b5bfa
1f89c820b884f05fccb661a188f97c073127d1ddaaf62014fdc6cb657ceab01ecae0a16b
a8e52b35482144d3b92e4fa2a1af594ddc6374a78e7fa73d02836bd9019dc92cd116f977
650a7032e7c55ee5782a21f26dbae2648c8b5c86f03032bb43002531cf08eee749a12da3
266217520ab154716430aba8b6a807b02bc2ef7ee5b3fe23f1092d8322b2e16b5ef23dc5
b18d4c91b4fa65041b2e91d12c9837f98dead1dabbd1d16728218edb2dacb159c2dbda9c
30721360c1e7b701f3bb16ac141f0be4ff84746bb8473b3bdc51488d7606b45011e6babd
4835865fa2c50f6dbd57a90e22f12a3ccd729cb94c9e01e8946b80dad79abd4ee293a047
e19d6863dbf9ed6084c9a0e993079989fb8ab78f68f744d3760e28a91000c474536dab81
ae9218b3b12263ec0e7048c34184ec938c01f5678deed57a612d83062edc56b24b001ff1
93b63da09cd09e67394add8415235b2023c9bebac0d56f6a90b97b83ec4607ca73516a5f
c1cfafaa0213ec0e69621fdafe72c82345e649a64e9dc362557155e73a0b69cabf0c27ae
ae547c8de727b1d51911834f6c635defd5719db2468ed9926da2d5d7bc9cd86eb193b152
c1d75911439800eb1aadef83f3c6e4242af9f3e0ff6fb7921bf75a00a5704975ced6a986
b434ae71ff420f4fc2c246ce75fd42cb14ee2bd7aa7c3bc67a2ef8062b25b8efa28c0556
b396a0f429e78d0639a99d7aeefe48783367e213a4567a8309411d3e344daf2a5afac723
b1c53aa1d4ca48793448cd245425a57bc62306644b04dc5111df6cfd6b6e897e7d3d3551
05625b6e41d51f368435dd890b0b961ed62055222d0e97565f9223a19a04c7521ccc50f9
bc31bb2b4886827f93ecdab54c23882b1fd9e35ba37d742cbacaa057c4a5491d4e437430
be956d9307094b45f5bce1b4bb6fc7484e5c6214ab3f3d0ad89f35da6b0aa51b04ebba4b
b6c87c4f3f78793c17ee7fcad7991959407875cf4554320a1ae79804e7eb359a690d8e0b
35fd4e5345ae9e49e29c60264808082c30f24513a951420aa0ca39a85d1f383ad4558d7b
930d0d8eec6366f6c6c71beb4895994375f83d6a271988f2a9d098816edb384fdf794157
ec626ff6ff34a795b0d16e8aaf852f3c3cd057e9b93b6605aafb98bfa9d0b96c357d7755
17a4c290c900ebe1328373cd002f0c5e9e7661889573d28b92710cdf3235031c5b5d8522
0782cc3fcbd91af2dcb9b607647e727caadc1cd6171b4e411c3c550fbba55cc6f0a2080f
e3a9841f7e38541fafb28fe21bf4ff6471ce7ac0467a2ffdd868a5f127b42e92fc8d65e2
22ae567e07f5874d9f482ca92657f4b34dd7a5dbc5bab80becef4a4d939f15b795d2754c
8d1bdd606d9e44421ce3595ecf48004bccd96f0f9fa28df5429aa7b32269501799e4d88e
34b1e5c93fb693a13f5d14e4c5ea8c470081a3f7fc30a610aed868a792f0504117347235
737284110c9c5176ae49e53ec40d14a8b7b65690bc4be71727bb58ff53179509bbc6de03
3c97a61740b4410812932786b4d2a536423cf65847118716fa225ce43c7287d95b7b0f95
c38c3d5729f4a376bd2e1e647b0ae5c7015d56c036dd5741ea4405680e9fdfe4318ea38f
309f51789a7232b2438a74c927379a1b316696f63ee0e026fbd007c3377d4c3b20122074
5eaa155d75a26ff8499c9ee8132f42e64762f3a110b4cca81ef688d0e581cbeb74affe9f
ceb0c71a05266662bbd0f31d397efb20d1464e730a4e06e1d4a74d227b8d8ef7b511855b
a554eff12afb8fdafc6e596c3a1866883c50a59c35dd752583dc18c4c5dfef4daf4818fb
76fe083be96f58dbab2f645d5caab261d71a903511846959612ad1f1407bf9dd0dfbac54
0877401ae519bb92b7cbcd035e9edd330d3f1cca13a06c804af6146fe85a88bddba88da4
5a51644aaa24cd46cd90856f9ee41f23adf5beb0bcee276c4a5fa3f6ef21d8d2e527db69
77fd2f5517f01ffc1331399daee696e35813b4e2fc154157aad9e7f63bd04b8872d3b9b5
efcb8badccb0a90e6f6a6e0e4d337f36d9e93db2f119d34b368b76ccfdec6cd09803c083
f58768dbce8eaf6e5a852c569ca0998bdb1c2a908edb9fa1c4d2b458478e1f0f2e13e6cb
29d319e3ccdac70386ee89b41ad30e7a69c3bdb1ca3aaabd6399ec94070967f8a7f8d4dc
b399c28c837a429f7a11212c277141c1ef0459cd59232080bec3bebc65e2972457fd0cf1
7b4f9ada291a28801865403fdc829d03f26aab943cdb379d0b667bd6cc21841feb711b59
5451e67168996d773eddb43f035ab6177f0b033b8a7c1c3579986cf75d386cb1aa99f0c7
8a94066501cb0a51f2aa89149a02c34aceb9523bdadc31cbc5107fe6e62ba81974a14cf3
5be7d2a30578f2d98ee3afce92b0501f7c355d585af585e9435a4469bc63d761455c2470
92f3df4c4eabd397e37a05efc1114fa11c05c6f04c9157d1a047b2152c4b9d7fbe90d922
1da890339d658191ee5b2ea920fcac82dadd505b743631f33ff70de0a50bbfa77611425e
03c6ee768ffaf3a57bcc55ac30701fe2286fad9cd02a8a402d8a26cb1751d77654ff3e51
05649f286438b09e3876c8b6b10c1814540519edfca365c4f64ab25360292ce74b70a494
b30a2c0b8fb6fd31a7d71a31c657773056c14dbccc658068974dbc23b35559b3fc4cf802
89721343d0812fa47ff780af0057220250afacbd643471d025d4cc5a1da86517ddd7cdf1
23069078c343b8f62f94052c5bdc2114a34f0ed1b2c759d771ea1952e849b7bc2851d847
e670b206a1f8706d2ca213f64ecf3f7d36bbf70185460c2d34b418a795a8e0ebf793d9b4
144cb8a2cb68393adf1f3399db9da6f74c26ca1d91f5344547e14a9aa81e8a0fb5497ecc
d632637e7595c2a10bf35e60bea29688b55915c1c4f434d18f122380909b19d451832b5d
ab64a3e62aa9b585aa7110670955e169a46211b3490a73109c5b04265b61d8bb07362ab6
d8cf7fa1c6cef460e4c9879de621c7761630e8d98857e50e41508f090bd7b54e7634dfe6
0bffdf119634d0a1f0151b09318d7d7d2d805c984faa8ac659dfa53d89e5e256c31e83a7
60127f757710985052991f8d108b7cd5e743fe062791f5cc32ee56b791da43389d5311a0
ef7792c32893dd5e1b8da4b8d4ee01a193372eaeb21d8908b12f06dc8de376e9d2a062cf
e7542b516928908adb75d3efa63cabaeff5b208c76fe9c4082a283002b0cd6aa17bf54c9
37101f1ae2a9c92ea00bdfc5041b251a545e1e7cfddac22629fb0648678e37008484c3a4
83c2b67b29fa6897b9aa2ab28576249f22c3c711cf33a683b92a8a6a005785761e390c2c
cb62b0009e5b325fd95f67b9841797295f7d52203bbd689a252e047c08d085d867a8a3b5
9296d6b95bd052f05903885f1446b54639392994ba6e5784c6b1983295d78f99ded56a5d
64ce32796ed61f5d4b57e7e1e3ec3571258e4fd1b23a275097f49fb8fd74a80d1e64116a
408a2bacd9d2124fb145c42fcff2cb0b893b1a154d05abc205f15a228d30b99ff4f93951
0169935283802f83b8561c26d881e99b35d1f496d55b5ff474688dae7fc2e89acd3d3369
2d8ef1801db4b872d351f3b753284019119a31867544bbf60706bfd5ef496d67a63df939
4a56e8f3fd82d7a8c278cfc955463fa5cf00ff1ad69cc2c3c727c77db80b32f5cb193de7
75b9c528e068a7ac22fb2659fe720bca392142b9b921c537ae7100f0056b54b1b81cb441
f9cde67ca2ce70f57a1d0863a7288abdf6e0e9cbe26ae4f1642bab1057acaa1f20a3cc8c
4de68c404bd6c8e1c3e0c47e2b6b152a59b0578416347b69ff7a840cf89bcbae4d661cbd
191dfe4e63ec7b19b9ce85152ffb2b5b8bce24984200fc25605e3e936f4b9f6028b7f2ad
e7293e6fbb4c87b3f6b2f928393c91461f2f6bb0a25f026460c3f7cb39eaaed69a6d7a9d
13365ab839693a41e14f028e93843c619076f2da2f69ce4a1930966189667f2ff88aa169
25c0142d4bb722c6e078b5c560fbe3f22ab27104ef6f93c4ba5e164a40c6b13bc14142b9
2675a311ea44cae4f7fb0a262f35f7b556551cdd46f4893933f2993fe36bd0a50684bafc
d18732b754908b8181c4a1b9dea52fea265a2397caf968bff216226d2c1ccbac7b24f000
96fe210d49fc22635e4a2605c8881146189c4e1da94e0cbe20eb90ca78176384baeb826a
048cdb368fec59a0ce1abd82157eedcfb5102a1218314d58e6324bc8a39344e613f6a1ad
f4c11075b1ad4deaef047efa1a7eea11e7dd61b0e662056312225ab99645c03dc72627e9
fa5b52aff72886c0d4a8f241094617bb3f8f14e625ab9b8c98adae217951ef2449aa0f01
bb508ca5f44be23339db9c4e32176aa2be23c9badf49416969c7dd276f0a3ab6bb5f0e3d
14341af8373f8e3cf87091ece5621db498de8b70c18bdd66442caa7a7e28e1d0a1fd1c41
83e31691037296c3fa6405e35915af88c7fdbd9b16eef9896c936f295454e5fcc803b36b
425a61aaa65cb91922fb5658c4c2518d852861541f94f8eaf63f7c85a65a20975eaf14c0
0305f335180e3b3e1290f0079cd230f5c2eadf6509c4709a667ed6791ea6ca7ca6a503c6
473a756a1a9f911965ce7e38d356e809f578d74f068c64de407b6e4ac144808e612d7422
dc85f4dc043ba0450b21e990f998827a596197b4cd349b0853da96396bc96299455ddb56
3119f0289eff0e25ea9159872430be8e6c48edef524524bcf7aedc3e9de6ca0f8bd4a89e
8a96d213773acca727e887b3c9bdaf46182c92103e7d1b92c97c30aab8292d0b01337a2b
47c13deb6707e68961bb32673525244b0d23047fa03aed91818736228e515c27e20ff08e
61b7381180172e3f16ee0dbd2209fb1e04f6fff28905d57981c007a4c541528320d57b5e
fb59fd54b29155fd5b34d233529f53892a35cecd1d1fc9a4cdac79dd570b0517cb482376
d09908b83ad9c0e2597067e539defa3edecaff1d7544b09d3c9b1b548156d49fbb9c6819
a96d1d7992085de25c56cfa812fc09dc899b18f5213f20715b363bafdbfbf2f7c7c0e0b5
de317b011fcbc3537e3e42b00bb1412a6765bc0f48f8704a9c3f43de9333deab91dd922e
5a701e3e65b39a40a52e4d754636925ddc39bd97c686a64ebbc338b65a3c545a83220d85
f1def49d60db99e93fa44604a38893dfc3efdc895dfc6a5720836faa01e48afdc97fec1f
70b4152dae0196e462666ab04e340271ef343b3a5cff4caa9b3909a3668fcfa85c37aac2
7b830c85d6e4fb42c279cbbb8f28ee9728d07653d0a1d2ea2c83575ddc4863bb30c24652
37d419ed85ebbb6ed1d92f6f2b8d8f1212ccba7dca7417cf9c824d7b510075c50773f31e
3df1edc85174b2d0ba20b59f6a01728580015f270ef4cb9d9e7b8a028cae3d59171cc611
c33a2bfa4c71c73596d8fc17562f27ac3cffc4a81d53b50d8071e1bcca638666e9745c5c
8a91aac250e2e769cb52d40eff6f0ae28d97596e0798447d58bcdf23c1665bad38adbafb
844bfbbf73297159690435992a6c6127edf87df14068eb1607e1124b1d69e77dfc2966c1
683bdd2976eaa83ea9ea51a5e9c00082df83200a4951f7d3b9d94c9f0f91e4e7d96df439
4d6298cd5ede31f086acf97be2ccecc8df4e9b6d4be5a3da0bb17f1c9e4682215e4c511b
8983760e07ad19849c3502db66bd7be92a815d1fb49ad6681c1c95b9b6589f2ddb3a3d0d
29e8069f8c6860eccc58eba0dd1b382e0016490a8c998525911ba8ce67cf15175f9041de
3fba8df09982d88b14e19fda82d319f964f15a1209fe1aedc6d8e1e4f7cc78558af9cc34
739d2e8498bfc44f542634893a6efadf5a832c2cee2c21a1716b378fe85750c737ea7a3d
597248bc39d32511e54a064b4065b6927f1e7d4bc88d025985b91a7327519ace6c845194
f4e880f0c5ec7518eb38f8083428670d8213c166871c33155d3c468d9dc1268afa714af2
d293ce8314b4c2e5446a4f70c4aa9980789a9ce8fc29a3f983771127b580209891686058
7b2c8326eeb8bee3f822a3106eaddc5d6fee4630661d91e24d8810c9e35a7202c9935dad
5654c2ed6dc7f83efbb854737e38632b4461fe764635410e4bd336ded97ea31dec2216eb
85227026de80ba7c10c5510d03af053444c31e5927dbf033d929f23ed0d77cce2b7a3bb7
4012a4d367fc451f82a2b7d1411ef6c13026dd297bbc77c61e6942f88a86e30e0fc1bcf2
5f9e9ab3346ed6eef90e19ceb0c967c5caaef4cd273280b7bf18c11dafc7bca652563360
87b68f169bd67307f1cbe7408a32648b8fa6ae6d647dd79fc2e63eedff3e3b7679b8e99b
1a98e9faf13d92d7d685af75b978d4a608d5cb0bb231cc5c3b08b89a65c7417e189a49cc
62949408c658c29884cab1ba613b76de80cc950a3ce7f369a0bcaa38b3b7a617de7465d1
f25f3db832876d8e7bc74297e7470cb801e4bff97dcfec8f59ce14fb748a12632d028388
be25ad7c72f18aeafd0b5fe916c31501ac51f556dd963df327e5ce55a46f3422c0d42b20
f8a0eea90003fc36a0a648aabf72e1dc79aef73cde1a90c6c52e4ef3eea1a29d9d3663fe
4fbe16b2256a2c3719cb1e1497645a9215f60fffe0abb9b9ad4789321e7abb71643e471a
1131fdfcfee2ead0ef109a577708fa24009c9e12f801506a8093dde6830dd5fa43404705
56497be08b122ba0a155eae13a6f30514402bbb6992a0fba47289e004b4e9038affa4256
c6a5c14d611075564802016124b8656724548313d4988405571479d569280e6f09acdc74
ffa135f6b841484ba1fa852d4b47df2d33ebfdfcc30b0dcd3cafa938c0a5650cbf58dd29
bc9ae08e2e5ffcbdb71d76a751d0cac96d7a9cbf5b2e5cc54c2ed3d803dd385553079cb6
9f7f9eaf68520bf0572eee79486bc28765179568255577472a57f4a3f62bff6cfdb431c4
dbea9e1b671e527a70360e30d76e5511d02fa1871fb1013d7d5d921af64260d027efd92a
10585d8a2fe01f7bcea634b0ddd181d16efebf544451ded4af6aeb9411f2856febcd128f
7806a0f4b9ec4fb7725aaab5855ba2108d6f5af4e0ef5291af5315961790200f7aaa2234
7b213ada5e5c3ad08f0ede3df7eff9aed6e095097a7f5365494b1153e97eebc14e1815af
752690b58a9f13fa288defc12da1df590bcec8bedd95e9c634b43e22cfe924947f9053a9
d1f0e3ffcab950fc04540cb015f925595abde59454b3b792c5701dd0ccbb12adef23ad86
4651a3090b91a113b4537fb85fcedbad6405b49912df1f4145558102c67121277b3f248b
fb0e0326d572d845425e4ff15391fc6b976d537fdb9305701f7004e5b6c9e2aca5d90f3a
ee585716ec61560a6335ef9db391d24a8cd32b76d80d4d8a02949d0dc92a4b1a425382f3
fbd29885702ed82363922595a3c4bb362c4a5d56bb4ba65ec717f68752abe7883597925d
3aac84561eac07585e02510a9d99a85e17f3c10923bc05605cda27b390dc5ad56f83b8cf
e93961f54b46e03f908cff7836019932979ca52cad77372db6b236f13e6b36a1114ad1f4
9c86dc20f0f349e6288151b8665e2718ece2e900ddaa7fcd30f55e12ddd4647f7bd1e70f
8d5a2661c33c8f6ad1ba9986f50fcb98d0db96f670a5c340f9bcc80af4cc62677527ac8d
64fad462ceee8d6f71ff375e21ff1b8162b901a4f7de531d06319757024c222b84bcea1b
ca38374a40003de3c8e973882838c3d4026622765162668e9ad47b51c084991efa4afc5e
53947e88c717b57b7559f6fc968f003e88342d309808cc5bfceebfdbd3e782252c620304
e4e94607195855ca3de7106d8b0037f524b15ef412fd744f0c102ce6af25fd138312df7f
9f3f06e79abb14fa3145c3d630608dc486bcb6c6fecef1184f4faffdc65c0a8bb6425f3b
7f8fea1790e6023c074b09830e6f5ee7dbc912a57a5ac148b1bfbf7a4b24cca38a3a58d5
f1756b5aa30da0fcbf918a19b42c3f95d5b47fc0497b85d1d1f0fee4c8c03673f87703dd
c7baab78cf877966f74e407a183c33f5544b017f8b311671d59bbc220b3485dbfbf2bd6e
15fe1a1e636714744f97778b2c7a9dbd4fa43c3584d58a0b3a8a4b3e54f8c4be39569653
3d3bb917c463b917b26f58b25eda86d1dcae24244a23ad9476c2124b0a1e6c5a3fe23c17
9fe714aa2c327176aec630e813872d460717255389d585afeac83cf8bea63a39977a7049
c7ab47372bcb00843f95f4a16a22ccb82abb430a31363981b5263285bbc4a1fdd21ed506
f553cec405cf48f5edccc8ee9aff8e7fa55693f16ae90230ff4d47e78759be38957381cd
7c890409cbc7194babf81880f624571b39c0a9b1a57c1fe893d208a66fb056589428f33a
1cc01daccaebc1b56faff47b3f59f30a343fb0ed0f9bee3e5b4e99b7701673623bdecd0f
b5336653bbf82e3bf6d07a9535fde9d83026bc273ac68cb1d32eab455432e2f7dafbde92
26fea19a1802a375e861561dda399794ce7d06bbb4abde547af5660cafbfb9e826d12db9
fe5674deafc39a6e88affc93c2a841956199bccb88eeebd99991b22835b6924d8298755a
f6df7b4cf248e3d2b43ac61dc8a118736ccc0c7d52ef48e199a1874f21c111c340096290
e60b9d0c81001db1256e0360fbf966594e6b90cf6c30c822b7cca2bbecf8979ac7df989b
e6be866b9f8ae29a938bd0a8968ecb5689a2eb1daae260ece4b62292234152ed7a2f4d4b
566fceb1ecc9b0ecb6ff3b8b0e9ece26b22368e66e7943bba1cc54be4ea1a6ed3b01a2ac
dd0279156b70e973f084b872abdf398ecc15db22f366394064c5dfb880abde0fce47374b
da0c83eb4c4b009b692aaecf14cd077af8063b99d3c195242a0e783514fb8d3f5b288402
2699b1d1639e352f87f19ddde0659e04ac79b6fb989f2324f5cb02add5fabebb4c423adc
ae3ebbadef5a9dbf87d6aaeaf192ad6b088fec9980c9ce41dee11ff348fdda61698cc47d
d6d80439dbe409b38e83fbdf85a38040a357609375b2639cdba158178f2e711f6a74bc5e
812c0df38b27536486c2caa25cff0f4a8155a2c1f30f721ca305330d2f066db91d6481b3
e29bbb90a21d26a830a210009b852a195bf2acd9f10352c5feb39fc3501a5115c1109703
516192c190a6656b435eeb05952c47203e64376c78e7e1043754e705e5c25924a99fe40b
7891e787858a82cecda6f53d79921d104e31169d3454ba82aa76094737a1e2e658b935e0
15c32e41119034c462798f992d1b7f5aa1d16b550b1803a0ebfd47c138687341b408eff5
01d85549ed4722af39c272026640f53eebbb8788773c86623813e79a4c0d6b409e64bbdf
34644c14e5d5c2f0133b15e948986d9bb667556b68f843cd945f3354543f28a5ac279d88
a9440f374e41e31259e4bd24d0a7a282d0a0bf9017a36d4d7f1812437871cd092958faeb
20e7b8680fd4b42d8bd123da68b27f682bf963d509185b7d353c7640673307ce4ce478a3
764cacd999122ab3916158e1491c34f2fe026082575f24ed4d9321e689ce99dced1b7fc9
058bfab1403e62a299d3c7cd4dd30ae3934c488adad126e028031a73b98b177a1810d3fa
09465d73a044ce618791cba08ea1140024c8acb49dd3ea3b832dc29db852a9bf32a9c93a
4b8d6a1c4f6442e6dec451a6739d9395946d8bd1a5bf20b640dd39b04b2f64775c65a570
9f542b2765e5301a2f96100d16d51454c79eb6996f29c7e56e37127625255254e5ea0c42
5e46636d7b7aef307b7b81dc48e916aa1d6c60bd8913256992d0f6ec7280a8faab8e8ce0
519717cf9c9798aec441f732fa87d0c939a7942f43b1cfebc7369dabba60e2c10429fa0f
e1c1b73e90b4c719f097cfb6788bbc15c64174ecc8f40adc67af6712998091ae4069319e
aa28718881b44dca8bd442cd263c393316476a13ff53fbaa8629c945412c4228c096d43c
dd8469d8e1441e183cc08bbef65b0c6a887b2ad146b714966c264921d6aa2a996d75da0a
178636336fa7e779dc68c2db5d5ad38f2957916a8ee0c007993a060e4a4827a7aade5c93
e76ba03e3e6bd6359ca876602728a076422d6c8f65166c2e5ff60368fa3b03fb59873767
f84ea9cb5535f96d6d3a596cd485a16ccf72abe98791b51b6224fb34d3cf52cfd1df1b08
8b4daeef45e9f537051a62c1060540c9e2bf888b5314b74609e37efcb71acd43c83638b2
dfee2721801c883ebde9d0e2bfbb05e843d95de2e3fe70cd21063f83afd69fa9e25d5d1f
122fd3fa10db38540d5378108562b0d60ca2ebab9abd6324d9c991a6f1442f34af26ef6f
235c44001393717c3d5aa8e9f126938760f67dc834ab944d7f0f7ef25181376c830b5975
22eabd0e9e9f33caad1a2c048a47595c7e3d69128d18d512fa8de239dc29d8b0dc9cd76f
61cd0fdff34f9dc588dcdb38416ff2a76fac74f33f4f2f5b04123405da0cf566c4a7caa2
711180c954da4caff47791355c15330eb26e7dc7e086348aeaf7a4e21ab308efa6900ec5
c2f2b0e47a63cf6de3d580949a29b783c7eb0bc47d9bb922d3d84d73b94bf079435ee783
869cae0c9a5f74e0467a7d9ca5e2dbbe2b004280e3eca9bdfeaf04210fd342e20b1ceb97
21a489ec232273f2746d83780f226e3c424b5d1a3b2584fb6d5d2d1b176caacf346279f5
ade3d7a2583e188597d4ee4f961d6478caf66b3384aa590ca80eb1e36f121f05e455fadc
b6f4d7c34d15ea5578ce82fe66f1a0660b5f1db7b167c3dd6cdcff486c84f03ef84d5a91
3419dd8d988e941f40d5c4ac95bee826e8b643dadbf9fabdee977b2df4a68ca533170cfc
134cb52112825739ebb22f7b2006a5edfb1667cd82efa5eeb2580c307a271cf8a46ec716
a328701d1b15a8f89bc3ba0a3521271d342e0a847a082f177a7dcf639c7a0d5616df3d03
ac0e180e541c20e428649a61ff421b6461245f2f26833a16cec95f8e6e9628944735b480
e4324afabddd15b98da71bcd0c6cc2158aa86262d039ba5223b55f73376a3e104f6e6750
13e03139e86bf501343ce33a19cbbe5d9e9edea0f039bddba385a8342caf695d3e57dc7c
ad584fad6abb72e2f21f7af6b790e9ad7cdc34cf02f2eb2258548039e15d6850a5219fe4
f11fbce447c3aaca579d84d9a8bdca71d4af4fff80abf1ddc92bcc969a240bc62e4efe04
c4914e751542e52be7e7190118b682bf755d45edd83d573e3a4a70749c8c45f179373ee2
6f2cf5df98e38d9fe5c33edc9215805aee2fdff399ffe96bd92264474e1eb56a1646b13a
d08477f600abd2d2f4231d52bbb382021076f208be30669f860118d2c07e3f47228d0de0
80b5d85c4cd621c748b0a140a2c12fb786faf5f287c6d08eb1e7f7bff3bc75584dc14c5f
2f0f820273db9b942ede9928422e189448fa4478d4698988640ebcb69ac5b9580a8c1988
e6c9aa9699f188fd1db466b141da352133503c74d56c7d3db2625b0400545229d5d4414f
5e857c8812c9c728eafd1328adb9c312372da9832dbbf735312a29a1991e42627c46116a
a2f5a442a1be14faf6f3975f12f36d634d321a1bd9245896884b0f4b22ae7a01016234a3
0d2fdb1a4c089384d0386eac3b645e43372e1ae0fba74d1afc064401618e3f77ffb64ef0
6b4341bb326b7319f6840a4ccf9fd5bc0e7a027b497219b47d898c3cb86810330d8d7dc1
badac22c3731e266e9a4477fa215416390d758ecb825b9397893ca9b1a9bd69274946548
3124920bfe9dc8a62ac57c3889fb0cc1886cc5e214038d85f028f9f77f9dfe9ca1c7d367
43e19940a573fb41917862d3d23c8b81666e9ebea64afcef37c2af39c75e43a9bb0fbd88
2827d7f1300321e564e26c7dafa8ea2f1226b402da4d75c20faad563061bbd8473df95e1
6eb8431cd11d3a9404816c9d2936e2dfaf332fa218343754cf39b8eec639a4446a6aed06
1f7ddf4700373e3f295b9ad7d96d43731f87f6f0de33954f29e4813b56a2b8c50bd6297a
6036f274211d1ac217f4c133bfe496a53fc5211ab1c02340a420c74560fd52beafd08620
2c949cccabb95a8f228f05eccc0a7854cb4722f70e99c4ada77a6a0a0ba94e655cbf5bd1
b2e65e192b57d0fe0e40981ca24794d153d75de4b7024e499fb492666e7ca4b86d40f09d
519100d64158e787ce2283e7afc82b64c6324ca94e05aab25324ad4dfa6b748e825f84b6
70b7c37362b6f3c0d9ca03ef757a44872418e36b8abb93be19552d133143177ea0ebf07d
b14ef9ab946dd30fb0d320a74743dd78a759e887b7487256fe63a851060fbd6d91a787be
e57f702d133b334eceedc003059ab23c7cdffe10f33489fd109a97b9db38007cedd7421a
5b78d233d2eabf7e6099e65127b114b7f33fac508e11638a3f65e70a6c9cebc95845e8fc
881475832c38e27a4143b52049ec4568b5e616502c6e31576ea6b901b5a0c9dafc78efe3
47e1349754a030f0d3ce521e1ae86f6f646927b227a379402ef23d2bf5839cdde62f67c5
14afed3cdb966a0ba865cb5756ff72d2e227018feda54bdbb6656457f501852d1d141b12
374514eaaf6211fe6869a8fffdea46e19e445a38d656adfeded4b794dce368c67e59b4f6
a468f2573395fe22bb93464e85d39dfc7a31edeeee7d3224c61c85e2f6c60d431e2a92ca
27aa42cb01668e6a09a5c078ed80c949cf1469a1f7244bece6d623c859287d608b171d39
42558e646c33a3535f28306c4e7a122b813b710ba044686162c97b7e444c61ed363fe6bf
93724df7fabd643ac975389fcfc00c9d2113b4244d587d839c1cc17feffec51360b3390e
0b41c19709c604db80ca152c69284a23950fc19c578cf31fc4868510a656fd40fc8f88dd
1b8419e4bb2dc98691764b7a18bed46d24a139e8ce9f5858f7e5a0300c7bacc479339346
895ab7969959badc4b8e40dc8f2ea56d852f17f5e5d11f70c1a95bd324359369c1e57597
b2995e34b7bc3f6d13f7c2e2eae2aca0c8196041e1fcb38ed0f046762b36ece4fb73f998
2cf825c782695958e7855a521215067f7efe6696bc1e684c5658956a85c95a14ddd8fb64
58a3e0daa485b581a905957ec5ba0f09f8224073da05bdc76e7436f7a4cda38b539c1fb4
9558e7804e950053cf401ed803cb92e3902c541b8ccc15854d0cd07e3fe804d9ba0054d9
16b9405d19af136a5d9f167db4014ae6ea2d4fa49c576be38707bc4d16b0c4c17b1f0e60
4a14193212b35553ef598a696e184601d1264b1ad5eb2abacb7b320b146dbafe75e98261
847c5745fe0808c639e4a07446cb33cdcd75e27bcd7dcf8e6c5325e2c67651bb7f472320
a3aa50db54ab644fe3fa4e7557dee9919c5ed1157a7b76f19e8f904315acec80e5f13884
85d734bca684e4589f9b4879586748429bebd0ea50621c9c851880f061255848e79bc994
82376c2e5ca473347a5fbb0ccad25f55d50973c7d967d112df8587afa536bf0c150e9640
91c972d85b4d3525f636b47225880efbb0e9c3774ee63232a2fda9e12e946e5445b5967b
94094f6070be187aa067786690cc96b476ea30dce173da6108737ef0b35b9a4def883938
b792cb1fe7fd027a6493013f112c54801b25907933ed9f8f05f5fcab3af23497389697c3
d5eb63583905fedcc9fe89fa9f45a67c54c371159f3c82a92f9556d6fe849a2809e3ff5e
759ae1a62962fac486bd489e33e1850347be8807966383aaae9dafb55e23c4bc3b2232a3
60e3e05766823cf7ac7083ef1725bb226c0080a6024a24c7a0a598456f5f81fc66569607
a1e0fad72d027f29e8c3c134522425f750f802151b4d7908cba22eabaf515553adc4dedb
5b0781786d436b8559477fbcde319f98fbaf9939eba9828bff05cd551bd0f661ba10bd55
9686d223a39110a958a5995042c3ff0b6d4aa5516f24ad39711b96c66f1cfe4823410d93
c8b69c18296b396039e82e110ce0c3b5848aaac22d4a7eb7314f40aa21130a63917dc50c
7218b1bcc03a75c7dee02fef7ebb89212fc12213aef6bb3819c275b57c16a752fd1daf90
23d0ee9a5cb15edf76c80e71256ed5212f8bef243e94219250a8e9484cf4af47ca875265
f4ef67fba098f24ff2a439ec0a9ece50cb5cfe23db20ae92bfe0cc7ef7e334ebca14c5da
4f72369c130c07f440e04006b297223f0b0e62e7e7c1af3d1e7c1e367e7e7901de9db63d
d39d84f00fd0914dcaf4c1b105ae2b066473cf54bf22034e9287a2dea9e7af0df671c333
cd747ca26eb3ef34bfc4dd4db705efd6d891ad472e22ccfbe196319be9425c0a1125cd29
18aa2d69a034ff2f0a1ab395b7b902edcff74545e95853b44e40ce6c1e5e6b1f3214b881
27540abdd34923a1aa862df9659eacc43484d2106a29069c8fcb1b16b830119c50f39358
e37847089a11cf60a0730cf4821938f005109839c082472214f6b47faeb454aee5a81157
368a70f57fae2039f94bcd706245c5ca4b3157092ec0c1289cc28f5647408a3c85d72388
905206c3e2fda281a372f8a4bf996e12067f285ab8b0c952e088c1f7c035fe01f658eaff
706484859242844fd93062e4e7228281b538ed8c32ba949a5ce3b9b6477dea618594a375
343d0bd164a15b3eda4477bb83b85d698f451a48ffa9026f2752c81ba71ffe2b396941c1
26b81fb90d913d852bde0a948ad70cc657a6830e0f428f550661b9ea3ad4bf10b8ff8d3a
1ddcaec506f49e970cdedc546f45b963fb3a21248c4d1d03e613519d211c80c60d6d4e3e
816b45395664f77d436a063e48dfbabba344550a2ce2144c5dae7811016713de8d231020
6f0e7b8ea60c624a846506b854563c54456cc6fb6b77bdf772819cd4169b2d7576413978
6e3a0272ab2023ada301635a52af78ff7376c3c7832a8754982e5a701e3e65b39a46f2fd
e773a848e6df6ea473487b51d150d02229b55e94b6e6ab7153f02c58727da10d2ca36f23
ac36f217a9934e44efe15ab999821bfe4d84bacb2b52d42a968d04f512da3607c2ad18a8
b26cfa092cbc74507c3c24b6ccd4c2a79f95059022dac646e13689e11d0aebba6599eaa8
68fde8ec0354e9cecbe7cfe9e04374e91d781ea105bf059443dbe18bd1ca6cea7569f514
a4c824f41aa202aafd6d6c79835eea5931d1d17ffd854dbd1543dd95bad02fb401f3a7b2
a003a2394e0f57edc1a454410d5f5a16cbe6e65dd8047554e371afb4bd47133055f992ad
6e9a2c69c02fd8a021e7b4633de186e2d38dd6b0c3e58d0d2801383f2377d6ad0d07b65e
f05e1904a00e498dfbd08296149a03fb3a6977a6aa6f012901b90c1274773a8b3adfcdd9
ee052a639ac22dd465b957fd5903d2414678c3d0c8b5580d5d069c09f722744fda9742dd
902e5f8b93578beba52a24cc070b3ee48f296ad9d9cf22a76d3d7d271eabd641b6f2e38d
8399029f53ebab84bf931cd9c83a0becb23844ce51107525ba1551d6b12fed23fddbef1b
61f397daee7451a88444a62d6445430b194158322ebdb067f798d56df5de08a2823dbd5b
e6c356fa3466df9ee190f56960ccebd3d7b5b5692bf6f9707a44a1f23f9ef60326b70730
59fa22df7fc9563cd13f87def2677f7403dd260d9e8a5729ccd93b02f6c59c9919d89183
45ad4328a97b8b2719d98b2503795dcddddc4ea56c452a4acea5cd6d7320980cac428cc2
7497b4aea88a965b7b8190ed49f6dcc9dd609036dadc0b06133a7b2abe891ce2b1b71275
635cb60f4d139273e34dfe68bd97313704a38d63cd31293a5f151a2a4fe55c089c54ef5c
4a66be8dd6ed28b755f1dfeb71b14b65ab0167e5cadd9b4cb938494f6c87d8047d37ef62
f32e34cf2a8850083f1cc0f022687db9fed34072a22922906b759d3b7784d8e39e176214
0ea791c8c2de780e49e5572a6ee01b6b2cdb82ac8b8bf1c6867002628418d56d49914d6d
35cd4b3cfa5735f35791fa5b2262d2ac8429bdc1c04de28c085f6d877e40197fd83c21a3
d846854af252796f9d4fc29bcfb29bcf97f9de9a189039f01302b4f840c2386ca4c7d8c0
9b184057d568233707fa46341d16c1da16a9c0d030c3250f4e061ae100aaa3731a31db19
3961f1d4fc9117eb47ef86559c1f50f11176026c57ba188666bd21771bfd60fe811179a3
2ac6a22c8cffb1282c25815bbcc99ed250ca8e70dca3bc0c1d4f679420510d49095dd7da
a80e138e1665e267391e154c7ff1701ed63c4b8348f8f69ca4886974192cf915b86bce11
c6a9777c4fc9c785526936b9dacb2f2a158c060e108af4879cdb422ddbc178d46b65e9a4
ded47e22b5f0282dc65d6272b0a0b8a08177dabab380e52e360eca18edc28b1b4bcd28ca
789b0ce04d0d481c439acdf791d3b7f92749fdf7505f0aa7a812fa387a9faf091e480fc5
b29eca48c96e13cd78857fbbe880ee2b065aab005c04c67a809707e51347c65c1aaf80a8
b4195e88d36e4cf7a9d76d14951da213ceb0d97e794cf667ab3c248619b12b49400b4dab
aff6f7ab4b81fcb22d8d84e08b7c03c70c25d339d1286abb5aadbe09833735b0a637ccd0
59b92d8b9073a9b9abe8c9f79e69bf5a454a223d6001c8b1c63d8dbc2b7fb6d14054ee70
441aa62d79843f18602e7b26f0dd12aa177e2404444036aba94ea71f4eee20d66244bd63
e626bea8380feaa2035ccbe828c4145a416411fc73ed72fb44459d5e96c5da525fd70415
b818ed5d44e4f494b20d22c27ee9125b0feafe48307a338a18ff7e57ed5791ded3ee67a0
4c3edcff1946f64dbaf50d7183db7f753ee0d7694bee31c187f8a7164c17663deda2be8f
fb7757d0c761678d48
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont: Times-Italic
%%BeginFont: Times-Roman
%!PS-AdobeFont-1.0: Times-Roman 001.007
%%CreationDate: Thu May 30 13:05:13 2002
%%VMusage: 120000 150000
11 dict begin
/FontInfo 14 dict dup begin
/version (001.007) readonly def
/Copyright ( The digitally encoded machine readable outline data for producing  the Typefaces licensed to you is copyrighted (c) 1981 Linotype AG  and/or its subsidiaries. All Rights Reserved.  This data is the property of Linotype AG and/or its subsidiaries  and may not be reproduced, used, displayed, modified, disclosed or   transferred without the express written approval of Linotype AG   and/or its subsidiaries. ) readonly def
/Notice (Copyright (c) 1985, 1987, 1989, 1990 Adobe Systems Incorporated.  All Rights Reserved.Times is a trademark of Linotype AG and/or its subsidiaries.) readonly def
/FullName (Times Roman) readonly def
/FamilyName (Times) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/Weight (Roman) readonly def
end readonly def
/FontName /Times-Roman def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [ 0.00100 0 0 0.00100 0 0 ] readonly def
/UniqueID 28416 def
/FontBBox { -168 -218 1000 898 } readonly def
currentdict end
currentfile eexec
e8dc61728071abd4d5bcd230c4e186dce095a0ca84ffc476adfaa82124268e60d2cc570c
5f52c10ed4a85a71ce8e5bcf26aa13b27d7fce1cc0c72c3b848dd5ffb2d56d06a1920fad
e4ffa3b35336627e9ed1622c1f9652956d4a424488b4c4ffda9936442bbe0ca749700ae9
8a2bf964fad088f0cc64b7c1d76742f25e90e759aca624a321402b1d20863faf5e04b86c
1ae66f450b1586041815e52f13d2ae539f1725d11489898a83a05fe04d6d14bce66e2cb8
55496ec301a39f6baa6b15fa24a8784cf49892cb9e8bea51fd11f0e397c6a333b2c58f1c
33f479e1aa9b2108634f73e91a582288175f3dd1ccebab2762041b415b6ba4dd73253613
1df40a72d041c785eb254f82ae91891162a2e5de8fdd69163eff5fbd190993d542a58cce
a5da10aa78e1361d134eacebed5d16ad7384d5d4cf73e3bab7e719d84004d9c357ad8bce
75644d4ce27cc2fbcfc676501d2bdf0d57d5d924f885f4da640cd624c2d97dcfb222a9ba
ab2e2b10fd824fac2c328808a37747bb4893ec630e269e19f8c366a14e713ed4647f8b1f
38277eacd4ccc0604da9882db70f614317d4d00a98e2161609268c1ec5351a2eacd6288d
352ef0af042fb42e8bebb8b35bd0eeaf1835fc72518d83c6ba5141ff03c84b23f627d105
6ad5e789fac853c04c83112c7e7f8caab82c21dd19c6fe08b54ab1a606bcd1bcaf7dfa1b
30c5ed36b51cfe26b869bee2a767487b3c793a4ca4a45bbdf4012f89a72c9bbf91a827cb
47558964e521d262334eeb2c00db4b24fae27178caecef725b3fae82e277be41dc636479
30cb80f9daad56c68ff06d8f5c13d1bd3819639cdde8a53c54a2c6663ee7002eaadc6406
96a3e02195137ce84a15353a5cdfdf69ea1d6a734f44ec5557ca6f4283c80f74349c4ca7
71994597097fd858cd8fe477810e5f776513699c41ac930f5bd20ed635737ca4e39b65d4
92fce44b71b25bc1133670f4a0066ba793c0c142fac6524c92c9f6c33b42f9327cbfa709
0769af4b317162e0e33fd65b2a5cc4c6d25a446bc29c56c6347cad9031bea290a480f2c0
c42cb90c9474b1741b45ac3be7876b518b5f7bd4f92516bc27750466ba4e169e14e77e1a
cc857e318ced32e8c423a01a487de130f4b1371ceea2240d9fc9eb09aca9522b2e3a708c
a67f09c9d2a002832c0951d5662f8a83facb29db403c92e9fde31f3eeb3448c5e9443a02
aeb50da65d70d49f9aa7c201d75188fcd82948463b529af03a9e9217fcf61fe12fa658b0
c25e3159dffda23b55b0834811cf2f0bd2be25edd31fc4da42a035e1c8355a587a98a2ae
32d3e96023f1fcfdb22820f1bf0447ffa1f0fc45c0c59d5ce4300bc7ff25b5958636b21e
801985b977380cbbe9285353e75126d56dda3b9b58a16ff36a6280df9259a5cb694307a0
d686ee39130f7447293feeaae85b0fdfbad6f59f50d0dc8fdd589bd5cb3e72dd67f8d29b
4a6bb6727eae5e5580ee0b0d26e0292bd423da762fd19cf79c0f2f5a1323ec1d6d890722
bef1e9f53a06fbc195f9b20ca80dae1f87ee01fb72a2718fd410aea9fbb9bfd52c09988f
3d2097d9bb63db73969a1fc95585bca6bbd92443145b230cc16bb4369d53712a3af3b32a
3a0080333ab3c17d4396cb0be3b4a656fb6ec701c80a589ef20e62846bf8cc1395a056cc
214cc933067076008e890f9fa37d251c3aa9058561e5b1b4e2c53c9a76a8891361bb3811
4416c4e4f8f784a2eee9870815845a8084f9d10c765e09fdccca4621b53d51c011ceef70
4dac05cead31545e11bfb151078551e249025aed4cb63175bc0c410cbeee4ef9ea43a382
85980c8f3be5cf5f084ce3a9e13a7cff1961032bb5123c018ed3ba2895fbb7cec889a1cd
521764a4fb1f356f8d69664eab214708c5a472eb10c38cbd3a6eb3375f0f2d944d5ab5d1
9decbeaf744f578c26f8ac621bb0ce0e57ef59b91751a46b87152c6c814143ddefb6091b
959216f3a07065ef1144dc45bb81ff7e02581f2db1014fd78f966a6be29d857058a57faf
9ab7a3ba165bc5495a1e6cf612f6201bb744be6e6009433fa2160700391ce33abab262d8
518546530714e16323ae9ebe92082aac79ef821d464bcc6ca5d9ae74382721df6c6b1a94
dd207a2842845a9d4b1964cb12bdab489e475e1ab50bbe448b3f4954230a5364892fd764
be8eaecfeafa219ffd35412b2de1c8571be93629dd90bbf54689dbae103a5e58cf3e032e
88ddcf92ce92a1635e2f5f5d584b3c256a0960d1f097ea183a1b00060eab55fe53ebb4fc
010427c96e9c7caaf3670558b5b4d915c3c1ab4b927f43842b2b7dfd9befa07b4b7e6c01
ace48cb4f8d5a17db63e97fa1611a7a09b1714fc51a7d56dbdc7f485665731e331e8918f
8fca0b7bf6eb03ae4daa2d8ad21e3f350c8da7021442cd6ebb623f91a308c4f15a7683cd
af36b99bf53c63d1cd0f364b5eea080280aaf4953d472cb3615cbfd1a737a2a7933c5f3f
a3d314abea990e617a0c74c504cb03226f4fd15b16648619f0a658e8db6e69a510021584
c1efdf32fa3fafd44cd71f15eeb8431aa709b078f18054c7b1ae3e7987100d24ac115e30
df0c14c732c933621ee1b644e43f5ed4644761249a86838011b3f49f8fc98b41a4efbc6a
47ce81d2298e6db2da796bedab5344e81632f70195fd9df6532b3593000caac198296c68
0d97cd1cdfbfd50cf13cf2a375f86cd53ebdbfbfc9c6c61b63be9aab54e8813294ea5c67
62ad01e8be3725ff75eafb575e0c5aaf131b39d3f7da9084424aeb7f97919c13ed7ea8f0
331af2edbe3095af2f0ee5957e84e514f5ba61578e789db5d10db87992b54418d9cb836d
85ad21ce8a5c5ab829e942747861e5740ea1c6ce0c92f6145be5e87dc12e02f7a0b30bb8
bb9853bee4294e178e48a714f10c7883fb29157350693d0f483e369b3a1675fd9a4c0058
f79c7aafa0f7d3aea57c34b3da26a9235c471be8985ac7fe6fa6736117dc6a3057b9bc06
9d3c21f52dc62c985e3cb0d81b0d375757e8b8787651404139db1f8781f34c1b4baa96b7
b84e22874193affb4790b24f6df608092eceb34c3b7b66648c949b79899ce5ec8935639c
1db5a95b3de019383505432282d50e19a886339815f52a8bfd87ae196e604bab3d1fe94d
5efa64c3789b6850153ce1a38536592af05e70e83fa898f727074c7836274ba95a4c77d2
5ad2ab5b893f574ae90acacc53377beeb9efd3645bf52aa0025ab35b350aaa0800f30e9b
5e59d3d462e782bc275b49e176e71604c5bb03d13c62240977ee7d7fe3c901b0ec98caaf
86e5164103aa5f27a665fc93c20f0e736cc5813ea8ebd88b662873287cca9cbed4da4823
962dbb2c8526fb91d6b9865d40f6538e5127548ae895a341cd3e6fdabaf9a390cb22495d
efbea935c0e0b7a4ebadf731eca56693de51a90d7ad8b0092a24c2b2f4c2ab54a4b523e9
6a253ba1de6008a6b53549872a87456344fa7fe37b12ceaffb225f6b56749baaef33ce54
961615f0230421dbd6f1fc544c599b3c027ee574a15e29e634eb60984dbb253e407f3610
42d385961fe5a2cb221f1a73e82b2f0f060dc2e35dec6dcb34fd02651a0f909c5a83dca0
a7c050e4622c8639538734aafa750bfd40d8c9b69713d31b9ff817b9c47f0c2b37b7d606
f78c7afaa885d11837fb78fce351245b1a0cce11c762cc351b32f11caa6646281ac4137e
3818926fcc5126331ce4eebbf77c6c0367c6a7240f4a0c9444782257e3e5f1f0acc91a19
7d2c358dd0e5b71f141f460678287d9e8e6a31d04d8d0becb3eefb45b772ec46fb7a61cd
80b2665dbd19f99e4d83f055905ec9c1a6d1d98a60952d93d2183f8e60d26f3530b1c5f4
d87aff785983ca8fda1e5326f595f9ddf297effe55016d504dec4bac75dc376f729aac87
223c5c0db08bbdb2b6bf138205895f937101144863f6ff9503fd4739c712f8f9c589f778
54154d639978b9b88ef784fb6525acebc7b528365d885ddde88bea85379fb4d49f3ff1c7
9ef6db5fd5c1f88718f068fc4667dcb8d1a84532bdfc9a52ce3692234157478652d91c7f
37ba38f923950de6e7d485b0c216ad87dd7a35dfc7ad3370f7e10659e9f56c9b31096830
fcb8c47a0976b6b5087b01baa2c5f3bc8ea2aaf492f2bd891649ad3d561eb854c6ec4c02
59ff53cdc99cffdb8444b6504558bf7849c3680e9010f7b75f1d18aae7e5a44ef4c321c3
310e1be16c5e239a4f89fc3102db7a3c2e8cff526f8689774aa2f01010c5e896ce4d3dca
ea19bd7575441d0d756b5c7b09a5d2a407c19851e8096441b5b5abdbf2d3e948cddfd389
335f29952ace33a2306176290600581e376bfbb6259cc6433c21939adce842caea1c21f1
4e9673cb84912e41103d5121a873d7bd2f603777149aaa7dfec094606db42ddd4df75182
6eb40da90d7f854aa3daa51da79b546cb56c69feb161744f972bb0a21537eede1a34f624
06e5919748f64119791638b45f994798f6aea29fbb7d494dd907d0e50f940d3001064276
766fb614563b8ca055f486c7403d1e9bff581bff8f5a27d725eca6428f28ca5e876f3777
01fc3abc5bd901b4978004a06fb5cda6215d91323a634e948fba78be7adfa0c0e0302853
a2d9302665ac2a5abde19952e2b4a562487d027a91e51bec63287563be4d70edcf1537da
36ce086f129eeff97b5e76f9bfcd3cd8a0207b77952debfcd0c91234b5578286ec1a5b71
5119f06c67c2ed8ffe5302d3c1e3182c7965814f544114270de3aa3d9a44e0673400c8dc
8a32bccf5c6ede73e1c200993a0462f837e7581c46741d49a9634a3d0a4a0e0a3cd1605f
4a988eb41f636dbb9bdea33e7910d2b14bd2c35ceb683322a26e4f1eb95dfa39837e6556
254d3dc88377e655bcd0871ba72a09455412868a866bdbd99f9f04b8f90dcc906fc3c097
9a719a0ec1be7b1c214f847925f29df76264c9418df3780e77b20bb485af5c6671cd21d2
12a1aa0a3bb17d2d90ced80f2e890b8f82d79533ad7e5dab6a85997a460b238fea812533
2d53985f0fddeb6dc858d337eba9bba1e1a0efc665de45e18b4bba07be8a760022f764f5
e50ab17a1b4d7ef7c7da706bf3e6de15746a315985995bcf0a09eda74b557396132bcde1
c7cddcefda4c34388b8cb8027bf0dc9359c1009fcff33fcacde81323db70de3f2d193f04
06d6d17dda9fa66c199956f5f7b16ecf14e2b95e991b0291dac3525d6bc5dcacf258aaff
e3a4d067f92a86fd29b6b1a08648261ad82c488a0540f996e4063f83d8af1b60fa6930ea
0d1aed062cd49fcd3dba858fd47bf65b5facff36f5f1fe7029a301db454bc90899e1543a
d2b33fa85c4f98cd54bdf6bcfad94de9bab6ae6b8b42e9209a8198be03f4fe94e57b756e
8520544f72ff9204acfb19ed8b940309362d476b1b80c688deae7b0fb7be585ba9d96589
5775f08b10fdc380b91f8e925e6b755bc54b78d32a43bf007e3d413a07fd4caa03294132
88fcfb275a6c5e0feea4d7f00fe4a861d6412d32498627d01989a46a441b4d272cf646e1
3d2c21e6fe3297737706c2302302a44c03352b93617aa921f4e6d4d0803051ef775fa153
c1de351f7864292b7ff6da41037712598fce6413c24e2cc439163c1cab1980ca83a76bb1
28d57dc1fffc21745bc40f6c8055e04603f238bfd976a3e0cff4c446e50d54650192211d
0569e04f4cd0ff353ccf5c0baf6d41c5a3ce0de7f39558a51374488c3123f9d3b77c2853
6d19bd4640a3b5b94a8f59981780774102767a4c192e902e752c5451949938b4fe9232ee
4693deca78179f3d42cca6e48c2890028fb1df0b57dc03f6e17adb2dd20503f90ecc7ea9
c93e5bd8cb1eb30809174bd8c736562950fdc77514d08659d05af7cd100016ba5774aafb
2c712d48a540567b782587959230819d137456cc8acf33b1d44f9adeeae57f6f6169ac46
897f258362792b40aadcb17824fd68db798cbd4c80c492959112a0e512091431140a382d
7a466de35dde2a554bc1c56aed4fdd5d9e972261de44abf4b12e6e94e368f6d286ab2933
0ae3ce15a801a3695a296db69462a007d74a87b700cc3ae99931f2e7fe9a61426a48ea26
47079d7535c0b457eaaa5d3fafe778a1e1916c69d02429d6aaa00aad61a402010e03920b
5e228423fdcbd49ae5cea88092e6234f86663010a63a8d0b8b559cdf4821732e729accc0
c70a6b2d23d4617c898fbd8ba5133d85ebdc3d33c887df82f8eef9f4a58fc047baf4fc3b
1e5328823123998558978b06b2b9fa9dbd0b264362aa5d3cfd32397a5f31ab8e6a06ea16
ec8745f5ad70c2c36140ba17196db616299c9c1f2993e6de91daa3c2171069c0eafb89d4
636fb9d3bdeba167eb25d41d2b6f5261a6982a3107e19eaf8e0c4cbb9beb1c2bd57a12f9
c5539a426b14cbb2c606a5256d80bed3cc6d843a58c8793dea8f0e53a9392d29c6479aeb
6efff366c3053808e0057baea0b5b6fecad62f12d56367f2b156543d42d4252df7f963a3
9922824a4ec8ebe97560159d5b5bfd1963e6e843ea6793c0ce4c349b24f626cad1b80773
55cb374c4a76961eb0c94e549e694c9050fa233e5b4859fc176082b411e91e12c8ead6df
d2b1326302c7fa9a28e56de4d1bda0e23a8f4846ea42ba362822e926077931959dfe9a7c
7f6f52e575d1a6b999b04ff3e6c743dde91c35acdebbdda59d0d89a0287ffc648b86eaf9
7dcf86d9e96f6a2a003ca2805abc0a997710532748c19d6107b2e43dbb6f346161021615
45eeff2c7558a57fa1b2071b9d758085bdca9e5754fca06e1e8fd78fbeca8a8860de4139
f5f8ea5481d6263a89ab847d8ebf2726f9a05d2ecf0be98518f7018b8d25113c24d3cfad
f66fe2caa8129776bef50ac517fb7fc008b34c0ee088d9af90f5e3b1acad8b7f507f5d8e
4cc096fb6b2ce56588e0d1f7552989d4653d6277736180ac0950fe4360050682d479ca48
fd751a6b4d790b686678acddbf78b21a0f27924732b02533c33c40bcbc77822beddeaa0f
840ab53a45658cb934c12d5872a4a8669e54a8e6819d47b459b2a013d3a4716d1e843790
a72dc2a1898ead0172f2338f91583a8cadd372d2b1d0e5ea66b0540a879895c8b71a012f
f8d9e8808667fca69bf728b1b445208e22e4e45333a07966b1a3b2af03ac582a98a84507
7df3b8bfcdc6d795815f62471dad1c088ac4fd8893ccbaaf6e554a2c837cb0bcaad706bc
d88de30b6faa4bccfb345ab63c7160f507cdc829ce59f082f0d8e5f69234b1fd3d19371d
199c054091880c041c540cea6a16d83102443c25c2a51a4e097967d4598cc318ade22323
32b218501107c46b440b2313118cdb908cd8cf703cac875f0a61d5aba6e8eaef25dcda1b
8905d9e970e05612f72563863865d8083f0a400cf2947543f32beb92644088d740c72f79
b5958bb70ba538b31f5207e88497071fafc35ec70d318a736b0aac8aeb1f1dd539cb02b4
aa4031241a09ff43883fe8935c7acdfd9efc32cab2c14feeeec9183e7517eff750e76a33
888dc2e23f59b1f5299c311219c084f7a17fbfac8cb24c005e13e8ac116669442b766a7b
c3b3b2395f09a8b2eaf0ab1f2b6d9bdd552dd26061bc6cbbbd747955911aaba7ff6b22ce
f076ec9d58ade9f21b859d5553261f05451eb6b7725b5726b43c5d4c639f70190920ed9b
db79cc1c2b27c833a5aba3937b805e09acb67defcd5b69061d2f60913230d8f889d1f066
4c2f8e9d75d9d230622702ec78d8930a59dc9d1619c6d86139db7fa8ef678aca199acc49
8b4dbf2b50350fd40b8b538f90e17fbc9a94084331ba938df44e2ee4dc9f3c4311f1310f
51ae3243f05afb2bceab528912ae6a4003b3b395ce03e5c9fc514acfa6654f2d89a89a42
754678d1772f7cf2b52de962d4fd52de3df185104dc6ab64b7af86c935f8e75c561d69b8
8cb3d35d0e88f5c349f85657ebf095f1d4af328ce5f692e70dab9374a1a6875b63134591
2fa416230573426a6436fdce15312de7dec88e49d75dff5346be7466aa385894784fb259
9776c4bad331755fd3cc6c0fa1b54da1025dc934cfafd7721c98c1dc750180e89812a7c1
cc76c03e17170a43c1c8f7c919ed66ef1d37a0b3e50adb3d45f0e182b5589d8ad408a9e1
4d66a306a7ff277ed5d092e1b65d27bef2026d49796ef454d5e0b2253e2b7d3a471145ad
fac72b75da8619b966eb78a0e864260ab34ef7c5d22aa5f79dc6ecda82ca97b6b40c8c1c
db5e21b97e41ae990a27e8aabce753e295cc3603dc3d3d539277d31f2b166b46a58becb7
8a357dda7fee6ea0a09b651e422fc35953f8440578eed6a39b957e3094a25304f1854f5c
d2d9b294426d278944ba0fe5e5482f8b94f359409b9d218828e2276417c8a27b3208cd4d
bfb9d6997d16b3444f3315ea90b56999793b969ed3b11b42c5d4291fe3a05c4858db8b9b
0dbc67ec9a416a323917227e39df2ff886fdf9dc4a3439c815b4d67f849a626934ecdebe
cc96c2074b211da21811c009c89564fd749eaa93e3b4b02116c0e4b876eaceabfa03a6ad
55e1a9b91cfa21a55dccd8973815edd1aef5f7fca274003d6d2f9f054ac59853edf25bb6
0c22f859ba1f9133ab9338c5fe903ccb4c0dbe1b48953f5573d9a1dfc9489ba0a2b44367
295956e6ab2f2774e39e38bcc3706c15d700a6880a97970754cf09bcc92dcd2ae8ef43c4
933ae96c9436d90dae65e45f9bcd3401fd459756ed54676e2b458e3218a630a8bea49083
1d98b646d8fb34cf7ab61b4a074ec93a55fdc606ab5d99a266a6dea429778c4b643b809d
6d0f27ba038f2b8ca0feca9e43c60caefcaa96da1842cd26761a6b75d752e7679ed86526
c73bf7b56ca7ec0fc0c6bbcca6f7c85d9e9c3fbc73228ab47cfdb8f7a1f76f145d930aae
372b2e17acf978916c917db708d6a22556c0cc11547ac8a16b5e166a286a616f64f577f8
4443b7d3c52137eed107957aab4a3166655b00a19a5dbfe2ed515db7eb284bfb475d5947
f14127edfb5c04e9be1fde32bc23a389337ddd1f15cf923f30d4a1155021bcbdc270d5c7
d0028380430fcfa717b15da4ea244f275c6a4072aea6410fbdb1b26dd00c3c943bb41dd1
f96a6bbd69762106dc9e0b597feb7722f2cb1327006de0d012ab1b43736ad8f0b94066bd
4cd3621a207f281e06420e1e67256faf7baa2f4e402ce2350b281caa6b534a722f018a6d
f5171764903a2e6ab14ebc54a8bc5104f69c25b7c462ecadfa818f97e2ed8ecb74d944e8
249049077dd9605c21cfc6df99fd8a068b69972bb7c00bd2355a0c0bb53d90e6da6a13be
2526621cdcfee7af143b05bfe787de2443c92c48641d10d3081024332d2bb7f7978bc5eb
03bb3ceb9485eb4da7589057d44cadf0df69982fa6baa88238ffe427b315c20132957b99
78b72d229c89d2e32c525fadb795fdbaf9616e20b680579e744ce07bd21e1c5364ba2ec9
f523d131c4504264cd1cd9e721ec01e9ac5c1f138ce39b4300a942eaeb42dba44fd039c6
ec9ef208b1e4672616c2879474d61163004e527419a55c27c07c65fad5a17f7187379752
f17e20cf9aec3b3c84dbd3d26beed8dc18ed319b958a8ae4c6df4b83a1da556f688566a1
02c22d331eb260a265c00d034966a54ec61b7a57f0123ed362b47a82ff3a2264c4f8872e
16acfd9a72c364e1be65a4202be0e1fbb52448ce0a2d90ced3c9b9d3dc520ddcedae8cbb
96dcad29316042affee4a23638dcff1870c3ec8920deefb50b82611dbf5cd61ebea38396
c8fa31d63e2054a6fabebfada7cdf47bd318ee0dd5b2e49ebedda7f12a43b3f2ef04d2c4
f828577ef1e2718c0ff6fd4251b6209375c5b317186edc3ca816b6918d1dec101d6be0d4
ae26386bf0f3520efed4de4a443fd35ec11259fbaf5ce508811223536439938e870cef48
03811d493050f3197d822a57d1aaa2a1134bb8f7605ff41d17d9155f52b1ebff6c51922b
f62271d75485dc48c2654494c69a87f38bb053eb9d8381c93d9d2b762df2665ec0b32f45
8befae8053ff8fd8e060831fe671c95a99ddea9950eea4a7c3c22f0497bf28c89fc706fc
3d3840bf99b568416f88f5e6dc259f541f278516ed0383b80482e22f7345815ee7e51934
3e4ddbb6f01269c1f6cf3a0ec3809b7d219160ad9ff5e07cb9b235193db8febb15b3773c
8abc368a2d0a696ff27c699b9e4f26b23746ca774f055b15b5155fc24e314e5a6d17b393
ca2527d3ab67d08581cb512aa67f6b9180a2bf32e8ff3f2f6f62eac5967fadd3318c0e67
dbe5110915be2901a5d166ce015bdf1a876bad2d42d28a1d0bd90bc1d63ae62d8ab9481a
9d2666ca9f1c2b92ef7060fc7e3cac79d447774bf53506e33e0ba9ebe408490f5b9a95e1
a617a4f405409f69043af0f718b21ac1a3fe08807b3744d3f68d26b630720d93cef36aee
443ab42a81a62f60122b8c8b40180b3830a0885d0a7cded19af16f0c907694f543a98533
04904c45a6d06e8216ae3f221a3f67b94cdaf07e64b3f2377a2063aad673cc6712a818e6
6eda743cd4f5af113fbe2ffff9d1aa3a053ebd72c2a98e68366695d280a721f8f2fa7804
4a395c50e7bfdae7be60e131edab4a79fd98cd3a48d7937e608b1a3f1cf11b731416c0fa
0b60bf0c84d51789749e4e4fe17ecb6196342a2592d9c05d4304ad170d91022635e0f9e4
bdaa20dd8f1f2ca583f946108547e4d8879570abd5f8d34b4c32e1a68ac10bf78cbe2210
93bebbae627766f17a04c660c4e1abf09c0ed35d873cdb2ad567865b960dab29a0056320
989c55f4c69ede7c99450435689e31c1b45cfd28cd83babe9298419646c606278c6c486c
88d3d99db35ceefbd6951167413136956140665f8e43dc681c4b110aa8eb42c7192ae1ec
15475d820126e01212310eeef7b74d15e5da2e3d32272eaf9159d0acd7d5177c9998598c
77dc49cef4405fc89e513baba0a818d08978666ae29ca35094287ca0aefaa6f6d32eb37f
4bbaa506baea255789e9a09cb0fa0d21cbe04093bfa522500776cd9cf65a43ae41abae7a
2a3a3918613285a0b679dbabc0ebe8f46ada7a91f1ed62b75226740c9e10ed7fcff88438
3a7b8c4f0593199f3ad6a48d45a42adeb2243071c4793f8d2c3ae89c760212ea6cd705cd
7ccb36cd27923e1084e5deb7a60cb64487804ca4b08d326231e9135e6f62b5e2b8465d4d
0eaf85a7acc77af9d913f40f6f8cb498c1dd29af5f5e73e010be810000cca4c3c1d3797c
4ef7524a8a1e217759a2a755994cdfcffc6215ac317cac955bd7b49d1e00b236440dfe1d
f8884803233d28398e470285238d25c93aa19645b12a40b259d3df07b10cf45562965264
cf246a2db52c60456ed991fe85284b317d51feb92229fe2439477a1667884289d9b69a4a
61c0e4e1aa1542f4b5daefbbf2f8269a246b6afbb0384c68184fed28586378e08904f16c
70f9cc12e86403d631c559ece5106046d43295125db91afc295258b7ec46c13dbca72024
4a342dddaecac59a70d971250a412de7b0fe9026b4f9c7198c8ca3a9a8d058adf6f0172d
1685a45edbaebdaabd8abcec42ace59b2d7bafd8cc392033cfe98f90179a80622bb47287
562f0f29aa8867e71b20e12a8e71aab30d0e1fe0e1c8616cc00c75e0ed98bcf108c23c0e
ab07949ae18298f2480a7ef79f0e815c7e080116af8cb19d9769b281aafcda87d706b8a7
bb688bcbeb9a14652951dea6e065aa34abe203018ea41b218d3f02c8a9caf67be56130bc
246a41e70684bc46454be958fbfe9a0f51fc9e731d2fc6e431608b38216ec688a639e7d7
b729b385a19f99a0cbb292a2249a7322532a3de53806017ec1eb105045118054342be5f5
ddec76bcdcfbe3803d4a5450b2d6e0e4b040ef071f7271486e7b50edba10ef0e894271a6
6e49b4a84f9da1f64a4043a7e797472f0d3fb7ca381671acdb2797b81fcd31661b9af991
b7a3cfce2a9121c87bc94d1803ac1f55a578e7fd30043fdb79f1cb260f3de6dab0405a4e
b2bdb5619e8385dae49f44538a66f35570188599d7b811cf5428ce34d988dc975a2f2491
344dd97dbdfba0f6b488f406ddd644b496e8ee2b72781d89ba9f98e5331cd8042304e62c
33fadad26ae73e935f9375e6306aa1ce6911279a003dcec08fbf001e65472537a667999f
efa90ae57db0c9bb818c83ba75e26e882c0c8ed5f2d30f8308e0032a7c10acf527a74d71
80919aeb67044b807028ab588020ec0d8b64d95587e8a6a9c84d8fb0b89b8f3debbd9067
3bb1bc728eb5c43bb80bde9f6f22195766b501554a45d1361d19456e46fde441c27c2a50
3d52ac5a35ccf602737ccd0a61b894f0de75b6eed3eaa7d389334f79188705aba87f3e1e
79c16ed6b12fa1ffd2a496a43cdf1ffae63e71a146b8d0743a2d32c93a41f7087116c222
4368085e418862d4c4048702c12f5567d04108aabf5109cf33e45781e7b451dfabf1bf83
217c89b124ebbae61dacebcf852eed123e5d12c3eb5c6df93206879e55c799ece8e57550
0fc8f14e4f82ab4c8ca38c15ab05d86e2fd2307ab3878f5a26ac7fb23411dfc9eaaf6c62
77a974e2214265c6cd58316f85365bb39dd6533781130880bb0db2d6e1af77ab5ce33e4e
a63256f6bf1665c81fb59a700ee3938eac9f7ca0e91d399997cfdc2bbdfbcddaee8c5815
a80c19bd2929b99aa783b66c3742dff963ecba94a5f27c5377d185993231893db1ad3d9c
1d856117cf6409a1e87e62c4b50cf5bcde3fc42d3ae4f56f33c9ee53997a8cf5772379e8
5d1c4ca7b87a9d28be787f866a0c3acde5d5a6052816e438bed3569bbd5aab6b661e5dab
663df48477ff7ff080d6e52192b713c9fb565b7eb74bbb7bd81eabd502dfde407ed0e3ce
21871bbc37aee46b50630501ba307273e1f278752814279fbda250e846819c774bb88d8a
83cca6bb405ad7262e4cf8f6f918ccad40c3b35d652524ef3878f979a530b2ed3c42b6ea
9a8e26fc8314f405a231a9b6a2ef18ca9ec718416525f304c80b09351645654cc3aef595
d34457a82a634e9094667936589970f824b4c1d9fac34cf31b8efbbc3e7e04e69dfd20b1
343185fe944857de971e0490a31145f8931de464ba2e035a814057a400b15437e75af7fc
255aa7a7d87d8e9df8c7ad0b319c06e44722e2dc446c4d3f48f0d2f8d0dac3fdb6eca4d0
3a894d69ade1a0b270d27855540e78bb1b73c9a456f52e123ce38ae527510c497dcf7c51
b6fa85f9f739fe360b05fea197e28a873cdb0851ce625ab14f6db850c37b05bc48bf12ba
e1c11e87f17f9dd8895b3dde2440d3cbff8d9fd25e3b6ddb28888f6519baffee5e957681
d40879294d75ec64f2139b0aca6d85b64590dd86fab97653524a17298c2249997ba02bfb
25ae3361c0dd37865673f576d5040165e702c525175c6221c86ebc46151905044e5b2f99
eba76e345bf58dc9ae8bb7cc2c144b3ba7d4f729560569aac0d9c212b49fc3d296925bbf
f2d6314a639cfdc428970f623bfa60c6c440725bc6f14a5c080a586c3e8e5ae33f68494e
4922bcef7e4ceff72f8d045ff226e28b7a92dc734bc67247d709165500be9fc4a04c123c
831ac75ebcdd31429cdac968ccb634e90da352185c2a8f8a263ffc575fe9c37a1edddb43
8b438762460e62cf923d81808582f6dd1fe1b7adc649d8117feb0dcf37dfd285e43ea746
7c9a4bd332bb1cc1b1235ed2472d3d48204b12735889074790afff0acd7edb6301b03a78
034fb8c2522a5a4ede2eae3f21da2d1c857d6aeb2a5f3d682d7f0206d42db3b6ff615ef6
a256729cb87049df34e44fe91d7a37e3bbef3a20854b736f917b2bdb9dda9a1f428c0554
f905c995fd037a8ec2fe8c01ce5ec32bce2537dd84322b7682b057e46d9e227b453b5076
d3641281312233fd422dc05fef8bc70a87ea7d203a68886fc6a447c0a464e6123433cbfd
82785dd06b4c4fe81cff1bd9dda84d85a59d22544c2a06912b30dd26dfbb64870835d950
d591344036489a00c7d98294ae831c31f4a6a63992bfe90d578edef2ca912b7949baf95e
992c6229320aaae8ae94c63e5e637636ba743aca92e9a9d5bc719c09ed8c2bd7a72c56b1
1e93c8e1a31c0baa820dc732def53b24a7624ba34d6441f33a6406d5a34599a11c99fe8b
b56a7e719b6c6d817c6a5c33ed98080b162863a3bd778827d778ab0ab56922a26c25daf9
be7ee089c05346c8906ad665b45b23d6eef3719ab33a713f173920206c502c3853dd5cf0
494174a392c7a81169d011d2886c8892468da12f36fefa77e3cfc8c8c24530ae9976af66
43a7a5065de8b346f3bf716e7d67fbc63b84bac646c9b4af88d3fc2ea9b59b07f6bc93cb
2db4b02cafca414d154697f492f684f9cc79b618ce3107d07fe2635f7c826046189be134
7f18567d7e9b4fba5825f570138910aa6ba4ca9d83483a548f260637d3ac6c872c59887a
fdc96b8f773834201dc10a03b055bd78a09e31a2f4ca737fa552c78c2d9133d56c1c0723
9c69dad4a905db8417bd24e4a6176ac5a525565c5d9b100fcbe688d74d575c57d929d271
ba32152bda974e56f2f9a8c72e15a7fcd6b2072491eb06c31ce8e7ff9e955e640f012a77
346be87d13d8a9ca69bdfb163e240c00fd337a99d3cbabe9ad9efa90dee85d8229e274d8
0786c106ee0d461e580e4764420a68dbaedbf23b7d3aa9e2632a900b2f3a760c74562d62
794158ad79f85a88b2859fdeda0d033ef76edc9d3c236d84d72a5250bcc0812ca083024d
7190b083c083d0e0a1062f085efe904758acaf3d2eecaf8947425da8cab9a3f553cbbb95
72db5b382b227408b6cb9af75c028353c5badb1796f0707832a961a645eea69666dbc883
a362d44e84875e5adbc5f4a7f34f3d9257e71dd12044bb28677bf14a906e2a6838589bde
5355d736abd2004929968e64ff82e39bb72ba2e8db3d04eb7f2f8d63c2c63a963c9f0381
aac33acb786d62b951207ce04940fa1d125e0d4d1b5874f9c972ff547f3fbf8033e0725f
59d59be4c4afea492b3a450b5c44e3e6854913f8ecde810edbda05605beee8c3c3c42d72
90670a56056d0aac5d305a6c160c191d47b61e07af930e0d9363ca02738dd5be9db540b4
c74f58e08991f1e76c1bc805f537ab9d13ea82a887a6d14537e1e11dffb1a8a7d22e8e53
e17923c9c7c225198de096a5357124594835b1d1453983647c2fa0cb4f009fd6776af2d0
d8a49df27723462c174f29adc0a7e70ee794ce53ee23e54a2490d260a72c3c3b0fdf2af2
347de600f3162309bd3d6482bee2b911457f0d3f548a2fa2cb7bfcca55deb413f7db2991
1364e82c19391729451ebd7a5d12bef4ccf07e04dfe314323d6e1c72da9b49aa77932b46
655cda7827f1ec03a2bf15b974fd33c8217e823cc4699a06716035bd32f1a616d5862227
c889689e79514f4f64820dc01b9d44fab042b6c9ababffcc65424bcd759ecaa2bae13ea9
8e3ff3e97993bc03935978dce090c5672beb5397836391fb05ab7e05778c2efc45a266e8
f5e1df3ba028bedbeac2d3de30ca7bd80f978ff016d5c706184949482a6a1291d16dcb23
b112749245d76937ba14fd76d6330d05a0060c425cfcebd9092ae470e631436c767a4698
1574dd7cd464a6075cd4494b8d37cf4268b70af1eeb6396db0352e3f378f28598abc0c06
ca7bdfbbdaa3699a43c68b42af6e08b0597df2a13f2f3a13799d0d64384bbb69d088a94e
ac643722481c9545da53982887bd3051b36d9dc9ead059103ee91848e5cb6f7e5efb3c03
8505bea432ceb44e76fd2465db771ead1c9a87031812de5a98edd77878148fc090905746
fc2afd3d6cafa9b5a24983de4f9ff37eb7bafccb7d147bceb602c4a6f0862eca451ca142
7c137359241a6c8bb56392f218a999b0cdf56e18c0e5154c14e99168dfe057c46f290034
90c14834bb2d790b8b7b2dad06728ae9cb31adf67dfe08891137f7c662e7a0bed05a6ae0
64e5da87dbd3d94b81575a868fb9efc899b2073ebfaa812ba0b51ce87388572818c18420
e3c766b2a584b6595bf6a0c552dad99f7981b7e6c0c82c557dfa5d0c35553fd60b137838
8261e437a0ca8bcc40fb0795dea8d179de78d41aad57b54ca935ce303049ae1318161468
6419c744ab3c4bb547fa8d8e1f239f8b1c98b762b766fee35bb541138d797787378f3ec6
42bc9f1b79a8906161515fdb83d668349f88fb70db1826b66bbe2169605df67a9a281197
54dada7820271b19dc3caf5cbe3f0dc0f3018c1962bd181059f36cf846ae14e337c9d621
c8c7a6b4f52d2885721c26282bcd99a1626b68875a016707517e0a51c397bd13b69bf5ef
4b01014fb5988a0b88d1e863731d95b92149b09b4d81e48fcbbc68d64bd4ad30a6102d26
c2216db5efcc3e23461d259c6d4299d1e4f0a87954ad886ef5bcc9d897b53c2d2ac1660d
8554de9a52d1bd44062bc84e02925cb3970abee3eb9c297ba8697131f685b803abd4eb0b
6c6c8c743df24a9efd54bd8e15b5308025a0b01a75662779fade4cb06c48e8a313e2c98e
8a0a6e6985832dd5b4eca76dc082e2a903d7543aecfe25ca5fc48ba9f9df44d3d9beb3f5
5f07381cd91cbf830721a67e0ead9f73a37dc2273882bd020ba39b28115e626f937bd57e
17733c8d2027acfe6424998743ba42943e22a484a636a2648365e010a7363edb38b6b1a2
03e22ed6dabf7d61ffdc7062dd696cee46686d01cbeac74520c9dfa64ca720a45a73b473
f52d4b95067f96256049d94920525e96cae3b4e6d2fb046b793baf53f37d5903d55a92b3
68fde123479bcde116b69bcf93561adb1822fc73c89a1b7fda74929b062dd44b87beda1a
10e224ddf80dd240fbd973dacf9f3a5fcfff3890f30bc9d36313d4b80b8f1890862b0af6
50f58fb233cd3d68cd1933bfc9c4e394e46cfe2ce2f548a130cc364338378f806f0b7980
4f8034cfae1e936a36e30b82f458a584ff9fe4883292aad88283abef6cf02d399e260903
29bd9e414db3096a48fab812b637f804e5e4c680aa119d6776fa72028acabf75b2ea2391
5cb25043dfbb89b26009c61c049cf68e9a292ac936c66d04e40d409af8df5043c719cf7c
835f291a430d5cd1d1497a45c5e38afa39a4d0e22d6976fd1523f81ed8c206592f7fcf0e
0e8fefb97a0f7664d679e4303d01319cf9d3c58c640be9b16628ce6c6e56005b901d5e62
34b4c10c6a30661b59911f20f6e033b68e7191d95e5f518d0926a163c6682f8e976319e9
c251eff24539694e0af505c9da41b996ecdcbbd86b15d761cdb96ec23a88a9ec4b4559e8
d0f86c122e8537e75ab612c16ebe3e800fb153c7b55a5fca2666f036a1e01edde0bfc473
f1eed339456a4d5714d03d2690febdab9e234685d3e4816ee9faaa92737c526113f44e41
13d44ca9c601315c38c62744a7a253257bab6af43b2c0ffbf33e9829fea3e7e59761250d
fcca7830303c7c5d863b1f7ec3f184a254c9e6e18b31a62dffbd4175ee1e0cbbf74a1a3d
f8177827a5eb6e4c29d661180c76a07b6707ad4445370530e4c13519bfbb851fb3342044
939766905c45dadbc4d06f0bc2f92694be0f5f857685a444f4ce27c09d9e4c690539bf29
4feec4a699a4c2042a2913eacfffe097b6c2e1f73e3a7d7a5ab1dbcd6e8ac93f545a0d1d
61ae079e991bc12f070f3386c872042e25dd94c19352d288e6df0ca94633becaf4294742
5e40e2a1af5486ad81455ec17deb6125a93ff8924eec5ffd5428f841f0c49d9ddc4235f5
456c51f734100fa25d4a37f8360e2c92ea3dc6942b1daf445d40f0bb0aad2f3c1486c938
b86d8618bdba2ce9e5216c7f1289134be265ff4f622799e750618bfa5915cd054a31a7b1
c3965e5e52b59ad7f8118b31ef10bf1d674ef8f343ce030da8ffb7b35490e5a6dfdc74a8
51d67a36c6e254aef3a26ce26dc97b373606cb0fd5a042be0b74713649630a0dd0eb70cd
1ab3f871a2a4cbabc098ba1331d20ef5cde7310cca520ce39cc3304c61aa731b3d7c6be9
5133fa8ecb8d19a1b7515a8b07ddf80cb88280396414d5ffbe3df7b0cc1ea386563de14a
ed1579aeba8b6db36054b8eb5020ede6c254d3d095eab60ed190e327da40a4302c04e097
7a1250528e2e379b92a6c16964f24abbb1eaf6665fa8619b720dda30c79d523e9c6e78f5
1eee85832becb9730cc8d7220fb051433c177c3996e753680ea978ec14e8f1660aaef38a
297be7ec336d13b6805618b1908a4a1b6585b98ff59cef0a447aa0bb4457e493da6a5851
429b7ca4d0d7ea19f1cee0ccd246c439c99d19a45de75d6eae9c544569f84664ef953f5e
f8920fc29185c97b42721eabafd5f301a6c448834c6a5032eebdb18e8594a2ea4fa42264
5bbf4e354dbe6f35408d3246c740c4b5b81e56aaef7185b14ba0adb278f097e459a5151b
311a1c1fdb671ba892aa52aa08e4c6290f87040ac6d920ef24eb0233c959e5e50c47f645
572df5a947f59c08d5c23ed85d17aeeddf0492893c0e96c33e855ad689f5bad407ab52e9
b95ec21481fe7bc342338893d55515c8c1981e177fa428692c00332cec66feae549cb979
20b21c1266b7b02b2424eb2a406a02c7cee80c4d62c734227d74dc2c368ea1b641db09c3
d4e8994f0cd8389f585e3eacc0cf91787dbdff3dbe8d941f99a8c1034cdd1aba9febce3b
b69913ac3acd7c778e02aa82b39a4a505d55307c63b3fd1008cb9a3d401aa9a14d82d305
19e996ee8eb32e9536885073a92a0937622ef780f07918d5cc98a0186628cd8cb8e7b598
035c70bfd719dcc20057d4739e1aca8b43478a985bd1bbbb3d4ae2105b4772d4cc094767
cf5fdc4d4d5acfb3311a09d938701bc9046a3e105b3e3f1ff0dfd00ea5cdec7fcb323f0f
55856ba055133546bea5ad0c013e8d43611146551fc3662e7482bc5089d786cd48da47da
f9f017137babdf5baed119bfa87f3e41fad262ecbd48a223cf9e29f11b046bf7df8c0b3b
4f9390e53121b24603aec7d4ed902bf624bb03cf8af4c6f88aa7a9959556481c093dd176
61fcd6a8552816d325327f74ed719c974756368c774731a665280f26976c8b55827b5c09
7e113802c0893c28d0d7f9ae0e4780db94b336276fcc6be787734cf87cc5c12d1e45ec5c
c4b5a9707f5b3baf67ca3c1e5297888af20d38b360d94aa929ceb6224896042046763937
7a71c3d99a777b8e9b7338e359483a3c83d8b6ea74ce89670491b5f9600793ca6e014d50
f8b5711c80e0c9195220a7e9543b7320ef000133b19faad5bc3dfa15bc68ac9b01596f10
8f13bb6037332ab684cfff10dc17f16cf6b423c5016d2e1e2a41c64ed493c5f4f646af94
69d550bc020f68df0c398d09212fe91a8032e2bccb05dab4fe4eb0940f591df566298083
47982333cade0ad19645058c08a7c610c94cd3fdb624116e31e0bed02fd658aa85cb93fe
1cadb6fc6c1f77a2e66e891bc08fd69ab6f50820f7ab8575024c54c4ddcce6a82050cab3
478da3bac5e0349648ea1f04709378a2d7cf0ec8a822d62ca0c08de08bec4f6f2064c637
f388953ccba4c767f859d9f7a374cc55ea541c8bf614cf2074ef0f773c6906df2c485553
77046439c0314982311818af59e5066a8192a1f3c0ab6c5092c32d4663e5cf5614451022
4aab33ce14047d3de2ac06a0dd7d4caeee3327e5ffd01a8a5a5b71b60ff0645ea7ce9134
48c8dad701d8ebc9f8eba7474b662fbf778b6aae0ebcac67043f1dc2776bffe752d49361
07189e9cfb02fae87b601ded733ecb9bd646bc3831c62cfff0584ec2216db5efedc79707
475c9649c79a85a5e26b834a5cfd59b412191c66ce06f08ad236640d8fca878dec6b3f63
8a8fd091c78db4520b6b1b00feb02a6d3108aaa98ecea0d8489b7d0aa6488766c2126b7d
e27beee7060b687d76f196515ef78a711d004bf4b6384448dcb47c689e2fbfa7e01d80f0
cb439968465ec267713e219ce77057250020ff775fd5afd4d2702d99977dd8751d4cd6c6
1b14e62d3ef2075677c62484a7e79b9fa573cfabdcfaff1d6cba3e1419561dc203fd7a09
ebe7e3c1eed34a53341135b4bc57223733c3cbc70eb83bcdf26b30ecc839fcccef5886b6
38825e15b1c3740d8c83aad3c6d5c92772f96b35fc6ac60e3fad123a5dd50d9a2a7f936f
8fbf5722294251d9d68dad0c473da9818e938a3a8eab3c9e28e5d4295fcffe3307e99dd1
d7ca4d52a41e8e18f85a15c8a46d021a30a0f84c0755818191452e6e57870bbb36620226
c6d9ddf13891940f0a6869d4df124a306351b6292e9fbd3a08a4a76d743dbff3386f7ed4
354fb4d397db48ff9120e9f6821df55743ceeef981bfdbc322a0ae589170e76a52d09541
ee14ca7b007d23363c7ba7313541099794dda1b8079b17ba8ae5d565db13156e903a84c2
ea9a668c1b14bb4a9085d5b5699a879fe4049a400ddea3345cb825050c202c698a82e718
8e620952f35079604400f6625e277f9ff4113fbeaf18cc72f99e09a5142c012b54ec1643
3673dc75cdd2c813b6d11bf55d677dfe973f1ac099f2828fff2ba53e40a5d504e94a5d84
280f378009c095b240a8a32537ebfbb12c5805e68237a388b187bb9253e99ccbf12020e7
7cd571754b3da1383b71f31a1b315315ed4827be56ad0683652590fab2e5b3fe98d41582
afe6522b22eafd18d17b4e2d808bcd59899d4cc5eb5a5ac23499022dbb472ed990ad07ee
a50bdb734e85ea7992f7a9b3527f6a6a9c5401bd8d0126351ac8c5a829b253f39f79f1ce
8bba635d4feaa09f3fecbd05a4af9fd584c456163d99a6c2ed2099f24c16fe0c89b558ca
ac20c6ec67211b667bf7c83da6ae500451d15ba8049c8bdf5e1282343f41bcdea7efbdce
d9e17f353adbc6bbc564b9207715d187aec3f0acd7f2e49c4206d5d844ee22ab9240c0cc
18bd21ac756418dc6d1b25b74e19d5e6bfffbdd6332f2bcdec90561f277b3d37dfe69813
cb928ee0c7ec39eee5a6f6394e8aeb3445e9633a240cea9d08f064747e7eb4be2bd7f0b7
303bd9b4f972413943a187e6b045faaac6ec1b2b7f7a1230116883c5a4ec0a28c03a8560
ae8b001e09f26ed638774e7ca02bfd0c88b32964be7aa9343ed72b0389fd6621254c5f16
e0e5f80cbd9d7d1ec7a1b4301541adf565453c7fe855d69dc910af7da1eeb0363f956967
e630aaeaec2017a838adfeccec03cb66f3e3949b42fa93cfdb16f15f5c341dad1d438995
1505175b250417007c444188a39d25db5114f052ed32ddbb54ff243f524200ac9ecd745b
e25c045dd1788cc6551733bdda21ffe3f1817bf26ece9537ed69a82a965d5416ee19b1e6
54f0cc46643d1f77e3b7047540c18affa49cb1a87b3c73e23e1647de16bd26a9bc4830d2
03d758669f2c46896b10407b694edbe51523e9b0727eae5e5580ee0b142ddeb5646f4717
a846b7fa1d6f0a0be63b5d2f8a7bc48f3fb3a7af462098bae6f38bf3fb123061d1703df1
386975336395a64cb26f418b87bad98ec6637e569c22890b22d1c2429edd9d6e1f5b9fbd
0d64516368d2452e187c4a3790048e71594907abc6cb35654fbce4cd5db03b0d0eaf66b3
2e122a679a492f5e6f7ea62ebf197e33d15a337923921e7033d3fe12b467c0674b158483
2b48a1cc4c30eb0ccbcc4ed3c94e063a08c90cb185f76784a61b0f3b361fb56306e98c70
e09066405dbaba92260f45cbd19551699769f0e1eb3e5b780feb51927426ee52c731c074
54c003880911b58e6fc98f3adade2e91dee68421e31c6bbe9ad4fc57ce53474127ddb2c8
9508a1a7cb15251fabdd5689ae174e54b3f9a41ad9c3cd82c0f27409abc7130a7a7ea573
f9af34a486a923f4c6918fd539c89b4ef8e8876c5c3fd6aefd14fbaf3769bc3e7cecead8
9d2022ae93ee76ddd6c98e55c21c4df2f940797fda763bc9d19aaa7e6c9d0a5fd1a8241a
1fb788a76837d6760869eb940c33c0530050da64f7ed9f26e1d45e59609aced8c809f66e
e029718c283897905390258a1e6e5fed916bcb57845190ad7f6cca3c7b4f291309f5d146
8041770c4baec3b35bbf7d11d9c8d097cceead5c296160863c265b657ea0a522b6e4f70c
47428296ebe864f90f932ae43d1d3165d159a66de196cdd0a3c1b1ff603be93bf322cb20
594ba362c244fe6ddde966f5d30367ee5efca0fdb51c8bed16c53a3c300579dda804d685
06085fa92143871d78900b4c4e78c1e1bb6438a1cbfb6ed7990b9b3ea8b6e157df5c6350
646f18ae9a0c57038f99f263a9894ee3c9d24dc67f642248a9c95387dcc3e99813a95409
75c0e581b36ba4c388701456ee46c375e52d0632300f94fa40b714b18db823dfa6bef35b
77ec7041d4c435d0e7ba312f784b53b2eaa5c78770e8a9679635923a4ba9aeb68151e139
be2200c3d9f0771c1a517233319e3d11f796e65ccfd4b3d6c7e691a9a4df23413614d6df
d606d69f58f7241b50c8a22018a3977c28f7b413a05858b875b02a3324013649802cb608
2063837a7d25883074ed8a4fa1550374ec53bd10a67109f42fba0746036c3c27dde8bd2b
094e3f20fa2edd241b80383e5a2f8efeab2de972337c9c8b8d0252a05b0a640a9eaccf4b
a6aef4cea0e6182f0d08b03a20504821f655b339114c5951d440266811087b7876386946
3183d322b6078b2978932035f2989dcfaebdeea5aa503a483422ce13eddf5f328ff39e7c
f2558092880eaf71188d30c92083eb10a0915230846f83ecea111e7309331198435d71b0
807a0b0f389a9754ee172ae23122908369f86196c07753d82737129878dd057782c34eb0
4f5b66cf0aa4804833a8811d01f2bec03f34dc2c8f6d929e46a4588b1dc5001da1cecace
dc757fca468403be1717e61c903be70091bb567b84d4a83646d3b7963d572fbbc13ee028
843ba5e7d5e5bef283e20db5b2b6865f99127711348d7667ee40856e505b3218317a2c14
b7aeb6398aba30b61517a1edc9aeccf26a8f01a779ab438eed197ba940f75a2883618ce5
81bf98466daa28ef93da0960af73564aaa0a4b834f16acce91b6f711c290299b000983df
fee90aa55cdc5eb70e54db735c75d48134dfcaae4b1f41750c6d58a2388c77202b8c09b1
71febef1b9a4fcdcbc6341d4dce745d71ad2074611d6dae9ff8ef1a0a24b6323a670bfab
432c4bf90d4d584f779e01b991a69e184a3328c79345ea1fb9e078543038f843909123d4
13be156699010e4c93f1f51b16519df52f256e488e67b1bd6e4660ff5504ae3d97ef001f
979d728fe9de28b572ff5d889b12007eb2cd6a5f62d1aeb9447fff84e36fbbe62741eeb1
f8e4eb84dc20630971ff9cdfd054e7486e4f76c822dfd0fb13cbc505a0f3871b91d0f769
dbae487713ddf5fa77bd17142699559fbab5ac131246304848bb001f7755a2420b37a52d
d2bbedcb0150818ae197ccbd8e4a83be455e39b2465d517dd37441440b5baca92eab9f1b
17b7b868887c16b96ee5275e0ab4cba49582a6a0979f2ab1ec8196aa118fa0d87e0a549a
180f186e18780aa1e593216acfa03378fa3daa3d7517c349ce145efc8a935ce361ccb5ae
e75d2541297f9dc66c6279686e9849ee2ca2cb9c575d7fd9393978c9ab2a6897068483e6
9cf20fd12068d74626387a9273891f0efeb2dfa4db00bb40b659fa02eb657a878222999e
6eeee3d6df8ae818acac2f74ca6a8004df9bcfa3a8d0235c3a9183a9b91258c6d634b30d
28938f7c439fa0485aec34f5d2895c02b5c9b7d4d5de3ef7b05027f55078cd055926424a
6eb9150a401d8c7ec797f39f816f27a846b812b73504c62d5191267817795903f78ef408
cce7cd966ec0888228f7de6a04f506341abfa0949f0053c056f15db1ab1e192f95be24d6
7e6923078d36adf0f8861742e9c6c5100d517cbb7738998bf8846c2b36b4b2300fad412c
07ee43c2854e64ae7f89be8bf43cc3836097c0456db53e88ba05b9fc37107fd822777810
aa2fea986304d4014ad7a165143e5b55bb72b21365e32221a4faebd54df8b0f5d1862114
a3483acc25bbca1be80b57a469fd15d5abaef77cf32055f14abf43eb9e62d7576065b5c5
1db87586a5b4fa473a8c7106716e855f7473db31e1a3c91ce2105ff913513d8fb91d77df
f0d1d4172ee555e903935661b001d5825cb2a2437efebee2cd56539f3af158a11d7cfc02
24be4e4d76774da20ffbaa9dd3a1ab20586a9c082d2d70d011651813e46d40e3bfce959f
ac879e8d45fd7d4c0ee751935d0c7ddab79906542af9d1872f16df4aed74fbaff944d1c8
668e5b9cee7d254fb4d7e6ad5f75afc97f79048ef6c9d4f54dcef2230f6d4e41298cfd34
1560dfb215444a0556390a5d4ba4975d1ea5a3633265cc4d0d50420e62b577cd9fc46ce0
8e9773bf21f436ade9f96c9446c268f870f12b6118754180f60c0acd3def74be9a57346b
1f9a64085dfa7870d70e4d301dfbe5a6174524b48687e78d846908f99e8d823d48e13a56
9a5b4402c21bb71bc122794aebc1df4dd1cddbb29f05ba1f03b1a9a7a0f58f875204747d
afb1cf89f9ff778670f8193e4ae20b59598364f07844571f749dd5bf84a64284de198528
9d4342eb11a83deb54b1b9700a6dc75dcbf8cde536880cc06c9982746da830fd35d97529
76acd799b11958c7af7ef866b72a0e3c690d73ee2280687cb7f64d29f12611705c2011d0
abaf427036be8a656114e1eda87b8c15fe29629d6193751d9fd6d364707db43632ef48c4
53af73c4097621cf7f1ff7a4469798f5546e814d6531ea3a0015025bde8f589c32ec7199
5e7d9e7da3960b60fb233086d607470f4d62cf05a1d7183cf30adbd1cdddfca9cf9ccac4
cb3aa7d81848c2fb3663b7818d79b4cc1cd595a46358f3c5d8b66e428a67a2de926bba08
fea4c26e7d33a61d421d30210670da18648bc0680b05188bdc3d35aeb4dffda5d8f7088f
f932415bd336db078010dc766f320cbe25a1c4319ef6406e052bbfb14518aa33ae9cdd1b
ade2ab0cf02cc8563147139a2122bd87d819dc6ed06af0496fe7453c280f503368cf3335
7dae146c9ae04b4efbfd9d99a90cf9ebae34c72ef5c771e528a823a88c4fa0cce896e1f9
8eb8555cf5eab455028a509c6420d57ff7ef09c3425a8ba6b0b858c8aae706ffd865c979
49d5fdaef722db61652829c2f7ed603012dea88094bfdf48dc248ad5ddd26ba8e9b9f53e
fa5c3e15bc4d026d483821b4b8c788018ec739306c6feb6ead69c558f7f2b937ca762d5d
62bb92e28a61b3d334cbf0843f3d33b07cdd5d721e5b6666fbbe367c843c16d026a6442b
2fcb61d97701ccd5c2816fdc7b9ef0903870bd3f6b89a7cdd4f4ef1478fe54ecb5b121a0
144850f8918577ebee8db09444661513fc9af418b39590ba5a9a5b8dc5a273ee28156067
af7bf9f98e90a827c3838f83ef1553c33567012013984f80f543f1e9947813b396498835
065ba136ded00ba0481937e3b01b20d00f3d700a6e0e86a6ac06949dddd9c4951d2ea349
7fbab76f3ce5734f37b934a3c610cfc883b2dbad0d94351958f06558a5a35b72d26db770
32c9f315e6a151b180929507794d061c65313a08358c00b35edb09a9123c8a5a9fe7e41d
04fafa9a9e4b46be9b6f766e3217adeb44fad8bd3bd46dfd8eaa7fdfa0a2a451ac3616e3
2cd3ee3549dfb85179e2dac8ebd9a89ccd89a21bf7449eb4f05623294ec14bc34d2d915f
8e4f9c12666b90a7d87b37a3ab7624911bf07b24fa9f9197994249b4480ea6048379e3b3
afe91335dd80a19b58942d945e5fa6c654b01e5e34be711eb3e85f13c88fdc9b2cd77bb1
ca4e4b0c0785f9ecdead4226024b9385bbe70b11046d0f9db09b254887bda57ae00daab7
83b29a7e41e2f70d3ab3c05387c00616546ad759e7c3ca798bed4a2cd5e8ae928d94cc58
0904cf65b7caf9cb1a140a5aa20b082702f866c7d41ae64198b87008f0404875dc3b5986
9afc8616a52e9d9e2ab422e30fe26ee4e8f928153dbfd2ac7c6a4267e1728213ee8aa369
5a90f831614329741cbd5cef43a328580e2ddb10792a4695c363fbb408597672533f130f
762f3a9b37909c5de7dfe6efdb6eae586a0341aa7c1e8df417dfbcafe8e5839e98d07cbc
85835706ec44a3aa90660541710803db0785587d1a293f6ea578d484ae8bd8e49c645ae2
7ac31877599597d9c4d860a442b624a5ff8873e3db6a65b9bd0a6a9c83223dc8d91dfc6d
974a89e34404bb4507dd2ef6de6a9188d8047e49814ae4ef7d272a7a4509d1d62604ea28
b44e5c06995770207df935266b4dcf3d38f2706477d7fb3006dba8ad94a663778eaa8bcc
b0331a946d8a812b4b3170d11d68b15f1a5085b464974afe9c1c04041c073bb71261fa28
1143a8bdf81a9b671d1cb68171df6a3124fdf1e08a191843386bbb60f4183cc709b546f6
2084e6240e343972afdc20e07371c476d5310b3dac0211931a6da76c4e00981f232673f1
462ab39827697461e94e71ce666e8e70243146e24e2ae9e35a7c3d0f866cbc74a7982049
0decbbca9290f3f886c47d4f87655f2cfe863b2503e3bb73a4ed17b608e61ace17847adc
b87bf21fc21c8fcfdd13bd4fefd72dfb15040b62985b431c890c026484b7a6639244daed
22bc030727e7a6a0cf7b4040c33fee3b464b27420068fc5f5ad539ad8ee46c74611f2224
c0f29dc0fe42a5ed559d30fab8a71ace053277a1db4673a0f27e2529f9d59bc1574bc3ed
628126d10765594ac77ddb4bdbd59f13a33be3deb4484ddb2c14dd484f84945542441751
8d1f128b4b272563957f81ca3acf04ef194aa818a96f1ae7d25e055bc2acd64610295363
4b11de00bf5f2210b1b3242daf8ff0b5f6021a5f42081f75bf3d78a61ca8161237663221
a919b1f7aadfa15bac83c2b546292a3c29f222f1b8c19b34b1fc90047ed43cfa7fd42537
ba99ef9e8b57778668d0b5c1ec40493524c273c580485682c70516c539f8384638a9fc6e
9f697184fa34873c634484523cbf6bade8e081896c92de62bde413112d4339cf6a6c7806
bc7d6f88fd855b2a113c48005cdf40332a2d8ecb72cfea30d8492430a921b48c09be6588
1d93d2491896233924aa9667e58d67d6fbf0897d1b5f000d94ae9140ccc59b41c3657471
018252d09ff58971919fa0c477d4a67770a56a403df737ee090445610577ff8c0f4caba1
4a6914ea3c4118a21a7ff312c343b4bdb754875a212d4537826f4b3c712ca4ffe4267b79
98b70ff73f3b2e794d0d9770bc47a3a4ef3ffadd479cfdfbcec45b9ebf772ad81789cceb
ae677f8c087fe7d9a0de44c3dbcb0cd8bf56a698023bdfc3279ff6462cb11813d9754461
3ee06a423bed83fffd6f8aee62536cdba2d31d4ddd48c7db3e2251a72092ef0950ed6fe4
209e9df3333a9a0d3cd445ea68c6a3f101b3769734f7f57fa8dc2f7fbb1d22f08074f20c
361162f2624e907724047d2c5f2a735a5f6f82d3652e5b4b2681692a70e4da9ecdf07842
1667c919c6e71df70a13013ce073e9d675bb0614cea25ec5b11e7d0912ee6e88c93e2107
592f870b47ae58f9ed874fbdf234eac4e9d21b6249f7aa56947b6bece0e269568897f29f
7b7da50fe4b0a9c7fbd59a9520a5da8fa1fa8e38acda375bb179414c0fdc6938d2a25d18
ef9ba0c907241fa943364f7434aede9b5a47c408468eaecc138d19b1aa597156cc22ca23
a9ba8722c7690edaf8a2dcbf71e1dc9e68aa9c860e5909b951c58b4e66e24e12a7cda686
10779e0e474a51837e8f4b052fd2d638df65bc9da265dd17f3ef0e79c3bd1dfdbd12177b
5961078ce83cb1219bffc6edbb1c9b5d8ffb9ae5598ad0fc23d9191be8527d6d941a6307
f634dc84d02ee829ebf5e110d302e1ed086a72bf46c67e7fa18bf3a18c22d472d2124ce1
d00284a5a3274dd86c1fc0382910a066a66b8128dd387bcaa71d73af1ccd33cc66094386
e16d26c78b56548a76832a62aa1d5c2ec0694a816a4f829074e0c7350bd170fc31e0ee3c
b28eca7b4e925caeeeb05def5348ada2099def068374cff25de106c7c722ce1c3f488328
823b80a1bf1b73427a206e89c1b0aa76617d36e45051e4a1da2e7bb4fde41e79a52bec87
1f22c5972d7ed2be807069d4bc081d2d567527dd76d27c2f1879adecb080722dd0361907
88d8022fee8bb43728907cb52d8ebd7368d8aa79eeaa2ec620ad51d4ea282fcf5e8260b0
d5f6c50ca445ac96530e5a02cfed977ea4252d50018e32b42e3b5aec3126f37711c300b5
729ef666976931774400fa45a67a97370ce9426dbc8abcf6c8cddbd7116529cc6d42abae
5cdc15339350e5117de29706c05542620921e99fd01a337e3ca68d16ca8857c07eb0cfbf
40111d54c4cc2b78551504884c802656d5afb8b715230b2e91704b4d8ecbc58e43dc40c0
73d9c6663a7a090ef7bf7ea7f320dfa2bf143d66325336bd3afbd47e2cc7c44267d7264f
0eec48f69373fb5a6ab9efeb798afed15980cbf8970a9ee74a261eace9a1b376ce83489e
386e9c8eade0bddc4431d9b4d3e36f74b2432184c3b29626d85779aad7483707472fd85d
fcd98fe1d285ddbd62e5c0e9528ff12c69a0c07294b4004c293dd77540fe6c1c6a245653
7eee5edc5989c6aa9f83d25b94bb3b5b180c363ba9e5dff5a408af0431c8f00e7534aa9a
32fb88bec4cc089e8dabc9fe95338ad6f9452d9592e93a7471a813ff54f2a8b3fb909e70
4a2312780db9d10b64feb473102b92461185e3b38e2bf549dee09dcff140803c2c991ea4
f00e0618984135854bffb5bc6444cdf2bc38e4ba1232d0b716aa9ae873910870e6c3ccad
4083190f29fdecdaa0f64e2bd0778de2d047cae0dc400b15334235e561f1c5ee81105ef2
e6ff58f4416345cf17a9932861a7d32bd33b1477899abac29694d08bf7ba2f3d1c254e08
4e351839957f25eef6f58e5ccec362063b4179f7b63d8ea7ebd804c955f361ef0d83ca29
8d20d9ad6e3501904efbb766e6337e75caf424757d8cf68ce138cb7a586ff82e8dbb9ec6
0a1a770eb5e053484a39cce7a95da05c0353681e010b08c561b197f2afe1c15feb4d6c01
c29e4a87e990aa8f53e4aca329dd4a7b5e341422df4ec808652a1c8f25e0e138a257ec96
5cc51383a6aa8c293e8eb37feba639410c4403df087ac6a2fdd2a3a7a5aefa5aaa91a828
36fc032be7a09176a133e20474c758f51f8f4b24153efdfc2c0c1c53db9b04142dbf7898
75c69463d7458f7288ecdd4a7624d077f1e569fd7700327e64988a65528172c62e260fd1
d85da8974a929e21c508c3f91734974d953379f046b482ea2e17daa0b78055a0585c8606
2204b0c99d2bbefced2070644172490bba16352012cfcb930b8bdbf47d3b67056f2ccaec
7a53377252d4a7a3dde23a16f26b340822efdb680562ce9136b9de13f3c2a5e844fb021e
24cd94941cfcdde18326d48afc80aeb21745ab1529b064190a39d6ba9ea9802889308c16
1985c72c1530519cf7a9d1ef32031a8937ba07aa024384a34c5b22f2dd61e24fcb5fcd5f
309a0f3db4b104ea840e0232278910d72a7fcc295a432485e571343c9e812dc7fb06b9f1
fdbbdaa06ec72038d5f0faa258a51279960d44d6d22a5e13ea4b8a5a5b91cda58caa4c85
fba63ccbe077e252a0bacbd7856d0b63750e52726b8c3a56bdd5197029cddad693bd18be
a8a8894af371abf055ad16600541c46502f3ed3560bc0a064d4a28fb62c80811d70ab088
43d76ee179cae2ec4ebd4479d17115c062171964c228e836b04ebd43a3cca1e025a900be
e76d9d187a79f8a933a99d47c0a331446a44b86d22cfaf13b618bdfb0bde8612531e4501
727f876b174f109b8f4671358133b22dec33254c3b494010a9d17dab6efe82b027c52161
20fd119deb0487c8cbe4f2df442c29b31a057b485d257529dbba183e554dc04564bbf581
23deac724ea5cdee61611790476f3a6bb4a8c9c3bc6acdd18beb255f82ee0ba52c42eb50
6c2dfc62491ae7b9a79c15d982d05e132e613041c9842c787ad9bb747eaa971ce1c3b54c
cddcfa4cafba7a4f3a0e0cf70eedd7737994f5c010f7c010b895c144225f24870e6f1818
5f3146069c952f422195470e73d36a6320f69a31f483eda5c1f4d502990c42d82725b894
5ca0f54e68c054103d544658cfac10a94a2328fb3df386c7bd773e37f5d37d501d46953f
a13b2fddf98be9c738c0182361a85ddb3b8f6a360a1e024e60f508ff8993f60e79eda7b9
3e59d0acf0720b570698df377a9e80e12c6c2d795d91af66217cd20c05d34bb36bdc6957
92177ad079f928c77900e83c086b4698b37495fd79cee5075e901e9c2af8b6e9f870e47b
6f6503b7ca22fb2d9753f5dc0c08dff64121fc9472f350eba40d5376af321b681367630a
40fe783eb9a73e445495f5f34cf670ce9fdb4a28777528cab5dc053efb641ffd40a4fd7d
cc0f7f2cc76a0dbf3dd161cad1231e0dcf9ba01363ed846d0e3d3ad20fe88759eb01f9fb
23d50d2a7d816f29cc4752aecba3ec72f2a7954a57de8c333d76adc64c9796aba441a971
5ffa513db641c5e9218ec4ad61005a4363745e9c5c2e82f9f8070ab47f69aa349ee8a31b
8f8d154bcff4f7329d24f64e0997cce9c3acf826b59aa9cb119e25d410f14d223d26193e
7f54bf2952ed7af2d187478b07dde4df3d6cdc66e8d994ce338199d0ae8738615d51138c
ae55b1881e1d911b917fd4012d865707748a4cd75f4223c2a564989d35a7c93838655458
f1be697841379c4502f3c0f911977a08fa1a418b003452693edfb240e7b78a0b2ab1d4a8
73d6619a82a114a0df1507a543d400e9a2b0dbea682a73af3a6568d7f23e1752fc887129
fb24a3637df73fb464e99964be80b5995b4a97a885de28d2d483b609fdabba7b3d52d68f
29b5821619271b8f76fe3af67095ebbb794c5ef7938dcc8fb1fe54443f341d11c875afe1
8b2ff95ed439f40c4b10edc2e047b07194a7d5ce698ec95b819c6ec773c94bbec964331d
af2a4d601ef390967b8f2aca6bd492355da99b8d1e5a4382c7325ed8d78344735c97a9d6
05ec961f403910ddec25000bd2deb6f88c4f719def44a33edf9253b16b675837b7bb44e4
62d84be543030163ef3ccab2f4d36672bc697b224ec16ef5131e995437147c780312eeea
359f475b65fd2e697e4376813d2f2437a7530c200274e5ad2d058dba7abf270d9cb913c8
08bc6fbfd716fa16dfc637eb7028942c5fd868037c25dfe099150602f48c35d55db4c9b5
6229765a7082a407ce5ddeab38f483ab394147f41f7de76b2b856c374de6e18201fd718c
03e540b6fc72837d62f1d713ccb97938c29af1a2c814da960fb6345447cbf5305297e784
5f738212a89094bbe36c196bbb394838905625a14866289822b76576b51b8dbed70f0c21
c71961c0356aeb9ba7631c20d72a566899530f5867ea47aa6868d392492593a298a30eaa
db99e35ab0330e7c508e5d04150a14c3fc8487099f15dca342ab0b2c2e96e5b4cccce4d5
9f2da71fa0e7518bdf2ece5456b11f3f70a79fc27131a15cc91b249ecd6bccf29d1f5f40
8d85001d816e9a3c47a8a70a9a77492b0e17dc3af71bae5b52156449d5ff3a2affb76dbf
0f0d8c5dfee269da7b87da22fdc925b424b61b31504aab13d049ec72f02ce4e9b90d2b99
183ad73b3123eaa56027161e790ac8c80bdfaa643e9fc36f823c723bff4e7b3c1bb9cb92
9ef63c15177fb3018858c4eac682fe8a17ce771a06ff56a504781ed4e3ae470d35ea6445
b16d3bbb97694a0ecd1c562b23780a84fe04524b30c44fb89d54fea63e75c187c1c64401
1ee01268495bd976c4042c4b3c5223c758de0bb793fef15e7415478f2f516a977362ea5d
b28b7640db6779f42dbf78856527f3d37c9a2c712aaa74f5b31c453b11fc9a3692699c22
f0b2caba5df3a923b0cb69a415ab472c2190a06200c0bc8587045fef475d6464c409d803
b55fd3b187087a76f92c7d60c28130b41243a19abcc495cf63d59d59edae3dc87849b2b5
0280a07b0b933050c091a3f60c7df98832559c1348d41bf75d54cb1736c96b09568bb713
0329272d57fb59e2e1ffd1d5fd1b5a43464681180ee8a1e1ab64fea335adb4559abccdab
76059f395d86698bd593db1a817cb4fab4d53465ba4dc2f75ab2a5cfcd2db683154bc3e6
36e6bb98fc6dfb9d9ce988b5c03faa2d7d91f03f22d85f6ab62c551a5a65bc3d72606127
114774e936db0fdf467b0070dd27cba124404dee7a037c0a42d82fc6bbc95d3d2cdab4a2
05bb766f66e69c573010f0e62a33337aeb1ee08b2774f7c1d5e81733e609c43b7f71eca1
e69cd4c4265bba7f9d34abd980376279ed2a509f7fd87757c57de38c20ba70bf015fbba7
c702b47b6399b546c13bac2887cc5206ffd0f85de561484cb5b1619a57cbe3a966d3534b
6f3121bde066c9e8b9945f4c5a9b1d8b105131b6fab696934dd06958aa32ac3fe1a1d53d
919d5938a70c14d73ef5dd41e7129303b758405ea6d0dfc1e13e33510b9d70fbe7eabb02
ef441bc0be77c1a9d09056246282cc2186e919ea4dfb1c4da59200e105164860f74a79f0
4be44cc7dbcca8bed64fb1dc09ab714d7a67cd4137009c18947d012227c28ef95b385e67
c2d07353760b993fd2a0c7af712339e3713305f68bb2050c973758e910de95f5358313b3
a0920e55ead73741fb4545d69ec8376586ccd4c1ec42926c6c17c81f2a8e623bd4f72d57
eb607678118747bfa7e9bb0293e3be6b8d6329120b1a12a321d38bc9c278dc94b44f6c93
79d2f2b934f5760c5aca68dd4ec3d1b6177b5dee55b9997917ce36fb708dd20383a2b928
831176912e5c3768957a2f7c6a44f1431e2d777ef5f2507a11f9a63ac417957d8282fed6
2c1942d74e6e0a6316b250a7e65ce3e1c7ce5dcb133639fa92adc4ff941d5ccb98b33a1b
2cb9babc90bdfe298786b2748c19a0645fbeee6197460adeac3507e678593ba39f549cf6
faa52bee70062773971dabe1b4961caefae7ab5705bd85ecb3012d26a0322eff5f6b2635
53dcc1f9b0bcd62172c703ee57537f6ecbf4fdd4fc3bbef6d896c250a4689d19e011746a
d41451c1b701e04c520cd99ea401960b91ad6cfab6c0bc5bea57ab84d943698014988633
c832b6b8163e2db46ed436c7198d44bc46f94f1a8ef835041ebd28c7b605cee739c5e31b
8bdb091bb9cc4ec0642b0209f269a98ad5a92924288840e7b4c57a20f197c240d421f0f7
5c9ea8f08195f409e8d69b595d98ab3510eb6fbf0841693554db8a93073093f43482435d
b31def5762df13b1914f3dc94e7e73c80ca370c35c4dccc5c2342762979f1d35427178e9
102bad083a98f7f13895388586dd2394b9b267faadf32b23c8acb10f3e3dfad9dd43e068
cb4e75be615d71b6b89768d3ae67dc7d10b8da420cf5c041ef122230fb6a471208d418e7
295fd91f76730c9ec29f77550767cda81c9f957253c337c764cd97e49baa41acd786420f
6fb266eacffd5ae8481bbc914ed0b0a44244d926aada4115707a395f649b077929b3d110
438a7caf2ba7c54be7e12116367e7b6d097254bd6e647caefd57e96860e5bc9eee5e517f
9f7d43438c2710b1ec8b3b115fcfe95ad21b1eadebce5c58d997a844ef0ed2738385cff8
363365b1520dd5c8fb0b658fc98edff080213fbc576c76a9cbe796bf8ab8b84c63eaac9c
c1543c3c05b0b750d47d82147a6a49c8f70edcf6f51aca66e4f528fb5931e5e46232c2fe
8c95df28b2b05362f8ac91b5789f47694ae2d86fc6a77e6283e26e7e9427458b8815d413
31d52b123cab9dee1ad3af1c76a83d46f15aa00c4e3186a7540e6be94a4760739c777d65
8ad11308d1130eda280761092db8f4a0ee5de402dbfc750688cdcd8efe4c7294172843c6
b36eeb71a109e243b65509fb37a466d14f533a2ccaf519cf58498195132d2947bb837e71
5d0aff760330c8154ddd676602d76f7de6d83c285adb7a9e4e80bee87ec3195161c30fae
6608cdec159b89e521e164ce4074249cc230a1d474d6b315bd9ee098c7bf011b39a860d0
d0de77a702612cce6d7df4421aaafbf892ad9e00abfd0808b25dc573433b28edec825128
32e07762443077c205f4f022abf207d688e039dd4f74bd2e103db28b0ceba66331d38916
ab68aa39b08e39e7a2987cbd1308cd3f14c2bcaad4bea7ed9b816e037f5079f44c245cfc
053a298d47c5526da613a6c1dbe790b07a8095873b3baa0d9988b66d182a306602212086
bdfb6907b62dad99cb43c227bb420d140b8a24415674868f0c1b71871065095d54338a70
61e902368c19219647d11f290177d1149dda3cb171180aad34352b05c3ef6350065d6aec
110c238ded42265d63f1a842b01c889d7ff2a541b84f88cd731e31ad954e4ab74ad5b01f
5b550bfc545d87cac310ffe723fc57aab3e9d8bdf43e1fef5ce1a77f1a9acde47c640556
3d204767d868c2bb294d302b530625b9ef4d058384de8abc99de6ac258194cea2fb84dcf
ef206a1ad68a4c5564ee7b1d8e419f05e080eace8fa9ab2004122cbd16fc6a7c91d00e18
a771178c48c4753825421fdd9803d25f5ee0b591c89af27f1e245de8c60f617a20c8335e
a58178a515898952f1007877a7a075d2e12a38508cdd73b1f5fd44438999034c0639e46b
c205103b30b3b00cdd1cac0796dd54020195903370789990c6b2b69af22da0fe8055e59a
1fad1688ec366fe6622effd7454b528a5798f0286e1b9aac4370d3cf62791f445fd67409
597935de735058246cc13f53a76bd43d656fc119e4a5c8e4003a9b00c9377f93c9761127
c3f082f2f6fb6ebc373ceb27ceed2028d0c45760df407134712ae5369ce5e5eb33a012a1
44d3c2e23ccd26e4209b1e5422aa7f772bc68596767493e87940a6ff05b69b5e76193e0f
0354a62735018e9d35ff052217380a2b1586201070ca0728f5f7af810c60cb44408ca16a
d38586d5857fca5ed0fbe0c3d85cd7efeeba8f441a4d3b7d7963c19db3853550270f1d14
8bf086dadd55b125168157f4e8ddb008d8e41f70b6285715f00de105fee88ca626927e91
e4bb88b74a454751852e91bb1847390d89304ffa977766a937fbe1894f72ec25eb53d9c7
259aa27d85b0669314caf8866c16ce834fa06b95492cbae8aa848684d0d107afb8631a25
c92b1ff3ba3f06c8798da8d063b24dffded888a9ab66834748792d94c8d6f8c4094ae371
5fae2a610091d898dcec2146f72e3675548c58060a6d4a0b0b6eea4ec766261ab978f3be
9612b9ef66edf2a528080e2a7999fefd22aea1c3a542fc124e75b5d8de6f24848cc94d90
d4493703c03050d2c5485c1c9c0e907019358e43a9af7b5500a05d8b7fd30b12d1158322
fc5d6e5e7fd3be6b3c982cf88df6bdd12990ddc42d30e28ec7fb8ac08d3b488b410ba6e7
9f85db070f55af651d925ad4179647453c469a46c50a589f4e83bec271a4d615852f2059
8176d58f7751abd941df0603b4f90889fbd256c2402d56871d90c6ac4488e067da80d902
3a11d4a912ad969548e794a2e0d126a91988a7e6174ddddbc06abe774ac67d5dcd1d6656
ebf976f3a9aefe8831ca567c9e3f2aa56aad233a57e18bd37e6ce6ee94697104e49be9ff
42ff11ab4ab1d69b96e133c6daefa9704fc862e3090eb8e47fbec1a5b0e535e5075465cc
c1744934b30a39853f56fa68bae5ba293c4e7448616797098264ea7b2b82acf177f50261
bb7cb9e15fe7b0ef62a3c48fd7a7df8229e6b06373a7712806fe9ebc3f87400e760466a9
fa3a220197e9bdca1907aeec15a89f374a453b53881bdaed9e79402f14e5ffbb95e4a8a2
0cc499b6f725390de7316282f4d55a56bd0b004170e4e3a85615329ab7ffc5a666838d17
b5b4a6185f2c9094319b1c34d439d1785383a76318c68d9f615313b79280f8bb25859050
eb9107e864203a8b705091b1331b529c7a98d3c0daa4211f83e5c752b66345ef546c9f95
c550efdaeb6581a4db1ed46fa13ff094c98ed451bce2ae89fa59cf77eea94ed6f8420cca
fa811306d159b83192a3d19f84d0d6503310a1471d1fc604528b81cca3f2906c0d8674d6
6fe4fddc672d1e53332a0b0be6d245a08bf5844fee063affd89aa44fc5f8277f30594086
2e74f5566a5db7b99ecda2e8fb82246bc11b9a47dfbe61968e513dc7f3e403176dfcd524
8b17e2ec6a5631cd8d3cff8e9ed2843dc95192399023d43eae5bb35f0c169f847bc97649
e4196604b9d95bf2318d5a7ce791da9a0395fb5fcc0b17b2561d14e3ed6d69d4762b9f18
c8f7bb4609a9cbea3eb72b342bc628c725ad719106d89d3cf29ea16911ae60b57b3afd2e
c5590c0e12c75e9e08afaf26ab0d6fb39c9f335e255a8e8c5e7a1d97a19d95d4a71a1f6f
fda1132d7fb286f1773c4665b0913794a9daa82ed64aa500a33f0fd8816005a5268e52ad
eeb5d526135a0cba2fddcda58c76f4a169c2327087575b6878e3e8e7da371e4d15d31c2e
9a55f9b3e491dbed0cb002feefe22dc22893cf5f909d5689c0683b48fb45544dad9bbb52
ddc038b076b69f21c763eac2e70e8a9a4f449ec4712d7bbc6b5886c522b95db5b8f5cf48
f8250566a26150acb9f99bee17b9cb06aa65ef9a03435ceeb707679aa46e89a8abbe422d
e78fbed6a81fe04b38391fb2338d3dc477d11297eaeec76a796edff91882524151f21c8c
6cf445a6de2cb740ce000217159b66a3aedbdee4060746f3466bfebf3845efa9addff611
227359bc829ea2c054796ffd1b38de5317dca0536fc417bbf4eebc878583a47345f9ca47
23f0364599b30d8493da322f68dfe5884443e47104f0f6001f6d1fe825ce31a2671b32b9
d74fc8d859bd875f5f2342a58a71575c4a331bc635e044660f1f9354178598fd23b69c4a
9ec624fc7847397b969f75d0015649aacedcef2152a05962302ed123a957fcd0ae376422
a11636106595d3b3a632de92b9b8005d02b9679760d8b11626fb66f64c6c0c6dd61fe58c
b6d066ba8493d2586d54093fcab8b337330e5e0a711411c5ecad9928e06c6c2ebcd7ad01
4f7dea8f470f4075f128717b952dfc474c79b400b645789ece08898d69ff596893253e49
3c904f769a0681983c79a8527364b697a3f96e71beb92a55ab42966072601e0eec4b4f07
8a5d1a529369e2cc78a6194b64d78869b8e89fb707f2c1840e61e050af3e23ab57178d13
e3b7556a7ec0865a92c99d4fa4c78688b582e938f0b78104f56e18e1d578075776d5131f
c59efaab5752980c8151be809acae44763d86217c79e59a87b0b8740953976e6228f6bdf
f54fa6882741a4b4555b57596968c1bd0701c70dab015cba143e8db1ff5384bfd1af7d05
26626dfb2bd9cb92a2225a586192987ad59bc538501cb7001d798775d0cebcb1072c739a
660fa7075647b0f1dffe376b87cec3c1e63fa262a4b5498c92a58f17f95e3a0e93be82ee
a5c6a26e51d677b33cbb53c8ca2a7ec6e529dcdcac0e0907116c81fa54b82a8dca68380b
9f9d22c00871bce057610364f6eedf3f9d20b9bbd69ce0a70801c5c16db13b74399ad1bb
b6edbc4676aa70baf84b5fe542af82382d23533f26341d9e59f7ac8277250bee5d790b0d
e085f2da1dc56044b818cb6bcf20ac0942dc45798f6c43084659f486a5439651644633fe
f45d89f39f5a0292018b96cebbe9ec9b89b2f0888f8195584c36c1a9f55fd2fa89d30896
818f74ab63e5b28a1307d0e5d14ff64fbb92e87ed5207a04215079ac31150488c5047fc5
b9e1124001bb53803dd31b34fe210453fa77da08d94d9a71bf309bd0fef297a96192906c
f69d1e16c1963dc947db2b035ec2a8434c81787b9c920835a2bc1e5d141c6373fa73b0c5
71a5f5c7b6ee9f9051f9f419a59a8172a1e85908b37a152690fe75d151116ec3f533fd2d
efd9c37e584f2aa0661d11bb1945851d619b1be03bdbcc54732e7bf1126ddfb4bd729a1e
07a620367e56ed9cdf5ad970250852ba88b054abc9b512eaf1ceff15ec589565010dcfdc
5211856e1d6dd6a3b68171053f9bcb12c9f27a47b276f8a731e08c10dcd90f1d9472b038
c2a24e9cae4ca182c7d74748df73bfdefd9d404e9dbfdf2a95d64f8f005a82bba29aca81
c1810fdd20566089c968d9b810d35222f0bb9770f30668ed696e3f0fc24f9bd56a6ff2ed
bb834d59c3031ba75ed208b8535d494b60581d5b9dc46081e32d7e4a851a7aa0b96f0dc1
f861a9cc0cfbdc384c83dffd7c776dc309ebfafcace9b10fa1b6b9863cf6a695c110a703
e78f419097da802c6cccbb51a12949403826474974c1472c909012a4453e6c98dfcadff9
24f3a92f29e6d0a0bebf7b0612bd387c9a61877b66fcde75352a2bedd77096c4945f1951
87a8133557f53aba5adf1472aa1252d12545e386843b6b615efbadd73ee5499d52e0ac30
3482f945453e5ea9ed933c13d623c311ef86f9b704bfae4baa43be3d84e8d327d6793b87
aa731ef1055ad0b30a3f92d7cad9889f561f97ae3a2dd7ca5988a3a1469721bacc4f9a1b
d11fd8e2d6cfc93fb6ee9bb4c64bf7bdc52d674f1b05efde95468ce4c0a9e9730605e1b5
856e541105daea27d14df6e8af9f9f2203478d601ccd6cf96841e02cea5433233547df0f
e305f0cf704e3842088ee16172aaaa49d9a324476c059e1c633b19e0f42f260250918646
8eab27b0bdf6c01dad07e98be0a350a78bf0eaf6fedd1d3dda5d224dc6532f243467dc7d
f24a74aaa6166fa001ba794e78862e425f764b2c89bdae0f19c6af29e753f579af597350
425b15b7e9ee777fef0acd367efd7962465480a11c477cb91829678e0ae1977a73074149
f6ea9d1264ca3a7289c9faebc68f0607664876dfc53e877fecb13174ac7e77ef95f543a9
853304904c4101b337b1829b56fb2731e0f122848e42a1d8e423b8734d620ac0bd155967
b1a446a8bb50395ef079c21016e091d67243a7a9d1c941d5a25fab9f7bd4b72cc63f02ff
ca787e5fed7d1292c6cbe78e9963800bf1c2d441dbe14e3d743b5e93e16c3d8b33606a1b
6703c7dd911a7b99fc24a2eee000b932a9b20aafacbd3c5f214c01d9c0d67b478305a19b
d707b3b10e3002195335220b8f4e57ac1e38a7baf9709e5b296995d12c547653f17e7283
e4f5845d3e77cd417566dae3ad11e609c37c74056fc0c60d8a4d0e42402741eaac6282a3
d5654be8d3a2c9def348a0324a508e8cacd3233ada95ae60d8b4c025f361af6e4f7a89ef
29510de2f4429debe5c83c33f47f2c9aca6a2f44642797da921bf3a3e6f8f4848a674ebf
141c6c60ef830490a369062bb710e9b5c5f89387946eee7fae27dc07c78301061f9a1927
fa78b6e089a3e93ff183e98c6f6a719942c5e198a7b1dd9e12598f85c3080e1fdb6bb55d
756d27899fffc311b16e31ea7ae7a3e60ca4d6e2d2d730cdad755d9214e0bf33b5b648e3
358b3a6619fed4e9fc1c5bcc3a5f6d09bf577dea6c8e66a0787b6818a24d507ade986e8d
9444343cd29fb775f7dfbb57198f65b6d3cc101564f25e0315b204206c19875fe4aff145
56eb505c5c0014082e541f0afaf10b66cbe678f0ecf991c4474bd804a419331ff214b5b5
9d2e5b66a237fcdcc965c08a12876f8efe7f30f03737d2c9ce71891abb0887eef0766a9f
b5dd45599611ced42ac6d92504c70965718d638deb663060b387fba8aa9a42c61175f371
becbf3622f38b7cdec2682c812154ed935ef14641b4e5abf238d0101f84d80b588a768d3
093a896cc345372a86d9bfc37ac13cde228b7604574933f951e9474bd7f761517d149d41
143246110351e1abf57a31dcb0350d5408f7672e4457853628282edf28c1a3964d20e443
0e358e4c6ccae9f7e6dd7e321a9e6bcccc2cbcdb7b2276e326251bdbcb62f7af1e1bcdc0
515f6432943cfbf0f901bdd3a4a35ba61f6b456ff845171685caf8900e8015f45ad77a1f
9441b72b9e127f2546e54fe4c9f50ea5a1fa9af0f0d8318cd39770fdc3108dcb4af252c7
b060a4b8a99c5ee0b3469965a61d6783ef55149d94053bb194a1ea44209fc5efc9756f3c
f21fdc0832ec0fa8f1a9f3f4b7e466fa2a3826d5aaecf0168b383e96df82d983e2f018e2
633b0646c647822f364f4da483ed866f29b9ce3600f2dfc59fece080b436e4137ec8a3aa
d29d8eb28c87e61df5b5531fc357fd91efa63555c18ef06817cd981b581cb122d2a4f9b0
5974a747a459d02c950862dd7165ee4de4fd24951ad046950e36c06d748f617843bb945f
924c60c4c28f2d1e80fa78d5287f6451a97723e815d70c052587a1210018023698ca0cdc
7177b8661246471ce27fc4303b43c2b376f1da83a797c59178ad96de9bf94000bde5c125
bcfe863592c7a409ed36bc77ef160143cd7d1f1efcd1b52dbbce258dd96cf5b7a310fda1
62f81207614f2af2c846e0ab31661f1fbc3afe07c640468eec8b89272c7bb925884a53cf
3bdad7a7083766187e96c4c05cd98cfbcd4e2da61f408f7d8e0d2e8fbbea3d402923285b
b1774651641398de30d07c7445ccfee4aff03f9edbc034631afbbda48d7c0488b157f4c0
ffd9027ebe7129caa4c4d8a3a800041f8b2a8bea66d99c7157c8bf677e027c110eee02bc
46d05ce4c182aa52dcb449078938a0754e814dd897b029616d53db4de63d0e8f6d7d7528
40e3438be927e32a6a1a975ab078dc60529147ee74e1a02ec35327c63346c46458ec794d
30d217dc43a456802cfe77f5a5c91667aca92b8254d679f6fd8c44d0be97efb1de338ef4
73f580895578821b5037847225508ef6b3a56d1783fb6f9fff69d18d1f8ba8aaf183aa3b
35beb34311b820ef27cdf351e2ce23f66f204f36c748e642c543c1ed4ccaf533fab3a8bb
731109448df35fd3f37862e5ec9b87c04277fa7b5076ac583b460f43421f793514b396d7
149b106909bbf624179db95dc65653897f6ef4851748d049398a2023319bdbe6956b4a90
542b6d0ac1b04bb949c77f419fff22942c3b116113c09610939990bc46a8ebc9f86e2386
4fb327cf6825a4c5c52d815ae52c9ca5b2ff82c89e17977c936d5c1f364540cbd7755fa8
821e295b39816e8e06f285b06fe51870572e2e629018caab57dd3fb857fc3639d127458f
f8eafe58521e7e8944000caf7ef5233f39e4abc37b461820c158a7a8ec8fd1423588b80c
5c8e3457e2f443def8791a5361b76f19ce9cf308980c6c51bdb65cea11e76d3d696608ab
bcdfb45b86a302c40c97c493bb2f13957a9883ed9c4bdb3465b6638d1872964d7cc886c6
37902c93879eebae1aa2f38099db308ea6f36e7ae10f01b524a3a473bd8375b67627a6a9
d623c848a5c1a7f0725dcb2a668f273d1f460afff8a5ca2f824a55e798aa8e1719ea7ded
08e281574f3f7af0a791fe5838dd71f644b9a9fa68bb71cc5f001ffb098edb4dc2e89dec
e0501f0376c4dc12ecb3e8823375383a314cb0661471fbd13dca8d3262cc1f9fc3d783a8
3c2dc10a591c43e2d4e653c1c63ce422dfcaee61e579ed4093569b39fd64c11b41c92d84
05299d831acd5919153f721526bed5708e6608a0797c2c15a284c16dd0d90a1416c090e1
3015ea135427c8164e215f7cb7c988b8349248069ff0ac3b8239a5427f8836d558de433f
0040a0d58eba4958848710dd6b73cfd9beacc84b65adf514970411c9555a6a5d36ab9cc4
f7407e791ac39d9449681f805dcc8654d7274b289ea5e985f7a044355e2e07cc9b5be240
f80297c4bbbb88cbe46520ce66caf46bfffcdf8ee5e8c01b235dad9389e4b1829bba0e8f
c46371305dfec9b43659d38249363e0898f2bb8b00e7386151e07fda13600b1b04155e66
7a1b8b3829796618f5b05d33b0b9eb02417ab803a6f309e75921c032690fe9c0072d0998
8fb4bc5a55b989123fb0dcec1e1c3878e2b6d9b3de5e73a23fdacea9f93286874f768025
cac1f910cdf8c1f3055fca5cba30c0c92eda9c34303a639c5c3123fa5063deb13c8479a4
facc3ad36c95e8175eb3df4d8862b80db624f4ee5305fbf9dff8c530253e4d727c1e0ae4
43844409080730d1cc357bec5445ba6a7b710b7895166dbc6ce50a509ab50f7a3a8ddc76
e492634c7d4c5e60ae97699e823b94f7dee18c062b1e20bc90dd82b90740627c55ed2e23
e368a996cdd6e871c1001e1e357eaa8028affc5164c68c4e133036d1f804c2161072b6b4
83d222083c9169af13651fa259c6485621c1d8fb946748c95d80c6a3c01d5fa48ea03de2
11437a8acedada6f281d12157fbe4cf9d84b72e0159c68eb429698206c28d219c97053a5
c6b25416da74807fe15610445e160c64b35b65500333d82a6c0cc07442c8aeae3bdad4c9
fee6f6317bc14a88d06d4002c412e441fe6db865fbbbabad3e14721bd394e87013ba8fc9
9b763a13ebb1bf56a745ec3f974c3d0fc33ad9b134e7c6c573477fbf0cc28c21e469ab5e
142f6aac861adbf12c977d6ecc2df0a011cdacee8e699e58bfb75e4b81c5473f6e032e11
7f99a79df53aa0f6571b80ce530ca36c50d8df08a63554eff1923a55dbaaf031d261fa8c
0505017dff7205aaf3402a6b19ee7b3a271ea347d478a5964b6035db81c3a0e1ece73888
6af876948454a9ea4ae0060f58a57d1acfacf4a25d91621becf3d3d42da7d776bfa0347d
c33b8fdb196a8436ff89c982d5a36176c479514e10565d8206850e32a662ba12fb73c3a2
7857d8aa5fee89a5fb3e430f814091769f6a3784c144ecd8615f11d18399c6006dc8039c
d233de4667566f6e0e72eb349edf6596e908f4123a38430370fb59bc07ac6ef2642c0308
bbe5e6a1931b40fd121015e0853848d9dd45788e40c8062e0343aeb31c75b4e482c102b0
0f5bc303d86d6717408fd68ced0b887db774d1973af04ab6e671a355cc20a2ba23ae6907
d6c99abe680c307e4c2e767d14f2c14dbf1375e5228082f17b02cf4abe9275534c84eabd
dffa50b3be55ce649b0e6fedfd8b3248da399b71af407fc4e98a07d2ba409a0bc55d560e
dcd56f81f2716ce78aac994a1a93a02c77925d030100f3560ccbdfb0b8ac378132ef55cb
44434204bbbb464740194ad085aa3680882567c59c198485f09cb0f91c81ef2a277dae8e
f5465ed8c80a80cf71d05eda21ea674e092e169a2f48c2af473d95a51c69804b46446dde
81273e1d19f0ee391bccda827e6d512bfbd562506475a05e017fd448150cc368a9de1fd5
a602577c091cd1691364a9c34b6877f9e63a90fde983ae3ef9efb9ca27ea948d9a24a49f
aa0e723619cc7bd677d9fa05f8688e8f584d5f63e63426f7be00822aa1b3dee0abc20b6b
2f2d4b369ff252e949c5c5f6da0e3426a1c7b41ac85095d1d291ce2081ba75a5e0cb72be
3b1e5cbbec602b11a3d692a1b84d59a840120a77f237925945bfde9f794465734987c283
86fe0044bc4d6f42f9d82aad7c1e6d9ace411823f41030c1cf316cf50086a3d87ad16a94
ab34680095426b5aff5534688ce95775b1f7d5a6b1d6d7c7023f25753f070244bd366dc4
a4a3b9b2c0c5e640ef57cd7c008798563a42ff07047a0b561f892ff80a91285be7e5ec5e
dab13f6388a3b8d7c09355267744d1a67d5620d17a3387bf1b4499771010c61cde223f6b
4a61f74655ace2fb7c09446d3a12249d7822fcb83162b7945143e507a531b4e13cf375f5
f3bb893393e92a1e172db6da0ea376c5cdf531211e1a65f73698d1fe89a9ea43d0d90ce2
7922f9a57c25363d32d1988941b1ce107febb54ff832fd1ac87aaf7f28b486c103c3ca8c
815f7ccc2b7c76fd2dd0625f6eaf1baa8021b70d897dd27d1907d44a3e3d1415e8e59f80
3c17664318fca043f1ebf85f5aff60b14d45c8589695e9095d1e9e7a30068f57d25dcadc
62810f0afc714380a91dedc55119bd17456ebb92973f44f927cd205ce040e4ae1727704d
e365b5d668e82346c5867d0119de2187979ead731f7ade1b54df09f34a8a7333ecf1d70f
55278d4cb3a45af11e13c72f1814ba72367e1e39a4df92c63f7a9634f3afcff29e1d41fc
1925d135bbd7be848f397b1d3c4ee80d44011ad0f0dde6aad71999c15b5a68392a3f95b6
bd2ffff18c3178ed91bf37c9505ddc63d23c991732bf253f632fd85471718afac258baf5
fbdab3c512717a95c1e664ee2aa7f9448ec8141a2eb4dc09081458ae7c09a9a6d6464379
083843861d6e5fd4ccb548861134fe76c590c42844d3721def360a11826202a0412616b2
62a622e34196b40e209cc97d2dc70983b3e4222f391c8a74c4f131bfa0d0c27a01308c81
0cd1714d41b5a486ec592cabe0c92dbc20cccde9aab619cc691d8b439c71f7c2fa5c7beb
a17a7becefd6684a115cb39a4449ec51cc5f10cece4fe58d8d15fc30b65bfc6c292769cb
7475eb0cf102ea5d5239920a934ad4f665b996ac350ce1a692cb5515c8c4317fa1563cde
dce237d8e0b4f67b43508c968f56bc150155e49a01e81753fe0b7ce378578eed35301399
ad276ce64623af7ef2cfc20ce8d0a830f45ba3de988b2f0a03726ee2bb53990505183719
2394b4c3750a78f9b0cce14ebdfdf3c031de89a09b88723ffbbf0938b6444cf6336df35b
e5870b90ed240ad3e48c4928e032be415c8e7bc044465d23049d67865fbb275cdca106fa
374afd65f04c9a3ee73afbba940d7931e084ff9aa317e95c46ec421217bd9eb17f917d66
f8697adcb2521dedd5da4abf9815f0229cf058924840891be1673f5f5227b42ccc6faf1b
dcb7c0b58c4aefe72794d02a609106f2a5c1dba9ada93d39d539cb63f7f372f0880d7d1a
e8908c44f0fa4331a1b0787a343c4c5a897674eaf55a9f05bfddfe7a6ab853770b68ad9f
de7b13071fe9cc4277844c10ded8efa2f356bc9da1a0361645b734890dcb0c6bfd57268e
72f176994f43cd7a8ec14792dd49a74d8251b5c4633626a5722b803c1d93371976c5cb3e
58dcf7bb797e38cae00a772d54094ce4b4948dbd0fcf38892bc35aaa2bea336e3545f7d4
786985343780cc145f9be7db20b5bb47b0fa462b42fd08cde807f341f8daf73026e328a8
c55566fbef9fa5c981a864c0a77bde2174310c5f43b84cf5a8ea9c457415ba6a579f7951
5d9ae1ca162b824841d28d27d4052fa1328b4b81fcd35ce8abbe104060d2114ad43ceda6
5a490a15dc0590ec894f2ca8e7a1d31123b14cd1254597918726d505aa6c1024dd4200d6
15a1ac1569f99752d8a9795623fc522e28795b99704c55c835d30251665c46fdf0bbca2c
173e33ea9502ecb3e91f1bb97e6c16a679ce63583d100043d84427475f751a1e2aba1a73
804855b78fec1052b58025d3af263e2327964fcc6d880f00cf11f2b2478574557764e258
5dd7291c7d23c0c566fb6d82878caa4106e1ac9e34f7fd0c5340f1d1c5024c46be6d5745
c13c3f6434604afb0401aea5b997e04d36714aac08b15fad32fa25f2c7644b2d1fd65d01
09f4a3feb3e583cdba08fdda82ec880ade3a195653a4d9e31c718aef5fad36ccc124c939
d3a401edaf8f09624f29b6b5731151bc04a9f1a00299084cccc2fe5a6af5a3abfbb07726
da5451378cc7b04577f32f9bcc2e513a51c7cf1ab109fb989c975b6815035e8a954589d2
e10de788f6d71741073057e81f48ad310902c7709d5e3c001cf039434a399fced04ba6c0
1a05bdfc626ddb05bd8936f822f82a78a2817d1186dcebfbcf5ab200c6ff9f787258752d
6dd484468aba270682481d87f964f1af433ad7d992e798522fa136dde85b7ee940c655a8
c4151c8159d8b9d990ba7ea114e52ddffd020dd6c0f6a4eed603377f3c743dbba48a9ccf
a04cc554efe608880255f00557b8e92597e734cf4fde2cbb1140bc989860bafb0d0008a1
9ec79b4afa889caee7f9ee26cfa7657382e9ed858ab4f8fffb0c221a274854157b292108
140718bd71a58d5ad91dbf2f8d6f21ce62e5af79767448dab6f112c1fde0a7944e9ef3de
b18003d72cc8a0b7c2f08247788a432b51a4d54361294a1be0427d0ba37e773d8a6bac53
1adfb5af3769b0912109795dcd2e20ed2b22230ddff7601dfc8f05d8451a5f4a1f5c0246
70ff9c3fe8a6380917961dc86f94d2637633e0a743040128c3624718bd022e09686cb136
b9b66319dd0d15f3f6f9624b339f1b0d4b07fbe7f2ff7860f29f95f673090f464b2046a6
915d395f18e2bffde051f54710cd3042924892cc7c090fe69b6e4c3682487eb42b449b70
80cd76ff52b24c68381d844593
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont: Times-Roman
statusdict /jobname (DX10072 1..9) put
1 CPS
/SS1{currentscreen exch pop exch pop setscreen}BD
/SS2{currentscreen exch pop exch pop setscreen}BD
[/Creator (3B2 Total Publishing System 8.07g/W) /DOCINFO pdfmark
/mywidth 0 def
/IS{IS1}BD
notEPSF {612 792 false IS}if
%%EndSetup
%%Page: 0 1
%%BeginPageSetup
%%IncludeResource: font Helvetica-Bold
%%IncludeResource: font Times-Roman
%%IncludeResource: font Times-Italic
%%IncludeResource: font Symbol
%%IncludeResource: font Times-BoldItalic
0 0 0 SH
% End of font info
/pagesave save def
/XX 0 def /YY 0 def /OH 0 def /OS 0 def /OB -1 def /IN true def
/OT 0 def /OO false def false SO
/ET 0 def
/pagemx matrix currentmatrix def
0.0566929 -0.0566929 scale 0 -13970 translate gsave
%%EndPageSetup
0 0 10795 13970 C
0 0 0 SH
0 0 0 SH
75 45 SS1
0 0 0 SH
0 0 0 SH
-1 SOB
/f0 /Helvetica-Bold 281.17 0 0 -281.17 0 0 MF
sv 1551 Y 1270(Important)D 1350(Notice)D 910(to)D 320(Authors)D r
/f1 /Times-Roman 184.515 0 0 -184.515 0 0 MF
sv 334 Y -2580(Attached)D 722(is)D 176(a)D 136(proof)D 453(copy)D 413(of)D
207(your)D 392(forthcoming)D 967(article)D 518(in)D r
/f2 /Times-Italic 184.515 0 0 -184.515 0 0 MF
sv 198(Physical)D 691(Re)D 194(vie)D 215(w)D 177(D)D r
/f1 f
sv 132(.)D 100(The)D 341(accession)D 762(code)D 403(is)D 177(DX10072)D 716(.)D
316 Y -8090(Y)D 113(our)D 300(paper)D 464(will)D 342(be)D 228(in)D 198(the)D
280(follo)D 345(wing)D 423(section)D 577(of)D 208(the)D 280(journal:)D
317 Y -3758(Figures)D 592(submitted)D 769(electronically)D 1050(as)D 193(separate)D
646(PostScript)D 797(\256les)D 347(containing)D 821(color)D 419(usually)D
573(appear)D 533(in)D 184(color)D 419(in)D 183(the)D 266(online)D 211 Y -7792(journal.)D
646(Ho)D 221(we)D 211(v)D 90(er)D 139(,)D 122(all)D 262(\256gures)D 577(will)D
364(appear)D 570(as)D 229(grayscale)D 775(images)D 600(in)D 220(the)D 303(printed)D
600(journal)D 600(unless)D 537(the)D 303(color)D 456(\256gure)D 210 Y -7825(authorization)D
1025(form)D 407(has)D 293(been)D 397(recei)D 358(v)D 90(ed)D 222(and)D
315(you)D 324(hav)D 263(e)D 130(agreed)D 542(to)D 191(pay)D 315(the)D 274(necessary)D
766(char)D 317(ges.)D 339(Fo)D 192(r)D 110(\256gures)D 548(that)D 327(will)D
335(be)D 211 Y -8080(color)D 434(online)D 517(but)D 289(grayscale)D 753(in)D
198(print,)D 450(please)D 517(insure)D 505(that)D 333(the)D 281(te)D 132(xt)D
198(and)D 322(caption)D 599(clearly)D 559(describe)D 671(the)D 281(\256gure)D
484(to)D 198(readers)D 211 Y -7721(who)D 368(vie)D 223(w)D 186(it)D 158(only)D
381(in)D 198(black)D 455(and)D 320(white.)D r
0 1 1 SH
sv 317 Y -2289(No)D 278(further)D 557(publication)D 887(processing)D 842(will)D
342(occur)D 465(until)D 393(we)D 269(recei)D 357(v)D 90(e)D 134(your)D
392(response)D 698(to)D 198(this)D 321(proof.)D r
0 0 0 SH
/f3 /Helvetica-Bold 210.875 0 0 -210.875 0 0 MF
sv 474 Y -6223(Question)D 917(s)D 170(&)D 205(Comments)D 1141(to)D 254(Address)D
r
/f1 f
sv 316 Y -2687(The)D 329(numbered)D 781(items)D 443(belo)D 315(w)D 174(correspond)D
861(to)D 185(numbers)D 677(in)D 186(the)D 268(mar)D 286(gin)D 277(of)D
195(the)D 268(proof)D 441(pages)D 462(pinpointing)D 894(the)D 268(source)D
523(of)D 195(the)D 211 Y -8028(question)D 680(and/or)D 525(comment.)D 789(The)D
342(numbers)D 689(will)D 342(be)D 228(remo)D 378(ved)D 319(from)D 412(the)D
281(mar)D 286(gins)D 361(prior)D 412(to)D 198(publication.)D r
0.6666 1 1 SH

[/Dest /query_position_1 /Rect [1340 4989 1520 4804] /Border [0 0 0] /LNK pdfmark

[/Dest /query_position_1 /Rect [1340 4989 1520 4804] /Border [0 0 0] /LNK pdfmark
sv 264 Y -6172(1)D r

[/Dest /query_position_1 /Rect [1520 4989 9525 4804] /Border [0 0 0] /LNK pdfmark
sv 180(This)D 369(query)D 461(was)D 327(generated)D 761(by)D 225(an)D 216(automatic)D
772(reference)D 730(checking)D 709(system.)D 600(References)D 862([1,)D
241(20,)D 271(22,)D 271(26])D 287(could)D 451(not)D 277(be)D r

[/Dest /query_position_1 /Rect [1520 5200 9525 5015] /Border [0 0 0] /LNK pdfmark
sv 211 Y -7830(located)D 576(in)D 185(the)D 267(databases)D 749(used)D 378(by)D
225(the)D 267(system.)D 600(While)D 493(the)D 267(references)D 801(may)D
360(be)D 215(correct,)D 601(we)D 256(ask)D 286(that)D 319(you)D 317(check)D
472(them)D r

[/Dest /query_position_1 /Rect [1520 5411 6771 5226] /Border [0 0 0] /LNK pdfmark
sv 211 Y -7634(so)D 213(we)D 269(can)D 310(pro)D 244(vide)D 373(as)D 207(man)D
317(y)D 145(links)D 413(to)D 198(the)D 280(referenced)D 835(articles)D
589(as)D 207(possible.)D r

[/Dest /query_position_2 /Rect [1340 5622 1520 5437] /Border [0 0 0] /LNK pdfmark

[/Dest /query_position_2 /Rect [1340 5622 1520 5437] /Border [0 0 0] /LNK pdfmark
sv 210 Y -4780(2)D r

[/Dest /query_position_2 /Rect [1520 5622 8080 5437] /Border [0 0 0] /LNK pdfmark
sv 180(The)D 342(references)D 814(ha)D 172(ve)D 227(been)D 403(reordered)D
762(so)D 217(that)D 332(the)D 224(y)D 146(are)D 280(cited)D 415(in)D 197(the)D
281(te)D 132(xt)D 198(in)D 197(numerical)D 795(order)D 380(.)D r

[/Dest /query_position_3 /Rect [1340 5832 1520 5648] /Border [0 0 0] /LNK pdfmark

[/Dest /query_position_3 /Rect [1340 5832 1520 5648] /Border [0 0 0] /LNK pdfmark
sv 211 Y -6694(3)D r

[/Dest /query_position_3 /Rect [1520 5832 9495 5648] /Border [0 0 0] /LNK pdfmark
sv 180(Please)D 526(note)D 372(that)D 332(grammar)D 722(has)D 299(been)D
403(altered)D 559(as)D 207(needed)D 578(throughout,)D 910(and)D 320(check)D
486(carefully)D 712(that)D 332(no)D 238(intended)D 691(me-)D r

[/Dest /query_position_3 /Rect [1520 6043 2474 5859] /Border [0 0 0] /LNK pdfmark
sv 211 Y -7687(aning)D 464(is)D 177(lost.)D r
0 0 0 SH
/f3 f
sv 422 Y -891(Other)D 616(Items)D 603(to)D 254(Check)D r
/f4 /Symbol 210.875 0 0 -210.875 0 0 MF
sv 263 Y -1460(\267)D r
/f1 f
sv 237(Please)D 521(check)D 479(your)D 387(title,)D 385(author)D 522(list,)D
321(receipt)D 554(date,)D 404(and)D 316(P)D 87(A)D 126(CS)D 274(numbers.)D
731(More)D 448(information)D 923(on)D 233(P)D 86(A)D 127(CS)D 274(numbers)D
684(is)D 211 Y -7882(av)D 169(ailable)D 549(online)D 516(at)D r

[/Action << /Subtype /URI /URI (http://publish.aps.org/PACS/) >> /Rect [2942 6939 5052 6755] /Border [0 0 0] /LNK pdfmark
sv 188(http://publish.aps.or)D 1477(g/P)D 230(A)D 127(CS/.)D r
/f4 f
sv 264 Y -3493(\267)D r
/f1 f
sv 237(Please)D 526(proofread)D 772(the)D 280(article)D 514(v)D 90(ery)D
290(carefully)D 647(.)D r
/f4 f
sv 264 Y -3356(\267)D r
/f1 f
sv 237(Please)D 514(check)D 475(that)D 320(your)D 380(\256gures)D 544(are)D
268(accurate)D 661(and)D 309(sized)D 422(properly)D 614(.)D 89(Figure)D
524(quality)D 556(in)D 187(this)D 309(proof)D 439(is)D 165(representati)D
860(ve)D 215(of)D 210 Y -7851(the)D 305(quality)D 594(to)D 222(be)D 254(used)D
417(in)D 222(the)D 306(online)D 541(journal.)D 649(T)D 100(o)D 171(achie)D
388(v)D 90(e)D 161(manageable)D 964(\256le)D 315(size)D 367(for)D 293(online)D
542(deli)D 275(v)D 90(ery)D 224(,)D 125(some)D 211 Y -7615(compression)D
1003(and)D 337(do)D 181(wnsampling)D 972(of)D 224(\256gures)D 572(may)D
388(hav)D 264(e)D 152(occurred.)D 764(Fine)D 398(details)D 554(may)D 389(hav)D
263(e)D 153(become)D 646(some)D 386(what)D 211 Y -7646(fuzzy)D 399(,)D 87(especially)D
781(in)D 184(color)D 421(\256gures.)D 587(The)D 328(print)D 390(journal)D
564(uses)D 357(\256les)D 348(of)D 194(higher)D 512(resolution)D 780(and)D
307(therefore)D 708(details)D 524(may)D 359(be)D 211 Y -7830(sharper)D 598(in)D
199(print.)D 451(Figures)D 608(to)D 199(be)D 229(published)D 773(in)D 199(color)D
435(online)D 514(will)D 343(appear)D 548(in)D 199(color)D 435(on)D 240(these)D
435(proofs)D 525(if)D 168(vie)D 223(wed)D 362(on)D 239(a)D 211 Y -7922(color)D
434(monitor)D 639(or)D 207(printed)D 578(on)D 238(a)D 136(color)D 434(printer)D
484(.)D r
/f3 f
sv 474 Y -3400(Ways)D 603(to)D 254(Respond)D r
/f4 f
sv 475 Y -844(\267)D r
/f5 /Times-BoldItalic 184.515 0 0 -184.515 0 0 MF
sv 237(W)D 148(eb:)D r
/f1 f
sv 343(If)D 177(you)D 330(accessed)D 700(this)D 321(proof)D 453(online,)D
562(follo)D 346(w)D 186(the)D 280(instructions)D 916(on)D 238(the)D 276(web)D
361(page)D 403(to)D 197(submit)D 557(corrections.)D r
/f4 f
sv 263 Y -7031(\267)D r
/f5 f
sv 237(Email:)D r
/f1 f
sv 602(Send)D 407(corrections)D 860(to)D 183(apsproofs@beacon.com.)D 1859(Include)D
594(the)D 265(accession)D 747(code)D 388(DX10072)D 765(in)D 182(the)D 266(subject)D
563(line.)D r
/f4 f
sv 264 Y -7918(\267)D r
/f5 f
sv 237(F)D 106(ax:)D r
/f1 f
sv 353(Return)D 556(this)D 321(proof)D 453(with)D 382(corrections)D 875(to)D
198(+1.419)D 508(.289)D 313(.0807)D 405(.)D r
/f4 f
sv 264 Y -4707(\267)D r
/f5 f
sv 237(Mail:)D r
/f1 f
sv 528(Return)D 556(this)D 321(proof)D 453(with)D 382(corrections)D 875(to)D
198(Physical)D 679(Re)D 202(vie)D 222(w)D 187(D,)D 232(c/o)D 280(Beacon)D
608(Publishing)D 843(Services,)D 211 Y -6566(1797)D 422(Seddon)D 607(Court,)D
520(Ashland)D 668(OH)D 319(44805,)D 560(USA.)D r
/f3 f
sv 474 Y -3346(If)D 183(You)D 454(Need)D 568(to)D 253(Ca)D 269(ll)D 172(Us)D
r
/f1 f
sv 316 Y -1899(Y)D 113(ou)D 239(may)D 373(lea)D 215(v)D 90(e)D 137(a)D 134(voic)D
317(email)D 467(message)D 680(at)D 189(+1.419)D 509(.289)D 313(.0558)D
468(ext.)D 325(133)D 267(.)D 155(Please)D 526(reference)D 743(the)D 281(accession)D
763(code)D 403(and)D 321(the)D 211 Y -8028(\256rst)D 340(author)D 526(of)D
207(your)D 391(article)D 519(in)D 195(your)D 392(v)D 90(oicemail)D 693(message.)D
779(W)D 161(e)D 133(will)D 341(respond)D 638(to)D 197(your)D 392(v)D 90(oicemail)D
693(message)D 676(via)D 280(email.)D r

pagesave restore
showpage
%%Page: 1 2
%%BeginPageSetup
%%IncludeResource: font BG-Maths-Italic-Bold
%%IncludeResource: font Times-Bold
%%IncludeResource: font BG-Maths-Italic
%%IncludeResource: font BG-Maths-Symbol
%%IncludeResource: font BG-Maths-Roman
0 0 0 SH
% End of font info
/pagesave save def
/XX 0 def /YY 0 def /OH 0 def /OS 0 def /OB -1 def /IN true def
/OT 0 def /OO false def false SO
/ET 0 def
/pagemx matrix currentmatrix def
0.0566929 -0.0566929 scale 0 -13970 translate gsave
%%EndPageSetup
0 0 10795 13970 C
0 0 0 SH
0 0 0 SH
75 45 SS1
0 0 0 SH
0 0 0 SH
-1 SOB
/f0 /BG-Maths-Italic-Bold 219.66 0 0 -219.66 0 0 MF
sv 1072 Y 4375(CP)D 298(T)D r
/f1 /Times-Bold 219.66 0 0 -219.66 0 0 MF
sv 144(-odd)D 479(leptogenesis)D r
/f2 /Times-Roman 184.515 0 0 -184.515 0 0 MF
sv 422 Y -1597(Pa)D 180(v)D 90(el)D 188(A.)D 233(Bolokho)D 633(v)D r
/f3 /Times-Roman 138.385 0 0 -122.995 0 0 MF
sv -82 Y 92(1,2)D r
/f2 f
sv 82 Y 227(and)D 320(Maxim)D 588(Pospelo)D 581(v)D r
/f3 f
sv -82 Y 92(1,3)D r
/f4 /Times-Roman 125.205 0 0 -111.285 0 0 MF
sv 236 Y -4761(1)D r
/f5 /Times-Italic 166.945 0 0 -166.945 0 0 MF
sv 74 Y 63(Department)D 851(of)D 184(Physics)D 564(and)D 304(Astr)D 272(onomy)D
436(,)D 95(University)D 751(of)D 184(V)D 90(ictoria,)D 542(V)D 90(ictoria,)D
542(BC,)D 310(V8P)D 342(1A1)D 323(Canada)D r
/f4 f
sv 119 Y -6928(2)D r
/f5 f
sv 74 Y 63(Theor)D 393(etical)D 427(Physics)D 565(Department,)D 893(St.)D
226(P)D 90(etersbu)D 490(r)D 59(g)D 137(State)D 389(University)D 689(,)D
95(Ulyanovskaya)D 1001(1,)D 178(P)D 91(eterhof,)D 570(St.)D 225(P)D 91(etersb)D
406(ur)D 143(g,)D 179(198504,)D 596(Russia)D r
/f4 f
sv 120 Y -6442(3)D r
/f5 f
sv 74 Y 62(P)D 91(erimeter)D 620(Institute)D 603(for)D 248(Theor)D 393(etical)D
427(Physics,)D 606(W)D 126(aterloo,)D 578(ON,)D 327(N2J)D 323(2W9,)D 401(Canada)D
r
/f6 /Times-Roman 166.945 0 0 -166.945 0 0 MF
sv 175 Y -3104(\(Recei)D 435(ve)D 156(d)D 137(10)D 221(October)D 592(2006\))D
282 Y -3938(W)D 146(e)D 163(calculate)D 686(the)D 293(baryon)D 553(asymmetry)D
832(of)D 227(the)D 293(Uni)D 247(ve)D 156(rse)D 283(resulting)D 674(from)D
414(the)D 293(combination)D 926(of)D 227(higher-)D 193 Y -6583(dimensional)D
905(Lorentz-nonin)D 952(v)D 80(ariant)D r
/f7 /BG-Maths-Italic 166.945 0 0 -166.945 0 0 MF
sv 469(CPT)D r
/f6 f
sv 330(-odd)D 392(operators)D 708(and)D 327(dimension)D 783(\256ve)D 335(operators)D
708(that)D 338(induce)D 532(the)D 193 Y -6859(majorana)D 717(mass)D 426(for)D
287(neutrinos.)D 756(The)D 353(strength)D 631(of)D r
/f7 f
sv 231(CPT)D r
/f6 f
sv 330(-violating)D 745(dimension)D 789(\256ve)D 341(operators)D 714(capable)D
605(of)D 194 Y -6925(producing)D 738(the)D 265(observ)D 443(ed)D 219(v)D 80(alue)D
339(of)D 199(baryon)D 524(abundance)D 775(is)D 171(directly)D 572(related)D
518(to)D 190(neutrino)D 618(masses)D 532(and)D 302(found)D 449(to)D 193 Y -6934(be)D
204(in)D 175(the)D 251(trans-Planckian)D 1086(range)D r
/f8 /BG-Maths-Symbol 166.945 0 0 -166.945 0 0 MF
sv 417(\205)D r
/f9 /BG-Maths-Roman 166.945 0 0 -166.945 0 0 MF
sv 56(10)D r
/f10 /BG-Maths-Symbol 116.86 0 0 -116.86 0 0 MF
sv -59 Y 167(\377)D r
/f11 /BG-Maths-Roman 116.86 0 0 -116.86 0 0 MF
sv 97(24)D r
/f6 f
sv 59 Y 126(\261)D r
/f9 f
sv 83(10)D r
/f10 f
sv -59 Y 167(\377)D r
/f11 f
sv 97(22)D r
/f8 f
sv 59 Y 126(\206)D r
/f9 f
sv 111(GeV)D r
/f10 f
sv -59 Y 315(\377)D r
/f11 f
sv 97(1)D r
/f6 f
sv 59 Y 67(.)D 87(Confronting)D 862(it)D 139(with)D 343(observ)D 441(ational)D
503(tests)D 342(of)D 184(Lorentz)D 193 Y -6543(symmetry)D 659(,)D 86(we)D
239(\256nd)D 303(that)D 297(this)D 286(range)D 416(of)D 183(Lorentz)D r
/f7 f
sv 522(=CPT)D r
/f6 f
sv 458(violation)D 640(is)D 156(strongly)D 591(disfav)D 405(ored)D 342(by)D
211(the)D 250(combination)D 882(of)D 193 Y -6926(the)D 259(lo)D 127(w-ener)D
462(gy)D 221(constraints)D 778(and)D 295(astrophysical)D 937(data.)D r
/f12 /Times-Roman 149.37 0 0 -149.37 0 0 MF
sv 352 Y -3079(DOI:)D r

[/Action << /Subtype /URI /URI () >> /Rect [2226 4114 2279 3965] /Border [0 0 0] /LNK pdfmark
sv 3673(P)D 70(A)D 103(CS)D 236(numbers:)D 610(98)D 142(.80)D 179(.)D r
/f13 /BG-Maths-Symbol 149.37 0 0 -149.37 0 0 MF
sv 37(\377)D r
/f12 f
sv 125(k,)D 165(11.30)D 329(.Er)D 174(,)D 91(12)D 142(.60)D 179(.)D r
/f13 f
sv 37(\377)D r
/f12 f
sv 125(i,)D 133(14)D 141(.60)D 179(.Pq)D r
/f14 /Times-Bold 184.515 0 0 -184.515 0 0 MF
sv 649 Y -6476(I.)D 171(INTR)D 455(ODUCTION)D r
0.6666 1 1 SH
/f2 f
sv 317 Y -2476(3)D r
0 0 0 SH
sv 692(Since)D 503(the)D 318(seminal)D 668(paper)D 503(by)D 277(Sakharo)D
603(v)D 184([)D r
0.6666 1 1 SH

[/Dest /temp:intralink-c1 /Rect [4218 5089 4310 4904] /Border [0 0 0] /LNK pdfmark
sv 61(1)D r
0 0 0 SH
sv 92(],)D 200(it)D 196(is)D 214(well)D 211 Y -4004(kno)D 273(wn)D 281(that)D
335(the)D 283(baryon)D 568(asymmetry)D 878(of)D 210(the)D 283(Uni)D 273(v)D
90(erse)D 354(\(B)D 179(A)D 122(U\))D 211 Y -4129(can)D 307(be)D 221(generated)D
769(dynamically)D 905(,)D 95(through)D 623(the)D 275(combination)D 975(of)D
210 Y -4170(baryon)D 583(number)D 634(violating)D 729(processes,)D r
/f15 /BG-Maths-Italic 184.515 0 0 -184.515 0 0 MF
sv 822(C)D r
/f2 f
sv 197(and)D r
/f15 f
sv 336(CP)D r
/f2 f
sv 318(violation,)D 211 Y -3619(and)D 339(the)D 299(departure)D 771(from)D
431(thermal)D 639(equilibrium.)D 982(It)D 185(turns)D 441(out)D 211 Y -4087(that)D
325(the)D 273(standard)D 672(model)D 509(\(SM\))D 434(has)D 292(all)D 232(necessary)D
765(ingredients)D 211 Y -3502(for)D 271(this)D 323(to)D 199(happen.)D 636(Notably)D
583(,)D 102(the)D r
/f15 f
sv 282(B)D r
/f16 /BG-Maths-Symbol 184.515 0 0 -184.515 0 0 MF
sv 162(\207)D r
/f15 f
sv 195(L)D r
/f2 f
sv 175(number)D 620(is)D 178(violated)D 211 Y -3726(by)D 347(the)D 390(high-temperatu)D
1130(re)D 307(sphaleron)D 881(processes)D 869([)D r
0.6666 1 1 SH

[/Dest /temp:intralink-c2 /Rect [4901 6565 4993 6381] /Border [0 0 0] /LNK pdfmark
sv 61(2)D r
0 0 0 SH
sv 92(,)D r
0.6666 1 1 SH

[/Dest /temp:intralink-c3 /Rect [5040 6565 5132 6381] /Border [0 0 0] /LNK pdfmark
sv 47(3)D r
0 0 0 SH
sv 92(].)D 211 Y -4216(Ho)D 221(we)D 211(ver)D 229(,)D 113(the)D 293(existi)D
399(ng)D 251(amount)D 622(of)D r
/f15 f
sv 220(CP)D r
/f2 f
sv 248(-violation)D 787(combined)D 211 Y -3594(with)D 371(tight)D 381(constraints)D
843(on)D 226(the)D 269(Higgs)D 481(sector)D 484(pre)D 232(v)D 90(ents)D
340(ef\256cient)D 211 Y -3717(baryogenesis)D 1013(in)D 193(the)D 275(SM.)D
360(Thus,)D 464(B)D 117(A)D 123(U)D 181(presents)D 654(a)D 131(formidable)D
210 Y -3511(hint)D 329(on)D 224(physics)D 593(bey)D 265(ond)D 317(SM,)D 351(and)D
307(moti)D 336(v)D 89(ates)D 328(ne)D 171(w)D 172(exp)D 265(erimen-)D
211 Y -3747(tal)D 249(searches)D 689(for)D 277(the)D 289(exte)D 307(nded)D
422(electro)D 501(weak)D 452(sector)D 505(and)D 329(ne)D 171(w)D 211 Y -4191(sources)D
607(of)D r
/f15 f
sv 207(CP)D r
/f2 f
sv 301(violation.)D 211 Y -930(It)D 193(has)D 326(also)D 377(been)D 430(kno)D
272(wn)D 305(for)D 295(some)D 469(time)D 410(that)D r
/f15 f
sv 359(CPT)D r
/f2 f
sv 364(-odd)D 211 Y -3985(perturbations)D 1034(can)D 315(ef)D 140(fecti)D 327(v)D
90(ely)D 285(replace)D 593(two)D 335(Sakharo)D 603(v')D 144(s)D 129(con-)D
211 Y -3995(ditions)D 575(for)D 287(baryogenesis:)D 1087(violation)D 731(of)D
r
/f15 f
sv 225(CP)D r
/f2 f
sv 317(in)D 139(v)D 88(ariance)D 607(and)D 211 Y -4056(the)D 331(de)D 171(viation)D
619(from)D 463(thermal)D 670(equilibrium)D 968([)D r
0.6666 1 1 SH

[/Dest /temp:intralink-c4 /Rect [4200 8674 4292 8489] /Border [0 0 0] /LNK pdfmark
sv 62(4)D r
0 0 0 SH
sv 92(].)D 211(Indeed,)D 654(a)D r
/f15 f
sv 211 Y -4241(CPT)D r
/f2 f
sv 365(-odd)D 406(shift)D 397(in)D 212(the)D 295(`)D 48(`mass')D 478(')D
130(of)D 222(a)D 150(SM)D 334(fermion)D 654(\(e.g.)D 396(top)D 210 Y -4087(quark)D
490([)D r
0.6666 1 1 SH

[/Dest /temp:intralink-c5 /Rect [1467 9096 1559 8911] /Border [0 0 0] /LNK pdfmark
sv 61(5)D r
0 0 0 SH
sv 92(]\),)D r
/f17 /BG-Maths-Roman 184.515 0 0 -184.515 0 0 MF
sv 238(\001)D r
/f15 f
sv 137(m)D r
/f18 /BG-Maths-Italic 129.16 0 0 -129.16 0 0 MF
sv 37 Y 142(CPT)D r
/f2 f
sv -37 Y 333(would)D 529(serve)D 457(as)D 222(an)D 244(ef)D 140(fecti)D 327(v)D
90(e)D 151(chemical)D 211 Y -3653(shift)D 388(between)D 676(baryons)D 644(and)D
326(antibaryons)D 922(abo)D 265(v)D 90(e)D 142(the)D 287(scale)D 430(of)D
211 Y -4170(the)D 286(electro)D 501(weak)D 449(phase)D 479(transition.)D 804(It)D
173(is)D 182(easy)D 387(to)D 203(see)D 295(that)D 338(the)D r
/f17 f
sv 211 Y -4097(\001)D r
/f15 f
sv 137(m)D r
/f18 f
sv 37 Y 142(CPT)D r
/f15 f
sv -37 Y 264(=m)D r
/f18 f
sv 37 Y 234(t)D r
/f16 f
sv -37 Y 92(\030)D r
/f15 f
sv 194(O)D r
/f16 f
sv 142(\205)D r
/f17 f
sv 62(10)D r
/f19 /BG-Maths-Symbol 129.16 0 0 -129.16 0 0 MF
sv -65 Y 184(\377)D r
/f20 /BG-Maths-Roman 129.16 0 0 -129.16 0 0 MF
sv 108(6)D r
/f16 f
sv 65 Y 73(\206)D r
/f2 f
sv 133(ef)D 140(fect)D 349(for)D 287(top)D 307(quark)D 492(would)D 532(be)D
246(re-)D 211 Y -4118(quired)D 657(to)D 328(generate)D 812(the)D 411(observ)D
489(ed)D 359(asymmetry)D 1006([)D r
0.6666 1 1 SH

[/Dest /temp:intralink-c5 /Rect [5040 9939 5132 9755] /Border [0 0 0] /LNK pdfmark
sv 62(5)D r
0 0 0 SH
sv 92(].)D 211 Y -4216(Unfortunately)D 1026(,)D 109(at)D 199(the)D 290(le)D
130(vel)D 289(of)D 217(the)D 290(Lagrangian)D 907(it)D 167(is)D 187(impos-)D
211 Y -3811(sible)D 450(to)D 244(de\256ne)D 552(a)D 183(consistent)D 839(`)D
48(`)D r
/f15 f
sv 61(CPT)D r
/f2 f
sv 365(-odd)D 438(mass')D 417(')D 162(without)D 211 Y -3759(breaking)D 736(the)D
316(Lorentz)D 664(in)D 139(v)D 88(ariance.)D r
/f15 f
sv 670(CPT)D r
/f2 f
sv 365(-odd)D 427(mass)D 457(would)D 210 Y -3862(hav)D 263(e)D 205(to)D 266(be)D
296(identi\256ed)D 821(with)D 450(dimension)D 892(three)D 493(Lorentz-)D
211 Y -3686(nonin)D 415(v)D 88(ariant)D 523(operators)D 787([)D r
0.6666 1 1 SH

[/Dest /temp:intralink-c6 /Rect [2791 10993 2883 10809] /Border [0 0 0] /LNK pdfmark
sv 62(6)D r
0 0 0 SH
sv 92(].)D 207(Gi)D 181(v)D 90(en)D 275(the)D 326(strength)D 695(of)D
254(con-)D 211 Y -3995(straints)D 601(on)D 250(lo)D 141(wer)D 274(-dimensional)D
r
/f15 f
sv 1032(CPT)D 365(=)D r
/f2 f
sv 92(Lorentz)D 643(nonin)D 415(v)D 88(ariant)D 211 Y -3901(operators)D 744([)D
r
0.6666 1 1 SH

[/Dest /temp:intralink-c7 /Rect [1721 11415 1813 11231] /Border [0 0 0] /LNK pdfmark
sv 61(7)D r
0 0 0 SH
sv 92(],)D 164(one)D 322(has)D 302(to)D 200(conclude)D 724(that)D 334(lo)D
140(wer-)D 336(dimensional)D 211 Y -3419(operators)D 794(cannot)D 599(be)D
280(a)D 188(source)D 588(of)D 259(the)D 333(observ)D 489(ed)D 281(baryon)D
211 Y -3811(asymmetry)D 811(.)D 211 Y -626(The)D 331(problem)D 659(of)D r
/f15 f
sv 196(CPT)D r
/f2 f
sv 365(-odd)D 380(baryogenesis)D 1007(was)D 329(readdressed)D 211 Y -3452(in)D
185(Ref.)D 354([)D r
0.6666 1 1 SH

[/Dest /temp:intralink-c8 /Rect [1516 12259 1609 12074] /Border [0 0 0] /LNK pdfmark
sv 61(8)D r
0 0 0 SH
sv 93(])D 102(and)D 307(recently)D 638(in)D 185(Ref.)D 354([)D r
0.6666 1 1 SH

[/Dest /temp:intralink-c9 /Rect [3256 12259 3348 12074] /Border [0 0 0] /LNK pdfmark
sv 61(9)D r
0 0 0 SH
sv 92(,)D r
0.6666 1 1 SH

[/Dest /temp:intralink-c10 /Rect [3394 12259 3579 12074] /Border [0 0 0] /LNK pdfmark
sv 46(10)D r
0 0 0 SH
sv 185(].)D 148(In)D 194([)D r
0.6666 1 1 SH

[/Dest /temp:intralink-c8 /Rect [3983 12259 4075 12074] /Border [0 0 0] /LNK pdfmark
sv 62(8)D r
0 0 0 SH
sv 92(,)D r
0.6666 1 1 SH

[/Dest /temp:intralink-c9 /Rect [4121 12259 4213 12074] /Border [0 0 0] /LNK pdfmark
sv 46(9)D r
0 0 0 SH
sv 92(])D 102(among)D 544(other)D 210 Y -3943(options)D 599(higher-)D 532(dimensional)D
r
/f15 f
sv 960(CPT)D r
/f2 f
sv 365(-odd)D 393(operators)D 743(were)D 415(sug-)D 211 Y -4007(gested)D 535(as)D
217(a)D 145(source)D 544(for)D 278(baryon)D 575(asymmetry)D 810(.)D 109(Suppose)D
687(that)D 341(a)D -7908 Y 399(dimension)D 821(\256v)D 192(e)D 135(operator)D
668(that)D 330(shifts)D 451(the)D 278(dispersion)D 810(relations)D 211 Y -3685(of)D
220(baryons)D 650(relati)D 378(v)D 90(e)D 149(to)D 210(antibaryons)D 929(is)D
189(added)D 508(on)D 251(top)D 302(of)D 220(the)D 211 Y -4096(SM.)D 374(Let)D
311(us)D 226(further)D 566(assume)D 607(that)D 341(initial)D 497(v)D 89(alue)D
372(for)D r
/f15 f
sv 278(B)D r
/f16 f
sv 162(\377)D r
/f15 f
sv 195(L)D r
/f2 f
sv 182(is)D 211 Y -4200(zero.)D 411(Then)D 427(in)D 190(the)D 274(temperature)D
931(range)D 458(from)D r
/f17 f
sv 406(10)D r
/f20 f
sv -64 Y 184(10)D r
/f2 f
sv 64 Y 184(to)D r
/f17 f
sv 191(10)D r
/f20 f
sv -64 Y 184(2)D r
/f17 f
sv 64 Y 135(GeV)D r
/f2 f
sv 211 Y -3975(where)D 504(the)D 280(sphaleron)D 772(processes)D 759(are)D
280(in)D 198(thermal)D 620(equilibrium,)D 211 Y -3413(the)D 277(resulting)D
698(baryon)D 564(asymmetry)D 873(will)D 339(be)D 225(determined)D 885(by)D
235(the)D 211 Y -4096(amount)D 618(of)D r
/f15 f
sv 217(CPT)D r
/f2 f
sv 428(violation)D 721(in)D 208(the)D 289(theory)D 461(.)D 110(If)D r
/f15 f
sv 186(CPT)D r
/f2 f
sv 365(-violating)D 211 Y -3603(interactions)D 901(are)D 261(gi)D 140(v)D 90(en)D
212(by)D 221(a)D 120(dimension)D 806(\256v)D 192(e)D 120(operator)D 653(parame-)D
210 Y -3716(trized)D 478(by)D r
/f17 f
sv 241(1)D r
/f15 f
sv 92(=)D r
/f17 f
sv 92(\003)D r
/f18 f
sv 37 Y 142(CPT)D r
/f2 f
sv -37 Y 264(,)D 102(the)D 283(in)D 138(v)D 90(erse)D 354(ener)D 317(gy)D
240(scale)D 427(of)D r
/f15 f
sv 210(CPT)D r
/f2 f
sv 421(viola-)D 211 Y -3891(tion,)D 434(the)D 327(resulting)D 747(baryon)D
613(asymmetry)D 922(at)D 235(the)D 326(sphaleron)D 211 Y -3604(freeze-out)D
804(\()D r
/f15 f
sv 61(T)D r
/f16 f
sv 159(\030)D r
/f15 f
sv 194(M)D r
/f18 f
sv 37 Y 163(W)D r
/f2 f
sv -37 Y 127(\))D 115(will)D 342(be)D 226(gi)D 141(v)D 90(en)D 228(by)D
r
0 0 1 SH
/f21 /Times-Roman 0.184515 0 0 -0.184515 0 0 MF
sv 574 Y -1512 ( )D r
[/Dest /temp:intralink-d1 /View [/XYZ 316 412 0] /DEST pdfmark
0 0 0 SH
/f15 f
sv 4(Y)D r
/f18 f
sv 37 Y 107(b)D r
/f16 f
sv -37 Y 131(\210)D r
NP 7141 7359 M 238 0 R 
0 8 R -238 0 R SFR 
/f17 f
sv -126 Y 205(\001)D r
/f15 f
sv 137(b)D 253 Y -58(s)D r
/f16 f
sv -127 Y 200(\030)D r
NP 7615 7359 M 406 0 R 
0 8 R -406 0 R SFR 
/f15 f
sv -126 Y 339(T)D r
/f17 f
sv 253 Y -144(\003)D r
/f18 f
sv 36 Y 142(CPT)D r
/f16 f
sv -163 Y 305(\030)D r
NP 8257 7359 M 406 0 R 
0 8 R -406 0 R SFR 
/f15 f
sv -126 Y 253(M)D r
/f18 f
sv 37 Y 163(W)D r
/f17 f
sv 216 Y -221(\003)D r
/f18 f
sv 36 Y 142(CPT)D r
/f15 f
sv -163 Y 295(;)D r
/f2 f
sv 970(\(1\))D 586 Y -4108(where)D r
/f15 f
sv 556(s)D r
/f2 f
sv 185(is)D 228(the)D 331(entropy)D 553(.)D 151(It)D 218(is)D 227(then)D
424(clear)D 465(that)D r
/f17 f
sv 384(\003)D r
/f18 f
sv 37 Y 142(CPT)D r
/f15 f
sv -37 Y 305(<)D r
/f17 f
sv 211 Y -4169(10)D r
/f20 f
sv -65 Y 184(12)D r
/f17 f
sv 65 Y 199(GeV)D r
/f2 f
sv 392(will)D 332(be)D 218(required)D 660(to)D 188(produce)D 639(an)D 219(observ)D
487(able)D 353(asym-)D 211 Y -3871(metry)D 420(.)D 98(Gi)D 181(v)D 90(en)D
227(the)D 278(fact)D 330(that)D 331(both)D 380(lo)D 140(w-ener)D 511(gy)D
236(data)D 361(and)D 319(astro-)D 211 Y -3902(physical)D 660(constraints)D
845(limit)D 396(a)D 127(typical)D 549(scale)D r
/f17 f
sv 415(\003)D r
/f18 f
sv 37 Y 142(CPT)D r
/f2 f
sv -37 Y 309(to)D 188(be)D 219(higher)D 211 Y -3850(than)D 373(the)D 282(Planck)D
558(scale,)D 471(such)D 393(a)D 138(scenario)D 671(is)D 178(completely)D
878(ruled)D 210 Y -3942(out.)D 211 Y 184(In)D 203(this)D 315(paper)D 460(we)D
264(exp)D 265(lore)D 337(the)D 275(idea)D 358(of)D 203(the)D r
/f15 f
sv 275(CPT)D r
/f2 f
sv 365(-odd)D 387(lepto-)D 211 Y -3891(genesis)D 595(that)D 331(is)D 175(capable)D
619(of)D 206(enhancing)D 813(estimate)D 671(\()D r
0.6666 1 1 SH

[/Dest /temp:intralink-d1 /Rect [9027 9517 9119 9333] /Border [0 0 0] /LNK pdfmark
sv 61(1)D r
0 0 0 SH
sv 92(\))D 114(by)D 237(man)D 316(y)D 211 Y -4230(orders)D 507(of)D 201(magnitude.)D
874(The)D 335(main)D 418(feature)D 561(of)D 201(any)D 312(leptogenesis)D
211 Y -3409(scenario)D 652(is)D 160(the)D 263(use)D 282(of)D 190(the)D 263(lepton-number)D
1125(nonconserv)D 846(ation)D 407(at)D 211 Y -4188(high)D 412(temperatures)D
1041(that)D 363(results)D 566(in)D 229(a)D 166(non)D 271(v)D 89(anishing)D
r
/f15 f
sv 710(B)D r
/f16 f
sv 162(\377)D r
/f15 f
sv 194(L)D r
/f2 f
sv 211 Y -4203(number)D 661(that)D 375(is)D 220(preserve)D 624(d)D 189(by)D
282(sphaleron)D 815(processes)D 803([)D r
0.6666 1 1 SH

[/Dest /temp:intralink-c11 /Rect [9587 10361 9771 10176] /Border [0 0 0] /LNK pdfmark
sv 62(11)D r
0 0 0 SH
sv 184(].)D 211 Y -4215(One)D 392(of)D 238(the)D 311(adv)D 263(antages)D 640(of)D
238(leptogenesis)D 999(is)D 208(that)D 363(the)D 311(most)D 210 Y -3963(natural)D
596(way)D 389(of)D 235(mediating)D 823(the)D 308(lepton-violating)D 1265(processes)D
211 Y -3616(is)D 197(through)D 649(hea)D 255(vy)D 260(majorana)D 764(neutrinos,)D
808(which)D 526(also)D 372(supply)D 211 Y -3831(masses)D 582(to)D 204(the)D
286(light)D 400(neutrinos)D 747(via)D 286(the)D 287(see-sa)D 449(w)D 193(mechanism.)D
211 Y -3434(Hea)D 295(vy)D 296(right-handed)D 1057(neutrinos)D 799(with)D 439(mass)D
r
/f15 f
sv 481(M)D r
/f18 f
sv 37 Y 163(R)D r
/f2 f
sv -37 Y 205(mediate)D 211 Y -3735(lepton-number)D 1151(violating)D 721(processes,)D
815(and)D 330(thus)D 369(keep)D 412(lepton-)D 211 Y -3798(number)D 633(violating)D
727(processes)D 775(in)D 212(equilibrium)D 932(until)D 409(the)D 295(tem-)D
211 Y -3983(perature)D 665(decreases)D 768(to)D 203(the)D 286(point)D 439(where)D
510(the)D 286(Hubble)D 602(rate)D r
/f17 f
sv 338(\377)D r
/f18 f
sv 37 Y 113(H)D r
/f2 f
sv 174 Y -4210(be)D 172(gins)D 348(to)D 185(dominate)D 730(o)D 90(v)D 90(er)D
185(the)D 267(lepton-violation)D 1224(rate)D r
/f17 f
sv 319(\377)D r
/f18 f
sv 36 Y 113(L)D r
/f2 f
sv -36 Y 92(.)D 87(In)D 194(the)D 210 Y -4096(assumption)D 910(that)D 347(Y)D
113(uka)D 265(wa)D 284(couplings)D 787(are)D 296(on)D 253(the)D 296(order)D
459(one,)D 211 Y -4010(this)D 307(moment)D 647(in)D 185(the)D 267(Uni)D 272(v)D
90(erse')D 350(s)D 111(history)D 553(can)D 298(be)D 215(determined)D 874(as)D
r
0 0 0 SH
/f22 /Times-Roman 158.155 0 0 -158.155 0 0 MF
sv -11914 Y -5639(PHYSICAL)D 825(REVIEW)D 669(D,)D 207(V)D 109(OLUME)D 615(00,)D
r
0 0 0 SH
/f23 /Times-Bold 158.155 0 0 -158.155 0 0 MF
sv 12671 Y -1260(00)D r
/f22 f
sv 212(1)D r
/f24 /Symbol 158.155 0 0 -158.155 0 0 MF
sv 1714(\323)D r
/f22 f
sv 231(2006)D 422(The)D 300(American)D 680(Physical)D 590(Society)D r

[/Dest /query_position_3 /View [/XYZ 52 525 0] /DEST pdfmark
pagesave restore
showpage
%%Page: 2 3
%%BeginPageSetup
%%IncludeResource: font BG-Maths-Calligraphic
%%IncludeResource: font BG-Maths-Extension
0 0 0 SH
% End of font info
/pagesave save def
/XX 0 def /YY 0 def /OH 0 def /OS 0 def /OB -1 def /IN true def
/OT 0 def /OO false def false SO
/ET 0 def
/pagemx matrix currentmatrix def
0.0566929 -0.0566929 scale 0 -13970 translate gsave
%%EndPageSetup
0 0 10795 13970 C
0 0 0 SH
0 0 0 SH
75 45 SS1
0 0 0 SH
0 0 1 SH
-1 SOB
/f0 /Times-Roman 0.184515 0 0 -0.184515 0 0 MF
sv 1190 Y 2211 ( )D r
[/Dest /temp:intralink-s1 /View [/XYZ 52 747 0] /DEST pdfmark
0 0 0 SH
/f1 /BG-Maths-Roman 184.515 0 0 -184.515 0 0 MF
sv 3(\377)D r
/f2 /BG-Maths-Italic 129.16 0 0 -129.16 0 0 MF
sv 37 Y 114(L)D r
/f3 /BG-Maths-Symbol 184.515 0 0 -184.515 0 0 MF
sv -37 Y 143(/)D r
NP 2645 1140 M 257 0 R 
0 7 R -257 0 R SFR 
/f4 /BG-Maths-Italic 184.515 0 0 -184.515 0 0 MF
sv -126 Y 207(T)D r
/f5 /BG-Maths-Roman 129.16 0 0 -129.16 0 0 MF
sv -64 Y 117(3)D r
/f4 f
sv 320 Y -150(M)D r
/f5 f
sv -64 Y 167(2)D r
/f2 f
sv 112 Y -4(R)D r
/f3 f
sv -178 Y 135(\030)D r
/f1 f
sv 194(\377)D r
/f2 f
sv 37 Y 114(H)D r
/f3 f
sv -37 Y 163(/)D r
NP 3588 1140 M 280 0 R 
0 7 R -280 0 R SFR 
/f4 f
sv -126 Y 219(T)D r
/f5 f
sv -64 Y 117(2)D r
/f4 f
sv 316 Y -162(M)D r
/f5 f
sv 37 Y 163(Pl)D r
/f4 f
sv -163 Y 147(;)D r
/f6 /Times-Roman 184.515 0 0 -184.515 0 0 MF
sv 472 Y -2982(which)D 504(gi)D 140(ves)D 297(an)D 227(estimate)D 671(for)D
268(the)D 279(temperature)D 937(of)D 207(the)D 279(freeze-)D 211 Y -3809(out)D
290(for)D 269(the)D r
/f4 f
sv 280(B)D r
/f3 f
sv 162(\377)D r
/f4 f
sv 195(L)D r
/f6 f
sv 172(number:)D r
0 0 1 SH
/f0 f
sv 465 Y 401 ( )D r
[/Dest /temp:intralink-s1 /View [/XYZ 52 689 0] /DEST pdfmark
0 0 0 SH
/f4 f
sv 3(T)D r
/f2 f
sv 37 Y 108(R)D r
/f3 f
sv -37 Y 144(/)D r
NP 3114 2288 M 280 0 R 
0 7 R -280 0 R SFR 
/f4 f
sv -126 Y 186(M)D r
/f5 f
sv -64 Y 167(2)D r
/f2 f
sv 113 Y -4(R)D r
/f4 f
sv 203 Y -175(M)D r
/f5 f
sv 37 Y 164(Pl)D r
/f4 f
sv -163 Y 147(:)D r
/f6 f
sv 457 Y -2509(Therefore,)D 834(in)D 202(the)D 285(scenarios)D 745(of)D r
/f4 f
sv 212(CPT)D r
/f6 f
sv 365(-odd)D 395(leptogenesis,)D 1018(one)D 211 Y -4056(obtains)D 583(the)D
275(asymmetry)D 870(which)D 500(freezes)D 573(out)D 285(at)D r
/f4 f
sv 183(T)D r
/f3 f
sv 168(\210)D r
/f4 f
sv 205(T)D r
/f2 f
sv 37 Y 107(R)D r
/f6 f
sv -37 Y 142(rather)D 211 Y -3891(than)D 373(at)D r
/f4 f
sv 188(T)D r
/f3 f
sv 168(\210)D r
/f4 f
sv 205(M)D r
/f2 f
sv 37 Y 163(W)D r
/f6 f
sv -37 Y 127(:)D r
0 0 1 SH
/f0 f
sv 465 Y 280 ( )D r
[/Dest /temp:intralink-s1 /View [/XYZ 52 614 0] /DEST pdfmark
0 0 0 SH
/f4 f
sv 3(Y)D r
/f2 f
sv 36 Y 107(l)D r
/f7 /BG-Maths-Symbol 129.16 0 0 -129.16 0 0 MF
sv 42(\205)D r
/f2 f
sv 43(b)D r
/f7 f
sv 71(\206)D r
/f3 f
sv -36 Y 93(\030)D r
NP 2974 3632 M 685 0 R 
0 7 R -685 0 R SFR 
/f4 f
sv -126 Y 409(M)D r
/f5 f
sv -65 Y 167(2)D r
/f2 f
sv 113 Y -4(R)D r
/f4 f
sv 204 Y -377(M)D r
/f5 f
sv 37 Y 163(Pl)D r
/f1 f
sv -37 Y 116(\003)D r
/f2 f
sv 37 Y 142(CPT)D r
/f4 f
sv -163 Y 295(:)D r
/f6 f
sv 458 Y -2774(Obv)D 315(iously)D 440(,)D 103(for)D r
/f4 f
sv 272(M)D r
/f2 f
sv 37 Y 164(R)D r
/f3 f
sv -37 Y 134(\030)D r
/f1 f
sv 195(10)D r
/f5 f
sv -64 Y 184(15)D r
/f1 f
sv 64 Y 199(GeV)D r
/f6 f
sv 405(one)D 322(gets)D 355(a)D 139(great)D 428(enhance-)D 211 Y -3655(ment)D
411(by)D r
/f4 f
sv 224(T)D r
/f2 f
sv 37 Y 108(R)D r
/f4 f
sv -37 Y 93(=M)D r
/f2 f
sv 37 Y 256(W)D r
/f3 f
sv -37 Y 168(\030)D r
/f1 f
sv 194(10)D r
/f5 f
sv -64 Y 185(9)D r
/f6 f
sv 64 Y 113(o)D 90(v)D 90(er)D 184(the)D r
/f4 f
sv 267(CPT)D r
/f6 f
sv 405(baryogenesis)D 1004(scenar)D 470(-)D 211 Y -4262(ios)D 269(\()D r
0.6666 1 1 SH

[/Dest /temp:intralink-d1 /Rect [1247 4608 1339 4424] /Border [0 0 0] /LNK pdfmark
sv 62(1)D r
0 0 0 SH
sv 92(\))D 115(where)D r
/f4 f
sv 505(B)D r
/f3 f
sv 161(\377)D r
/f4 f
sv 195(L)D r
/f6 f
sv 173(is)D 176(zero.)D 211 Y -1563(The)D 364(purpose)D 660(of)D 230(this)D
343(paper)D 487(is)D 199(to)D 221(e)D 80(xplore)D 549(the)D r
/f4 f
sv 303(CPT)D r
/f6 f
sv 364(-odd)D 211 Y -3985(leptogenesis)D 983(scenario,)D 732(determine)D 810(the)D
295(required)D 686(strength)D 664(of)D 211 Y -4170(the)D r
/f4 f
sv 289(CPT)D r
/f6 f
sv 364(-violating)D 782(operators,)D 795(and)D 328(confront)D 688(it)D 165(with)D
390(the)D 288(ex-)D 211 Y -4089(isting)D 465(laboratory)D 813(and)D 320(astrophysics)D
966(constraints.)D 900(F)D 99(or)D 207(reasons)D 210 Y -3770(exp)D 265(lained)D
498(earlier)D 469(,)D 91(we)D 260(concentrate)D 899(on)D r
/f4 f
sv 230(CPT)D r
/f6 f
sv 364(-odd)D 383(interactions)D 211 Y -3459(of)D 208(mass)D 422(dimension)D
824(\256v)D 192(e.)D 183(W)D 161(e)D 137(introduce)D r
/f4 f
sv 752(CPT)D r
/f6 f
sv 365(-odd)D 392(operators)D 211 Y -3636(into)D 342(the)D 280(fermion)D 639(sector)D
496(of)D 207(the)D 280(standard)D 679(model)D 517([)D r
0.6666 1 1 SH

[/Dest /temp:intralink-c12 /Rect [4417 6084 4602 5900] /Border [0 0 0] /LNK pdfmark
sv 61(12)D r
0 0 0 SH
sv 185(]:)D r
0 0 1 SH
/f0 f
sv 354 Y -3066 ( )D r
[/Dest /temp:intralink-d2 /View [/XYZ 52 454 0] /DEST pdfmark
0 0 0 SH
/f8 /BG-Maths-Calligraphic 184.515 0 0 -184.515 0 0 MF
sv 34(L)D r
/f2 f
sv 37 Y 183(LV)D r
/f3 f
sv -37 Y 233(\210)D r
/f9 /BG-Maths-Extension 184.515 0 0 -184.515 0 0 MF
sv -160 Y 473(X)D r
/f2 f
sv 350 Y -268(i)D r
/f7 f
sv 41(\210)D r
/f2 f
sv 108(L;E;Q;U)D 464(;D)D r
/f4 f
sv -190 Y 131(\021)D r
/f2 f
sv -91 Y 127(\026\027\032)D 140 Y 0(i)D r
/f3 f
sv -49 Y 304(\001)D r
/f1 f
sv -44 Y 151(\026)D r
/f4 f
sv 44 Y -49( )D r
/f2 f
sv 37 Y 125(i)D r
/f4 f
sv -37 Y 51(\015)D r
/f2 f
sv 37 Y 117(\026)D r
/f8 f
sv -37 Y 108(D)D r
/f2 f
sv 37 Y 180(\027)D r
/f8 f
sv -37 Y 83(D)D r
/f2 f
sv 37 Y 181(\032)D r
/f4 f
sv -37 Y 89( )D r
/f2 f
sv 37 Y 121(i)D r
/f4 f
sv -37 Y 50(;)D r
/f6 f
sv 451(\(2\))D 525 Y -4108(which)D 491(cause)D 451(an)D 214(asymmetric)D 904(shift)D
368(of)D 194(the)D 266(dispersion)D 798(relations)D 211 Y -3686(for)D 274(fermions)D
715(and)D 325(antifermions.)D 1040(Here)D r
/f4 f
sv 418(\021)D r
/f2 f
sv -91 Y 126(\026\027\032)D 140 Y 0(i)D r
/f6 f
sv -49 Y 321(is)D 182(a)D 141(symmetric)D 214 Y -3542(irreducible)D 851(Lorentz)D
624(violating)D 706(spurion)D 601(\256eld)D 376(that)D 326(can)D 306(depend)D
211 Y -3790(on)D 255(the)D 296(type)D 389(of)D 223(the)D 297(SM)D 334(fermions;)D
779(the)D 296(summation)D 892(e)D 80(xtends)D 210 Y -3841(ov)D 181(er)D 195(all)D
237(\256elds)D 450(that)D 330(carry)D 431(the)D 278(lepton)D 513(or)D 205(baryon)D
563(number)D 555(.)D 97(The)D 211 Y -4035(transmutation)D 1091(to)D 216(the)D
299(lo)D 140(wer-)D 336(dimensional)D 977(operators)D 760(can)D 330(be)D
211 Y -4149(protected)D 748(by)D 244(the)D 285(irreducibility)D 1026(condition)D
r
/f4 f
sv 758(\021)D r
/f2 f
sv -64 Y 127(\026\027)D 103 Y 182(\027)D r
/f3 f
sv -39 Y 134(\210)D r
/f1 f
sv 205(0)D r
/f6 f
sv 92(.)D 105(A)D 191(ze-)D 211 Y -4097(roth)D 343(component)D 867(of)D r
/f4 f
sv 199(\021)D r
/f2 f
sv -90 Y 127(\026\027\032)D 139 Y 0(i)D r
/f6 f
sv -49 Y 263(,)D r
/f4 f
sv 91(\021)D r
/f5 f
sv -65 Y 127(000)D r
/f2 f
sv 114 Y 0(i)D r
/f3 f
sv -49 Y 253(\021)D r
/f4 f
sv 205(\021)D r
/f2 f
sv 37 Y 127(i)D r
/f6 f
sv -37 Y 94(in)D 189(the)D 272(reference)D 734(frame)D 214 Y -3891(where)D
513(the)D 289(primordial)D 843(plasma)D 586(is)D 184(at)D 197(rest)D 328(pro)D
244(vides)D 452(an)D 236(asym-)D 211 Y -3872(metric)D 555(shift)D 409(in)D
225(the)D 307(dispersion)D 839(relations)D 718(for)D 295(particles)D 708(and)D
211 Y -4056(antiparticles.)D 1004(This)D 380(way)D 359(positi)D 407(ve)D r
/f4 f
sv 225(\021)D r
/f5 f
sv 37 Y 126(lepton)D r
/f6 f
sv -37 Y 385(creates)D 566(a)D 134(surplus)D 584(of)D 228 Y -4170(antileptons)D
904(o)D 90(v)D 90(er)D 235(leptons)D 625(in)D 236(equilibrium)D 955(which)D
542(is)D 214(main-)D 211 Y -3891(tained)D 512(when)D 458(the)D 286(rate)D
337(for)D 273(the)D 286(lepton-number)D 1147(violating)D 717(pro-)D 211 Y -4016(cesses)D
500(is)D 162(faster)D 449(than)D 357(the)D 266(Hubble)D 582(e)D 80(xpansion.)D
751(It)D 152(is)D 162(notable)D 584(that)D 211 Y -4045(such)D r
/f4 f
sv 395(CPT)D r
/f6 f
sv 364(-odd)D 394(perturbations)D 1032(allo)D 274(w)D 189(for)D 271(potential)D
705(leptogen-)D 211 Y -3624(esis)D 335(already)D 603(with)D 386(one)D 325(\257av)D
273(or)D 211(of)D 212(hea)D 255(vy)D 243(majorana)D 747(neutrinos,)D 211 Y -3590(whereas)D
656(con)D 261(v)D 90(entional)D 648(leptogenesis)D 965(requires)D 646(at)D
186(least)D 390(two)D 328(of)D 211 Y -4170(them)D 415([)D r
0.6666 1 1 SH

[/Dest /temp:intralink-c11 /Rect [1393 10572 1577 10387] /Border [0 0 0] /LNK pdfmark
sv 62(11)D r
0 0 0 SH
sv 184(].)D 152(In)D 198(the)D 271(rest)D 311(of)D 198(this)D 312(paper)D
405(,)D 90(we)D 260(e)D 80(xamine)D 590(closely)D 569(the)D 210 Y -4097(kinetic)D
585(equations)D 789(for)D 294(the)D r
/f4 f
sv 307(L)D r
/f3 f
sv 119(\205)D r
/f4 f
sv 61(B)D r
/f3 f
sv 121(\206)D r
/f6 f
sv 62(-violating)D 800(processes)D 786(when)D r
/f4 f
sv 211 Y -3924(CPT)D r
/f6 f
sv 365(-odd)D 422(shifts)D 482(\()D r
0.6666 1 1 SH

[/Dest /temp:intralink-d2 /Rect [2247 10993 2339 10809] /Border [0 0 0] /LNK pdfmark
sv 62(2)D r
0 0 0 SH
sv 92(\),)D 191(lepton-number)D 1172(violation,)D 788(and)D 350(spha-)D
211 Y -3924(leron)D 479(processes)D 805(are)D 324(taken)D 500(into)D 386(account.)D
721(W)D 161(e)D 181(adjust)D 540(the)D 211 Y -4097(coupling)D 688(constants)D
r
/f4 f
sv 728(\021)D r
/f6 f
sv 168(in)D 184(Eq.)D 293(\()D r
0.6666 1 1 SH

[/Dest /temp:intralink-d2 /Rect [3038 11415 3130 11231] /Border [0 0 0] /LNK pdfmark
sv 61(2)D r
0 0 0 SH
sv 92(\))D 102(in)D 185(such)D 379(a)D 121(way)D 348(as)D 194(to)D 185(produce)D
211 Y -3728(the)D 279(observ)D 490(ed)D 226(v)D 89(alue)D 361(of)D 205(the)D
279(baryon)D 564(asymmetry)D 874(and)D 319(compare)D 211 Y -3686(the)D 306(results)D
562(with)D 407(the)D 306(existi)D 399(ng)D 264(limits)D 502(on)D 263(Lorentz)D
656(violating)D 211 Y -3665(\(L)D 158(V\))D 230(interactions.)D 947(W)D 161(e)D
120(ar)D 142(gue)D 303(that)D 315(the)D 263(combination)D 962(of)D 191(bounds)D
211 Y -3792(on)D 240(L)D 96(V)D 187(from)D 414(observ)D 487(ations)D 497(of)D
208(high-ener)D 707(gy)D 239(cosmic)D 579(rays)D 362([)D r
0.6666 1 1 SH

[/Dest /temp:intralink-c13 /Rect [4994 12259 5178 12074] /Border [0 0 0] /LNK pdfmark
sv 62(13)D r
0 0 0 SH
sv 184(])D 210 Y -4262(and)D 327(the)D 286(lo)D 140(w-ener)D 510(gy)D 244(clock)D
461(comparison)D 921(exp)D 265(eriments)D 697(render)D 211 Y -3851(the)D r
/f4 f
sv 288(CPT)D r
/f6 f
sv 365(-odd)D 399(leptogenesis)D 975(scenario)D 677(\256ne-tuned)D 810(for)D
276(models)D -11597 Y 850(with)D 380(operators)D 739(of)D 206(mass)D 420(dimension)D
822(\256v)D 192(e)D 135(\()D r
0.6666 1 1 SH

[/Dest /temp:intralink-d2 /Rect [8511 1083 8603 898] /Border [0 0 0] /LNK pdfmark
sv 61(2)D r
0 0 0 SH
sv 92(\),)D 160(b)D 90(ut)D 196(allo)D 274(w)D 185(it)D 156(for)D 211 Y -4108(higher)D
470(-dimensional)D 1019(operators.)D r
/f10 /Times-Bold 184.515 0 0 -184.515 0 0 MF
sv 527 Y -1112(II.)D 242(REA)D 378(CTION)D 656(RA)D 248(TES)D 401(AND)D 451(BOL)D
375(TZMANN)D 211 Y -1505(EQU)D 389(A)D 116(TIONS)D r
/f6 f
sv 316 Y -1944(T)D 100(o)D 157(demonstrate)D 970(ho)D 180(w)D 198(the)D r
/f4 f
sv 291(CPT)D r
/f6 f
sv 365(-odd)D 403(leptogenesis)D 979(works,)D 211 Y -3827(we)D 276(consider)D
688(a)D 144(model)D 525(with)D 390(only)D 390(one)D 329(hea)D 255(vy)D
246(majorana)D 751(neu-)D 211 Y -3994(trino.)D 458(Its)D 248(of)D 150(f-shell)D
535(excha)D 430(nge)D 330(mediates)D 722(lepton-number)D 1152(vio-)D 211 Y -4025(lating)D
498(processes)D 782(that)D 354(freeze-out)D 826(at)D 210(the)D 302(temperatures)D
1032(well)D 211 Y -4004(belo)D 315(w)D r
/f4 f
sv 194(M)D r
/f2 f
sv 36 Y 163(R)D r
/f6 f
sv -36 Y 93(.)D 108(At)D r
/f4 f
sv 246(T)D 158(>)D 194(T)D r
/f2 f
sv 36 Y 108(R)D r
/f6 f
sv -36 Y 155(these)D 442(processes)D 768(maintain)D 710(the)D 288(equi-)D
210 Y -3942(librium)D 627(v)D 88(alue)D 391(for)D 297(the)D 308(lepton-number)D
1171(asymmetry)D 810(.)D 128(In)D 236(this)D 211 Y -4056(section)D 560(we)D
252(calculate)D 696(the)D 263(rate)D 315(of)D 190(the)D 263(lepton-number)D
1125(violating)D 211 Y -3664(processes)D 782(and)D 342(include)D 621(it)D 179(in)D
219(the)D 302(Boltzmann)D 888(equations)D 784(to-)D 211 Y -4117(gether)D 516(with)D
382(the)D 280(sphaleron)D 772(rate.)D 211 Y -1766(The)D 340(mass)D 420(term)D
392(Lagrangian)D 894(for)D 267(hea)D 255(vy)D 236(neutrinos)D 740(reads)D
441(as)D r
0 0 1 SH
/f0 f
sv 363 Y -4041 ( )D r
[/Dest /temp:intralink-d3 /View [/XYZ 316 561 0] /DEST pdfmark
0 0 0 SH
/f8 f
sv 34(L)D r
/f2 f
sv 37 Y 182(m)D r
/f3 f
sv -37 Y 160(\210)D 204(\377)D r
NP 6418 4514 M 65 0 R 
0 7 R -65 0 R SFR 
/f5 f
sv -67 Y 154(1)D 130 Y 0(2)D r
/f4 f
sv -63 Y 65(M)D r
/f2 f
sv 37 Y 163(R)D r
/f1 f
sv -76 Y 149(\026)D r
/f4 f
sv 39 Y -56(N)D r
/f2 f
sv 37 Y 140(M)D r
/f4 f
sv -37 Y 126(N)D r
/f2 f
sv 37 Y 133(M)D r
/f3 f
sv -37 Y 166(\207)D r
/f4 f
sv 195(h)D r
/f2 f
sv 37 Y 102(a)D r
/f3 f
sv -37 Y 121(\001)D r
/f1 f
sv -39 Y 147(\026)D r
/f4 f
sv 39 Y -45(L)D r
/f2 f
sv 37 Y 119(a)D r
/f4 f
sv -37 Y 80(H)D 148(N)D r
/f2 f
sv 37 Y 132(M)D r
/f3 f
sv -37 Y 167(\207)D r
/f4 f
sv 195(h)D r
/f7 f
sv -81 Y 102(y)D r
/f2 f
sv 104 Y 0(a)D r
/f3 f
sv -23 Y 131(\001)D r
/f1 f
sv -39 Y 159(\026)D r
/f4 f
sv 39 Y -56(N)D r
/f2 f
sv 37 Y 140(M)D r
/f4 f
sv -37 Y 126(H)D r
/f7 f
sv -64 Y 147(y)D r
/f4 f
sv 64 Y 91(L)D r
/f2 f
sv 37 Y 119(a)D r
/f4 f
sv -37 Y 80(;)D r
/f6 f
sv 280 Y -40(\(3\))D 326 Y -4108(where)D r
/f4 f
sv 519(N)D r
/f2 f
sv 37 Y 133(M)D r
/f6 f
sv -37 Y 194(are)D 295(singlet)D 561(majorana)D 758(neutrinos)D 756(and)D
r
/f4 f
sv 335(h)D r
/f2 f
sv 37 Y 102(a)D r
/f6 f
sv -37 Y 148(are)D 295(the)D 211 Y -4096(Y)D 113(uka)D 265(wa)D 273(couplings.)D
823(W)D 161(e)D 141(switch)D 541(to)D 202(W)D 161(eyl)D 283(spinors)D 591(for)D
273(con)D 261(ve-)D 211 Y -4088(nience,)D 583(in)D 198(which)D 505(the)D 280(Lagrangian)D
896(can)D 311(be)D 228(re)D 141(written)D 577(as)D r
0 0 1 SH
/f0 f
sv 363 Y -3682 ( )D r
[/Dest /temp:intralink-d4 /View [/XYZ 316 484 0] /DEST pdfmark
0 0 0 SH
/f8 f
sv 34(L)D r
/f2 f
sv 37 Y 182(m)D r
/f3 f
sv -37 Y 160(\210)D 204(\377)D r
NP 6327 5905 M 65 0 R 
0 7 R -65 0 R SFR 
/f5 f
sv -67 Y 154(1)D 130 Y 0(2)D r
/f4 f
sv -63 Y 65(M)D r
/f2 f
sv 37 Y 163(R)D r
/f3 f
sv -37 Y 93(\205)D r
/f4 f
sv 62(N)D 140(N)D r
/f3 f
sv 181(\207)D r
/f1 f
sv -39 Y 250(\026)D r
/f4 f
sv 39 Y -55(N)D r
/f1 f
sv -39 Y 226(\026)D r
/f4 f
sv 39 Y -56(N)D r
/f3 f
sv 141(\206)D 102(\207)D r
/f4 f
sv 195(h)D r
/f2 f
sv 37 Y 101(a)D r
/f3 f
sv -37 Y 121(\001)D r
/f1 f
sv -39 Y 148(\026)D r
/f4 f
sv 39 Y -45(L)D r
/f2 f
sv 37 Y 119(a)D r
/f1 f
sv -76 Y 136(\026)D r
/f4 f
sv 39 Y -56(N)D 140(H)D r
/f3 f
sv 189(\207)D r
/f4 f
sv 195(h)D r
/f7 f
sv -81 Y 101(y)D r
/f2 f
sv 104 Y 0(a)D r
/f3 f
sv -23 Y 132(\001)D r
/f4 f
sv 103(H)D r
/f7 f
sv -64 Y 147(y)D r
/f4 f
sv 64 Y 91(N)D 140(L)D r
/f2 f
sv 37 Y 119(a)D r
/f4 f
sv -37 Y 80(;)D r
/f6 f
sv 280 Y -131(\(4\))D 326 Y -4108(where)D 504(inde)D 317(x)D r
/f4 f
sv 146(a)D r
/f6 f
sv 155(runs)D 371(o)D 90(v)D 90(er)D 198(three)D 424(dif)D 202(ferent)D
485(generations,)D 952(and)D r
0 0 1 SH
/f0 f
sv 439 Y -2296 ( )D r
[/Dest /temp:intralink-s2 /View [/XYZ 316 430 0] /DEST pdfmark
0 0 0 SH
/f4 f
sv 3(N)D r
/f2 f
sv 37 Y 132(M)D r
/f3 f
sv -37 Y 177(\210)D r
/f4 f
sv -111 Y 332(N)D r
/f2 f
sv 37 Y 132(\013)D r
/f1 f
sv 145 Y -80(\026)D r
/f4 f
sv 40 Y -56(N)D r
/f5 f
sv -65 Y 183(_)D r
/f2 f
sv -43(\013)D r
/f9 f
sv -280 Y -263(\022)D 391(\023)D r
/f4 f
sv 234 Y 92(:)D r
/f6 f
sv 452 Y -2638(Inte)D 286(grating)D 583(out)D 295(the)D 286(hea)D 255(vy)D
244(neutrinos,)D 793(one)D 326(obtains)D 592(an)D 234(ef)D 141(fec-)D 211 Y -4035(ti)D
99(ve)D 227(lepton-number)D 1142(violating)D 712(vert)D 286(ex:)D r
0 0 1 SH
/f0 f
sv 455 Y -1587 ( )D r
[/Dest /temp:intralink-d5 /View [/XYZ 316 369 0] /DEST pdfmark
0 0 0 SH
/f8 f
sv 34(L)D r
/f5 f
sv 37 Y 182(eff)D r
/f3 f
sv -37 Y 211(\210)D r
NP 7067 8067 M 349 0 R 
0 7 R -349 0 R SFR 
/f4 f
sv -146 Y 273(Y)D r
/f2 f
sv -64 Y 117(\027)D 112 Y -9(ij)D r
/f1 f
sv 224 Y -176(2)D r
/f4 f
sv 92(M)D r
/f2 f
sv 37 Y 163(R)D r
/f4 f
sv -163 Y 124(H)D r
/f7 f
sv -65 Y 148(y)D r
/f4 f
sv 65 Y 91(L)D r
/f2 f
sv -65 Y 119(\013)D 113 Y 0(i)D r
/f4 f
sv -48 Y 97(H)D r
/f7 f
sv -65 Y 148(y)D r
/f4 f
sv 65 Y 91(L)D r
/f2 f
sv 37 Y 119(j\013)D r
/f3 f
sv -37 Y 192(\207)D r
/f1 f
sv 195(H)D r
/f4 f
sv 132(:)D r
/f1 f
sv 46(c)D r
/f4 f
sv 83(:;)D r
/f6 f
sv 757(\(5\))D 476 Y -4108(where)D r
/f4 f
sv 526(Y)D r
/f2 f
sv -65 Y 117(\027)D 117 Y -9(ab)D r
/f3 f
sv -52 Y 202(\210)D r
/f4 f
sv 205(h)D r
/f7 f
sv -81 Y 102(y)D r
/f2 f
sv 103 Y 0(a)D r
/f4 f
sv -22 Y 90(h)D r
/f7 f
sv -81 Y 102(y)D r
/f2 f
sv 134 Y 0(b)D r
/f6 f
sv -53 Y 91(.)D 121(Substituting)D 968(the)D 298(v)D 88(acuum)D 569(exp)D
265(ectation)D 218 Y -3735(v)D 88(alue)D 379(for)D 285(the)D 297(Higgs)D
510(\256eld)D 399(in)D 214(\()D r
0.6666 1 1 SH

[/Dest /temp:intralink-d5 /Rect [7789 8857 7881 8673] /Border [0 0 0] /LNK pdfmark
sv 61(5)D r
0 0 0 SH
sv 92(\))D 132(creates)D 585(a)D 152(majorana)D 760(mass)D 211 Y -3954(term)D
409(for)D 284(light)D 409(neutrinos.)D 803(This)D 397(interaction)D 863(induces)D
633(lepton-)D 211 Y -3798(number)D 649(violating)D 744(processes)D 792(which)D
537(determine)D 826(the)D 312(lepton)D 211 Y -3860(asymmetry)D 897(until)D
416(the)D 302(lepton)D 538(freeze-out.)D 873(Alternati)D 654(vely)D 306(,)D
122(we)D 211 Y -4108(could)D 473(step)D 360(by)D 246(the)D 289(stage)D 438(with)D
391(the)D 289(hea)D 255(vy)D 246(right-handed)D 1007(neu-)D 210 Y -3994(trinos)D
480(and)D 326(postulate)D 728(\()D r
0.6666 1 1 SH

[/Dest /temp:intralink-d5 /Rect [7151 9912 7244 9727] /Border [0 0 0] /LNK pdfmark
sv 61(5)D r
0 0 0 SH
sv 93(\))D 121(as)D 213(a)D 142(starting)D 615(point)D 439(in)D 204(our)D
305(analysis)D 211 Y -3727(while)D 491(taking)D r
/f4 f
sv 543(Y)D r
/f2 f
sv -64 Y 117(\027)D 117 Y -10(ab)D r
/f6 f
sv -53 Y 232(to)D 224(be)D 255(an)D 255(arbitrary)D 718(complex)D 716(symmetric)D
217 Y -3541(matrix.)D 211 Y 184(Introduction)D 953(of)D 193(the)D r
/f4 f
sv 265(CPT)D r
/f6 f
sv 365(-odd)D 377(interactions)D 903(\()D r
0.6666 1 1 SH

[/Dest /temp:intralink-d2 /Rect [8857 10550 8949 10366] /Border [0 0 0] /LNK pdfmark
sv 61(2)D r
0 0 0 SH
sv 92(\))D 101(leads)D 419(to)D 183(the)D 211 Y -4096(modi\256cation)D 976(of)D
195(dispersion)D 800(relations)D 679(for)D 256(the)D 268(SM)D 307(leptons)D
575(and)D 211 Y -4056(antileptons.)D 926(T)D 100(aking)D 478(lepton)D 531(doublets,)D
740(we)D 283(neg)D 265(lect)D 336(the)D 295(mass)D 211 Y -3954(terms)D 464(and)D
321(\256nd)D r
0 0 1 SH
/f0 f
sv 340 Y -552 ( )D r
[/Dest /temp:intralink-d6 /View [/XYZ 316 173 0] /DEST pdfmark
0 0 0 SH
/f4 f
sv 3(E)D r
/f2 f
sv 37 Y 121(L)D r
/f3 f
sv -37 Y 92(\205)D r
/f4 f
sv 62(p)D r
/f3 f
sv 115(\206)D 113(\210)D 205(j)D r
/f4 f
sv -1 Y 89(~)D 1 Y -36(p)D r
/f3 f
sv 115(j)D 95(\207)D r
/f4 f
sv 195(\021)D r
/f2 f
sv 37 Y 127(L)D r
/f4 f
sv -38 Y 127(~)D 1 Y -35(p)D r
/f5 f
sv -64 Y 115(2)D r
/f4 f
sv 64 Y 73(;)D 446(E)D r
/f5 f
sv 13 Y 153(\026)D r
/f2 f
sv 28 Y -32(L)D r
/f3 f
sv -41 Y 92(\205)D r
/f4 f
sv 62(p)D r
/f3 f
sv 115(\206)D 112(\210)D 205(j)D r
/f4 f
sv -1 Y 89(~)D 1 Y -35(p)D r
/f3 f
sv 115(j)D 95(\377)D r
/f4 f
sv 195(\021)D r
/f2 f
sv 37 Y 126(L)D r
/f4 f
sv -38 Y 128(~)D 1 Y -36(p)D r
/f5 f
sv -64 Y 116(2)D r
/f4 f
sv 64 Y 73(:)D r
/f6 f
sv 280(\(6\))D 342 Y -4108(Equation)D 746(\()D r
0.6666 1 1 SH

[/Dest /temp:intralink-d6 /Rect [6364 11865 6456 11680] /Border [0 0 0] /LNK pdfmark
sv 62(6)D r
0 0 0 SH
sv 92(\))D 140(leads)D 458(to)D 223(a)D 161(shift)D 406(in)D 223(the)D
305(equilibrium)D 942(number)D 210 Y -3758(density)D 587(of)D 207(leptons)D
r
0 0 1 SH
/f0 f
sv 438 Y 420 ( )D r
[/Dest /temp:intralink-s2 /View [/XYZ 316 124 0] /DEST pdfmark
0 0 0 SH
/f4 f
sv 3(n)D r
/f5 f
sv -90 Y 102(eq)D r
/f2 f
sv 140 Y 0(L)D r
/f3 f
sv -50 Y 182(\210)D r
NP 7262 12418 M 410 0 R 
0 7 R -410 0 R SFR 
/f4 f
sv -125 Y 313(g)D r
/f2 f
sv 37 Y 102(L)D r
/f4 f
sv 219 Y -210(\031)D r
/f5 f
sv -65 Y 133(2)D r
/f4 f
sv 65 Y 73(\014)D r
/f5 f
sv -65 Y 131(3)D r
/f9 f
sv -299 Y 104(\022)D r
/f1 f
sv 233 Y 92(1)D r
/f3 f
sv 133(\377)D r
NP 8123 12418 M 403 0 R 
0 7 R -403 0 R SFR 
/f1 f
sv -125 Y 195(12)D r
/f4 f
sv 184(\021)D r
/f2 f
sv 37 Y 127(L)D r
/f4 f
sv 215 Y -175(\014)D r
/f9 f
sv -360 Y 267(\023)D r
/f4 f
sv 233 Y 92(;)D r
0 0 0 SH
/f11 /Times-Roman 166.945 0 0 -166.945 0 0 MF
sv -11747 Y -7702(P)D 79(A)D 99(VEL)D 378(A.)D 216(BOLOKHO)D 806(V)D 153(AND)D
413(MAXIM)D 645(POSPELO)D 714(V)D 3546(PHYSICAL)D 867(REVIEW)D 704(D)D r
/f12 /Times-Bold 166.945 0 0 -166.945 0 0 MF
sv 174(00)D r
0 0 0 SH
/f13 /Times-Roman 158.155 0 0 -158.155 0 0 MF
sv 12671 Y -4353(2)D r

pagesave restore
showpage
%%Page: 3 4
%%BeginPageSetup
%%IncludeResource: font BG-Maths-Symbol-Bold
%%IncludeResource: font BG-Maths-Extension-Bold
0 0 0 SH
% End of font info
/pagesave save def
/XX 0 def /YY 0 def /OH 0 def /OS 0 def /OB -1 def /IN true def
/OT 0 def /OO false def false SO
/ET 0 def
/pagemx matrix currentmatrix def
0.0566929 -0.0566929 scale 0 -13970 translate gsave
%%EndPageSetup
0 0 10795 13970 C
0 0 0 SH
0 0 0 SH
75 45 SS1
0 0 0 SH
0 0 0 SH
-1 SOB
/f0 /Times-Roman 184.515 0 0 -184.515 0 0 MF
sv 1037 Y 916(with)D 379(the)D 276(opposite)D 676(sign)D 358(of)D 203(the)D
277(shift)D 378(for)D 265(antileptons.)D 908(Here)D r
/f1 /BG-Maths-Italic 184.515 0 0 -184.515 0 0 MF
sv 409(g)D r
/f2 /BG-Maths-Italic 129.16 0 0 -129.16 0 0 MF
sv 37 Y 102(L)D r
/f0 f
sv 174 Y -4231(is)D 168(the)D 272(total)D 375(number)D 609(of)D 199(the)D 271(spin,)D
399(gauge)D 486(and)D 312(\257a)D 182(vor)D 289(deg)D 265(rees)D 343(of)D
211 Y -4170(freedom)D 669(associated)D 812(with)D 380(electro)D 501(weak)D
442(doublets)D r
/f1 f
sv 678(L)D r
/f0 f
sv 119(,)D 98(and)D r
/f1 f
sv 319(\014)D r
/f0 f
sv 182(is)D 210 Y -4200(the)D 281(in)D 138(v)D 90(erse)D 351(temperature.)D
985(The)D 342(dif)D 201(ference)D r
0 0 1 SH
/f3 /Times-Roman 0.184515 0 0 -0.184515 0 0 MF
sv 327 Y -1420 ( )D r
[/Dest /temp:intralink-d7 /View [/XYZ 52 699 0] /DEST pdfmark
0 0 0 SH
/f1 f
sv 3(n)D r
/f4 /BG-Maths-Roman 129.16 0 0 -129.16 0 0 MF
sv -91 Y 102(eq)D r
/f2 f
sv 140 Y 0(i)D r
/f5 /BG-Maths-Symbol 184.515 0 0 -184.515 0 0 MF
sv -49 Y 172(\377)D r
/f1 f
sv 195(n)D r
/f4 f
sv -91 Y 102(eq)D 133 Y 10(\026)D r
/f2 f
sv 28 Y -10(i)D r
/f5 f
sv -70 Y 182(\210)D 205(\377)D r
/f6 /BG-Maths-Roman 184.515 0 0 -184.515 0 0 MF
sv 153(24)D r
/f1 f
sv 185(\021)D r
/f2 f
sv 37 Y 126(i)D r
/f1 f
sv -37 Y 51(g)D r
/f2 f
sv 37 Y 102(i)D r
/f5 f
sv -37 Y 50(\205)D r
/f1 f
sv 61(\031)D r
/f4 f
sv -65 Y 133(2)D r
/f1 f
sv 65 Y 73(\014)D r
/f4 f
sv -65 Y 131(4)D r
/f5 f
sv 65 Y 73(\206)D r
/f7 /BG-Maths-Symbol 129.16 0 0 -129.16 0 0 MF
sv -65 Y 62(\377)D r
/f4 f
sv 107(1)D r
/f1 f
sv 65 Y 73(;)D r
/f0 f
sv 799(\(7\))D 351 Y -4108(where)D r
/f1 f
sv 541(i)D r
/f5 f
sv 111(\210)D r
/f1 f
sv 204(L)D r
/f0 f
sv 209(for)D 304(no)D 180(w)D 121(,)D 136(represents)D 837(an)D 264(equilibrium)D
954(lepton)D 211 Y -3861(number)D 637(induced)D 658(by)D r
/f1 f
sv 256(CPT)D r
/f0 f
sv 437(violation)D 731(in)D 216(the)D 299(lepton)D 534(doublet)D 211 Y -3768(sector)D
432(.)D 148(As)D 304(stated)D 533(in)D 246(the)D 327(introduction)D 1006(section,)D
671(the)D 328(\256nal)D 211 Y -3995(abu)D 265(ndance)D 616(can)D 349(be)D
267(roughly)D 666(estimated)D 802(by)D 276(e)D 78(v)D 89(aluating)D 689(the)D
211 Y -4097(equilibrium)D 936(density)D 606(at)D 206(the)D 298(temperature)D
957(of)D 225(the)D 299(freeze-out.)D 210 Y -3527(A)D 222(more)D 468(accurate)D
707(answer)D 517(,)D 135(ho)D 180(we)D 211(ver)D 229(,)D 135(can)D 345(be)D
264(obtained)D 726(by)D 211 Y -4139(analyzing)D 794(Boltzmann)D 885(equations)D
781(in)D 217(the)D 300(presence)D 720(of)D 227(spha-)D 211 Y -3924(leron)D
434(processes)D 760(and)D 321(lepton-number)D 1142(violation.)D -2786 Y 2167(There)D
532(are)D 327(two)D 377(types)D 490(of)D 251(interactions)D 965(induced)D
685(by)D 285(the)D 211 Y -4096(ef)D 140(fecti)D 326(v)D 90(e)D 164(Lepton-Higgs)D
1106(v)D 90(ertex)D 450([)D r
0.6666 1 1 SH

[/Dest /temp:intralink-c14 /Rect [7983 1294 8167 1109] /Border [0 0 0] /LNK pdfmark
sv 61(14)D r
0 0 0 SH
sv 184(,)D r
0.6666 1 1 SH

[/Dest /temp:intralink-c15 /Rect [8213 1294 8398 1109] /Border [0 0 0] /LNK pdfmark
sv 46(15)D r
0 0 0 SH
sv 185(],)D 188(sho)D 251(wn)D 306(in)D 225(Fig.)D r
0.6666 1 1 SH

[/Dest /temp:intralink-f1 /Rect [9740 1294 9832 1109] /Border [0 0 0] /LNK pdfmark
sv 372(1)D r
0 0 0 SH
sv 92(.)D 211 Y -4276(The)D 286(y)D 154(generate)D 689(the)D 289(follo)D 345(wing)D
431(processes)D 768(rele)D 275(v)D 88(ant)D 289(for)D 277(lepto-)D 210 Y -3891(genesis:)D
r
0 0 1 SH
/f3 f
sv 443 Y 631 ( )D r
[/Dest /temp:intralink-s2 /View [/XYZ 316 699 0] /DEST pdfmark
0 0 0 SH
/f1 f
sv 3(L)D r
/f5 f
sv 161(\207)D r
/f1 f
sv 194(L)D r
/f5 f
sv 170($)D r
/f1 f
sv 226(H)D r
/f5 f
sv 189(\207)D r
/f1 f
sv 195(H)D 148(;)D 446(L)D r
/f5 f
sv 160(\207)D r
/f1 f
sv 194(H)D r
/f5 f
sv 199($)D r
/f6 f
sv -39 Y 272(\026)D r
/f1 f
sv 39 Y -46(L)D r
/f5 f
sv 160(\207)D r
/f1 f
sv 195(H)D 148(;)D r
/f0 f
sv 446 Y -3645(with)D 396(the)D 294(same)D 448(set)D 273(of)D 222(processes)D
774(for)D 283(antileptons.)D 926(Ho)D 221(we)D 211(v)D 90(er)D 138(,)D
211 Y -4276(since)D 429(the)D 275(rele)D 274(v)D 89(ant)D 275(part)D 337(of)D
202(the)D r
/f1 f
sv 275(CPT)D r
/f0 f
sv 365(-odd)D 387(interactions)D 913(is)D 171(time)D 211 Y -3992(re)D 140(v)D
90(ersal)D 432(in)D 138(v)D 89(ariant,)D 551(the)D 309(amplitudes)D 895(for)D
298(direct)D 505(and)D 349(in)D 139(v)D 90(erse)D 211 Y -4025(processes)D
800(are)D 320(equal,)D 541(and)D 360(we)D 308(therefore)D 762(hav)D 263(e)D
176(only)D 422(three)D 210 Y -3952(dif)D 201(ferent)D 504(amplitudes,)D 929(which)D
523(we)D 287(call)D r
/f1 f
sv 340(A)D r
/f2 f
sv 37 Y 117(LL)D r
/f0 f
sv -37 Y 175(,)D r
/f1 f
sv 118(A)D r
/f4 f
sv 13 Y 149(\026)D r
/f2 f
sv 28 Y -32(L)D r
/f4 f
sv -28 Y 137(\026)D r
/f2 f
sv 28 Y -32(L)D r
/f0 f
sv -41 Y 92(,)D 117(and)D r
/f1 f
sv 339(A)D r
/f2 f
sv 37 Y 117(LH)D r
/f0 f
sv -37 Y 195(.)D 211 Y -4276(Denoting)D 762(the)D 302(corresponding)D 1131(reaction)D
672(rates)D 424(\(per)D 373(unit)D 363(v)D 90(ol-)D 211 Y -4117(ume\))D 433(by)D
r
/f1 f
sv 238(W)D r
/f2 f
sv 37 Y 158(LL)D r
/f0 f
sv -37 Y 175(,)D r
/f1 f
sv 100(W)D r
/f4 f
sv 13 Y 189(\026)D r
/f2 f
sv 28 Y -32(L)D r
/f4 f
sv -28 Y 137(\026)D r
/f2 f
sv 28 Y -32(L)D r
/f0 f
sv -41 Y 92(,)D r
/f1 f
sv 100(W)D r
/f2 f
sv 37 Y 157(LH)D r
/f0 f
sv -37 Y 196(,)D 100(and)D r
/f6 f
sv -39 Y 390(\026)D r
/f1 f
sv 39 Y -70(W)D r
/f2 f
sv 37 Y 169(LH)D r
/f0 f
sv -37 Y 196(,)D 99(we)D 269(hav)D 263(e)D r
0 0 1 SH
/f3 f
sv 626 Y -6160 ( )D r
[/Dest /temp:intralink-s2 /View [/XYZ 52 565 0] /DEST pdfmark
0 0 0 SH
/f1 f
sv 3(W)D r
/f2 f
sv 37 Y 157(LL)D r
/f5 f
sv -37 Y 227(\210)D r
/f8 /BG-Maths-Extension 184.515 0 0 -184.515 0 0 MF
sv -180 Y 205(Z)D r
/f1 f
sv 180 Y 194(d\031)D r
/f2 f
sv 37 Y 234(p)D r
/f1 f
sv -37 Y 89(d\031)D r
/f2 f
sv 37 Y 235(q)D r
/f1 f
sv -37 Y 80(d\031)D r
/f2 f
sv 37 Y 234(k)D r
/f1 f
sv -37 Y 72(d\031)D r
/f2 f
sv 37 Y 234(r)D r
/f5 f
sv -37 Y 65(\205)D r
/f6 f
sv 62(2)D r
/f1 f
sv 92(\031)D r
/f5 f
sv 132(\206)D r
/f4 f
sv -65 Y 62(4)D r
/f1 f
sv 65 Y 73(\016)D r
/f4 f
sv -65 Y 112(4)D r
/f5 f
sv 65 Y 73(\205)D r
/f1 f
sv 61(p)D r
/f5 f
sv 156(\207)D r
/f1 f
sv 195(q)D r
/f5 f
sv 143(\377)D r
/f1 f
sv 194(k)D r
/f5 f
sv 132(\377)D r
/f1 f
sv 194(r)D r
/f5 f
sv 81(\206j)D r
/f1 f
sv 115(A)D r
/f2 f
sv 37 Y 117(LL)D r
/f5 f
sv -37 Y 176(j)D r
/f4 f
sv -65 Y 53(2)D r
/f1 f
sv 65 Y 74(f)D r
/f4 f
sv -91 Y 102(eq)D r
/f2 f
sv 140 Y -4(L)D r
/f5 f
sv -49 Y 135(\205)D r
/f1 f
sv 61(p)D r
/f5 f
sv 115(\206)D r
/f1 f
sv 62(f)D r
/f4 f
sv -91 Y 101(eq)D r
/f2 f
sv 140 Y -3(L)D r
/f5 f
sv -49 Y 135(\205)D r
/f1 f
sv 61(q)D r
/f5 f
sv 102(\206)D r
/f1 f
sv 61(;)D 491 Y -5254(W)D r
/f4 f
sv 13 Y 189(\026)D r
/f2 f
sv 28 Y -32(L)D r
/f4 f
sv -28 Y 137(\026)D r
/f2 f
sv 28 Y -32(L)D r
/f5 f
sv -41 Y 144(\210)D r
/f8 f
sv -180 Y 204(Z)D r
/f1 f
sv 180 Y 194(d\031)D r
/f2 f
sv 37 Y 235(p)D r
/f1 f
sv -37 Y 89(d\031)D r
/f2 f
sv 37 Y 234(q)D r
/f1 f
sv -37 Y 80(d\031)D r
/f2 f
sv 37 Y 235(k)D r
/f1 f
sv -37 Y 71(d\031)D r
/f2 f
sv 37 Y 235(r)D r
/f5 f
sv -37 Y 65(\205)D r
/f6 f
sv 61(2)D r
/f1 f
sv 93(\031)D r
/f5 f
sv 132(\206)D r
/f4 f
sv -65 Y 61(4)D r
/f1 f
sv 65 Y 74(\016)D r
/f4 f
sv -65 Y 111(4)D r
/f5 f
sv 65 Y 73(\205)D r
/f1 f
sv 62(p)D r
/f5 f
sv 156(\207)D r
/f1 f
sv 195(q)D r
/f5 f
sv 142(\377)D r
/f1 f
sv 195(k)D r
/f5 f
sv 131(\377)D r
/f1 f
sv 195(r)D r
/f5 f
sv 80(\206j)D r
/f1 f
sv 116(A)D r
/f4 f
sv 13 Y 149(\026)D r
/f2 f
sv 28 Y -32(L)D r
/f4 f
sv -28 Y 136(\026)D r
/f2 f
sv 28 Y -31(L)D r
/f5 f
sv -41 Y 92(j)D r
/f4 f
sv -65 Y 54(2)D r
/f1 f
sv 65 Y 73(f)D r
/f4 f
sv -91 Y 102(eq)D 133 Y 27(\026)D r
/f2 f
sv 28 Y -31(L)D r
/f5 f
sv -70 Y 135(\205)D r
/f1 f
sv 61(p)D r
/f5 f
sv 115(\206)D r
/f1 f
sv 62(f)D r
/f4 f
sv -91 Y 102(eq)D 133 Y 27(\026)D r
/f2 f
sv 28 Y -31(L)D r
/f5 f
sv -70 Y 135(\205)D r
/f1 f
sv 61(q)D r
/f5 f
sv 102(\206)D r
/f1 f
sv 61(;)D 491 Y -5294(W)D r
/f2 f
sv 37 Y 157(LH)D r
/f5 f
sv -37 Y 247(\210)D r
/f8 f
sv -179 Y 205(Z)D r
/f1 f
sv 179 Y 194(d\031)D r
/f2 f
sv 37 Y 234(p)D r
/f1 f
sv -37 Y 90(d\031)D r
/f2 f
sv 37 Y 234(q)D r
/f1 f
sv -37 Y 80(d\031)D r
/f2 f
sv 37 Y 234(k)D r
/f1 f
sv -37 Y 72(d\031)D r
/f2 f
sv 37 Y 234(r)D r
/f5 f
sv -37 Y 66(\205)D r
/f6 f
sv 61(2)D r
/f1 f
sv 92(\031)D r
/f5 f
sv 133(\206)D r
/f4 f
sv -64 Y 61(4)D r
/f1 f
sv 64 Y 73(\016)D r
/f4 f
sv -64 Y 112(4)D r
/f5 f
sv 64 Y 73(\205)D r
/f1 f
sv 61(p)D r
/f5 f
sv 157(\207)D r
/f1 f
sv 194(q)D r
/f5 f
sv 143(\377)D r
/f1 f
sv 195(k)D r
/f5 f
sv 131(\377)D r
/f1 f
sv 194(r)D r
/f5 f
sv 81(\206j)D r
/f1 f
sv 115(A)D r
/f2 f
sv 37 Y 117(LH)D r
/f5 f
sv -37 Y 196(j)D r
/f4 f
sv -64 Y 54(2)D r
/f1 f
sv 64 Y 73(f)D r
/f4 f
sv -90 Y 102(eq)D r
/f2 f
sv 139 Y -4(L)D r
/f5 f
sv -49 Y 135(\205)D r
/f1 f
sv 61(p)D r
/f5 f
sv 116(\206)D r
/f1 f
sv 61(f)D r
/f4 f
sv -90 Y 102(eq)D r
/f2 f
sv 139 Y -4(H)D r
/f5 f
sv -49 Y 135(\205)D r
/f1 f
sv 61(q)D r
/f5 f
sv 102(\206)D r
/f1 f
sv 61(;)D r
/f6 f
sv 452 Y -5221(\026)D r
/f1 f
sv 39 Y -70(W)D r
/f2 f
sv 37 Y 169(LH)D r
/f5 f
sv -37 Y 247(\210)D r
/f8 f
sv -179 Y 205(Z)D r
/f1 f
sv 179 Y 194(d\031)D r
/f2 f
sv 37 Y 234(p)D r
/f1 f
sv -37 Y 89(d\031)D r
/f2 f
sv 37 Y 234(q)D r
/f1 f
sv -37 Y 80(d\031)D r
/f2 f
sv 37 Y 235(k)D r
/f1 f
sv -37 Y 72(d\031)D r
/f2 f
sv 37 Y 234(r)D r
/f5 f
sv -37 Y 65(\205)D r
/f6 f
sv 62(2)D r
/f1 f
sv 92(\031)D r
/f5 f
sv 132(\206)D r
/f4 f
sv -64 Y 62(4)D r
/f1 f
sv 64 Y 73(\016)D r
/f4 f
sv -64 Y 111(4)D r
/f5 f
sv 64 Y 74(\205)D r
/f1 f
sv 61(p)D r
/f5 f
sv 156(\207)D r
/f1 f
sv 195(q)D r
/f5 f
sv 143(\377)D r
/f1 f
sv 194(k)D r
/f5 f
sv 131(\377)D r
/f1 f
sv 195(r)D r
/f5 f
sv 81(\206j)D r
/f1 f
sv 115(A)D r
/f4 f
sv 13 Y 149(\026)D r
/f2 f
sv 28 Y -32(LH)D r
/f5 f
sv -41 Y 196(j)D r
/f4 f
sv -64 Y 53(2)D r
/f1 f
sv 64 Y 74(f)D r
/f4 f
sv -90 Y 101(eq)D 133 Y 28(\026)D r
/f2 f
sv 27 Y -31(L)D r
/f5 f
sv -70 Y 134(\205)D r
/f1 f
sv 62(p)D r
/f5 f
sv 115(\206)D r
/f1 f
sv 62(f)D r
/f4 f
sv -90 Y 101(eq)D r
/f2 f
sv 139 Y -4(H)D r
/f5 f
sv -49 Y 135(\205)D r
/f1 f
sv 62(q)D r
/f5 f
sv 102(\206)D r
/f1 f
sv 61(;)D r
/f0 f
sv 639 Y -7110(where)D r
/f1 f
sv 527(f)D r
/f4 f
sv -90 Y 102(eq)D r
/f2 f
sv 139 Y -4(L;H)D r
/f5 f
sv -49 Y 228(\205)D r
/f1 f
sv 61(p)D r
/f5 f
sv 116(\206)D r
/f0 f
sv 136(are)D 302(the)D 302(equilibrium)D 940(distrib)D 470(ution)D 456(functions)D
211 Y -3636(for)D 264(Higgs)D 487(\256elds)D 448(and)D 315(lepton)D 511(doublets.)D
720(In)D 201(a)D 131(toy)D 284(model)D 511(where)D 211 Y -3872(only)D 389(the)D
288(lepton)D 523(doublets)D 687(and)D 327(Higgs)D 501(\256elds)D 460(are)D
287(present)D 594(one)D 211 Y -4056(can)D 339(immediately)D 1009(write)D 461(the)D
308(Boltzmann)D 894(equations)D 789(for)D 297(the)D 211 Y -4097(lepton-number)D
1143(density)D 587(as)D r
0 0 1 SH
/f3 f
sv 238 Y -1730 ( )D r
[/Dest /temp:intralink-d8 /View [/XYZ 52 373 0] /DEST pdfmark
0 0 0 SH
/f9 /BG-Maths-Symbol-Bold 184.515 0 0 -184.515 0 0 MF
sv 277 Y 3(\205)D r
/f1 f
sv 62(@)D r
/f2 f
sv 36 Y 102(t)D r
/f5 f
sv -36 Y 79(\207)D r
/f6 f
sv 182(3\377)D r
/f2 f
sv 36 Y 206(H)D r
/f9 f
sv -36 Y 112(\206)D r
/f1 f
sv 61(n)D r
/f2 f
sv 36 Y 102(L)D r
/f5 f
sv -36 Y 128(\210)D 189(\377)D r
/f6 f
sv 154(2)D r
/f1 f
sv 92(W)D r
/f2 f
sv 36 Y 158(LL)D r
/f10 /BG-Maths-Extension-Bold 184.515 0 0 -184.515 0 0 MF
sv -270 Y 175(\022)D r
NP 2835 7870 M 429 0 R 
0 7 R -429 0 R SFR 
/f1 f
sv 108 Y 231(n)D r
/f4 f
sv -64 Y 102(2)D r
/f2 f
sv 112 Y 0(L)D r
/f5 f
sv 208 Y -219(\205)D r
/f1 f
sv 61(n)D r
/f4 f
sv -91 Y 102(eq)D r
/f2 f
sv 140 Y 0(L)D r
/f5 f
sv -49 Y 131(\206)D r
/f4 f
sv -65 Y 61(2)D r
/f5 f
sv -65 Y 102(\377)D r
/f6 f
sv 183(1)D r
/f10 f
sv -234 Y 92(\023)D r
/f5 f
sv 234 Y 121(\377)D r
/f1 f
sv 182(W)D r
/f2 f
sv 40 Y 158(L)D r
/f4 f
sv -27 Y 125(\026)D r
/f2 f
sv 27 Y -42(H)D r
/f10 f
sv -274 Y 112(\022)D r
NP 4337 7870 M 233 0 R 
0 7 R -233 0 R SFR 
/f1 f
sv 108 Y 133(n)D r
/f2 f
sv 37 Y 102(L)D r
/f1 f
sv 218 Y -121(n)D r
/f4 f
sv -91 Y 102(eq)D r
/f2 f
sv 140 Y 0(L)D r
/f5 f
sv -178 Y 159(\377)D r
NP 4781 7870 M 233 0 R 
0 7 R -233 0 R SFR 
/f1 f
sv -126 Y 202(n)D r
/f4 f
sv 13 Y 134(\026)D r
/f2 f
sv 28 Y -32(L)D r
/f1 f
sv 214 Y -121(n)D r
/f4 f
sv -91 Y 101(eq)D 133 Y 32(\026)D r
/f2 f
sv 28 Y -32(L)D r
/f10 f
sv -433 Y 153(\023)D r
/f9 f
sv 815 Y -4116(\205)D r
/f1 f
sv 62(@)D r
/f2 f
sv 37 Y 102(t)D r
/f5 f
sv -37 Y 79(\207)D r
/f6 f
sv 182(3\377)D r
/f2 f
sv 37 Y 206(H)D r
/f9 f
sv -37 Y 112(\206)D r
/f1 f
sv 61(n)D r
/f4 f
sv 13 Y 134(\026)D r
/f2 f
sv 28 Y -32(L)D r
/f5 f
sv -41 Y 128(\210)D 189(\377)D r
/f6 f
sv 154(2)D r
/f1 f
sv 92(W)D r
/f4 f
sv 13 Y 189(\026)D r
/f2 f
sv 28 Y -31(L)D r
/f4 f
sv -28 Y 130(\026)D r
/f2 f
sv 28 Y -32(L)D r
/f10 f
sv -274 Y 92(\022)D r
NP 2850 8452 M 429 0 R 
0 7 R -429 0 R SFR 
/f1 f
sv 92 Y 231(n)D r
/f4 f
sv -64 Y 102(2)D 106 Y 32(\026)D r
/f2 f
sv 27 Y -32(L)D r
/f5 f
sv 203 Y -219(\205)D r
/f1 f
sv 61(n)D r
/f4 f
sv -91 Y 102(eq)D 133 Y 32(\026)D r
/f2 f
sv 28 Y -32(L)D r
/f5 f
sv -70 Y 131(\206)D r
/f4 f
sv -65 Y 62(2)D r
/f5 f
sv -66 Y 102(\377)D r
/f6 f
sv 182(1)D r
/f10 f
sv -233 Y 92(\023)D r
/f5 f
sv 233 Y 121(\377)D r
/f6 f
sv -39 Y 252(\026)D r
/f1 f
sv 39 Y -70(W)D r
/f2 f
sv 41 Y 169(L)D r
/f4 f
sv -28 Y 125(\026)D r
/f2 f
sv 28 Y -42(H)D r
/f10 f
sv -274 Y 113(\022)D r
NP 4363 8452 M 233 0 R 
0 7 R -233 0 R SFR 
/f1 f
sv 108 Y 133(n)D r
/f4 f
sv 13 Y 133(\026)D r
/f2 f
sv 28 Y -31(L)D r
/f1 f
sv 214 Y -122(n)D r
/f4 f
sv -91 Y 102(eq)D 133 Y 32(\026)D r
/f2 f
sv 28 Y -32(L)D r
/f5 f
sv -200 Y 160(\377)D r
NP 4807 8452 M 233 0 R 
0 7 R -233 0 R SFR 
/f1 f
sv -125 Y 202(n)D r
/f2 f
sv 37 Y 102(L)D r
/f1 f
sv 218 Y -122(n)D r
/f4 f
sv -91 Y 102(eq)D r
/f2 f
sv 140 Y 0(L)D r
/f10 f
sv -412 Y 153(\023)D r
/f1 f
sv 233 Y 92(:)D r
/f0 f
sv 448 Y -127(\(8\))D 409 Y -4111(Here)D 411(the)D 278(Hubble)D 596(rate)D 330(is)D
r
/f6 f
sv 174(\377)D r
/f2 f
sv 37 Y 114(H)D r
/f5 f
sv -37 Y 163(\210)D r
/f6 f
sv 205(1)D r
/f1 f
sv 92(:)D r
/f6 f
sv 46(66)D r
/f1 f
sv 185(g)D r
/f4 f
sv -86 Y 101(1)D r
/f2 f
sv 65(=)D r
/f4 f
sv 64(2)D r
/f7 f
sv 121 Y -129(\003)D r
/f1 f
sv -35 Y 203(T)D r
/f4 f
sv -64 Y 117(2)D r
/f1 f
sv 64 Y 73(=M)D r
/f4 f
sv 37 Y 255(Pl)D r
/f0 f
sv -37 Y 168(in)D 196(terms)D 463(of)D 211 Y -4170(the)D 290(total)D 394(ef)D
140(fecti)D 327(v)D 90(e)D 146(number)D 628(of)D 217(deg)D 265(rees)D
361(of)D 213(freedom)D r
/f1 f
sv 680(g)D r
/f7 f
sv 37 Y 102(\003)D r
/f0 f
sv -37 Y 73(.)D 109(The)D 211 Y -4035(factor)D 478(of)D 199(2)D 138(in)D 190(the)D
272(right-hand)D 816(side)D 343(of)D 199(Eq.)D 298(\()D r
0.6666 1 1 SH

[/Dest /temp:intralink-d8 /Rect [3910 9826 4002 9642] /Border [0 0 0] /LNK pdfmark
sv 61(8)D r
0 0 0 SH
sv 92(\))D 107(re\257ects)D 580(the)D 272(fact)D 211 Y -4045(that)D 315(the)D
r
/f1 f
sv 263(LL)D r
/f0 f
sv 275(processes)D 743(change)D 560(the)D 263(number)D 601(of)D 190(leptons)D
570(by)D 221(two.)D -3430 Y 639(An)D 289(important)D 786(thing)D 445(to)D
209(note)D 384(is)D 188(that)D 344(e)D 78(ven)D 331(though)D 577(we)D
281(could)D 211 Y -3912(ha)D 172(ve)D 229(modi\256ed)D 712(the)D 281(dispersion)D
814(relations)D 693(for)D 270(the)D 282(Higgs)D 495(\256eld,)D 211 Y -3948(its)D
r
/f1 f
sv 220(CPT)D r
/f0 f
sv 365(-violating)D 766(parameter)D 786(would)D 507(not)D 282(enter)D 416(the)D
272(equations)D 211 Y -3614(for)D 268(the)D 280(lepton-number)D 1143(density)D
587(at)D 188(tree)D 332(le)D 131(v)D 90(el.)D 211 Y -2835(In)D 210(order)D
447(to)D 200(generalize)D 819(Eqs.)D 379(\()D r
0.6666 1 1 SH

[/Dest /temp:intralink-d13 /Rect [7857 7451 8041 7266] /Border [0 0 0] /LNK pdfmark
sv 62(13)D r
0 0 0 SH
sv 184(\))D 118(onto)D 385(the)D 283(full)D 314(set)D 262(of)D 211(SM)D
210 Y -4058(\256elds,)D 504(we)D 273(introduce)D 758(the)D 285(ef)D 140(fecti)D
327(v)D 90(e)D 141(parameters)D 871(of)D r
/f1 f
sv 212(CPT)D r
/f0 f
sv 424(vio-)D 211 Y -4025(lation)D 476(in)D 197(the)D 280(lepton)D 517(and)D
320(baryon)D 566(sectors:)D r
0 0 1 SH
/f3 f
sv 464 Y -1368 ( )D r
[/Dest /temp:intralink-d9 /View [/XYZ 316 349 0] /DEST pdfmark
0 0 0 SH
/f1 f
sv 3(\021)D r
/f2 f
sv 37 Y 127(l)D r
/f5 f
sv -37 Y 102(\210)D r
NP 6981 8240 M 1063 0 R 
0 8 R -1063 0 R SFR 
/f1 f
sv -125 Y 205(g)D r
/f2 f
sv 37 Y 101(L)D r
/f1 f
sv -37 Y 92(\021)D r
/f2 f
sv 37 Y 127(L)D r
/f5 f
sv -37 Y 133(\207)D r
/f1 f
sv 195(g)D r
/f2 f
sv 37 Y 102(E)D r
/f1 f
sv -37 Y 93(\021)D r
/f2 f
sv 37 Y 127(E)D r
/f1 f
sv 215 Y -751(g)D r
/f2 f
sv 37 Y 102(L)D r
/f5 f
sv -37 Y 133(\207)D r
/f1 f
sv 195(g)D r
/f2 f
sv 37 Y 101(E)D r
/f6 f
sv -164 Y 344(;)D r
/f1 f
sv 514 Y -1531(\021)D r
/f2 f
sv 37 Y 127(b)D r
/f5 f
sv -37 Y 131(\210)D r
NP 7007 8754 M 1806 0 R 
0 7 R -1806 0 R SFR 
/f1 f
sv -132 Y 205(g)D r
/f2 f
sv 37 Y 102(Q)D r
/f1 f
sv -37 Y 108(\021)D r
/f2 f
sv 37 Y 127(Q)D r
/f5 f
sv -37 Y 149(\207)D r
/f1 f
sv 195(g)D r
/f2 f
sv 37 Y 101(U)D r
/f1 f
sv -37 Y 109(\021)D r
/f2 f
sv 37 Y 126(U)D r
/f5 f
sv -37 Y 150(\207)D r
/f1 f
sv 194(g)D r
/f2 f
sv 37 Y 102(D)D r
/f1 f
sv -37 Y 108(\021)D r
/f2 f
sv 37 Y 127(D)D r
/f1 f
sv 221 Y -1345(g)D r
/f2 f
sv 37 Y 101(Q)D r
/f5 f
sv -37 Y 150(\207)D r
/f1 f
sv 194(g)D r
/f2 f
sv 37 Y 102(U)D r
/f5 f
sv -37 Y 149(\207)D r
/f1 f
sv 195(g)D r
/f2 f
sv 37 Y 101(D)D r
/f1 f
sv -163 Y 492(;)D r
/f0 f
sv -237 Y 820(\(9\))D 754 Y -4108(where)D r
/f1 f
sv 510(g)D r
/f2 f
sv 37 Y 102(i)D r
/f0 f
sv -37 Y 110(is)D 182(the)D 286(corresponding)D 1115(number)D 624(of)D 213(deg)D
265(rees)D 357(of)D 209(free-)D 211 Y -3973(dom)D 377(in)D 194(each)D 389(sector)D
432(.)D 95(These)D 491(parameters)D 862(enter)D 419(\()D r
0.6666 1 1 SH

[/Dest /temp:intralink-d7 /Rect [8877 9578 8969 9393] /Border [0 0 0] /LNK pdfmark
sv 62(7)D r
0 0 0 SH
sv 92(\))D 111(with)D r
/f1 f
sv 377(i)D r
/f5 f
sv 111(\210)D r
/f1 f
sv 205(l)D r
/f0 f
sv 60(,)D r
/f1 f
sv 211 Y -4277(b)D r
/f0 f
sv 101(,)D 100(and)D r
/f1 f
sv 321(g)D r
/f2 f
sv 37 Y 101(l)D r
/f5 f
sv -37 Y 102(\210)D r
/f1 f
sv 205(g)D r
/f2 f
sv 37 Y 102(L)D r
/f5 f
sv -37 Y 133(\207)D r
/f1 f
sv 194(g)D r
/f2 f
sv 37 Y 102(E)D r
/f0 f
sv -37 Y 94(,)D r
/f1 f
sv 99(g)D r
/f2 f
sv 37 Y 102(b)D r
/f5 f
sv -37 Y 131(\210)D r
/f1 f
sv 205(g)D r
/f2 f
sv 37 Y 102(Q)D r
/f5 f
sv -37 Y 149(\207)D r
/f1 f
sv 195(g)D r
/f2 f
sv 37 Y 101(U)D r
/f5 f
sv -37 Y 150(\207)D r
/f1 f
sv 194(g)D r
/f2 f
sv 37 Y 102(D)D r
/f0 f
sv -37 Y 108(.)D 224 Y -3009(As)D 247(already)D 588(mentioned,)D 871(one)D 310(also)D
340(has)D 289(to)D 187(include)D 588(sphaleron)D 211 Y -3604(processes,)D
802(which)D 501(af)D 140(fects)D 399(one)D 317(linear)D 472(combination)D
976(of)D 203(baryon)D 211 Y -3810(and)D 303(lepton-number)D 1125(densities.)D
729(The)D 325(main)D 407(ef)D 140(fect)D 315(of)D 189(sphalerons)D 211 Y -3533(is)D
162(to)D 180(washout)D r
/f1 f
sv 654(B)D r
/f5 f
sv 162(\207)D r
/f1 f
sv 194(L)D r
/f0 f
sv 119(,)D 86(while)D 450(keeping)D r
/f1 f
sv 625(B)D r
/f5 f
sv 162(\377)D r
/f1 f
sv 195(L)D r
/f0 f
sv 158(intact.)D 499(Since)D 450(the)D 211 Y -4096(processes)D 792(we)D 302(consider)D
712(occur)D 497(far)D 292(abo)D 265(v)D 90(e)D 169(the)D 313(electro)D
501(weak)D 210 Y -3933(transition,)D 834(the)D 317(sphaleron)D 808(rate)D
368(has)D 335(linear)D 513(dependence)D 963(on)D 211 Y -4138(temperature)D
943([)D r
0.6666 1 1 SH

[/Dest /temp:intralink-c3 /Rect [6561 11278 6653 11094] /Border [0 0 0] /LNK pdfmark
sv 62(3)D r
0 0 0 SH
sv 92(,)D r
0.6666 1 1 SH

[/Dest /temp:intralink-c16 /Rect [6699 11278 6883 11094] /Border [0 0 0] /LNK pdfmark
sv 46(16)D r
0 0 0 SH
sv 184(].)D 167(In)D 212(the)D 285(presence)D 706(of)D r
/f1 f
sv 212(CPT)D r
/f0 f
sv 424(violation,)D 763(the)D 211 Y -4096(sphaleron)D 785(contrib)D 522(ution)D
447(to)D 211(the)D 294(Boltzmann)D 879(equation)D 704(for)D r
/f1 f
sv 282(n)D r
/f2 f
sv 37 Y 102(l)D r
/f0 f
sv -37 Y 50(,)D r
/f1 f
sv 211 Y -4276(n)D r
/f2 f
sv 37 Y 101(b)D r
/f0 f
sv -37 Y 155([)D r
0.6666 1 1 SH

[/Dest /temp:intralink-c3 /Rect [5874 11700 5966 11516] /Border [0 0 0] /LNK pdfmark
sv 62(3)D r
0 0 0 SH
sv 92(,)D r
0.6666 1 1 SH

[/Dest /temp:intralink-c17 /Rect [6012 11700 6196 11516] /Border [0 0 0] /LNK pdfmark
sv 46(17)D r
0 0 0 SH
sv 184(,)D r
0.6666 1 1 SH

[/Dest /temp:intralink-c18 /Rect [6242 11700 6427 11516] /Border [0 0 0] /LNK pdfmark
sv 46(18)D r
0 0 0 SH
sv 185(])D 136(should)D 566(be)D 250(modi\256ed)D 731(for)D 290(the)D 302(presence)D
722(of)D 228(the)D 211 Y -4096(equilibrium)D 917(baryon)D 566(and)D 321(lepton)D
516(numbers)D 689(\()D r
0.6666 1 1 SH

[/Dest /temp:intralink-d7 /Rect [8627 11911 8719 11727] /Border [0 0 0] /LNK pdfmark
sv 62(7)D r
0 0 0 SH
sv 92(\):)D r
0 0 1 SH
/f3 f
sv 375 Y -2772 ( )D r
[/Dest /temp:intralink-d10 /View [/XYZ 316 125 0] /DEST pdfmark
0 0 0 SH
/f1 f
sv 3(@)D r
/f2 f
sv 37 Y 102(t)D r
/f5 f
sv -37 Y 50(\205)D r
/f1 f
sv 61(n)D r
/f2 f
sv 37 Y 102(b)D r
/f5 f
sv -37 Y 121(\207)D r
/f1 f
sv 195(n)D r
/f2 f
sv 37 Y 102(l)D r
/f5 f
sv -37 Y 50(\206)D 113(\210)D 205(\377)D r
/f6 f
sv 153(\377)D r
/f4 f
sv 37 Y 113(sph)D r
/f9 f
sv -37 Y 188(\205)D r
/f1 f
sv 61(n)D r
/f2 f
sv 37 Y 102(b)D r
/f5 f
sv -37 Y 121(\377)D r
/f1 f
sv 195(n)D r
/f4 f
sv -91 Y 102(eq)D r
/f2 f
sv 144 Y 0(b)D r
/f5 f
sv -53 Y 172(\207)D r
/f1 f
sv 194(n)D r
/f2 f
sv 37 Y 102(l)D r
/f5 f
sv -37 Y 91(\377)D r
/f1 f
sv 195(n)D r
/f4 f
sv -91 Y 102(eq)D r
/f2 f
sv 144 Y 0(l)D r
/f9 f
sv -53 Y 131(\206)D r
/f1 f
sv 61(;)D r
/f0 f
sv 437(\(10\))D 394 Y -4015(where)D r
0 0 1 SH
/f11 /Times-Roman 0.210875 0 0 -0.210875 0 0 MF
sv -1374 Y -4535 ( )D r
[/Dest /temp:intralink-s2 /View [/XYZ 52 208 0] /DEST pdfmark
1024 10307 5134 12106 C
0 0 0 SH
-1 SOB
/f11 f
75 45 SS1
0 -102.0708 17.6388 -17.6388 -2055 -899.5 [1 0 0 1 0 0] 2055 899.5 0 1024 10307 BEGINEPSFILE
%%BeginDocument: S:\aps\prd\pool\DX10072\1.eps
%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: 1.eps
%%Creator: Adobe Illustrator(R) 12
%%AI8_CreatorVersion: 12.0.1%AI9_PrintingDataBegin%%For: John Conery
%%CreationDate: 12/7/2006
%%BoundingBox: 0 0 234 103
%%HiResBoundingBox: 0 0 233.0801 102.0708
%%CropBox: 0 0 233.0801 102.0708
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.19 0
%%+ procset Adobe_CoolType_Core 2.23 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%ADO_BuildNumber: Adobe Illustrator(R) 12.0.1 x205 R agm 4.3861 ct 5.530
%ADO_ContainsXMP: MainFirst
%AI7_Thumbnail: 128 56 8
%%BeginData: 3693 Hex Bytes
%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD4BFFA8FD2FFFA8FD05FF7D7DFD2EFFA852FF527DFD14FF7D52FD
%2EFFA85284FD04FF7DA8FD2EFFA85284527DFD14FFA87DFD2FFF52FD05FF
%7D7DFFA8FD2DFF52FF527DFD14FF7D7DFFFFA8FD2CFF52A8FFA8FFFF527D
%7DA8FD2CFFA852FF7D7DFD14FF8452A87DFD2DFF527E7DA9FFFFFFA8FD2F
%FFA8FFA8FD15FFA8FFA8FD2DFFAFFFA8A8FD88FFA8A8FD26FFA8FD21FFA8
%FD36FF7DA8FD24FF847DFD22FF7DFD26FF7DFD0FFF52A8FD22FF7D7DFD23
%FF7D52FD24FF527DFD10FF53A8FD20FFA87DFD25FFA853FD22FF7D7EFD12
%FF52A8FD47FF7D52FD20FF527DFD14FF7DA8FD47FFA852FD1EFF7D7DFD16
%FF53A8FD1AFF7DA8FD2BFF7D52FD1CFF7D7DFD18FF7DA8FD18FF7D7DFD2D
%FF7E52FD1AFF7D7DFD1AFF52A8FD16FF7D7DFD2FFF7D52FD17FFA8537DFD
%1CFF7DA8FD15FFA8FD31FFA853FD16FF7D84FD1EFF52A8FD47FF7D52FD14
%FF527DFD20FF53A8FD47FFA853FD12FF7D7EFD22FF52A8FD0EFF7D7DFD37
%FF7D52FD10FF527DFD24FF7DA8FD0CFF7D7DFD39FFA852FD0EFF7D7DFD26
%FF53A8FD0AFFA87DFD3BFF7D52FD0CFF7D7DFD28FF7DA8FD47FF7E52FD0A
%FF7D7DFD2AFF52A8FD47FF7D52FD07FFA8537DFD2CFF7DA8FFA87DFFA8FD
%42FFA87DFFA8A8A8FFFF7D84FD2EFF5227F827F87DFD43FF7E2727F8277D
%7D7DFD2FFF52F8FD0427FD43FF7D272727F8277DFD30FFF827F827F827A8
%FD42FF52F827F827F87DFD30FF5220FD0427FD43FF522727272027A8FD30
%FF5227F827F852FD43FFA82727F82727FD30FF7D7D7E5252A87DFD44FF7D
%52527D847DFD2EFF7D7DFD49FFA884FD04FFA8A8FD2CFF847DFD7DFF7D7D
%FD0AFF7DA8FD48FFA8FD28FF7E7DFD0CFF53A8FD3BFF7DA8FD0AFFA853FD
%26FF7D7DFD0EFF52A8FD39FF527DFD0CFF7D52FD24FF7D7DFD10FFA8FD38
%FF7D7DFD0EFF7E7DFD22FF7D7DFD4AFFA8FD32FF7D7DFD7DFF7D7DFD16FF
%7DA8FD30FFA8A8FD16FF7DFD1CFF847DFD18FF7DA8FD2FFF7DA8FD16FFA8
%59FD1AFF7D7DFD1AFF52A8FD2CFFA8527DFD18FF7D52FD18FF7E7DFD49FF
%A87DFD1AFFA8A8FD16FF7D7DFD4AFFA8FD32FF7D7DFD20FFA8A8FD5BFF7D
%7DFD22FF52A8FD24FFA87DFD21FFA852FD10FF7D7DFD24FF7DA8FD23FF7D
%7DFD22FF7D52FD0EFFA87DFD26FF7DFD21FFA8537DFD24FF7D52FD58FFA8
%FDAFFFA8FD33FFA9FD17FFA8FD2FFFA8FFFFFF5252FD2EFFA827FF527DFD
%14FF537DA852A8FD2BFFA852A87D52FFFF7DA8FD2FFF52A8537DFD14FFA8
%52A852FD2DFF52A8527DFFFF7D7DFFA9FD2DFF52FF527EFD14FF7D7DA852
%FD2DFF52A87D53FFFF527D7DA8FD2CFFA852A87D7DFD14FF7D52FF52FD2D
%FF52FF7D7DFFA8FFA8A8A8FD2DFFA8FFA8FD15FFA8FFA8FD2FFFA8FFA8FF
%%EndData
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright (C) 2000-2003 Adobe Systems, Inc.  All Rights Reserved.
systemdict /setpacking known
{
	currentpacking
	true setpacking
} if
userdict /Adobe_AGM_Utils 70 dict dup begin put
/bdf
{
	bind def
} bind def
/nd{
	null def
}bdf
/xdf
{
	exch def
}bdf
/ldf 
{
	load def
}bdf
/ddf
{
	put
}bdf	
/xddf
{
	3 -1 roll put
}bdf	
/xpt
{
	exch put
}bdf
/ndf
{ 
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/ps_level
	/languagelevel where{
		pop systemdict /languagelevel get exec
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr} stopped {
		-1
	}if
def
/set_gvm
{
	currentglobal exch setglobal
}bdf
/reset_gvm
{
	setglobal
}bdf
/makereadonlyarray
{
	/packedarray where{
		pop packedarray
	}{
		array astore readonly
	}ifelse
}bdf
/map_reserved_ink_name
{
	dup type /stringtype eq{
		dup /Red eq{
			pop (_Red_)
		}{
			dup /Green eq{
				pop (_Green_)
			}{
				dup /Blue eq{
					pop (_Blue_)
				}{
					dup () cvn eq{
						pop (Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def} repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash /AGMUTIL_GSTATE_do xdf /AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit /AGMUTIL_GSTATE_gy_xfer xdf cvlit /AGMUTIL_GSTATE_b_xfer xdf
		cvlit /AGMUTIL_GSTATE_g_xfer xdf cvlit /AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx {AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def} repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht /HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone /HalftoneType get AGMUTIL_GSTATE_ht /HalftoneType get ne
			{
			  mark AGMUTIL_GSTATE_ht {sethalftone} stopped cleartomark
			} if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		} ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/thold_halftone
{ 
	level3
		{sethalftone currenthalftone}
		{
			dup /HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}
			{
				begin
				Width Height mul {
					Thresholds read {pop} if
				} repeat
				end
				currenthalftone
			} ifelse
		}ifelse
} def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%) anchorsearch {pop} if
} bdf
/filter_cmyk
{	
	dup type /filetype ne{
		exch () /SubFileDecode filter
	}
	{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length /AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	] cvx
} bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
} bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type /filetype ne{
		0 () /SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict /AGMCORE_gget cvx /begin cvx
			currentdict /srcStr get /readstring cvx /pop cvx
			/dup cvx /length cvx 0 /gt cvx [
				Adobe_AGM_Utils /AGMUTIL_ndx 0 /ddf cvx
				names_index Names length currentdict /srcStr get length 1 sub {
					1 /index cvx /exch cvx /get cvx
					currentdict /dstStr get /AGMUTIL_ndx /load cvx 3 -1 /roll cvx /put cvx
					Adobe_AGM_Utils /AGMUTIL_ndx /AGMUTIL_ndx /load cvx 1 /add cvx /ddf cvx
				} for
				currentdict /dstStr get 0 /AGMUTIL_ndx /load cvx /getinterval cvx
			] cvx /if cvx
			/end cvx
		] cvx
		bind
		/exec cvx
	] cvx
	end
} bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict /DataSource get def
	/origMultipleDataSources imageDict /MultipleDataSources get def
	/origDecode imageDict /Decode get def
	/dstDataStr imageDict /Width get colorSpaceElemCnt mul string def
	imageDict /MultipleDataSources known {MultipleDataSources}{false} ifelse
	{
		/imbufCnt imageDict /DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub {
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict /DataSource get imbufIdx [ AGMUTIL_imagefile imbufs imbufIdx get /readstring cvx /pop cvx ] cvx put
		} for
		DeviceN_PS2 {
			imageDict begin
		 	/DataSource [ DataSource /devn_sep_datasource cvx ] cvx def
			/MultipleDataSources false def
			/Decode [0 1] def
			end
		} if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or {
			/srcDataStrs [ imageDict begin
				currentdict /MultipleDataSources known {MultipleDataSources {DataSource length}{1}ifelse}{1} ifelse
				{
					Width Decode length 2 div mul cvi string
				} repeat
				end ] def		
			imageDict begin
		 	/DataSource [AGMUTIL_imagefile Decode BitsPerComponent false 1 /filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource /exec cvx] cvx def
			/Decode [0 1] def
			end
		}{
			imageDict /DataSource [1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx /pop cvx names_index /get cvx /put cvx] cvx put
			imageDict /Decode [0 1] put
		} ifelse
	} ifelse
	imageDict exch
	load exec
	imageDict /DataSource origDataSource put
	imageDict /MultipleDataSources origMultipleDataSources put
	imageDict /Decode origDecode put	
	end
} bdf
/write_image_file
{
	begin
	{ (AGMUTIL_imagefile) (w+) file } stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources {DataSource 0 get}{DataSource}ifelse type /filetype eq {
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{ 
			pop
			MultipleDataSources {
			 	0 1 DataSource length 1 sub {
					DataSource type dup
					/arraytype eq {
						pop DataSource exch get exec
					}{
						/filetype eq {
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						} ifelse
					} ifelse
					AGMUTIL_imagefile exch writestring
				} for
			}{
				DataSource type dup
				/arraytype eq {
					pop DataSource exec
				}{
					/filetype eq {
						DataSource imbuf readstring pop
					}{
						DataSource
					} ifelse
				} ifelse
				AGMUTIL_imagefile exch writestring
			} ifelse
		}for
		end
		true
	}ifelse
	end
} bdf
/close_image_file
{
	AGMUTIL_imagefile closefile (AGMUTIL_imagefile) deletefile
}def
statusdict /product known userdict /AGMP_current_show known not and{
	/pstr statusdict /product get def
	pstr (HP LaserJet 2200) eq 	
	pstr (HP LaserJet 4000 Series) eq or
	pstr (HP LaserJet 4050 Series ) eq or
	pstr (HP LaserJet 8000 Series) eq or
	pstr (HP LaserJet 8100 Series) eq or
	pstr (HP LaserJet 8150 Series) eq or
	pstr (HP LaserJet 5000 Series) eq or
	pstr (HP LaserJet 5100 Series) eq or
	pstr (HP Color LaserJet 4500) eq or
	pstr (HP Color LaserJet 4600) eq or
	pstr (HP LaserJet 5Si) eq or
	pstr (HP LaserJet 1200 Series) eq or
	pstr (HP LaserJet 1300 Series) eq or
	pstr (HP LaserJet 4100 Series) eq or 
	{
 		userdict /AGMP_current_show /show load put
		userdict /show {
		  currentcolorspace 0 get
		  /Pattern eq
		  {false charpath f}
		  {AGMP_current_show} ifelse
		} put
	}if
	currentdict /pstr undef
} if
/consumeimagedata
{
	begin
	currentdict /MultipleDataSources known not
		{/MultipleDataSources false def} if
	MultipleDataSources
		{
		DataSource 0 get type
		dup /filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup /arraytype eq exch /packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch get exec length exch 0 ne {pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup /filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height { pop DataSource flushbuffer readstring pop pop} for
			end
			}if
		dup /arraytype eq exch /packedarraytype eq or /DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	  2{/exec load}repeat
	  3 1 roll
	  [ 5 1 roll ] bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs /TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{ 
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs /TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type /dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		} if
	dup type /arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		} if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch {cvx} if
}bdf
/clonedict
{
	dup length dict
	begin
		{
		dup type /dicttype eq
			{
				clonedict
			} if
		dup type /arraytype eq
			{
				clonearray
			} if
		def
		}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get /DeviceN eq level3 not and
} bdf
/Indexed_DeviceN
{ 
	/indexed_colorspace_dict AGMCORE_gget dup null ne {
		dup /CSDBase known {
			/CSDBase get /CSD get_res /Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	} ifelse
} bdf
/DeviceN_NoneName
{	
	/Names where {
		pop
		false Names
		{
			(None) eq or
		} forall
	}{
		false
	}ifelse
} bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup /arraytype eq exch /packedarraytype eq or
		{
			dup 0 get /DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}
			{
				true
			}ifelse
		}
		{
			true
		} ifelse
	}
	{
		true
	} ifelse
} bdf
/base_colorspace_type
{
	dup type /arraytype eq {0 get} if
} bdf
/currentdistillerparams where { pop currentdistillerparams /CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5 {cleartomark} bind def
}{
	/pdfmark_5 {pdfmark} bind def
}ifelse
/ReadBypdfmark_5
{
	2 dict begin
	/makerString exch def string /tmpString exch def
	{
		currentfile tmpString readline pop
		makerString anchorsearch
		{
		pop pop cleartomark exit
		}{
			3 copy /PUT pdfmark_5 pop 2 copy (\n) /PUT pdfmark_5
		} ifelse
	}loop
	end
} bdf
/doc_setup{
	Adobe_AGM_Utils begin
}bdf
/doc_trailer{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict /setpacking known
{
	setpacking
} if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright (C) 1997-2005 Adobe Systems, Inc.  All Rights Reserved.
%% Note: This procset assumes Adobe_AGM_Utils is opened on the stack below it, for
%% definitions of some fundamental procedures.
systemdict /setpacking known
{
	currentpacking
	true setpacking
} if
userdict /Adobe_AGM_Core 201 dict dup begin put
/Adobe_AGM_Core_Id /Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen [currentscreen] cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_in_pattern false def
/AGMCORE_currentpagedevice nd
/knockout_unitsq nd
currentglobal true setglobal
[/CSA /Gradient /Procedure]
{
	/Generic /Category findresource dup length dict copy /Category defineresource pop
} forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer {readline} stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type /dicttype eq{
		dup /HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup /HalftoneType get 2 eq{
				/GraySpotFunction get
			}{ 
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
} def
/clp_npth
{
	clip newpath
} def
/eoclp_npth
{
	eoclip newpath
} def
/npth_clp
{
	newpath clip
} def
/graphic_setup
{
	/AGMCORE_graphicsave save def
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[] 0 setdash
	10 setmiterlimit
	newpath
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias get exec
	/Adobe_AGM_Image where {
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			get exec
		}{
			pop pop
		}ifelse
	} if
	100 dict begin
	/dictstackcount countdictstack def
	/showpage {} def
	mark
} def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub {end}for
	end
	AGMCORE_graphicsave restore
} def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox newpath pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				} if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show ( ) show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}
			{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			} ifelse
		} forall
} bdf
/doc_setup{
	Adobe_AGM_Core begin
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict /AGM_handleerror known not{
		errordict /AGM_handleerror errordict /handleerror get put
		errordict /handleerror {
			Adobe_AGM_Core begin
			$error /newerror get AGMCORE_cur_err null ne and{
				$error /newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error /newerror true put
			end
			errordict /AGM_handleerror get exec
			} bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err /AGMCORE_bad_environ def} if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product (Adobe PostScript Parser) ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 10 def
		/AGMCORE_&gsave /gsave ldf
		/AGMCORE_&grestore /grestore ldf
		/AGMCORE_&grestoreall /grestoreall ldf
		/AGMCORE_&save /save ldf
		/AGMCORE_&setoverprint /setoverprint ldf
		/AGMCORE_gdictcopy {
			begin
			{ def } forall
			end
		}def
		/AGMCORE_gput {
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget {
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave {
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge {limitcheck} if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore {
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt {1 add} if
			dup AGMCORE_gstack exch get dup /AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall {
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save {
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge {limitcheck} if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup /AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub {
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		} for
	}if
	level3 /AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern /makepattern load def
	}if
	/currentcmykcolor [0 0 0 0] AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace [/DeviceGray] AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent () AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	<<
	/MaxPatternItem currentsystemparams /MaxPatternCache get
	>>
	setuserparams
	end
}def
/page_setup
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor /setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore /currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3 {
			3 index add neg dup 0 lt {
				pop 0
			} if
			3 1 roll
		} repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{
		pop
	}ndf
	/currentoverprint
	{
		false
	}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{ 
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.) ==
			Adobe_AGM_Core /AGMCORE_have_reported_unsupported_color_space true ddf
		} if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where {pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias {
				/Name get exch pop
			} if
			dup dup (None) eq exch (All) eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{ 
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_in_pattern known {//Adobe_AGM_Core/AGMCORE_in_pattern get}{false} ifelse
						not AGMCORE_currentpagedevice/OverrideSeparations known and
						{
							AGMCORE_currentpagedevice/OverrideSeparations get
							{
								/HqnSpots /ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name /HqnSpots /ProcSet findresource /TestSpot get exec not
						}{
							gsave
							[/Separation AGMCORE_name /DeviceGray {}]AGMCORE_&setcolorspace
							false
							AGMCORE_currentpagedevice/SeparationColorNames 2 copy known
							{
								get
								{ AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where {pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{ 
				dup true exch
					{
					dup (Cyan) eq exch
					dup (Magenta) eq 3 -1 roll or exch
					dup (Yellow) eq 3 -1 roll or exch
					dup (Black) eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup (Cyan) eq exch
						dup (Magenta) eq 3 -1 roll or exch
						dup (Yellow) eq 3 -1 roll or exch
						(Black) eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					dup (Cyan) eq exch
					dup (Magenta) eq 3 -1 roll or exch
					dup (Yellow) eq 3 -1 roll or exch
					dup (Black) eq 3 -1 roll or
					{pop}
					{convert_spot_to_process or}ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space  
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup (Cyan) eq exch dup (Magenta) eq exch dup (Yellow) eq exch (Black) eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{ 
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			  	AGMCORE_magenta_plate{
			  		4 3 roll pop pop pop
			  	}{
			  		AGMCORE_yellow_plate{
			  			4 2 roll pop pop pop
			  		}{
			  			4 1 roll pop pop pop
			  		}ifelse
			  	}ifelse
			}ifelse
			settransfer  
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			  	AGMCORE_magenta_plate{
			  		{4 3 roll pop pop pop}
			  	}{
			  		AGMCORE_yellow_plate{
			  			{4 2 roll pop pop pop}
			  		}{
			  			{4 1 roll pop pop pop}
			  		}ifelse
			  	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup /Cyan eq 1 index (Cyan) eq or
					{pop (_cyan_)}if
				dup /Magenta eq 1 index (Magenta) eq or
					{pop (_magenta_)}if
				dup /Yellow eq 1 index (Yellow) eq or
					{pop (_yellow_)}if
				dup /Black eq 1 index (Black) eq or
					{pop (_black_)}if
				}def
			dup type /arraytype eq
				{[exch {filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3 {
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup (Cyan) eq exch /Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup (Magenta) eq exch /Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup (Yellow) eq exch /Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup (Black) eq exch /Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type /stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string /string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in /readstring cvx
						[component /get cvx 255 /exch cvx /sub cvx string_out /exch cvx 0 /exch cvx /put cvx string_out]cvx
						[/pop cvx ()]cvx /ifelse cvx
					]cvx /ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type /dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict /Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode [1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0 [C0 channel get 1 exch sub] def
							/C1 [C1 channel get 1 exch sub] def
							}{
							/C0 [1] def
							/C1 [1] def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions [Functions {channel paint? AGMCORE_separateShadingFunction} forall] def			
						}if
					currentdict /Range known
						{/Range [0 1] def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict /Function known
					{
					currentdict /Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction /Function xdf
					/ColorSpace [/DeviceGray] def
					}{
					ColorSpace dup type /arraytype eq {0 get}if /DeviceCMYK eq
						{
						/ColorSpace [/DeviceN [/_cyan_ /_magenta_ /_yellow_ /_black_] /DeviceCMYK {}] def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get /Separation eq
						{
							{
								[1 /exch cvx /sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub /index cvx 1 /exch cvx /sub cvx ColorSpace 1 get length 1 add 1 /roll cvx ColorSpace 1 get length{/pop cvx} repeat]cvx
							}{
								pop [ColorSpace 1 get length {/pop cvx} repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2 /DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup /ColorSpace get
				dup type /arraytype ne
					{[exch]}if
				dup 0 get /DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get /Separation eq
					{
					exch begin
					ColorSpace 1 get dup /None ne exch /All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type /arraytype eq {0 get}if /DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get /exec cvx
										4 AGMCORE_plate_ndx sub -1 /roll cvx
										4 1 /roll cvx
										3 [/pop cvx]cvx /repeat cvx
										1 /exch cvx /sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get /DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type /arraytype eq {0 get}if /DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get /exec cvx
									4 AGMCORE_plate_ndx sub -1 /roll cvx
									4 1 /roll cvx
									3 [/pop cvx]cvx /repeat cvx
									1 /exch cvx /sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace [/DeviceGray] def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup /DeviceCMYK eq exch dup /Separation eq exch /DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type /arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get /CIEBasedA eq
								{
								/ColorSpace [/Separation /_ciebaseda_ /DeviceGray {}] def
								}if
							ColorSpace 0 get dup /CIEBasedABC eq exch dup /CIEBasedDEF eq exch /DeviceRGB eq or or
								{
								/ColorSpace [/DeviceN [/_red_ /_green_ /_blue_] /DeviceRGB {}] def
								}if
							ColorSpace 0 get /CIEBasedDEFG eq
								{
								/ColorSpace [/DeviceN [/_cyan_ /_magenta_ /_yellow_ /_black_] /DeviceCMYK {}] def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup /AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace [/Separation (None) /DeviceGray {}] def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup /AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup /PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading /AGMCORE_ignoreshade known
					currentdict end exch
					{pop <</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{ 
				4 {4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{ 
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf /AGMCORE_y xdf /AGMCORE_m xdf /AGMCORE_c xdf
				end
				[/Separation 4 -1 roll /DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation (All) /DeviceGray {}] setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4 {4 index mul 4 1 roll} repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval {255 div} forall
	} bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	} bdf
	/n_color_components
	{
		base_colorspace_type
		dup /DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo /moveto ldf
		/li /lineto ldf
		/cv /curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2 /setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace /setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup /arraytype eq exch /packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where {
						begin
						dup 0 get dup /Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[ 
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get [ 
									exch {
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									} forall 
								] 1 xpt
							}if
						}ifelse
						end
					} if
				}if
			}def
			/setcolorspace
			{
				dup type dup /arraytype eq exch /packedarraytype eq or
				{
					dup 0 get /Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps {AGMCORE_&&&setcolorspace} if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1 [8 0 0 8 0 0] {<ffffffffffffffff>} image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		} def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		} def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup /DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup /DeviceGray ne{
				dup /DeviceCMYK ne{
					dup /DeviceRGB ne{
						dup /Separation eq{
							pop
							currentcolorspace 3 get exec
							currentcolorspace 2 get
						}{
							dup /Indexed eq{
								pop
								currentcolorspace 3 get dup type /stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err /AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		} def
	}ifelse
	/sop /setoverprint ldf
	/lw /setlinewidth ldf
	/lc /setlinecap ldf
	/lj /setlinejoin ldf
	/ml /setmiterlimit ldf
	/dsh /setdash ldf
	/sadj /setstrokeadjust ldf
	/gry /setgray ldf
	/rgb /setrgbcolor ldf
	/cmyk /setcmykcolor ldf
	/sep /setsepcolor ldf
	/devn /setdevicencolor ldf
	/idx /setindexedcolor ldf
	/colr /setcolor ldf
	/csacrd /set_csa_crd ldf
	/sepcs /setsepcolorspace ldf
	/devncs /setdevicencolorspace ldf
	/idxcs /setindexedcolorspace ldf
	/cp /closepath ldf
	/clp /clp_npth ldf
	/eclp /eoclp_npth ldf
	/f /fill ldf
	/ef /eofill ldf
	/@ /stroke ldf
	/nclp /npth_clp ldf
	/gset /graphic_setup ldf
	/gcln /graphic_cleanup ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin /clonedict load end def
	/clonearray Adobe_AGM_Utils begin /clonearray load end def
	currentdict{
		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and {
			bind
		}if
		def
	}forall
	/getrampcolor
	{ 
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type /stringtype eq {indx get} if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		} for
		ColorSpaceFamily /Separation eq 
		{sep}
		{
			ColorSpaceFamily /DeviceN eq
			{devn} {setcolor}ifelse
		}ifelse
	} bdf
	/sssetbackground {aload pop setcolor} bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where {pop /setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			newpath
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			newpath
		} if
		c1x c2x eq
		{
			c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse
		}
		{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if
			c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if
		} ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{ pathbbox } stopped
		{ 0 0 0 0 } if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}
		{
			/max { 2 copy gt { pop } {exch pop} ifelse } bdf
			/min { 2 copy lt { pop } {exch pop} ifelse } bdf
			rampdict begin
			40 dict begin
			background length 0 gt { background sssetbackground gsave clippath fill grestore } if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}
				{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}
						{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{ /theta 89.99 def}
							{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}
							{
								/L1maxX 0 def
								/L2maxX 0 def
							} ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						} ifelse
					} ifelse
				} ifelse
			} if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt { exch } if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			} if
		} if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		newpath
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}
		{
			0
			numsteps
			{
				dup
				subsampling { round cvi } if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			} repeat
			pop
		} ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}
			{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}
				{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}
					{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{ /theta 89.99 def}
						{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}
						{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					} ifelse
				} ifelse
			} ifelse
		} if
		grestore
		grestore
		end
		end
		end
		} ifelse
	} bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where {pop /setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			newpath
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			newpath
		} if
		x1 x2 eq
		{
			y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
		}
		{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
			x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{ pathbbox } stopped
		{ 0 0 0 0 } if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}
		{
			rampdict begin
			20 dict begin
			background length 0 gt { background sssetbackground gsave clippath fill grestore } if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt { exch } if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				} if
			} if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				} if
			} if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling { round cvi } if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			} repeat
			pop
			ext1 {
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				} if
			} if
			grestore
			grestore
			end
			end
			end
		} ifelse
	} bdf
}def
/page_trailer
{
	end
}def
/doc_trailer{
}def
/capture_currentpagedevice {
	//Adobe_AGM_Core/AGMCORE_currentpagedevice currentpagedevice ddf
} def
systemdict /findcolorrendering known{
	/findcolorrendering systemdict /findcolorrendering get def
}if
systemdict /setcolorrendering known{
	/setcolorrendering systemdict /setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup //Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name /MappedCSA xdf}ifelse
} def
/setsepcolor
{ 
	/sep_colorspace_dict AGMCORE_gget begin
		dup /sep_tint exch AGMCORE_gput
		TintProc
	end
} def
/setdevicencolor
{ 
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		} for
		TintProc
	end
} def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2 {AGMCORE_tmp mul NComponents 1 roll} repeat
			LMax sub AGMCORE_tmp mul LMax add  NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add  NComponents 1 roll
				} repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
} def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
} def
/sep_proc_name
{
	dup 0 get 
	dup /DeviceRGB eq exch /DeviceCMYK eq or level2 not and has_color not and{
		pop [/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
} def
/setsepcolorspace
{ 
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup /sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup () eq exch (All) eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{ 255 div } /exec cvx 3 -1 roll [ 4 1 roll load /exec cvx ] cvx 
		] setcolorspace_opt
		/TintProc {
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get /DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc [
				Components aload pop Name findcmykcustomcolor 
				/exch cvx /setcustomcolor cvx
			] cvx bdf
		}{
 			AGMCORE_host_sep Name (All) eq and{
 				/TintProc { 
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get /DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name () eq and{
					/TintProc [
						MappedCSA sep_proc_name exch 0 get /DeviceCMYK eq{
							cvx /setcmykcolor cvx
						}{
							cvx /setgray cvx
						}ifelse
					] cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup /DeviceCMYK eq exch /DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc [
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get /DeviceGray eq{
								1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx
							}if
							/Name cvx /findcmykcustomcolor cvx /exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load /exec cvx
								/not cvx /and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							] cvx /if cvx
							/setcustomcolor cvx
						] cvx bdf
 					}{ 
						/TintProc {setcolor} bdf
						[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
} def
/additive_blend
{
  	3 dict begin
  	/numarrays xdf
  	/numcolors xdf
  	0 1 numcolors 1 sub
  		{
  		/c1 xdf
  		1
  		0 1 numarrays 1 sub
  			{
			1 exch add /index cvx
  			c1 /get cvx /mul cvx
  			}for
 		numarrays 1 add 1 /roll cvx 
  		}for
 	numarrays [/pop cvx] cvx /repeat cvx
  	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add /index cvx  
			c1 /get cvx /sub cvx /mul cvx
			}for
		/sub cvx
		numarrays 1 add 1 /roll cvx
		}for
	numarrays [/pop cvx] cvx /repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc [
		/TintTransform cvx /setcolor cvx
	] cvx bdf
	MappedCSA setcolorspace_opt
} bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length {pop} repeat
	end
} bdf
/setdevicencolorspace
{ 
	dup /AliasedColorants known {false}{true}ifelse 
	current_spot_alias and {
		7 dict begin
		/names_index 0 def
		dup /names_len exch /Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup /Names get
		{
			dup map_alias {
				exch pop
				dup /ColorLookup known {
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup /Components known {
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index [null null null null] put
						end
					} ifelse
				} ifelse
				new_names names_index 3 -1 roll /Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup /LookupTables known {
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index [null null null null] put
					end
				} ifelse
			} ifelse
			/names_index names_index 1 add def 
		} forall
		alias_cnt 0 gt {
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge {0 get length}{length}ifelse def
			0 1 names_len 1 sub {
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge {0 get length}{length}ifelse lut_entry_len ne {
					/AliasedColorants false def
					exit
				}
				{
					new_LookupTables names_index get 0 get null eq {
						dup /Names get names_index get /name xdf
						name (Cyan) eq name (Magenta) eq name (Yellow) eq name (Black) eq
						or or or not {
							/AliasedColorants false def
							exit
						} if
					} if
				} ifelse
			} for
			lut_entry_len 1 eq {
				/AliasedColorants false def
			} if
			AliasedColorants {
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq {/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod /Additive eq {/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict /TTTablesIdx known not {
					/TTTablesIdx -1 def
				} if
				end
			} if
		}if
		end
	} if
	dup /devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict /AliasedColorants known {
		AliasedColorants
	}{
		false
	} ifelse
	dup not {
		CSA map_csa
	} if
	/TintTransform load type /nulltype eq or {
		/TintTransform [
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup (Cyan) eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup (Magenta) eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0 /exch cvx 0 0
							}
							{
							(Yellow) eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1 /roll cvx 0
								}
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1 /roll cvx
								} ifelse
							} ifelse
						} ifelse
					5 -1 /roll cvx /astore cvx
					}
					{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx /mul cvx /round cvx /cvi cvx /get cvx
					} ifelse
					Names length TTTablesIdx add 1 add 1 /roll cvx
				} for
			Names length [/pop cvx] cvx /repeat cvx
			NComponents Names length
  			TintMethod /Subtractive eq
  				{
  				subtractive_blend
  				}
  				{
  				additive_blend
  				} ifelse
		] cvx bdf
	} if
	AGMCORE_host_sep {
		Names convert_to_process {
			exec_tint_transform
		}
		{	
			currentdict /AliasedColorants known {
				AliasedColorants not
			}{
				false
			} ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants {
				/currentspotalias current_spot_alias def
				false set_spot_alias
			} if
			Names {
				AGMCORE_is_cmyk_sep {
					dup (Cyan) eq AGMCORE_cyan_plate and exch
					dup (Magenta) eq AGMCORE_magenta_plate and exch
					dup (Yellow) eq AGMCORE_yellow_plate and exch
					(Black) eq AGMCORE_black_plate and or or or {
						/devicen_colorspace_dict AGMCORE_gget /TintProc [
							Names names_index /devn_makecustomcolor cvx
						] cvx ddf
						/painted? true def
					} if
					painted? {exit} if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq {
					/devicen_colorspace_dict AGMCORE_gget /TintProc [
						Names names_index /devn_makecustomcolor cvx
					] cvx ddf
					/painted? true def
					exit
					} if
				} ifelse
				/names_index names_index 1 add def
			} forall
			AvoidAliasedColorants {
				currentspotalias set_spot_alias
			} if
			painted? {
				/devicen_colorspace_dict AGMCORE_gget /names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget /TintProc [
					names_len [/pop cvx] cvx /repeat cvx 1 /setseparationgray cvx
 					0 0 0 0 /setcmykcolor cvx
				] cvx ddf
			} ifelse
			end
		} ifelse
	}
	{
		AGMCORE_in_rip_sep {
			Names convert_to_process not
		}{
			level3
		} ifelse
		{
			[/DeviceN Names MappedCSA /TintTransform load] setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and {
				[
					Names /length cvx [/pop cvx] cvx /repeat cvx
				] cvx bdf
			}{
				{setcolor} bdf
			} ifelse
		}{
			exec_tint_transform
		} ifelse
	} ifelse
	set_crd
	/AliasedColorants false def
	end
} def
/setindexedcolorspace
{
	dup /indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict /CSDBase known {
			CSDBase /CSD get_res begin
			currentdict /Names known {
				currentdict devncs
			}{
				1 currentdict sepcs
			} ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt /Names where {pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal {
					/tableIndex xdf
					Lookup dup type /stringtype eq {
						compCnt tableIndex map_index
					}{
						exec
					} ifelse
					/Names where {
						pop setdevicencolor
					}{
						setsepcolor
					} ifelse
					currentgray
					tableIndex exch
					HiVal mul cvi 
					NewLookup 3 1 roll put
				} for
				[/Indexed currentcolorspace HiVal NewLookup] setcolorspace_opt
				end
			}{
				level3
				{
					currentdict /Names known {
						[/Indexed [/DeviceN Names MappedCSA /TintTransform load] HiVal Lookup] setcolorspace_opt
					}{
						[/Indexed [/Separation Name MappedCSA sep_proc_name load] HiVal Lookup] setcolorspace_opt
					} ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict /Names known {
						Lookup dup type /stringtype eq
							{/exch cvx CSDBase /CSD get_res /Names get length dup /mul cvx exch /getinterval cvx {255 div} /forall cvx}
							{/exec cvx}ifelse
							/TintTransform load /exec cvx
					}{
						Lookup dup type /stringtype eq
							{/exch cvx /get cvx 255 /div cvx}
							{/exec cvx}ifelse
							CSDBase /CSD get_res /MappedCSA get sep_proc_name exch pop /load cvx /exec cvx
					} ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			} ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or{
						pop [/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{ 
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval {} forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						} bind
					}{
						Lookup
					}ifelse
				}ifelse
				] setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep {
		/indexed_colorspace_dict AGMCORE_gget dup /CSDBase known { 
			begin
			CSDBase /CSD get_res begin
			currentdict /Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
			end
		}{
			/Lookup get 4 3 -1 roll map_index setcmykcolor
		} ifelse
	}{
		level3 not AGMCORE_in_rip_sep and /indexed_colorspace_dict AGMCORE_gget /CSDBase known and {
			/indexed_colorspace_dict AGMCORE_gget /CSDBase get /CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		} ifelse
	}ifelse
} def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode [0 1] def
		/DataSource <FF> def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict /image get exec
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup /CSD eq {
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	} ifelse
}def
/del_res
{
	{
		aload pop exch
		dup /CSD eq {
			pop 
			{
				//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef
			}forall
		}{
			exch
			{
				1 index undefineresource
			}forall
			pop
		} ifelse
	} forall
}def
/get_res
{
	dup /CSD eq {
		pop
		dup type dup /nametype eq exch /stringtype eq or {
			AGMCORE_CSD_cache exch get
		} if
	}{
		findresource
	} ifelse
}def
/get_csa_by_name
{
	dup type dup /nametype eq exch /stringtype eq or{
		/CSA get_res
	} if
}def
/pattern_buf_init
{
	/count get 0 0 put
} def
/pattern_buf_next
{
	dup /count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
} def
/cachepattern_compress
{
	5 dict begin
	currentfile exch 0 exch /SubFileDecode filter /ReadFilter exch def
	/patarray 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	patarray 1 array dup 0 1 put /count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq {
			pop
		}{
			patarray dup length 1 sub 3 -1 roll put
		} ifelse
		{string_size}{0}ifelse string
	} /LZWEncode filter def
	{ 		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not {exit} if
	} loop
	LZWFilter closefile
	patarray				
	end
}def
/cachepattern
{
	2 dict begin
	currentfile exch 0 exch /SubFileDecode filter /ReadFilter exch def
	/patarray 20 dict def
	currentglobal true setglobal 
	patarray 1 array dup 0 1 put /count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		patarray dup length 1 sub 3 -1 roll put
		not {exit} if
	} loop
	patarray dup dup length 1 sub () put					
	end	
}def
/wrap_paintproc
{ 
  statusdict /currentfilenameextend known{
	clonedict
	begin
	/OldPaintProc /PaintProc load def
	/PaintProc
	{
		mark exch
		dup /OldPaintProc get stopped
		{closefile restore end} if
		cleartomark
	}  def
	end
  } {pop} ifelse
} def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index /XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index /YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			  1 index begin
		BBox 0 get XStep div cvi XStep mul /xshift exch neg def
		BBox 1 get YStep div cvi YStep mul /yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[ xshift yshift /translate load null /exec load ] dup
		3 /PaintProc load put cvx /PaintProc exch def
		end
	1 index dup /ID get exch /Pattern add_res
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup /PatternType get 1 eq{
		dup /PaintType get 1 eq{
			currentoverprint sop [/DeviceGray] setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{
		pop
	}{
		setcolorspace
	}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}{null}ifelse
	Intent ne {
		Intent /ColorRendering {findresource} stopped
		{
			pop pop systemdict /findcolorrendering known
			{
				Intent findcolorrendering pop
				/ColorRendering findresource 
				true
			}
			{false} ifelse
		}
		{true} ifelse
		{
			dup begin
			currentdict /TransformPQR known {
				currentdict /TransformPQR get aload pop
				3 {{} eq 3 1 roll} repeat or or
			}
			{true} ifelse
			currentdict /MatrixPQR known {
				currentdict /MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true} ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR [
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add} bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add} bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add} bind
				] def
				/MatrixPQR [ 0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296 ] def
				/RangePQR [-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392] def
				currentdict end
			} if
			setcolorrendering_opt
		} if		
	}if
} def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict /ColorRendering known{
			ColorRendering /ColorRendering {findresource} stopped not {setcolorrendering_opt} if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type /arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		clonedict
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process //Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp) flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep) flushinput
	}if
}def
/cpaint_gend
{
	newpath
}def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add} if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0} ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup /Name get map_alias {/CSD put}{pop} ifelse} forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get /CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not {
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor /setcustomcolor load put
	} if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		currentdict/TintProc known currentdict/CSA known and 3 1 roll
		//Adobe_AGM_Core begin
		dup /customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			4 -1 roll{
				exch pop /sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
			pop
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd /setpagedevice load def
	/setpagedevice { get_gstate spd set_gstate } def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known{
			currentpagedevice/NegativePrint get //Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<< /NegativePrint //Adobe_AGM_Core/AGMCORE_inverting get >> setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
		gsave newpath clippath 1 /setseparationgray where{pop setseparationgray}{setgray}ifelse 
		/AGMIRS_&fill where {pop AGMIRS_&fill}{fill} ifelse grestore
	}if
	end
}def
/lw_save_restore_override {
	/md where {
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{} def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage /showpage load def}
		ifelse
		/showpage {orig_showpage gR} def
		end
	}if
}def
/pscript_showpage_override {
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage /restore load def
		/restore {exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where {
		pop
		md /initializepage known {
			md /initializepage {} put
		} if
		md /rC known {
			md /rC {4{pop}repeat} put
		} if
	}if
	/mysetup where {
		/mysetup [1 0 0 1 0 0] put
	}if
	Adobe_AGM_Core /AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core /AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/driver_check_media_override
{
	/PrepsDict where
		{pop}
		{
		Adobe_AGM_Core /AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core /AGMCORE_Default_PageSize get type /arraytype eq
			{
			Adobe_AGM_Core /AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core /AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core /AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ (Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. ) def
	/AGMCORE_color_space_onhost_seps (This job contains colors that will not separate with on-host methods. ) def
	/AGMCORE_invalid_color_space (This job contains an invalid color space. ) def
end
/set_def_ht
{
	AGMCORE_def_ht sethalftone
} def
end
systemdict /setpacking known
{
	setpacking
} if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.25 0
%%Copyright: Copyright 1997-2005 Adobe Systems Incorporated.  All Rights Reserved.
%%Version: 2.25 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict /Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{ /Adobe_CoolType_Core userdict /Adobe_CoolType_Core get def }
if
userdict /Adobe_CoolType_Core 60 dict dup begin put
/Adobe_CoolType_Version 2.25 def
/Level2?
	systemdict /languagelevel known dup
		{ pop systemdict /languagelevel get 2 ge }
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal /pop load def
	/gcheck { pop false } bind def
	/currentpacking false def
	/setpacking /pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict /Adobe_CoolType_Data 2 copy known not
	 { 2 copy 10 dict put }
if
get
	 begin
	 /@opStackCountByLevel 32 dict def
	 /@opStackLevel 0 def
	 /@dictStackCountByLevel 32 dict def
	 /@dictStackLevel 0 def
	 end
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup /args
			7 index
			5 add array put
			put get
			}
			{
			get dup /args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch /args exch put
				}
				{ pop }
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{ pop count }
			if
			dup /argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{ pop }
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	} bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{ { pop } repeat }
				{ pop }
			ifelse
			args 0 argCount getinterval {} forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{ { end } repeat }
		{ pop }
	ifelse
	} bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	} bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	} bind def
/@ReRaise
	{
	cvx $error /errorname get errordict exch get exec
	stop
	} bind def
/@Stopped
	{
	0 @#Stopped
	} bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{ @_RestoreStackLevels true }
		{ @_PopStackLevels false }
	ifelse
	} bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	} bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch /@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					 { (*) { pop stop } 128 string /Category resourceforall }
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data /@shouldNotDisappearDict get ne dup
					 {
						  /@shouldNotDisappearDictValue known
								{
										  {
												end
												currentdict 1 index eq
													 { pop exit }
												if
										  }
									 loop
								}
						  if
					 }
				if
				end
		}
		{ false }
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{ /steveamerige /Category resourcestatus }
		stopped
			{ cleartomark true }
			{ cleartomark currentglobal not }
		ifelse
		}
		{ false }
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec
				{ cleartomark false }
				{ { 3 2 roll pop true } { cleartomark false } ifelse }
			ifelse
			end
		} bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad /ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup /CMap CTHasResourceStatusBug
						{ CTResourceStatus }
						{ resourcestatus }
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup /CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{ exit }
								{ stop }
							ifelse
							}
						ifelse
						}
						{ pop }
					ifelse
					}
				128 string /CMap resourceforall
				}
			stopped
				{ cleartomark }
			stopped pop
			setglobal
			}
		if
		}
	if
	} bind def
/doc_setup
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mov /moveto load def
		/nfnt /newencodedfont load def
		/mfnt /makefont load def
		/sfnt /setfont load def
		/ufnt /undefinefont load def
		/chp /charpath load def
		/awsh /awidthshow load def
		/wsh /widthshow load def
		/ash /ashow load def
		/sh /show load def
		end
		currentglobal false setglobal
	  userdict /Adobe_CoolType_Data 2 copy known not
		  { 2 copy 10 dict put }
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	} bind def
/doc_trailer
	{
	currentdict Adobe_CoolType_Core eq
		{ end }
	if
	} bind def
/page_setup
	{
	Adobe_CoolType_Core begin
	} bind def
/page_trailer
	{
	end
	} bind def
/unload
	{
	systemdict /languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{ undef }
				{ pop pop }
			ifelse
			}
		if
		}
	if
	} bind def
/ndf
	{
	1 index where
		{ pop pop pop }
		{ dup xcheck { bind } if def }
	ifelse
	} def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where { /globaldict get begin } if
			dup where pop exch get
		/globaldict where { pop end } if
		end
	end
Adobe_CoolType_Core_Defined
	{ /systemfindfont exch def }
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{ pop } ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq { 0 } { dup length } ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index /FID eq
				{ pop pop }
				{ def }
			ifelse
			}
		forall
		dup null eq
			{ pop }
			{ { def } forall }
		ifelse
		currentdict
		end
	exch setglobal
	} bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	} bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index  known
			{ SharedFontDirectory 3 index get /FontReferenced known }
			{ false }
		ifelse
		}
		{
		FontDirectory 3 index known
			{ FontDirectory 3 index get /FontReferenced known }
			{
			SharedFontDirectory 3 index known
				{ SharedFontDirectory 3 index get /FontReferenced known }
				{ false }
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont /FontReferenced get
		2 index dup type /nametype eq
			{findfont}
		if ne
			{ pop false }
		if
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{ 2 copy get 3 index 3 1 roll put }
		for
		pop pop pop
		}
		{
		dup type /nametype eq
		  { findfont }
	  if
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index /FID ne
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type /stringtype eq { cvn } if def dup
			currentdict
			end
		definefont def
		}
	ifelse
	} bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type /dicttype ne
			{ 0 dict }
		if
		currentdict /$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{ def } forall
					{ def } forall
					currentdict
					dup /$Init known
						{ dup /$Init get exec }
					if
					end
				/$Strategy exch def
				}
				{ pop pop pop }
			ifelse
			}
			{ pop pop }
		ifelse
		end
	} bind def
/scff
	{
	$SubstituteFont
		begin
		dup type /stringtype eq
			{ dup length exch }
			{ null }
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{ $sname }
			ifelse def
		end
		{ findfont }
	@Stopped
		{
		dup length 8 add string exch
		1 index 0 (BadFont:) putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{ findfont }
		@Stopped
			{ pop /Courier findfont }
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	} bind def
/isWidthsOnlyFont
	{
	dup /WidthsOnly known
		{ pop pop true }
		{
		dup /FDepVector known
			{ /FDepVector get { isWidthsOnlyFont dup { exit } if } forall }
			{
			dup /FDArray known
				{ /FDArray get { isWidthsOnlyFont dup { exit } if } forall }
				{ pop }
			ifelse
			}
		ifelse
		}
	ifelse
	} bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 4 index def
		/$doSmartSub false def
		end
	3 index
	currentglobal false setglobal exch
	/CompatibleFonts /ProcSet resourcestatus
		{
		pop pop
		/CompatibleFonts /ProcSet findresource
			begin
			dup /CompatibleFont currentexception
			1 index /CompatibleFont true setexception
			1 index /Font resourcestatus
				{
				pop pop
				3 2 roll setglobal
				end
				exch
				dup findfont
				/CompatibleFonts /ProcSet findresource
					begin
					3 1 roll exch /CompatibleFont exch setexception
					end
				}
				{
				3 2 roll setglobal
				1 index exch /CompatibleFont exch setexception
				end
				findfont
				$SubstituteFont /$substituteFound true put
				}
			ifelse
		}
		{ exch setglobal findfont }
	ifelse
	$SubstituteFont
		begin
		$substituteFound
			{
		 false
		 (%%[Using embedded font ) print
		 5 index ?str1 cvs print
		 ( to avoid the font substitution problem noted earlier.]%%\n) print
		 }
			{
			dup /FontName known
				{
				dup /FontName get $fontname eq
				1 index /DistillerFauxFont known not and
				/currentdistillerparams where
					{ pop false 2 index isWidthsOnlyFont not and }
				if
				}
				{ false }
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		exch pop exch pop exch
		2 dict dup /Found 3 index put
		exch findfont exch
		}
		{
		exch exec
		exch dup findfont
		dup /FontType get 3 eq
	  {
		  exch ?str1 cvs
		  dup length 1 sub
		  -1 0
		{
			  exch dup 2 index get 42 eq
			{
				 exch 0 exch getinterval cvn 4 1 roll 3 2 roll pop
				 exit
			  }
			  {exch pop} ifelse
		  }for
		}
		{
		 exch pop
	  } ifelse
		2 dict dup /Downloaded 6 5 roll put
		}
	ifelse
	dup /FontName 4 index put copyfont definefont pop
	} bind def
/?str2 256 string def
/?add
	{
	1 index type /integertype eq
		{ exch true 4 2 }
		{ false 3 1 }
	ifelse
	roll
	1 index findfont
	dup /Widths known
		{
		Adobe_CoolType_Data /AddWidths? true put
		gsave dup 1000 scalefont setfont
		}
	if
	/Downloaded known
		{
		exec
		exch
			{
			exch ?str2 cvs exch
			findfont /Downloaded get 1 dict begin /Downloaded 1 index def ?str1 cvs length
			?str1 1 index 1 add 3 index putinterval
			exch length 1 add 1 index add
			?str1 2 index (*) putinterval
			?str1 0 2 index getinterval cvn findfont 
			?str1 3 index (+) putinterval
			2 dict dup /FontName ?str1 0 6 index getinterval cvn put
			dup /Downloaded Downloaded put end copyfont
			dup /FontName get exch definefont pop pop pop
			}
			{
			pop
			}
		ifelse
		}
		{
		pop
		exch
			{
			findfont
			dup /Found get
			dup length exch ?str1 cvs pop
			?str1 1 index (+) putinterval
			?str1 1 index 1 add 4 index ?str2 cvs putinterval
			?str1 exch 0 exch 5 4 roll ?str2 cvs length 1 add add getinterval cvn
			1 dict exch 1 index exch /FontName exch put copyfont
			dup /FontName get exch definefont pop
			}
			{
			pop
			}
		ifelse
		}
	ifelse
	Adobe_CoolType_Data /AddWidths? get
		{ grestore Adobe_CoolType_Data /AddWidths? false put }
	if
	} bind def
/?sh
	{
	currentfont /Downloaded known { exch } if pop
	} bind def
/?chp
	{
	currentfont /Downloaded known { pop } { false chp } ifelse
	} bind def
/?mv 
	{
	currentfont /Downloaded known { moveto pop pop } { pop pop moveto } ifelse
	} bind def
setpacking
userdict /$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{ get }
			{ pop pop { pop /Courier } bind }
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams /CannotEmbedFontPolicy 2 copy known
			{ get /Error eq }
			{ pop pop false }
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup /WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type /stringtype eq { cvn } if def
								/FontType 3 def
								/FontMatrix [ .001 0 0 .001 0 0 ] def
								/Encoding 256 array dup 0 1 255 { /.notdef put dup } for pop def
								/FontBBox [ 0 0 0 0 ] def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth /y exch def /x exch def
											x y setcharwidth
											$SubstituteFont /$Strategy get /$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									} bind def
								currentdict
								end
							exch setglobal
							} bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup /WMode known
										{ dup /WMode get }
										{ 0 }
									ifelse
									/$WMode exch def
									$fontname exch
									dup /FontName known
										{
										dup /FontName get
										dup type /stringtype eq { cvn } if
										}
										{ /unnamedfont }
									ifelse
									exch
									Adobe_CoolType_Data /InVMDeepCopiedFonts get
									1 index /FontName get known
										{
										pop
										Adobe_CoolType_Data /InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{ $deepcopyfont }
									ifelse
									exch 1 index exch /FontBasedOn exch put
									dup /FontName $fontname dup type /stringtype eq { cvn } if put
									definefont
									Adobe_CoolType_Data /InVMDeepCopiedFonts get
										begin
										dup /FontBasedOn get 1 index def
										end
									} bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{ /y 1000 def }
										{ /x -1000 def 500 120 translate }
									ifelse
									Level2?
										{
										[ /Separation (All) /DeviceCMYK { 0 0 0 1 pop } ]
										setcolorspace
										}
										{ 0 setgray }
									ifelse
									10 setlinewidth
									x .8 mul
									[ 7 3 ]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{ .2 setcolor }
											{ .8 setgray }
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									} bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict /FontName known
											{
											FontName
											dup type /stringtype eq { cvn } if
											}
											{ /unnamedfont }
										ifelse
										def
										/FontName $fontname dup type /stringtype eq { cvn } if def
										/currentdistillerparams where
											{ pop }
											{
											/FontInfo currentdict /FontInfo known
												{ FontInfo null copyfont }
												{ 2 dict }
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[ 1 0 ItalicAngle dup sin exch cos div 1 0 0 ]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									} bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont {} bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type /stringtype eq { cvn } if
						dup /$fontname exch def
						$sname null eq
							{ $str cvs dup length $slen sub $slen getinterval }
							{ pop $sname }
						ifelse
						$fontpat dup 0 (fonts/*) putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont /$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{ /$match exch def exit }
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont /$dstack get
								{
								exch
									{
									1 index eq
										{ pop false }
										{ true }
									ifelse
									}
									{ begin false }
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{ $match (fonts/) anchorsearch pop pop cvn }
							{ /Courier }
						ifelse
						} bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1  [ /Ryumin-Light /HeiseiMin-W3
										  /GothicBBB-Medium /HeiseiKakuGo-W5
										  /HeiseiMaruGo-W4 /Jun101-Light ] def
							/Korea1  [ /HYSMyeongJo-Medium /HYGoThic-Medium ] def
							/GB1	  [ /STSong-Light /STHeiti-Regular ] def
							/CNS1	 [ /MKai-Medium /MHei-Medium ] def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup /FontType get 0 eq
							{
							1 dict dup /FontName /copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup /FontName /copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{ $Strategies /$Type3Underprint get exec }
						ifelse
						} bind def
					/$buildfontname
						{
						dup /CIDFont findresource /CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index (-) putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy (-) putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{ pop pop 3 2 roll putinterval cvn /$cmapname exch def }
							{ pop pop pop pop pop }
						ifelse
						length
						$str 1 index (-) putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						} bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{ get }
								{ pop pop [] }
							ifelse
							}
							{ pop pop [] }
						ifelse
						false exch
							{
							dup /CIDFont resourcestatus
								{
								pop pop
								save
								1 index /CIDFont findresource
								dup /WidthsOnly known
									{ dup /WidthsOnly get }
									{ false }
								ifelse
								exch pop
								exch restore
									{ pop }
									{ exch pop true exit }
								ifelse
								}
								{ pop }
							ifelse
							}
						forall
							{ $str cvs $buildfontname }
							{
							false (*)
								{
								save exch
								dup /CIDFont findresource
								dup /WidthsOnly known
									{ dup /WidthsOnly get not }
									{ true }
								ifelse
								exch /CIDSystemInfo get
								dup /Registry get Registry eq
								exch /Ordering get Ordering eq and and
									{ exch restore exch pop true exit }
									{ pop restore }
								ifelse
								}
							$str /CIDFont resourceforall
								{ $buildfontname }
								{ $fontname $findfontByEnum }
							ifelse
							}
						ifelse
						} bind def
					end
				end
				currentdict /$error known currentdict /languagelevel known and dup
					{ pop $error /SubstituteFont known }
				if
				dup
					{ $error }
					{ Adobe_CoolType_Core }
				ifelse
				begin
					{
					/SubstituteFont
					/CMap /Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{ dup $str cvs dup length $slen sub $slen getinterval cvn }
									{ $sname }
								ifelse
								Adobe_CoolType_Data /InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{ exch pop true exit }
												{ pop }
											ifelse
											}
											{
											FontDirectory 1 index known
												{ exch pop true exit }
												{
												GlobalFontDirectory 1 index known
													{ exch pop true exit }
													{ pop }
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{ pop pop false }
								ifelse
									{
									exch pop exch pop
									}
									{
									dup /CMap resourcestatus
										{
										pop pop
										dup /$cmapname exch def
										/CMap findresource /CIDSystemInfo get { def } forall
										$findfontByROS
										}
										{
										128 string cvs
										dup (-) search
											{
											3 1 roll search
												{
												3 1 roll pop
													{ dup cvi }
												stopped
													{ pop pop pop pop pop $findfontByEnum }
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup /CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup /$cmapname exch def
															/CMap findresource /CIDSystemInfo get { def } forall
															$findfontByROS
															true exit
															}
															{ pop }
														ifelse
														}
													for
													dup type /booleantype eq
														{ pop }
														{ pop pop pop $findfontByEnum }
													ifelse
													}
												ifelse
												}
												{ pop pop pop $findfontByEnum }
											ifelse
											}
											{ pop pop $findfontByEnum }
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{ //SubstituteFont exec }
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{ $findfontByEnum }
								{ //SubstituteFont exec }
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core /scfindfont /systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup /FontName known
								{ dup /FontName get dup 3 index ne }
								{ /noname true }
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def /$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{ 1 index /FID eq { pop pop } { def } ifelse }
										forall
										currentdict
										end
									definefont
									dup /FontName known { dup /FontName get } { null } ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using ) print
										dup /FontName known
											{ dup /FontName get } { (unspecified font) }
										ifelse
										$str cvs print (.\n) print
										}
									if
									}
									{ exch pop }
								ifelse
								}
								{ exch pop }
							ifelse
							end
						} bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core /findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type /stringtype ne { $str cvs } if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{ dup $inVMIndex $AddInVMFont }
						if
						$doSmartSub
							{
							currentdict /$Strategy known
								{ $Strategy /$BuildFont get exec }
							if
							}
						if
						}
					if
					end
				} bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch /FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data /InVMFontsByCMap get exch
		$DictAdd
		}
		{ pop pop pop }
	ifelse
	} bind def
/$DictAdd
	{
	2 copy known not
		{ 2 copy 4 index length dict put }
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get { forall } def
				2 copy currentdict put
				end
			}
			{ pop }
		ifelse
		}
	if
	get
		begin
			{ def }
		forall
		end
	} bind def
end
end
%%EndResource
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.21 0
%%Copyright: Copyright 1987-2005 Adobe Systems Incorporated.
%%Version: 1.21 0
systemdict /languagelevel known dup
	{ currentglobal false setglobal }
	{ false }
ifelse
exch
userdict /Adobe_CoolType_Utility 2 copy known
	{ 2 copy get dup maxlength 27 add dict copy }
	{ 27 dict }
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		  <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A> def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch /eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{ globaldict begin currentglobal true setglobal }
if
	/ct_AddStdCIDMap
		ct_Level2?
			{ {
				mark
				Adobe_CoolType_Utility /@recognizeCIDFont currentdict put
					 {
					 ((Hex) 57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77) 0 () /SubFileDecode filter cvx exec
					 }
				stopped
					 {
					 cleartomark
					 Adobe_CoolType_Utility /@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						  {
						  2 copy get 3 index eq
								{ 1 index length exch sub 1 sub { end } repeat exit }
								{ pop }
						  ifelse
						  }
					 for
					 pop pop
					 Adobe_CoolType_Utility /@eexecStartData get eexec
					 }
					 { cleartomark }
				ifelse
			} }
			{ {
				Adobe_CoolType_Utility /@eexecStartData get eexec
			} }
		ifelse bind def
userdict /cid_extensions known
dup { cid_extensions /cid_UpdateDB known and } if
	 {
	 cid_extensions
	 begin
	 /cid_GetCIDSystemInfo
		 {
		 1 index type /stringtype eq
			 { exch cvn exch }
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				 {
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					 {
					 1 index load
					 3 index get
					 dup null eq
						  { pop pop cid_UpdateDB }
						  {
						  exch
						  1 index /Created get eq
							  { exch pop exch pop }
							  { pop cid_UpdateDB }
						  ifelse
						  }
					 ifelse
					 }
					 { pop cid_UpdateDB }
				 ifelse
				 }
				 { cid_UpdateDB }
			 ifelse
			 end
		 } bind def
	 end
	 }
if
ct_Level2?
	{ end setglobal }
if
	/ct_UseNativeCapability?  systemdict /composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring () def
		/usewidths? true def
		end def
	ct_Level2? { setglobal } { pop } ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict /languagelevel known
				{ pop /CIDFont findresource /GlyphDirectory get }
				{
				1 index /CIDFont findresource /GlyphDirectory
				get dup type /dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			} def
		/+
			{
			systemdict /languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{ 1 dict begin }
			ifelse
			/$ exch def
			systemdict /languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			? { $ begin } if
			} def
		/? { $ type /dicttype eq } def
		/| {
			userdict /Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data /AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					  begin
						AddWidths?
								{
								Adobe_CoolType_Data /CC 3 index put
								? { def } { $ 3 1 roll put } ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont /Widths get exch CC exch put
								}
								{ ? { def } { $ 3 1 roll put } ifelse }
							ifelse
					end
				end
				}
				{ ? { def } { $ 3 1 roll put } ifelse }	ifelse
				}
				{ ? { def } { $ 3 1 roll put } ifelse }
			ifelse
			} def
		/!
			{
			? { end } if
			systemdict /languagelevel known
				{ gvm setglobal }
			if
			end
			} def
		/: { string currentfile exch readstring pop } executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		 /c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		 /c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		 /c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		 /c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		 /c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		 /c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		 /c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		 /c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		 /cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		 /cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		 /cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		 /cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		 /cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx [.001 0 0 .001 0 0] def
		/ct_1000Mtx [1000 0 0 1000 0 0] def
		/ct_raise {exch cvx exch errordict exch get exec stop} bind def
		/ct_reraise
			{ cvx $error /errorname get (Error: ) print dup (						  ) cvs print
					errordict exch get exec stop
			} bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			} bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility /ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{ dup string /dst_string exch def }
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex  get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string  dst_index 2 index putinterval
						length dst_index add /dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string  dst_index 2 index putinterval
						pop dup dst_index add /dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							  { arrayIndex get }
							  {
							  pop
							  exit
							  }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			} bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{ /unknowninstancename /Category resourcestatus }
			stopped
				{ cleartomark setglobal true }
				{ cleartomark currentglobal not exch setglobal }
			ifelse
				{
					{
					mark 3 1 roll /Category findresource
						begin
						ct_Vars /vm currentglobal put
						({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec
							{ cleartomark false }
							{ { 3 2 roll pop true } { cleartomark false } ifelse }
						ifelse
						ct_Vars /vm get setglobal
						end
					}
				}
				{ { resourcestatus } }
			ifelse bind def
			/CIDFont /Category ct_resourcestatus
				{ pop pop }
				{
				currentglobal  true setglobal
				/Generic /Category findresource
				dup length dict copy
				dup /InstanceType /dicttype put
				/CIDFont exch /Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit /ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				  /Registry (Adobe) def
				  /Ordering (Identity) def
				  /Supplement 0 def
				end def
				/CMapName /Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000> <FFFF>
				endcodespacerange
				1 begincidrange
				<0000> <FFFF> 0
				endcidrange
				endcmap
				CMapName currentdict /CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont  10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{ pop pop /defineresource /undefined ct_raise }
				ifelse
				} bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{ get 3 1 roll pop pop}
						{ pop pop /findresource /undefinedresource ct_raise }
					ifelse
					}
					{ pop pop /findresource /undefined ct_raise }
				ifelse
				} bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{ pop pop /findresource /undefined ct_raise }
				ifelse
				} bind def
			/ct_resourcestatus /resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup (Binary) eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{ cid_BYTE_COUNT () /SubFileDecode filter }
							stopped
								{ pop pop pop }
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup (Hex) eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{ null exch /ASCIIHexDecode filter /readstring }
							stopped
								{ pop exch pop (>) exch /readhexstring }
							if
							}
							{ (>) exch /readhexstring }
						ifelse
						load
						exit
						}
					if
					/StartData /typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch /GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop /readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				} bind def
			/StartData
				{
				mark
					{
					currentdict
					dup /FDArray get 0 get /FontMatrix get
					0 get 0.001 eq
						{
						dup /CDevProc known not
							{
							/CDevProc 1183615869 internaldict /stdCDevProc 2 copy known
								{ get }
								{
								pop pop
								{ pop pop pop pop pop 0 -1000 7 index 2 div 880 }
								}
							ifelse
							def
							}
						if
						}
						{
						 /CDevProc
							 {
							 pop pop pop pop pop
							 0
							 1 cid_temp /cid_CIDFONT get
							 /FDArray get 0 get
							 /FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							 } def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup /cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup /SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup /SubrMapOffset undef
										dup /SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{ pop }
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict /CIDFont defineresource pop
					end end
					}
				stopped
					{ cleartomark /StartData ct_reraise }
				if
				} bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit /ProcSet ct_resourcestatus
				{ true }
				{ /CIDInitC /ProcSet ct_resourcestatus }
			ifelse
				{
				pop pop
				/CIDInit /ProcSet findresource
				ct_UseNativeCapability?
					{ pop null }
					{ /CIDInit ct_CIDInit /ProcSet defineresource pop }
				ifelse
				}
				{ /CIDInit ct_CIDInit /ProcSet defineresource pop null }
			ifelse
			ct_Vars exch /ct_oldCIDInit exch put
			} bind def
		/ct_restoreCIDInit
			{
			ct_Vars /ct_oldCIDInit get dup null ne
				{ /CIDInit exch /ProcSet defineresource pop }
				{ pop }
			ifelse
			} bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility /ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{ pop 0 }
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{ get }
								{ pop pop nullstring }
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{ 0 FDBytes ct_cvnsi }
									{ pop 0 }
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{ /charstring nullstring def exit }
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			} def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			} def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont /Widths get cid
					2 copy known
						{ get exch pop aload pop }
						{ pop pop stringwidth }
					ifelse
					}
					{ stringwidth }
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			} def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{ get }
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup /FontMatrix 2 copy known
						{ get }
						{ pop pop ct_defaultFontMtx }
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont /Widths get def
					/CharStrings 1 dict dup /.notdef
						<d841272cf18f54fc13> dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup /CharStrings get 1 index /Encoding get
			ct_dfCharCode get charstring put
			rootfont /WMode 2 copy known
				{ get }
				{ pop pop 0 }
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ ct_str1 show }
			ifelse
			} def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup /FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ ct_1000Mtx matrix concatmatrix concat }
				{ pop }
			ifelse
			/Private get
			Adobe_CoolType_Utility /ct_Level2? get not
				{
				ct_dfDict /Private
				3 -1 roll
					{ put }
				1183615869 internaldict /superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility /ct_Level2? get
				{ 1 index }
				{ 3 index /Private get mark 6 1 roll }
			ifelse
			dup /RunInt known
				{ /RunInt get }
				{ pop /CCRun }
			ifelse
			get exec
			Adobe_CoolType_Utility /ct_Level2? get not
				{ cleartomark }
			if
			} bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility /ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{ stop }
			if
			end
			end
			end
			end
			} bind def
		/BaseFontNameStr (BF00) def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix  [0.001 0 0 0.001 0 0] def
			/FontBBox  [-250 -250 1250 1250] def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix  [0.001 0 0 0.001 0 0] def
			/FontBBox  [-250 -250 1250 1250] def
			/Encoding ct_cHexEncoding def
			/BuildChar /ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString /ct_Type3ShowCharString load def
				/ct_dfSetCacheProc /ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup /lenIV 4 put def
				/CharStrings 1 dict dup /.notdef <d841272cf18f54fc13> put def
				/PaintType 0 def
				/ct_ShowCharString /ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{ exit }
				if
				}
			for
			exch pop exch pop
			} bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch /WMode exch def
				exch /FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup /FontMatrix known
				{ dup /FontMatrix get /FontMatrix exch def }
				{ /FontMatrix matrix def }
			ifelse
				/bfCount 1 index /CIDCount get 256 idiv 1 add
					dup 256 gt { pop 256} if def
				/Encoding
					256 array 0 1 bfCount 1 sub { 2 copy dup put pop } for
					bfCount 1 255 { 2 copy bfCount put pop } for
					def
				/FDepVector bfCount dup 256 lt { 1 add } if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont /FontBBox known
						{ CIDFont /FontBBox get /FontBBox exch def }
					if
					CIDFont /CDevProc known
						{ CIDFont /CDevProc get /CDevProc exch def }
					if
					currentdict
					end
				BaseFontNameStr 3 (0) putinterval
				0 1 bfCount dup 256 eq { 1 sub } if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup /CIDFirstByte exch 256 mul def
						FontType 3 eq
							{ /ct_FDDict 2 dict def }
						if
						currentdict
						end
					1 index  16
					BaseFontNameStr  2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{ /Widths 1 index /CIDFont get /GlyphDirectory get length dict def }
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont /Widths get
						begin
						exch /CIDFont get /GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{ exch pop }
			ifelse
			} bind def
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{
				2 index /CMap ct_resourcestatus
					{ pop pop exch pop }
					{
					/CIDInit /ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch /WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry (Adobe) def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-) search
									{
									pop pop
									(-) search
										{
										dup length string copy
										exch pop exch pop
										}
										{ pop (Identity)}
									ifelse
									}
									{ pop  (Identity)  }
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000> <FFFF>
							endcodespacerange
							1 begincidrange
							<0000> <FFFF> 0
							endcidrange
							endcmap
							CMapName currentdict /CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get /CIDFont findresource
				ct_makeocf
				}
			ifelse
			} bind def
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index /CMap ct_resourcestatus
					{ pop pop }
					{
					/CIDInit /ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry (Adobe) def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-) search
							{
							pop pop
							(-) search
								{ dup length string copy exch pop exch pop }
								{ pop (Identity) }
							ifelse
							}
							{ pop (Identity) }
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000> <FFFF>
					endcodespacerange
					1 begincidrange
					<0000> <FFFF> 0
					endcidrange
					endcmap
					CMapName currentdict /CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get /CIDFont findresource
				ct_makeocf
				}
			ifelse
			} bind def
		currentdict readonly pop
		end
	end
%%EndResource
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict /ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
  version
  cvi
  2015
  ge
} bind def
/AllocGlyphStorage
{
  Is2015?
  {	
		pop
  } 
  { 
		{string} forall
  } ifelse
} bind def
/Type42DictBegin
{
	25 dict begin
  /FontName exch def
  /CharStrings 256 dict 
	begin
		  /.notdef 0 def
		  currentdict 
	end def
  /Encoding exch def
  /PaintType 0 def
  /FontType 42 def
  /FontMatrix [1 0 0 1 0 0] def
  4 array  astore cvx /FontBBox exch def
  /sfnts
} bind def
/Type42DictEnd  
{
	 currentdict dup /FontName get exch definefont end
	ct_T42Dict exch
	dup /FontName get exch put
} bind def
/RD {string currentfile exch readstring pop} executeonly def
/PrepFor2015
{
	Is2015?
	{		  
		 /GlyphDirectory 
		 16
		 dict def
		 sfnts 0 get
		 dup
		 2 index
		 (glyx)
		 putinterval
		 2 index  
		 (locx)
		 putinterval
		 pop
		 pop
	}
	{
		 pop
		 pop
	} ifelse			
} bind def
/AddT42Char
{
	Is2015?
	{
		/GlyphDirectory get 
		begin
		def
		end
		pop
		pop
	}
	{
		/sfnts get
		4 index
		get
		3 index
	  2 index
		putinterval
		pop
		pop
		pop
		pop
	} ifelse
} bind def
/T0AddT42Mtx2
{
	/CIDFont findresource /Metrics2 get begin def end
}bind def
end
%%EndResource
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright (C) 2000-2003 Adobe Systems, Inc.  All Rights Reserved.
systemdict /setpacking known
{
	currentpacking
	true setpacking
} if
userdict /Adobe_AGM_Image 75 dict dup begin put
/Adobe_AGM_Image_Id /Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf () def
/AGMIMG_ybuf () def
/AGMIMG_kbuf () def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/doc_setup
{ 
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage /colorimage ldf
	}if
	end
	end
}def
/page_setup
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists {/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				 }ifelse
			 }ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode [ Decode 1 get Decode 0 get] def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode [1 1] def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub} currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{ pop 1 } currenttransfer addprocs settransfer
		}def
	}ifelse
	/img /imageormask ldf
	/sepimg /sep_imageormask ldf
	/devnimg /devn_imageormask ldf
	/idximg /indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/page_trailer
{
	end
}def
/doc_trailer
{
}def
/AGMIMG_flushfilters
{
	dup type /arraytype ne
		{1 array astore}if
	aload length
		{
		dup type /filetype eq
			{
			dup status 1 index currentfile ne and
				{dup flushfile closefile}
				{pop}
			ifelse
			}{pop}ifelse
		} repeat
}def
/imageormask_sys
{
	begin
		save mark
		level2{
			currentdict
			Operator /imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask {
					level3 {process_mask_L3 AGMIMG_&image}{masked_image_simulation}ifelse
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator /imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix /DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix /DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict /_Filters known {_Filters AGMIMG_flushfilters} if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint {
		0 get dup type /nametype eq {
			dup /DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			} forall
			not
		} ifelse
	}{
		pop false
	}ifelse
}def
/process_mask_L3
{
	dup begin
	/ImageType 1 def
	end
	4 dict begin
		/DataDict exch def
		/ImageType 3 def
		/InterleaveType 3 def
		/MaskDict 9 dict begin
			/ImageType 1 def
			/Width DataDict dup /MaskWidth known {/MaskWidth}{/Width} ifelse get def
			/Height DataDict dup /MaskHeight known {/MaskHeight}{/Height} ifelse get def
			/ImageMatrix [Width 0 0 Height neg 0 Height] def
			/NComponents 1 def
			/BitsPerComponent 1 def
			/Decode [0 1] def
			/DataSource AGMIMG_maskSource def
		currentdict end def
	currentdict end
}def
/use_mask
{
	dup type /dicttype eq
	{
		dup /Mask known	{
			dup /Mask get {
				level3
				{true}
				{
					dup /MaskWidth known {dup /MaskWidth get 1 index /Width get eq}{true}ifelse exch
					dup /MaskHeight known {dup /MaskHeight get 1 index /Height get eq}{true}ifelse
					3 -1 roll and
				} ifelse
			}
			{false} ifelse
		}
		{false} ifelse
	}
	{false} ifelse
}def
/make_line_source
{
	begin
	MultipleDataSources {
		[
		Decode length 2 div cvi {Width string} repeat
		]
	}{
		Width Decode length 2 div mul cvi string
	}ifelse
	end
}def
/datasource_to_str
{
	exch dup type
	dup /filetype eq {
		pop exch readstring
	}{
		/arraytype eq {
			exec exch copy
		}{
			pop
		}ifelse
	}ifelse
	pop
}def
/masked_image_simulation
{
	3 dict begin
	dup make_line_source /line_source xdf
	/mask_source AGMIMG_maskSource /LZWDecode filter def
	dup /Width get 8 div ceiling cvi string /mask_str xdf
	begin
	gsave
	0 1 translate 1 -1 Height div scale
	1 1 Height {
		pop
		gsave
		MultipleDataSources {
			0 1 DataSource length 1 sub {
				dup DataSource exch get
				exch line_source exch get
				datasource_to_str
			} for
		}{
			DataSource line_source datasource_to_str
		} ifelse
		<<
			/PatternType 1
			/PaintProc [
				/pop cvx
				<<
					/ImageType 1
					/Width Width
					/Height 1
					/ImageMatrix Width 1.0 sub 1 matrix scale 0.5 0 matrix translate matrix concatmatrix
					/MultipleDataSources MultipleDataSources
					/DataSource line_source
					/BitsPerComponent BitsPerComponent
					/Decode Decode
				>>
				/image cvx
			] cvx
			/BBox [0 0 Width 1]
			/XStep Width
			/YStep 1
			/PaintType 1
			/TilingType 2
		>>
		matrix makepattern set_pattern
		<<
			/ImageType 1
			/Width Width
			/Height 1
			/ImageMatrix Width 1 matrix scale
			/MultipleDataSources false
			/DataSource mask_source mask_str readstring pop
			/BitsPerComponent 1
			/Decode [0 1]
		>>
		imagemask
		grestore
		0 1 translate
	} for
	grestore
	end
	end
}def
/imageormask
{
	begin
		SkipImageProc {
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator /imagemask eq DeviceN_PS2 not and {
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get /DeviceGray eq and{
						[/Separation /Black /DeviceGray {}] setcolorspace
						/Decode [ Decode 1 get Decode 0 get ] def
					}if
					use_mask {
						level3 {process_mask_L3 image}{masked_image_simulation}ifelse
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not {
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file {
									Names {
										dup (None) ne {
											[/Separation 3 -1 roll /DeviceGray {1 exch sub}] setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq {true setoverprint} if
											/names_index names_index 1 add def
										}{
											pop
										} ifelse
									} forall
									close_image_file
								} if
								grestore
								end
							}{
								Operator /imagemask eq {
									imagemask
								}{
									image
								} ifelse
							} ifelse
						}{
							Operator /imagemask eq {
								imagemask
							}{
								image
							} ifelse
						} ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator /imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix /DataSource load
					/Adobe_AGM_OnHost_Seps where {
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator /colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource [
											DataSource 0 get /exec cvx
											DataSource 1 get /exec cvx
											DataSource 2 get /exec cvx
											DataSource 3 get /exec cvx
											/AGMCORE_get_ink_data cvx
										] cvx def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0 () /SubFileDecode filter def
									}ifelse
									/Decode [ Decode 0 get Decode 1 get ] def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator /image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
  			 							1 AGMCORE_&setgray
  			 							currentdict imageormask_sys
  			 						}{
  			 							currentdict ignoreimagedata
  			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator /image eq{
							AGMCORE_host_sep{
								/DoImage true def
								HostSepColorImage{
									invert_image_samples
								}{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}ifelse
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys} if
							}{
								use_mask {
									level3 {process_mask_L3 image}{masked_image_simulation}ifelse
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict /_Filters known {_Filters AGMIMG_flushfilters} if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	SkipImageProc {
		currentdict consumeimagedata
	}
	{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get /DeviceCMYK eq and
		currentdict/Components known and 
		Name () ne and 
		Name (All) ne and 
		Operator /image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load /exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			} /exec cvx
			] cvx bind
			MappedCSA 0 get /DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
					AGMCORE_avoid_L2_sep_space not currentcolorspace 0 get /Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{ 
					currentdict
					Operator /imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name (All) ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator /imagemask eq{
 											/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									[ /Separation Name [/DeviceGray]
	 									{ 
	 										sep_colorspace_proc AGMCORE_get_ink_data
											1 exch sub
	 									} bind
										] AGMCORE_&setcolorspace
										/sep_tint AGMCORE_gget AGMCORE_&setcolor
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator /imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name (All) eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					currentcolorspace 0 get /Separation ne{
						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentoverprint 
					MappedCSA 0 get /DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					Name inRip_spot_has_ink not and 
					Name (All) ne and {
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict /_Filters known {_Filters AGMIMG_flushfilters} if
	end
	end
}def
/decode_image_sample
{
	4 1 roll exch dup 5 1 roll
	sub 2 4 -1 roll exp 1 sub div mul add
} bdf
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
} bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub {
			dup currentdict /dataSource get /exch cvx /get cvx /exec cvx
			/exch cvx names_index /ne cvx [ /pop cvx ] cvx /if cvx
		} for
	] cvx bind
	end
} bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources {origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0 () /SubFileDecode filter
				BitsPerComponent 8 idiv string /readstring cvx /pop cvx /putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0 () /SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv {DataSource /read cvx /not cvx{0}/if cvx /mul cvx}repeat /mul cvx /add cvx
			}for
		/convProc load /exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2 /add cvx /index cvx
			3 1 /roll cvx /exch cvx 255 /mul cvx /cvi cvx /put cvx
			}for
	]bind cvx 0 () /SubFileDecode filter
	end
} bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs [ 3 -1 roll begin
		currentdict /MultipleDataSources known {MultipleDataSources {DataSource length}{1}ifelse}{1} ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt {1 add 2 div cvi}{exit}ifelse
			} loop
			string
		} repeat
		end ] def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	SkipImageProc {
		currentdict consumeimagedata
	}
	{
		save mark 
		AGMCORE_producing_seps not {
			level3 not {
				Operator /imagemask ne {
					/DataSource [ [
						DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse
						colorSpaceElemCnt /devicen_colorspace_dict AGMCORE_gget /TintTransform get 
						devn_alt_datasource 1 /string cvx /readstring cvx /pop cvx] cvx colorSpaceElemCnt 1 sub{dup}repeat] def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt [ exch {0 1} repeat ] def
				} if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process {
					CSA get_csa_by_name 0 get /DeviceCMYK eq {
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse
							4 /devicen_colorspace_dict AGMCORE_gget /TintTransform get 
							devn_alt_datasource
						filter_cmyk 0 () /SubFileDecode filter def
						/MultipleDataSources false def
						/Decode [1 0] def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate {
							/DataSource
								DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse
								CSA get_csa_by_name 0 get /DeviceRGB eq{3}{1}ifelse /devicen_colorspace_dict AGMCORE_gget /TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt [ exch {0 1} repeat ] def
				 			currentdict imageormask_sys
				 		}
						{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						} ifelse
 					} ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget /names_index known {
	 					Operator/imagemask ne{
	 						MultipleDataSources {
		 						/DataSource [ DataSource devn_sep_datasource /exec cvx ] cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource /DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						} ifelse
							invert_image_samples
	 					} if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict /_Filters known {_Filters AGMIMG_flushfilters} if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{ 			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN [
				AGMIMG_c 0 ne {/Cyan} if
				AGMIMG_m 0 ne {/Magenta} if
				AGMIMG_y 0 ne {/Yellow} if
				AGMIMG_k 0 ne {/Black} if
				] /DeviceCMYK {}] setcolorspace
				AGMIMG_c 0 ne {AGMIMG_c} if
				AGMIMG_m 0 ne {AGMIMG_m} if
				AGMIMG_y 0 ne {AGMIMG_y} if
				AGMIMG_k 0 ne {AGMIMG_k} if
				setcolor			
			}{	
				/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def
				[/Indexed 				
					[
						/DeviceN [
							AGMIMG_c 0 ne {/Cyan} if
							AGMIMG_m 0 ne {/Magenta} if
							AGMIMG_y 0 ne {/Yellow} if
							AGMIMG_k 0 ne {/Black} if
						] 
						/DeviceCMYK {
							AGMIMG_k 0 eq {0} if
							AGMIMG_y 0 eq {0 exch} if
							AGMIMG_m 0 eq {0 3 1 roll} if
							AGMIMG_c 0 eq {0 4 1 roll} if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				] setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation /Black /DeviceGray {}] setcolorspace
			gsave
			/Black
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 1 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Yellow /DeviceGray {}] setcolorspace
			gsave
			/Yellow
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 2 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Magenta /DeviceGray {}] setcolorspace
			gsave
			/Magenta
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 3 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Cyan /DeviceGray {}] setcolorspace
			gsave
			/Cyan 
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		} if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
} def
/indexed_imageormask
{
	begin
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup /CSA known {
					/CSA get get_csa_by_name
				}{
					/Names get
				} ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN {
					/devicen_colorspace_dict AGMCORE_gget /names_index known {
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					} ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator /imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN {
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget begin
					CSA get_csa_by_name 0 get /DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and {
						[/Indexed [/DeviceN [/Cyan /Magenta /Yellow /Black] /DeviceCMYK {}] HiVal Lookup]
						setcolorspace
					} if
					end
				} ifelse
				imageormask
				Indexed_DeviceN {
					end
				} if
			}{ 
				Operator /imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict /_Filters known {_Filters AGMIMG_flushfilters} if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not {
			currentcolorspace 
			dup 1 /DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		} if
		currentdict 
		Operator /imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask {
				level3 {process_mask_L3 AGMIMG_&image}{masked_image_simulation}ifelse
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
  /OPIimage
  {
  	dup type /dicttype ne{
  		10 dict begin
  			/DataSource xdf
  			/ImageMatrix xdf
  			/BitsPerComponent xdf
  			/Height xdf
  			/Width xdf
  			/ImageType 1 def
  			/Decode [0 1 def]
  			currentdict
  		end
  	}if
  	dup begin
  		/NComponents 1 cdndf
  		/MultipleDataSources false cdndf
  		/SkipImageProc {false} cdndf
  		/HostSepColorImage false cdndf
  		/Decode [
  				0 
  				currentcolorspace 0 get /Indexed eq{
  					2 BitsPerComponent exp 1 sub
  				}{
  					1
  				}ifelse
  		] cdndf
  		/Operator /image cdndf
  	end
  	/sep_colorspace_dict AGMCORE_gget null eq{
  		imageormask
  	}{
  		gsave
  		dup begin invert_image_samples end
  		sep_imageormask
  		grestore
  	}ifelse
  }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter /WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0 (%EndMask) /SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not {exit} if
	}loop
	WriteFilter closefile
	end
}def
/cachemask_level3
{
	currentfile
	<<
		/Filter [ /SubFileDecode /ASCII85Decode /RunLengthDecode ]
		/DecodeParms [ << /EODCount 0 /EODString (%EndMask) >> null null ]
		/Intent 1
	>>
	/ReusableStreamDecode filter
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type /dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode [/customcolor_tint AGMCORE_gget 0] def
				/Operator /image def
				/HostSepColorImage false def
				/SkipImageProc {false} def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA [ /DeviceCMYK ] 
			/TintMethod /Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components [ AGMIMG_colorAry aload pop pop ] 
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage /customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			AGMIMG_&customcolorimage
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt /AGMIMG_xSign? exch def /AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign? {floor 0.1 sub}{ceiling 0.1 add} ifelse exch
		AGMIMG_xSign? {floor 0.1 sub}{ceiling 0.1 add} ifelse exch
		itransform /AGMIMG_llY exch def /AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign? {ceiling 0.1 add}{floor 0.1 sub} ifelse exch
		AGMIMG_xSign? {ceiling 0.1 add}{floor 0.1 sub} ifelse exch
		itransform /AGMIMG_urY exch def /AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub  AGMIMG_llX AGMIMG_llY] concat
	}{
	}ifelse
	end
} def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					} if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf} true 4 colorimage	
		end
	} def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				} currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get /DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub} currenttransfer addprocs settransfer
						currentdict imageormask
					}{ 
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub} exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub} exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub} exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub} exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get /DeviceGray eq {
						{255 mul round cvi ColorLookup exch get 0 get} currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get /DeviceCMYK eq {
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub} exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{ 
							currentcolortransfer
							{pop 1} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get} exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{ 
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div} currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get /DeviceGray eq {
					{HiVal mul round cvi Lookup exch get HiVal div} currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get /DeviceCMYK eq {
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{ 
						currentcolortransfer
						{pop 1} exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div} exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div} exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div} exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict /setpacking known
{
	setpacking
} if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/doc_setup get exec
Adobe_CoolType_Core/doc_setup get exec
Adobe_AGM_Image/doc_setup get exec
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: (Page 1) 1
%%EndPageComments
%%BeginPageSetup
/currentdistillerparams where
{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse
{ userdict /AI11_PDFMark5 /cleartomark load put
userdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}
{ userdict /AI11_PDFMark5 /pdfmark load put
userdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse
[/NamespacePush AI11_PDFMark5
[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5
[{ai_metadata_stream_123}
currentfile 0 (%  &&end XMP packet marker&&)
/SubFileDecode filter AI11_ReadMetadata_PDFMark5
<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="3.1.1-111">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">genesis.dvi</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/"
            xmlns:xapGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xap:CreatorTool>Adobe Illustrator CS2</xap:CreatorTool>
         <xap:CreateDate>2006-11-23T17:43:58+05:30</xap:CreateDate>
         <xap:ModifyDate>2006-12-07T14:08:43-05:00</xap:ModifyDate>
         <xap:MetadataDate>2006-12-07T14:08:43-05:00</xap:MetadataDate>
         <xap:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xapGImg:width>256</xapGImg:width>
                  <xapGImg:height>112</xapGImg:height>
                  <xapGImg:format>JPEG</xapGImg:format>
                  <xapGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAcAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A7zDqest+bV3pB1CU6PFo&#xA;tvfpYcIOAnluZoGPP0/WpxiBpz617bYqzAEEVBqPEYq7FXYq7FXYq7FXYq7FXYq7FXYqwTznr3mH&#xA;TvP3lWx05ru4sNRg1CS90y0Wx5SNaCExtzu/TKj98eXGUdqd8VRH5W6xreraXq8+r3M889vrF/Zw&#xA;x3CWySQw20xjSNvqqrGzAD4iC1T0NMVZnirsVdirsVYf+Zep6xp1jojaXfyWEl5rWnWFw8SQSFoL&#xA;ucRSCk8cwB4tUEDrirLwRXjWrACvjv3xVvFXYq7FXYq7FXYq7FXYq7FXYqxL819X1bRvy91vVtJu&#xA;2stQsYPWt51SKSjKw2KzJIhBrvtirKYEaKKOJ5mmkVQDLJxDvxoCzBAi1PfioGKpJqHkXy9f6zLr&#xA;U4vI9TmgW1kuba/vrUmBCWWMLbzRKAGYtsOpJ64qmkEWm6Rp9taIyWtlbrFa2yyPsBtHEnJzVmOy&#xA;ipqT74qi8VdirsVdirsVdirsVdirsVWtLGjIruqtIeMakgFiAWIHjsCcVSy/8saNf63Y63cxytqW&#xA;mpJHZTJcTxqizU9QenG6xtz4jlyU1oPDFW9A8s6PoENzDpcUkUd3cSXdwJZ57gtPMeUj1neQgu25&#xA;p3xVNMVdirsVdiqVeYPLGjeYILeDVY5ZY7SeO7t/Snntis8R5RycoHiaqHcVOx3xVU0fy/pmkG4a&#xA;zE7SXTK081zc3F3I3AUUepcySuFXsoNOvjiqY4q7FXYq7FXYq7FXYq7FXYq7FUu8weX9J8w6RPpG&#xA;rRNPp90AtxCsssPNQa0LQtG9NtxXFVPS/LGk6ZeSXlv9ZkupYxEZbu8urwiMHlxT6zLNwBO540rt&#xA;Xpiqa4qhtS02x1OxnsL+BbizuFKTQuKqyn9RHUEbg4qx3TdSvvLt9BoeuTtcWFwwi0TW5TVnY/Zt&#xA;Ltu04/YfpIP8vqqyvFXYq7FXYq7FXYq7FWpGZUZlUuwBIQUBJHYVoN8VY7oOg30t9/iHzDxfWXUp&#xA;aWiHnDYQv1iiP7Ujf7tl/a6CijFWR4q7FXYq7FXYq7FXYq7FWH63a6z5c1SfzJpKzahpdyQ+u6Kp&#xA;MknwqF+t2QJ/vFVRziGzgbfEN1WT6Zqen6pp8Go6dOl1ZXSCSCeM1VlP+e47YqicVdirsVdirsVd&#xA;irsVYr5i8xajc6ifLPlkqdZKq2oagy84dOhfpJIOjzOP7qLv9pvh6qp3oejW2jaXDp1vJLMkXItP&#xA;cOZZZJHYvJJI7dWd2LH8MVR+KuxV2KobUtNsdTsZ7C/gW4s7hSk0Liqsp/UR1BG4OKsd03Ur7y7f&#xA;QaHrk7XFhcMItE1uU1Z2P2bS7btOP2H6SD/L6qsrxV2KuxV2KuxVLte16x0Sx+t3fJ2dhFbW0Q5z&#xA;TzP9iGFP2nb+00AJxVdob63Jp6y6ykMN9KzOba3qywoxqkRcn946j7TAAE9BTFUfirsVdirsVdir&#xA;sVdirsVdirsVYVqemah5T1CfX9Age60e6cza9oMIq3I/bvbJP9+95Ix/edR8f2lWWaZqen6pp8Go&#xA;6dOl1ZXSCSCeM1VlP+e47YqicVdirsVdirsVYr5i8xajc6ifLPlkqdZKq2oagy84dOhfpJIOjzOP&#xA;7qLv9pvh6qpv5d8u6doGnCxsQxqzS3NzK3OaeZ95JppDu7uep+gbYqmeKuxV2KuxV2KobUtNsdTs&#xA;Z7C/gW4s7hSk0Liqsp/UR1BG4OKsd03Ur7y7fQaHrk7XFhcMItE1uU1Z2P2bS7btOP2H6SD/AC+q&#xA;rK8VdirsVQmpavp2mRwvezCIXEyW1utCzSTSmiIiKGZifYbCpOwOKq0lnaS3ENzLCj3Fvy+rzMoL&#xA;x+oKPwY7ryGxpiqrirsVdirsVdirsVdirsVdirsVdirsVYVqemah5T1CfX9Age60e6cza9oMIq3I&#xA;/bvbJP8AfveSMf3nUfH9pVlmmanp+qafBqOnTpdWV0gkgnjNVZT/AJ7jtiqJxV2KuxVivmLzFqNz&#xA;qJ8s+WSp1kqrahqDLzh06F+kkg6PM4/uou/2m+Hqqm/l3y7p2gacLGxDGrNLc3Mrc5p5n3kmmkO7&#xA;u56n6BtiqZ4q7FXYq7FXYq7FXYqhtS02x1OxnsL+BbizuFKTQuKqyn9RHUEbg4qx3TdSvvLt9Boe&#xA;uTtcWFwwi0TW5TVnY/ZtLtu04/YfpIP8vqqyvFXYqklj5cYa7Prmpzi9vgXi01ePGKztmP2IlJb9&#xA;5IB+9k6t0FFFMVTvFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqwrU9M1DynqE+v6BA91o905m17Q&#xA;YRVuR+3e2Sf797yRj+86j4/tKss0zU9P1TT4NR06dLqyukEkE8ZqrKf89x2xVE4qxXzF5i1G51E+&#xA;WfLJU6yVVtQ1Bl5w6dC/SSQdHmcf3UXf7TfD1VTfy75d07QNOFjYhjVmlubmVuc08z7yTTSHd3c9&#xA;T9A2xVM8VdirsVdirsVdirsVdirsVQ2pabY6nYz2F/AtxZ3ClJoXFVZT+ojqCNwcVfE/mT89vzDv&#xA;b0xaZr17a6TaOyacodVnMKsfTNxKiq0r8Kci2Kae8/8AONv5k655ysdZTX7uS71Owa3VXIjSMwMr&#xA;heKIq/HzVvUbvVfDFBe0Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXzD+ffn7WPI/my40P&#xA;yZeS6THqcKX2rpFwKfWJGYc4Aykws6gGQoRyND1qSpAY/wDlR+d/5l3Ou2/li41f60utSJaW19fL&#xA;68lpLKwHrIftSGnRHPGtO1aqkPqvy75d07QNOFjYhjVmlubmVuc08z7yTTSHd3c9T9A2xQmeKuxV&#xA;2KuxV2KuxV2KuxV2KuxVLte16x0Sx+t3fJ2dhFbW0Q5zTzP9iGFP2nb+00AJxV8u+Yv+cV/PUt8b&#xA;zSPqMdreO0v6PadudoHYsIS5TjII1IHJevh4qbex/kX+VOofl5Yapb6i0Fxeag0Er3lu7FSI1cej&#xA;wdVI9JmJ5/tcugpih6hirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVeE/n/+TmoedfMWl3nl&#xA;6JxrBt3jvZZgUsvQhJMZebekpZ+KoAajc8Qu6kFjH5ef84/+cPJ2u2Hm3WbaHUhps4f9D2Uhe44k&#xA;MvrqWVUZomKuIw1W8aihVJfTuKHYq7FXYq7FXYq7FXYq7FXYql2va9Y6JY/W7vk7OwitraIc5p5n&#xA;+xDCn7Tt/aaAE4qlug6DfS33+IfMPF9ZdSlpaIecNhC/WKI/tSN/u2X9roKKMVZHirsVY4Nev9K1&#xA;06drvD6jqExGi6oi8I+Tmos7gVISUf7rbpINvtbFVkeKuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kux&#xA;VIrjzTGfMsPl/Trc310gEuqyqwWKyhZSUMrUaskh+xENyPiNB1VT3FXYqlHmfV9T0iwS/s9PbUoY&#xA;ZAdQgiP+kC2oeckCUPqOhoeFRUVpvQYqjtM1PT9U0+DUdOnS6srpBJBPGaqyn/PcdsVROKuxV2Ku&#xA;xV2KuxV2Kpdr2vWOiWP1u75OzsIra2iHOaeZ/sQwp+07f2mgBOKpboOg30t9/iHzDxfWXUpaWiHn&#xA;DYQv1iiP7Ujf7tl/a6CijFWR4q7FXYqsmggnj9OaNZYyQ3BwGFVIZTQ+DAEYqhNR1rTtOuLOC9kM&#xA;Jv5fQtpGVvTMtKrG0lOKs/7AY/EdhviqOxV2KuxV2KuxV2KuxV2KuxV2KuxV2KqcdxbyvLHFKjyQ&#xA;MEmRWBKMVDBWA6HiwO/bFUJouhaXotq9tp8PpJLK887szPJJLKeTySSOWd2Pix9sVR+KuxV2KoLT&#xA;NF0vSzdfo+3W2W9na6uEQng0zgB3Ck8VLcatxAqd+pOKq1jf2V/aR3ljcR3VpMOUU8LB0YVpVWWo&#xA;O+Kq+KuxV2KuxV2Kpdr2vWOiWP1u75OzsIra2iHOaeZ/sQwp+07f2mgBOKpboOg30t9/iHzDxfWX&#xA;UpaWiHnDYQv1iiP7Ujf7tl/a6CijFWR4q7FXYq7FXYqhtS02x1OxnsL+BbizuFKTQuKqyn9RHUEb&#xA;g4qo6Hp13punrZXN8+oeizCC4mAE3o1/drKwP7x1Gxeg5dTvviqPxV2KuxV2KuxV2KuxV2KuxV2K&#xA;pT5mHmOSwS20AxRXlzIIpL6bdbWIgl51j/3a4pRE6ciK7A4qv8u+XdO0DThY2IY1Zpbm5lbnNPM+&#xA;8k00h3d3PU/QNsVTPFXYq7FXYq7FWMW/li+0fzJ9f0GSOPSNSkZ9a0qUlY1lKk/W7XiG4SMwAkT7&#xA;L/a2YVKrJ8VdirsVdiqC1nVoNK06W+mjlnEfFUgt0MkskjsESNFHVmZgBXbxIGKpToOg30t9/iHz&#xA;DxfWXUpaWiHnDYQv1iiP7Ujf7tl/a6CijFWR4q7FXYq7FXYq7FXYq1IgdGRqgMCCVJU0O2zLQj5j&#xA;FWN6JNrWkaimg6n62oWcoY6TrRBdiqDkbe8YD4ZVUfDKdpB1+PqqyXFXYq7FXYq7FXYq7FXYqxfX&#xA;fMuoTasPLnlpY5tYASTUbyUF7ewgbcNKAV5yyD+7iqCftGi9VWUYq7FXYq7FXYq7FXYq7FWPeatQ&#xA;8xaTJb6tYQ/pDSrcMuraXGlbkxkg/WLY/tvFTeL9odPipVVONM1Ow1TT7fUNPnS5srpBJBPGaqyn&#xA;v/Z2xVE4qla+Z9GbzG/lwSSnWI4Fu3g9CfgIHJVZPW4ejQspX7fUEdcVTTFXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FUqv/ADPo1hrdjolzJKupakkkllClvPIrrDT1D6kaNGvDkOXJhSo8cVb0DzLo+vxXMuly&#xA;ySx2dxJaXBkgngKzwnjIlJ0jJKNsad8VTTFXYq7FXYqlev8AmXR9AitpdUlkijvLiO0tzHBPOWnm&#xA;PGNKQJIQXbYV74q7TfMuj6lqmpaVZyyPfaQ6R6hG8E8QjaReaAPIio/JCGHBjtv0xVHwWlrbtM8E&#xA;McTXD+rOyKFMkhAXm5A+JqKBU4qq4q7FXYq7FXYq7FXYq7FXYqlmua3ovlnRp9U1JzaaZaDlPJFD&#xA;JKEDNuxSFXalTuaYqpR+bdEk12DQRJOuq3Fsb2K3e1uUH1cUBcyPGsa0LBSGYEE064qxy9h8w2X5&#xA;oXmuwaDeahpkmi29hHNbS2Klp4rmadgEuLmBqcZgKkda9t8VZpp8t3NY2815B9Vu5I0ee2DCT0nY&#xA;AtHzXZuJ2qOuKq+KuxV2KuxV2KuxV2KuxV2KuxVgnnPy3qOrefvKt2tldy6Tp0GoJe3tpdi0aN7s&#xA;QiIVjngnYD0Ty4gjp17Kq/5WaLquj6Vq9tqNjPYmbWL+8tFuZo7iR7e5mMkTNIktwxbifi5tyr49&#xA;cVZpirsVdirsVYZ+aWi6rrGl6Ra6dYz3vo6xYXd2LeaO3kS3tphJKyyPLAwbiPh4Nyr4dcVU/Inl&#xA;7UtH81+cJZrO5h03ULm1l026urlbp5lhtUgcl2mnn+2hK+pT4adOgVZvirsVdirsVdirsVdirsVd&#xA;irsVYl+a+katrP5e63pOk2jXuoX0Ho28CvFHVmYblpnjQAU33xVKtK8sajZ/mha6zBp2oLpLaJNZ&#xA;z3V7ffXDHcS3EM6pxmuriUUWIq3AceVOo3xV/9k=</xapGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xap:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/">
         <xapMM:DocumentID>uuid:B29822BCEB7ADB1188C7FE7CDF27E46F</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:2F00F5B41F86DB11ACC4FC39F6CB68DA</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource">
         </xapMM:DerivedFrom>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>
%  &&end XMP packet marker&&
[{ai_metadata_stream_123}
<</Type /Metadata /Subtype /XML>>
/PUT AI11_PDFMark5
[/Document
1 dict begin /Metadata {ai_metadata_stream_123} def
currentdict end /BDC AI11_PDFMark5
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
Adobe_AGM_Utils begin
Adobe_AGM_Core/page_setup get exec
Adobe_AGM_Core/capture_currentpagedevice get exec
Adobe_CoolType_Core/page_setup get exec
Adobe_AGM_Image/page_setup get exec
%%EndPageSetup
Adobe_AGM_Core/AGMCORE_save save ddf
1 -1 scale 0 -102.071 translate
[1 0 0 1 0 0 ]  concat
% page clip
gsave
newpath
gsave % PSGState
0 0 mo
0 102.071 li
233.08 102.071 li
233.08 0 li
cp
clp
[1 0 0 1 0 0 ] concat
gsave % PSGState
233.08 102.071 mo
0 102.071 li
0 0 li
233.08 0 li
233.08 102.071 li
cp
clp
gsave % PSGState
1.48926 1.43701 mo
1.48926 100.437 li
232.947 100.437 li
232.947 1.43701 li
1.48926 1.43701 li
cp
clp
54.3115 50.4321 mo
54.3115 53.2441 52.0322 55.5239 49.2202 55.5239 cv
46.4092 55.5239 44.1289 53.2441 44.1289 50.4321 cv
44.1289 47.6206 46.4092 45.3413 49.2202 45.3413 cv
52.0322 45.3413 54.3115 47.6206 54.3115 50.4321 cv
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 1 cmyk
ef
.90918 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
54.3115 50.4321 mo
54.3115 53.2441 52.0322 55.5239 49.2202 55.5239 cv
46.4092 55.5239 44.1289 53.2441 44.1289 50.4321 cv
44.1289 47.6206 46.4092 45.3413 49.2202 45.3413 cv
52.0322 45.3413 54.3115 47.6206 54.3115 50.4321 cv
cp
@
187.78 50.4321 mo
187.78 53.2441 185.501 55.5239 182.69 55.5239 cv
179.877 55.5239 177.598 53.2441 177.598 50.4321 cv
177.598 47.6206 179.877 45.3413 182.69 45.3413 cv
185.501 45.3413 187.78 47.6206 187.78 50.4321 cv
ef
187.78 50.4321 mo
187.78 53.2441 185.501 55.5239 182.69 55.5239 cv
179.877 55.5239 177.598 53.2441 177.598 50.4321 cv
177.598 47.6206 179.877 45.3413 182.69 45.3413 cv
185.501 45.3413 187.78 47.6206 187.78 50.4321 cv
cp
@
12.8535 14.0649 mo
49.2202 50.4321 li
@
49.2202 50.4321 mo
12.8535 86.7998 li
@
[7.27344 7.27344 ] 0 dsh
49.2202 50.4321 mo
85.5879 14.0649 li
@
49.2202 50.4321 mo
85.5879 86.7998 li
@
[] 0 dsh
147.443 15.187 mo
183.811 51.5537 li
@
183.811 51.5537 mo
220.179 15.187 li
@
[7.27344 7.27344 ] 0 dsh
147.443 87.9219 mo
183.811 51.5537 li
@
183.811 51.5537 mo
220.179 87.9219 li
@
%ADOBeginSubsetFont: Times-Roman Initial
%ADOt1write: (1.0.24)
13 dict dup begin
/FontType 1 def
/FontName /Times-Roman def
/FontInfo 6 dict dup begin
/Notice (Copyright (c) 1985, 1987, 1989, 1990 Adobe Systems Incorporated.  All Rights Reserved.Times is a trademark of Linotype AG and/or its subsidiaries.) def
/Weight (Roman) def
/ItalicAngle 0 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 72 /H put
dup 76 /L put
def
/UniqueID 28416 def
/FontBBox {-168 -218 1000 898} def
end
systemdict begin
dup /Private
13 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-14 0 450 460 662 676 683 683] def
/OtherBlues [-218 -217 262 270] def
/FamilyBlues [-14 0 450 460 662 676] def
/FamilyOtherBlues [-218 -217 262 270 394 394] def
/BlueScale 0.03963 def
/StdHW [28] def
/StdVW [84] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
3 dict dup begin
/H <1C60D8A8C9B6079F1E4884809AF27C32C4C4644B748B72386090B6EA72F2
CAD492799B13A490C22BB769448B5BE5145154E5257C346442332292571F1722
B637B36F195964360C86F3C2FA20D5968E5EF117A87C5275E3CF4EDCBA851C9A
2685EF777C52F37A9D6571C1FF8201E097F935E15B632A692C95A8A199E69FDF
3449B5C7E7D9F966187E> |-
/L <1C60D8A8C9B7D8BE0F8EC9715ACACAD00121C783E9B1B74E06269E6C1BD1
0EB8F3CA6BD54577402CAF2A78773F949B1501E5B16146BEC11272135D8DC538
A55C9213B6FC35678138B3BFC9D2E72113DB513F7A053A3CE42200BAA4D31F19
390D9F7485D8FA8204DE1387> |-
/.notdef <1C60D8A8C9B8707C25> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/KCFLCP+Times-Roman /Times-Roman findfont def
/KCFLCP+Times-Roman*1 
[
72{/.notdef}repeat /H 3{/.notdef}repeat /L 179{/.notdef}repeat
] KCFLCP+Times-Roman nfnt
KCFLCP+Times-Roman*1  [10.9102 0 0 -10.9102 0 0 ]mfnt sfnt
1.48975 9.52051 mov
(L) sh
1.48975 100.438 mov
(L) sh
90.1348 9.52051 mov
(H) sh
90.1348 100.438 mov
(H) sh
134.959 9.52051 mov
(L) sh
223.604 9.52051 mov
(L) sh
134.959 100.438 mov
(H) sh
223.593 100.438 mov
(H) sh
grestore % PSGState
grestore % PSGState
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
% page clip
grestore
grestore % PSGState
Adobe_AGM_Core/AGMCORE_save get restore
%%PageTrailer
[/EMC AI11_PDFMark5
[/NamespacePop AI11_PDFMark5
[
[/CSA [/0 ]]
] del_res
/KCFLCP+Times-Roman*1 ufnt
Adobe_AGM_Image/page_trailer get exec
Adobe_CoolType_Core/page_trailer get exec
Adobe_AGM_Core/page_trailer get exec
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/doc_trailer get exec
Adobe_CoolType_Core/doc_trailer get exec
Adobe_AGM_Core/doc_trailer get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 12.0
%%AI8_CreatorVersion: 12.0.1
%%For: (John Conery) (Beacon)
%%Title: (1.eps)
%%CreationDate: 12/7/2006 2:08 PM
%AI9_DataStream
%Gb!lDB6u,?cKP5>Sqm=GW=[btH7GI2,U#=HOT?d8/%!O9hKte(pU=MQT&'^n4o9N^[Eg!M[O"STA6G5<S"$7rI,#g&5>%,h$:-_n
%"B-!R9[T89R`Yb^D/M69=1i4JP[IBLW0gtuW,=Z41-$715[RDg%U)jZ^%mI+cW\2]a,=DP17SVZ+]oY']e=5JD).]Vk;S#*0?11B
%,AsS7]q/#t_ZAZ(XAqAXGA;aR?^h<GDALGB./]0=3i2X[fKZ!h]"CiF1/o/VB03U:[j(R_(P;EDI\,pHO3jY;IPsOr+tN_+Z[C=f
%/^MDhA;"_BU8@n,:KRJ75b&/9CbQaA6mUDDr+J.PAisZ:94\b#+Ic0EVts]%MY`:4jUuC$U/SlfP7D190/GFR#BOufWi*.as(fFM
%>mRm]KS5iT=tOt^5R;Xl%7O]K4noO3.ml,/Cn?b1?d4A=E'#,b,cZaBGllr@dcZCA2/;a:OMeHcs(M((Wc>o_+8cOAKZS0CFJI,[
%EZ&>.PP`88n1kW>M^^m)RG?b-a3bUCk1LlJ8EGJ[63N[LcpnQj6.725@A>PH>(R)(!.YJ=$Z+L4Tolnt"s8J;+bq2<'"M72,7S-g
%)"c?UbVI!Sq7q(tEgm$kjo8!07E!Ma4<fZKB2JCt1EWR6fsQLnjqH">0fMAAUR>@@SI+</?:%S">iB97)Z'r;[DDkV/H)",+tBD8
%5F.#L9Em]PH2&qWjejX;Ip!OZ=VaV4QB]s8\2e8ha[!7-#(C,=:b@l^C7.bt-3MNUTh[c^Fn4`<DP#0A[<s$q_)M.BC?73M/!lrD
%\I9eG1=W;RTX7bCA8q-D%4]kBU_2iJkq_K8_+@7mWEd`SW&ad,C-WS_68bE/VO!GI;=Fm7J1132[*.eYNI`_WKO6tYHib_5/-6`G
%Jko'%I"B='(LSOO,s?cn5T5#:SQZJoaeOMN:H2'n8QZ.gUa`"/&4!g&H:RJbcHAR$=!@U:)UJb^!/_11Tq%?=!s`2+)UKmn1gpi-
%$oGgKquQrA4Fg5,oC*#LTc28`T4BXtF<SjS4TM#C>elnsB9GB!Ul0p#:lR/)jpe#U&:ci<\je@ef^c8/.e5g&!sHbf'F;Y%$0@s"
%BS90[7clbY8GGLi_^Eq7!`=#aQHPFZfLKnBR4_9JH.'e*%X4L<))<XO+d'g2E1cc`n=F#7bep!<#=bSOF<@O)p^)0HJ<Z7I;Win0
%P*o%aShPtNW8W5:.]^ung7[T6oVupY1J<u81=KeP:hLtiY0J@so$u-RH**)2oLWXBDQ^95m]P>V))D:eRaO$Hs1r&6<RT;[L*9"N
%?h,k8,/;[Cj<&-.:6S35?h,k>-,8!FjBjN0Ick_Yp71cY=<p?#?h1C",/;[Cj<&,CWK9X8?h1C(-,8!Fj<(5rPOptr+afIC-,8PK
%j=em$UroZYXcb0aC;jG[_UQY6.UB)d/(k8U;M?K4<01_M2k>O5oXf^DbD!J@C4ZgI&ETnFUmT'8C&j!=8'NamK"$=>F?#pe.P4!o
%q?F]LU_[i#(Qo8k%RXaA/7HJIZW0s`:T,UNin5VDXO(\S4#AAFC@Ea?PJ8giWLS^Xd(I5-'T+V?N">Z8</84f:$T;hK$26j-<u5$
%'%NpuR`/8UKjhK(Bi\qS7J.MQS3Te['gS"TI<$e!9nf`"r5k&_(_^1S81;T1kd")D-^U!7KV>45<Eur1<%Z6UU,,ElRKAZEK8$5%
%3PhBII"eD.3_=C[:s`buO`X3i*Q(qq-IE.E'fIe*gmh8UB<rN%dgEu0Kjg344.DR>V`&1pXJ:[D+L):>eE0G"3sL@B<)LMm.hp7X
%;&V>I162\RbU(b$`Ma=:`2q)I@PGE]Cb5nl#7r="0Jcl&9G/5&(]k9u<(JK>TV>[+&HssL-\Gp7d[X)fUo>+?M]%@@6N[gEK)_U=
%.FaIa:2U@06H*D/`X5E@'_DtS-AugMNt,2k0O0d2.>*f#"!q_*8Qa0A49DFR*pu.ebk@8Pm4_46/?!-*@**Af6O_ENFIb1j.:lu*
%,U$*BN4^^gP"\^#jN_JZ*RCU_W[]\/7B*$P7.)sq#=[7LPY<5PkndNs<#&FXGB,8tE9Y$CYfb*e"b7mdi<h7Tp*r)5R23DWf,:EG
%l&mlB1:7`iFZH*0ogC7ReRaCk1m`lkW\g&e+G!tOk"m_%;\X@O;YsiX'_AUk;HCCJ=]=hJ<QU2aLD?$g-tjC-,^$ji3XpLf<Cb5T
%GY7fueiZ'/$&)n5P'C8rf/MoQB'lY!CEM'ESX19>Cok;EkuU%sdk/g%Jl%Ui"]nGr)J#,>>5`3YG8U)!lF7B%;!Db@1'.u<W9dAc
%!o!X'8>YS^>_[F7o4d.7;rAI]:O^V;B`!ZF^dC;QcQk^XmOoWi]ZKGDQiq,hda[K$,+j6):5$HN4RI@71O_;'9Z7$!TBpV@+1r`p
%6065F5j6H_mmI)HjHLHmT9Hh,NVgi`*[aY$acH7*Lg^hipK@'])Pg;G!ZN1'Gkem)q"U@.-ui8_#:\r`dF26]+87ec1Wb^IT@mW)
%kE@]Qlgl>rpd2ba"&dQl_C,5EfoR#h6'+k)PO8@"(D+Pp0I]c-*b%VdQ0ca!JKOXcTHBS4=."C*j";\^IaOQg;QcYY9r<CcQpUhD
%*t?5B0l!:kP)0-j*]G'7B$&@`dnbF_'X2cf2=)\\>S"E"fSTk^3??C6e8d/gB7E^q3F^]M+s^fn!m`C3\DDVQ-V*bNSR[lY=hfa3
%+%,AarP<H/Ak$er<a24,NB"1%+6"@'E_uNok609=^4(+?GCi2.-jJouP:Y_hJ3XhU`hI'%MhJi6L&)u)O=XFrAZ6'Z.W1iZil26r
%<R\U\Zo]VBNX:SQ9q>dj:3H8u4N@^>Qj_@#Ji(!a1q4ZV\kq+?k/5k[3rG2S&;MqeDInE;8`O#Lj'/?[RhX_,:'<CXG[Z8;Cj.9S
%3J*W^l/=J$3J*\uJ8gkr*1uT>m,1HVSj;Jh`X!9^Zl>*1"&`p-5qu4$n;&)pJoF&V:ZO]61^td0'r>2cnCIX]&8'-XdlG6$fC`dZ
%[/!(HB:'QdjMugY2c\kR9:p<D`;,3B"OGI`P'i^#d8\0"#rn+V_2cO1X7u$G-+.;UD*?l1]QjonLe*TKn:JXYUs%ZnREBDEN3.`Z
%[h-ku=H(P'\1H6G%Hj[o/kkEVj73!ln10H%#@$!M1KYP>Pp&VKdPLGM8=H3Lc,!cX_ZVoc7U/48#\ZPtmTjpao=Z#V00N.H?-`a3
%h@$7t3%BXP`L(aGR#@TQS&o3>FB,=`'e)9u$8^,m?\:bGCkVj(rd03_3OGk2&Xe(XH<0Meaq[<&D7uT2.jK#h$DY=+6"Y$)n%]$a
%INOOGW!T'j.d&.R.3(/JY<TQH4GK:^9hd;>YOLuo@AFcFr3SNaM]Y]k]_YlYJs:NLSeIumR.Ft?SI>b_8EG]jM=TI1W7m=H1u5u4
%dGK0ClUa^(gmAb,\3T9fek@Y*BfgsU_Tu2cC!`>QbnuMRlHD]Nj@L5Z:X/kIiB/B23hH74`kR*/7*H;_0+P,(09KZ5S/_"7(ofq5
%\!0Kan,bepIp_^<9)_Ni:Z3fU'gDPH?RP'lDtNDb?n-C:I!VK<r;\<7NSoc[ToUl=*pj/\"d>ken-/P%;5i`[44,VifpAqW!qKBY
%+L!mRKYE:.Y4;.geO0?iWONXur]&Y#5]tj='1AiO305sc$HWte;#a%7Ndr">g0p((/Y?iO4-`Q=IK5!056j>Z%k%:;*^#rMcR4.4
%r!KY%V<Va:>gL3U$ASQu+X=SEa5LNeVGRKYd:UG1_I));0%\/LPK*s6Y'fqU.Mj>q<T'sj1#chN+&T8"?I0)Si\+h<Enqn/?]4rQ
%T):Z2o)G1$]5"J)-aKu(`_`gLSC*e*B^HK<?"?Qc;WV2`NIe$[aFR4lRJALp[1Ct"*J\69i@js)L:>03#E>:aCK"<hFlpFm/1N)L
%",%%F;VAsM-3%jDofo!ZlJcjeNAd6KkEn?6N9^sm#SR)SjdMJPWsLPOoY1+7#=?IE^\i!r;C:DdkCt((qY+b7mi4-f6%&_0^Uoql
%_a3a@el%AS\t7-"*fo>"s2DnoHJY4:d(7Wche+2?cFr8:>:$X"s-JRqR1?9;qVt=WMII34L.+T0(!lj5W;L.8.!QRd.Dkf98C]rU
%<;euDcT^/6@otWTjXBt48X`&"'mZE6SDSQ.3A_n#FQVI@+_;ks?&LXFiVoaVh5ahi<_%naA"m<FMT7OoC^Ibq$\.]_)ucI4YhC2C
%\F*`aR*#1TP>8GuM>P9PI#o"Rh$GJ$K0>#:&(3a0Ym=X9IL*SQ7@He&3W$sX#-M`A/R6n&FOaOU$FjlCJP^83E+<n1OgEpU@F,OB
%KE'"-.33bHh?O;F"B#@680751S83V6Of:L3cOb3biAK/^K'st&SJQmV*^7CTB5du*HE97sj/l@IBL@2Egi5;!+P>bp+*6k&&%3f`
%V'df_aZ9q,EA=([;.$Ld34g70#J2pIC;,3\n'\d:B>"$(eg108`qK`0Of%2.UFiSD>>kgH1OBm"f@`ML@r:@24uhZ$#`:SYc%hgd
%:F>UqB,^mt_o^'-V*>tGN++/0-Slu2DE'>0gP?NXA:A0%c:tj`Acl'r%Mn66M8D`GiFa#)W@[D"^Na/omTIr67;k/Q+r5b$l(9)O
%-VP5>85kt&UMV76hSfHRHSZp9?#I`CHb@d@6qD5?o_H3)4+kZHain,&gkV]*qNANh6Dei[qrEHeVlIGX+.;$O'[tVJqLY(WhA__q
%A6;OUA8[3t"*.W[/W!"GoF4_u>OA%sU,Nsb&Xs@=GCZVmeVH."4KGJQD]/b=V/3.=VQ,rh:C6,8FJE#11(=sU3lP4qPNtSdJMY4f
%%F^Otl81j[W$=Q,O$\Ur`A.CDV#E"pB"sC>M>hHD]MDKeb#m*]1&=L-\</arIo"98;t#tpY"A#49l2_:pq@fVLWXqiAfa3KX;njB
%i5g8D-tlAah!.Y^E\\KH:ZQg.->hMl55u+nQ.@o*UD;^14Qmr8a%AsDZepu7CbQh!5+3&!INJuhL)egp9<9G;HU9pt3d/S='7Y;0
%po.8pelB[12rk^0XqbN(Be.G`C/$)8^h(HW)B+4lk=#*+9=9U15jPZ/'^-![KX1Mt+XPX7ZE3rMZKX1Td?#_09MXpaAg;3YV=)95
%]Tn@[a]IP*Zd4P^O0O6:(?73A$AhP(Jg0Y3gUQ+t*p`(!GI\Dt.8d&#!:jD/`!7O5NdNn(\24aRd&hGK;UnJJ.2CYQ&?=A1-edFq
%=I]gH.@s;*el/Lp!EL^sJ;l%>;"7AoL\9"$V@P>=c"<n[T1B('"P1L^31rU,HH9Sh8Rq79=C?5,J[)YFTK`Nis6'K^G.+ob#TI/h
%@YcK7kIj1"<Y[P7:RiaJ1",4ET(>^p!=^fA1h1912GL(I\Q]Nj'h3-$0QY%j6i'sBH!%%l<(1_ZgDWRQ,E?%ZFU)<4b=7t\/]Rh0
%%p^_6ES_FC%Wi<K8i,fT9H)_tp/'Y>eSK%E@H+Y[W"<68#I5hIltBUj,/ilY/@i+';"Z,:EKSlT]s6ch-E/gBpAR%VN\']B*pabD
%l-fqZ>1C6D1U,.nd-q*mSMKWVWRd.^VHiISe3JZ?@9(j[^<Z&D[Kh!!So0b&X*EnPC98o9%)U$:asZ.fP72hm7>%)?)*e7dAjPJY
%T&;<QTW7cEQm/#;m(AJ#<Y_n?d"m,>Q;jGL\e+>/V(o#soh`&2lWWk*,k$P]Tqp.VH7()i^6&8!f/bRQ\R$.9*bEIREM`8OG]?4S
%#U^^YQ4,*B4SDGPY3\mdY-o#R(kRYb:%a[/-`SsO3#H.4&aV!3b$)!@`1OU@)%if27,JVATVWl"Bnj7L"Mu=2)d6Zg[7`$%bX417
%+#,M]?)2;7fT!oF@[seA(7mJ@Hn\Qnlm@8fc)ucICVj6a0pg6)&r[,>j?grO5m>t4TM16pjl>B+]#')c`/p`!l,m)mnD`hcl>KrM
%iL^AN`l;r)J1]m8>imasHJFFneL&srQKi7S2*-+f&.V)!dbEIQXOtVd/s;4Rj([V[G'AA!S5BrOk%$k;hHK%)iTH.oLWYa;eD=bf
%M&tMrP8"bbaAFeE(<Z+=k>:^.p#`]k=&&W?V9*CL'EglFL#V.9DCENSMP97op.Hh)p7;Z2mTurf(mdu?1fSM1*EFk!VF3m9o1@$>
%I^^/`St@!nk/DsXA+)TYRlmS9Wl"?PKh,t9+>gM)idQsF.;$U5)Kt-r>)r'9WW)Ti=b?>_*^T$)G6^0p+p=5Zijjec6<pNGTTTgm
%=g\T'6[nB/ANkf\mO=E/S%3h:TH;fbkt35?>b.:lhn&#aI>GnI?.$OF'd&*q8EGe&VQL58<*E/BkTca'@gY;r,sBff$c`$`S#P%L
%9jb25JfWE$iT5E0X'u5h>/]N?k),'QQ<;,]4`,t^OihSX^T=^.X_f4<iqCB&C.59ZInOU2],Oht<`l,D9[f$Qbkh1lj*=hI$56T)
%GjS#$<m"ZL13p"q41?qVG?\*MWS2^&@>bkofj[kHW\q>dG+YedKsp[$f"Q'jnkF<A2+pY;j17B'86B*NgFtP^Tk/qij<qs)-@*)#
%+5/+$V/k/hX:b&W9"h$4M;,NT<eNqeR5Rf>`!3<2F)#pT%Vnjbc-['Q=O4$0lee-+)9.Q\(_DVkdo+F#CZCKoduW'^;iu6FGBeIP
%Kb^PS^[4O7Np_*N.rqUm^3X1>27(#:I4+C8?u<YT[?nlJ`enDtEC,MoRpX:LCJ1c%f_jM?lSec_FCBk<W"J_i8O8lT2?<9-M92*l
%S\sek#ah-Q)R23,V7)&b*=j*nB!.V1G8Mhs6W]npC-$AWO/V2>2/S1mXmmuT^Xb%oQ<;IVKRjk=KE`YbqWa<'KNo2AV[.ENi'hF_
%Vt&s!4s-7s@_M1LmUE8B=Yl7grnKI^fjQI2GM<WgCTPeRq=R7eT/0jY1`5agPFgD^q6llr&+-Tm;Kl(5a9Ls=jR2^?%:5-)8acOc
%GK1J7Vc0,AgL,G);(i_E&Hc'!6P,ksI/JGlm-RnaI@2B6D6]+)dB*X8X>R#!q7VQ#!@r1DNZu>=;(Pp\Xo=>nCp<%?U&/o28[*5N
%ZT?*`d?)<pF=>B%T2L1sC(d+rp"d^TI+1GapB;em\"0Q/$0tZA7u&u#\OE'[VhkFS+#;RUiJ)6l$RGrGj('17`m'C8R0YsZB5._<
%O_@p0T-no9oe9X1@B?apLm]54eh4B;esBOu7'@DFUUuNa'>U%nYHkWZ4PSZfNNh!r7]aJb&9O@o\8[k_PM<T!D/S`LXR+n_Z`0^B
%rCK\,TCBujRFcuef%S%.nebeH,%d$+&;o<6D01ut;_)NS9=aH`D=dSAZ?4BGp8I$7kfg%@0*L)(!R6J'FfPj_*,;b*Ane"AV%tP`
%43hAP)`3eJB$OT?F.*tbB36@L<Y`V@p>Vp2[OIclEqI1Xf"1Ku.s,lQ?bKE3olf'CnSIslpgd[;DLP3k1o&IjgnlpW3BoQlDd/KY
%S[N]fqVE]4n)BYXF6AU+,^fCZ!i7WXetP'ed54YsAnL@pH`A,X9XC\%(VVEgh&k=7Q?M[TKL*_WZk;Vg1H3WpWI\br`S0eZ#TL$d
%IX^tc>O5=a2Pgr!8$&(gX@b4rc:?cUp_TR/DVfhVa`b'\l-%A91<Ie;SaSYA)/Ye]4YZbKZ#%[rP^bZrc.4LlldC"Bj`C=nnX:KI
%2X`<rGN$pETiH/"f^E(N8!i0gPU=VN9^2?3Z8@/2UHZP\9sHJe6SI1/[DKa:Z8YcAMGpTre86klW1jaW'iIiPXK7-$/sU@6Wma9r
%Vn;H0d86obFUu+3lVO\3^BoUd,'3P1$6d)h%`M4*C!@F^@"7`Y[Gt#Rji6%g\+hW^m2e`SnpO<M$9Nk#@)!XHk1a'>bdEU[74>5l
%g\\*4Z$Kh#Uf"l3lg-OdL#Z_Jp-E&cmaYc@7@o?jefr[Q?)tZYD6`)KO:>6$oqHk27q\aa&@Z!eYgu0UH`XF^;R!GfXLSO%"5AH@
%)0()'BC^rrC[-45bMgX>.h1)/f%.Ei(%2T2XEaEf0cBZh;erJ6G2")(>4$sJ`<tT2gB/C81[D8(kh9J,*3e"nK&08O,K>Im/QOP^
%DXBD'Zc.fE>4$RX0XPp1)%d]Mr[&)oq7Q0qhShNoW!=7PX/]qOq]QImKmDis;kl:%C>$dOEi;U7Cd=]VZ*;6qK>*Ve\3%^C0mVO=
%(KZF;B//Z2O?-G:oTFhU't_o_#S($B,H\G3].0MW(+':8E<!qVV@``)nrp7n_T06>@E6MhL:ZtUTm',DCQ].OlC:jF#9Fja2`2\q
%mj2,cOtTL-\[D)^=-3bhHVC!+2`CaHr.R_9gIpc/KSY@ToUsAc1d'9,^OFp(5IY$A1#K8$PK%6&\g9C].lg]b`:+"?.Ik_limdcj
%\DEaV>UMT79?-"Q/+*&bK#0nO[-:%'qS:i6m\/W&N9oNZc'd<'`m1AO6hWW'$4.VEjR/$a^V#V9rH`:IV2DJ*Q<t-KmQAg@h58PV
%?e"uHpVVUS94b7OSeIRIfPW7XI>.>c/(VmRj-TXKd?flT4]#1:#^&0d2JSrNF*Xe)T[</+Kd=-uIRIMCFS/)(.kk(@*nF,r,\,)N
%IF[M=R6`r04i43_"s6WE?`T$3<S/gog*gr&nVl*o\(<+AZ$Y20L,e0gHX:o/pD/l;]:Mh]f=A;c$WBD`Melh5XAs[12T6'EJg;ef
%VYXOhk[qIOO1ORNnZB`qhN6>!eNs00gPR^>TmcIn]b#Y">IZ>ORA2Ci;5X^p]pBC.rh3If?^I0g4&%AYgfi0iE5,ub=&Z-'P(kk*
%BWN*s+4>D]A*^\QA_0$QWGDr5.M7$3/S(;S4/6Yd,sNd)I<3F9hmTsYQhb5cO80ITGoJ8f/Z^b+@JS&?nX-7Z>gt@Tr)Rdd]O&!B
%*>h^RW@$W(Y#Oi?Uh5_cFhNYi02jVNJS?`hr0<a)D,eV\!-Q$qEon07Quq^oIa)U"<.!]BejB^-fBrEVU^F:dL1D671Q3rp?>%">
%FUSj#2d=V/TRPu*Aa(t%_Np1"B`2eNlDnEpl81lW0/-%]M-!JkF5I'V>AJ.#VQ$#.'hm(l2kOVQDD9UR_iu4rEW,=6!?tHJg2`2p
%bRTF5+`cVSe$,-nO+p`b)kjMm+<&6/qnh@g!?NZOAR7FjZ(33h]+tf9gpC(do'5Ij6/Hg?B'r1o'T@<QjE3+a2r(.0H;N_CWAAQj
%]^Gn24cqYhUbcob^e7Jq<i=^dPL\p7(,lD)fK=?1LhbW,f<!Cf-fo:4:6%7Jhm`mI>61@`?g/#u_f02L%tfl=itusUFaM<O8s@m5
%$JMF]Y5;7JP)iZb]!VlF!6QWqs*_O(<IcLQo'I6tV=:^.H0.JD.rdH_h5\\8%1):ACLcK_0B+@]Yr\5B>4qU=<_'r&KR%3@[rq_!
%9YJnjD.!4X:iN@uR9r.3h18pI5HC]M?[?/<T4)0[G*Y>>=ST2W/ER7$0aPCN1F9=Q4&`5Y)h#<V]Wq*Dgk-'L;#lZ/gXb&1,PT,i
%gag;T/YJrdOgsn4NY&<cou+480An)oSPZuoF`/Bo54S,.d`L:Z;pW+XYoEN-e:P?\0r?2*Gm=dN+_o=G#N(PB.;3glegk15[+W?d
%)5T9u:Q8tp*<qK=Yd(Qt^0b65IA_<qe8#(pO$$Xgdo64VBUfiaF3nK4/6o>EDGH1lU7I$ZR-o[OOFB&t%9BAc:G7'>]?0ms8KS?k
%c(MKMpUm7NR%>4^5M^YGM`:KtcUJYj.j(>aZDD?QTWAA&Gqa;reJSZ`og'aWY(pe"!pHl77JbZtITYM.!;uP1B<#smLpn*1TI%9F
%1(+o#=[N9JC0;9M7P$\X*j71MAb!ie?NUam?:I3Vc/tbVBhu#2@<k,hk8YrcagcHue.MVK)]0AXN@f[Skmn\\5r1LMldoXs&lhpZ
%HL.Ln]XlkuP^`E_S.YO:dQi:&:6"U8$LKC&LDu<0e/G31m:HpU\&aS`G.V$`]4o:IDR'?2-@T+_,Ma-e]64k&lq`VBZl;$H\)(p%
%1hLIhL:.WECFda5[iVoG-S9;L[!!\k)[pCo6N]\Y`@3DDe?M/c4/2N'D,Qfn3r;1S&Eq/OQa69WkY<6p/imkIWRR,KEfbdT@u)",
%0UBS-r]@dGFuIl6SFE9soq6:Z)D=]!6$'F/SMdQ96R-8;#?3qgOE"@$42pkDf[].We<bKcRqW.iMhU?!3shZtBMh$$9LM/+$HQP*
%h!K7?;$;VC0*+f9pPQltMkd)smT4$!5CZlhNd`p@YR>MTdB"*ReHorAk%Tb<*hWP,;F]""6IUouj#:#CXPGPs!Rj_njfSQ0gVqS'
%Z?G]QqR;%hd&-``J/290D$KBdEUlKo?QUEu4_@e9eUSQ\+]ru;HuO*q96"*4&@j.!_j1J)Dm+5o@F9'nPt_'"4P3<:fUACk?j%t@
%E?XfqkCmm/ec"DlO3:39Ha&/T[u@0jrSUQ4SW7-@6l:=.7Rrel`1F50p<ot/(4fh!=/pqm2QlFiRF5b^gQech3c*h=KZ4o-!c;EQ
%^E#8H#[-ENCMd(F]`@HSAZ=([2pTH.!,]1.>de%/(I,:Hma.LSkXX)5l"fUqQ(Zg_*T]];+jsFR/Wq#`j4#ZuH0R_)YrWhm"JT*C
%e>DYfY;W\[f]V^=aO+dXijj:=Vt2q3nf]ij8`t0?jb'M*Q)+"3kOKMAS&NkPS9+K-]%"\FdeTDSq#^EB`Pp=%S9+K-`mhsre+oMT
%q%0"FV"6V0nc]H$M[QHS3Tos)#1W5.I*T9Ml@s`/FM=\`/t]g5`Fh6(F"X*9bMa9<D4c>;orp517,HZG,99pA[s@A)]#AN'$#[$-
%qq\K3>Xb^O)8f5'lR>)7b9_VnLP$GKWoYUWh0/S%f3DgY]X#\Ik+du@_Hq@epUqlL7=DF5"_HQJ!4:C9-r_ts<%VJbf(2LB_F'sb
%,42(.qU6SEI?IAgS/opnXE%%l,CX;BT<l"PgPuTK4%!;HZ<J66IG2&4I#2iApf^tCh5hhRXpH_'$A3CCc;/hED1I*t2RNlHnXCjS
%\XAe*&6HOdq^C2ICQX093VshJa3tC6(p/%/fr-ms;@k\>/2;2)i<i:$i.X(tor-`QW&\ePrFfk^mD7?Ujg$[#71Ie[k.S>Q]lGu1
%'e1,JE?@HjnR.l3<3-./*.3`CZU^j!pQ3;Rp!E"TBE-rl&'8Jc6VcUhbh:#*Sl;TZb?.3iqoD9K9j]rNkT]I9\huQ3Yus'"k;a1<
%4mJ>]jLo"HH5a^!L=I+n'UE.tHFf,F^aZ2.2(-H9N5/q5ITOG(o?/IL7sj7S#F\"6rrPm#:>/j8C%`o'^<*a2>D%-sl2AS(_&1Q1
%\ON_.A_sNWO+qF2V'Pd.^/"FP4W>4f!*e9S7M*UXB_(++kHdNK3HmY8YrQ,JH%[43K9di&;eiLQ);O'I@6AYEltY$;&W;S_a/hG-
%UL\AK@_X@t:UY>n!X<h8pR]/4`YV--AF!C;%OrH<Z=b*Dmq5dIoW%4/9]ee1-M/)9Z!4*._7XlWcnFD2O+Y>%;:"C/fKoVlVe(-E
%S+^NnTl,-I4L70re_=dkZgcO<=LE#0P;tVE/$#1g6&'[CjQOHpH@B*3p3hNAi:74%oCTEU'C0^BF%Z/tjh7o0M,uM*(1EKbHZM`M
%Luu1*YT*D;bI5`TpZ@Q$2865)OYF9Ys5"^laSXB,MS(m(\Et"6-_5MOhFOUk0)9HZHZ&tI\sWM(3Ze+8fm=CZ,g!XZ$81;N;4RBr
%)d`n<p=V`f3uMrMg0<LSdG0s)>IY)eLfO1Y85E#_Os,*q907nOGhn.FWpUs%T8bK7d.GgTPV1WY3Tn<I8!Zn[_bmF/Da*c]`od3Q
%1Nha:QK#AQ7]WmF4C'Wfd$3O&PJ@gX-SW/fS_uUpqtFmZLp>7j1kYrTeEbkD1Kf+aNrPBjC4B0#NE2U<B6-PHlHDB..B[OUb*&0<
%EnIcC3H*H9Gs6jh(X:/[`=?4X,^74pR:dP4[dqX)$&rd5iefM_!cjm>4umQ3R<c(OE`E?g2OSh/&!Z0b[\Cu.=UR3DF=rfGBATcD
%S-so*AHhlT42i+C)RL.KU25(.Z@g]l-1oV"Gd3nW\6V;q+7t]IJ4gE'bcfpnIom,0$sW'%])rh_I12>^5d'QWPp>bR6`b2H*G@'N
%$kh"tnn<"c#jHFpjO#*/qMb^uN29m)>;j.U(si#.nYOsrjg"Z0k<X\.3mC\HX3^1@AJ`fW]Y@TU*o#/o]]p=9nfa(&@;l3["nDpq
%bWB^cA^)6WLWjn3eShX-!1NnX3,UClEq![Nmi]:Z28h&^1RAj$gU8&aTN74$qu".M,Zt7eKh8Srh^_6\V:UZ/5DsakEM?RZQgW=K
%#7Z2aTL9A+mD6qCJ@t6P!j5,#hHtBlhuQb=:`q.rYCcEd^BBE<V@')UV@[ng%$0smR?XVsBn#Z-r$:AQ`iYe)EA^=5>,HRcr[aA"
%kL8%nBMtGVhK)+WH!"tN(Z/4=j[nkF&';"J-0;-*1iJM)YbEc>p3Z[*\h!&U/f%"J;ouu;\Tl2u!Ldl\Ttq'"`UOA`Cu3:DJ7[1E
%orh1uoOJ$ddKMH\!HNm+ZW9=6KDhNsVhJT#GjLa:Bjk6s'UL:P/gQM*-+QXoE`U@A+he"7qu65ZPqS1O264U[IV8\XnjSm<aclVE
%3e)0U3K.9sQXbO9(<rKoobOR=?*6=QfD<_b_-2Po:Y8=AnO)3%'B!ooLY@\@_\IL`GO:\[(fm8dG#0SO[I)E1*c0<nK_\i'2IHu-
%PPqEu[<#r427(#Z]o'JTV;4-Yqb:520p*XHDZ0+V(@1[62t:=C&Jd*3KEVeY'W)`W<dcHd\=MGRYJ`;qh8'i!6_!GOLi]lZ>)c2-
%@\mh;HS$2<RJ"hSH0*9ofrsG#G.3U=a'-5_J$d%Lmj[&)(n>ShaaR;$M2g\rGP5.>e_?PLH&iMTOEW1qhk[p#q9FFe56YlgZ";(g
%?9l65qJE-,oDgXMR*;Sq@Z%+%Vi2t&EWDmfYSqTPU$NKYmi()!#gV<VVBb@<P@P&#Hq$ob-Pu/S#-O@h4M9L$VRM`Eqd^AfKt:9-
%M-T_@E@?-hkZ[1r4c;MG)>U>C?I,t4%_oMj-*3R!=+1[bK77^hF*H@jI^>U^$3Tj)G[;VIh>62]]7O\8HVIC7qdf)Cn8P@upHF//
%7t4G#-+%ih>PZJQih[=c]_cN29'in,lI.M*7>ZFn`5sCn.no<9Q(-;Np+;hk\bMT&As$D"@\;1KYBn`#QItBjAL>SIpA%jeQUpJl
%%k5WcoA]33RFl06OpPf.T!b<25-(bKLT$n8'Dnj^7]WJ],np/4;8Pq+T@Oc[;.?.t<Zg"AXu*E0W__@AAjqQ)<`shT")8R-I9's\
%l6'D9@\;0f8s[^O'Dnlt`.\_[m1]Au5fq/\Ko(419NtM+T2eqL;G;/<(u:Rf<+;KM.?&]9rPFD>)?>XF;.5o3(p:G?S(1"El'3Uh
%fgO]#3jI!<J>Al?RFl/;`eKnig;H1U/N3,dY;EN1JfTe)a(#:0I9,\?fY=M-dDS4!@oYC(Tj'-NaLUaO&&T-uYX`51`/g<0W,LW_
%[?*31-)Pt0^@Id*CuP3;C?QDgicedMKqFXVB$"9TXCeH=`O0?DlQ*bNXA\j^@W(#'%<(j21:+Zu=3ZWleh'*Y6.71h;]U'tM-6\@
%;oeYCil,'^H;1S?ff4)3GBkitQ2XbW99QTc363/3kZ8%JfHr8S]T\V6>'[dY0-Iq/`n=[*qXQkQZE_1EcOY#]Q^@r`$"_t6qA+AL
%\M5/ZqYi^o,ag:bZW3QVWD^G`s0Hl8)Xm^tR1!H;r6N96p(luXI/.-b/dp"[nIp7o)dW1l,6H0ZkaJ*G0$!"VE4P@I5i"#46sLnJ
%HoBCEe5LaMH'[`UM'/_Be"&iYf.<B^RS8'(D`N5p,E8g+:WRaeNstQ-T:mST="cL]K@EZ0VDJH5DhE,DDlbfOV_keN?<9>"ZSfgn
%9.YRHge'r9Y#cNVFmX\SZZ<#hShDLGqIIX&HAj&ic(]`Y'7Ek/db`FRcmfZ%_;2f3-t5HeRTsL*]*+.&BYLg$FZJg.CgW)Z0V`:X
%c3q+Bf,FduZ8$dIQg(CM`H](18[Ff;Eq;6)j315?Cc%VUVl4HC`C5_7'^1t.D,mGB]5?'kXk.p5>nUZ8-EAjS#cJJEmW^\\RR5u7
%"iRSJDY,eu#j`7L[J+ns"iqu+_pd!l#..?]BgBD]bOc#$7Hr65c5U*@kV\8b'bk"('X!51@$BuF;OY&/>mA3Qo3T$)Dn,soq;+@!
%+:HNdk]ZEeV,"@^a+a!\$Q'O3QbH;Qo%lU#j9p/srkum(MlXDbDcsYPP8iWRhEOeBp#YZ@1W2YMYPpWQEpoX`f=+-6Ml.N&h9s0A
%6U5a%E1XCa\[@HQr*56O"'2=:[P,,@p#91pgtLQDpo.i<K5gVOiUoA8f6;<K5YF/QLfYSt>!]SM5d:Wi1@E`K!SP6Bc68<B9oLg`
%,.MUc^%kJd&soMH?612SQ:E5uNcNQ^[^f?qh!><l))H#tNMg$]LBVnremn<UZ?Ne\.($Tn_Ukc"Re%<Pce]<j:DZ^#de_E8l1*&*
%:&D76ThhQL#G8I:(bNaJ,&X\'b6^n(D>\)hGAqC0QXOXdbMdnGhl#l-,[;t>['J0'$($((kI51L:ha".H-a)S-]IL2>hlV>"bl_7
%RF!;#Zr`B6$[2iEf0Bc`IsJM?a4JfYf*]KnC9_$BP"[0;S[]D$3SfZJ$c4(#8[8M<%^YQFA$(/XH)q?C`CB"P"JI92'"r=rPWXYE
%dHddE(2XQS*L(qKL9'QVVo'nJbe1X9PFB33Gr]u'LmNg]G!bFKo:ik1$bLf%o]ON^?>*f%'qp2k1&F@,ENRefg1$mn2l0.dXI42g
%<DB%dqJ<Pu#H[TC?A$dQ2-h@T.TePgEX3+dEpDVi\SICb\/)NtOV?kq[!b,GFDlB!Ha/tn-.(W%_,U<R.1:-+RJRh_e)P2,Ri<ku
%1"NHRs4Om!aue\e?9[RQV_KLer2FRd2:p42lY+4_Bc:&n_Cfs3rD7*R_5aM(]j4G,;U8`kGcM`sOa>Hmg!!QcUTt$Sk!S_l=H<CB
%,HF@YVs)@'q$hVOXbi,61oKI3WF?fUA+**r:I4h`YYW8`!Rr].+ZB$S?TKDkYft'C:DL@S3UI2f?2RI"D3l(u&&Un\CJP[pJQiWK
%ERmuk3kp4.]L8)W;"KnYfY&j;&c`s8W"06i;h#sJ%MUs":cV.u>IWCjI'N(&i@"bJ!8YQ.]_+i8!u<Rs(NMoiADR[X<EEX=;I/\B
%eCMj/cNq1_Y1Mrja.U!aJ^qs4]Uf;lR8u33OTWAb?In=KS,?Gq`A%rKmWhrbg1qG8_3XemTn2rWrZ,s)GP=]ldT+tm[QJK@kH2;_
%C&j_%I<Q`>9Ve[`6RYQnR2AkJ\[A:jeXi%#Q^P$h-Z/>r#Cb@?lI`ulHHe/o:U;i6`-'dY@,N>Gp+P_%i8[bT;n5s7^V<)OO\g7O
%1PC[KU=i-4lOM+7^P'&Nb[@66:SW<u-,)FTMSWYsQWl;\cA-2a-fS%cD-t9?_,T%[al"@CqF'[,T6Z9>p$X39eCK0Hb.DO+4HJH,
%gr%.L4#Hi9,LmS!%aFRChRR+slTAm3k'Bt3pQ!WOAX`RW@uE%crhcGZR$P%3B$+Sk2]JT@7)O?22^Qj@ZqU:O<oH/);A*9ZCtgPE
%c]gi$q2"T.Yb3)lCHeJVe`e5'd;(q?cA&bJDB$$/^M(tX!6.r0U=Xc\m7^_,-.,5[QRt`*]sbp8+48t@g?o6m3?M*m=u))E_5LQ2
%ZGM.`-$?9"XO*m"DUHW7"2?B]"M8P'H<Hpb!/CBEb6i*.g8ZeV<$q7`?<0V@6+@d$7kZA$BJ[>Nm]o/@>@=GR$4VDuVOe7;X4fOs
%>>H-[nqDj6-`h2I1aU-mHK!g,d<5n&G\FuOl*`tBJ4gt#*j-Wmf?8l'mP.Ng\a[uA[R5`e:W\a"GcTA8(ETTuOj7mQ>4TNtkJ0WY
%9!X<^&"ThJbM]0b/j(s'XM=/Lg&nauKnmsY;Lr3CIUGqf*]asid&cBH_j+JUidTj[1J./C[e,9/EpfR[le@c@nBa1i/RY+m\R5c/
%2P<L\ItIDs9@PMBiLs87SLT%gnS&A:Gj+Kg%_027bNjk;cMM%hJ6MZ`6^coa[iP=7Batq#qTHrepqfD]gC>6op\ld-FGAe:Z/Y5h
%6cUT2OsIYs$P0**(n97i".IHnA[>kdDEH@gE\)4hU#UuAe7!1k?$L&AK:!RqEtoK43o>*ogorH!7TOT-H<kkq\C?4fc=^\h;tfL.
%(EPWpG%cBtmIS1^B.13K0#&2Dg-^ESqXUU2dY3J%:qWTeQnLSoQuZUUg:PjgLDD<TR^])-d4BG!Tf,BoI+t@j5gijTREq6218.cg
%iM#;b27U8"F5`haB%s)[mXF,gT6goH+HP*_*GT3?EYfcX6a8>qXY)a.F[_u9Pj'JZ93c`*I+r)F+VE2TKnmk;1f"o/3ZC;PRC:n)
%LPCg,p>/gtKaV12\;5?JJI<"UTQkn(KZ=H2>r,M^F5`fK']O[)ZZjam9Y@[Am80?f93ukAk''sjmbkbPGN#6\BqS\]<cd5n1H0lR
%Q!AR40[8&;ULTbe`%1G5LH^-WMdCYlSA,rGG`h+iM,t_6q6iY?+c6aG*]dMa>+N+OKnmqhU\R/q_$^cj\1-6WBR?uCpVK;\'-B?1
%=)m2mF7c`6=+-2=%rI_h1DDsA7X;UKd.mZ4ol;U/iM#jH&MU)I/pcKMoifa:-1G)H5grCeFIF`o:2aa`*as4:s-5FNKAhd)i],G'
%]Y?Xedc^^1?!btE\YW4)iK;\[L=NYO(CJG`ORo\s=tdF8[gHh`U$tuk*f;>S@AY@'Aq!+MeJ&1<&W<?R&)f8]h^iTKpLi`"3YN5m
%O->bf\)#t`q45F$NQ8HRnLP;&euk0OmFP$?j8+5<ZM?AlDJo'<ds1#dq;'/Aop[$n?Z5,"#gFfJS^3om2nna`l07I0p#kFEG[!t8
%c0m^d8@[+t7jGe'l/*;P<cn(a)LX`:$(KQ*D*_Pg6>I6`P2)ik5'J64c/)__+$BuRHuFt4<.Aso&VS%g/%"nG#AQS!l!bLcmA5iA
%)Kg9ieSaej<.018:=V#C56YJ7(`2>,#M\6]m(<_%LSW/?KC<Ps5Bm)0_\0fmGZ=>ggC_AbPBA@#_/"ctk9-)1#,f*TLpP66Xk9`B
%(\`:A"e"G+`U2+JPr6=2FR&_oG2ldd)J@>_pZJGO9IiG>8acL.Z*CXCq9[j:m1)dYXm>i*p=o91IO`*TQAI*UWbA?&X7:"IlSk7O
%d@.RG4-#)L_+PCr9!?T>F!9akCID?*X6XVDW:S)^N?NR]9.FrHC8Bt0@<T8e2.9D5qpP5p;0')I*iNa9eP2@09]HCA5!(cN^V)W\
%2DT46d<p9?Ya41VlBbjQef0uWVUUW,M2:3ddN-j+_f.pUN`KVYo3/YDHq[UK$[^t9Q_\&?`mrqtG94rP_cNAm2#8pVaaM3<h;<`*
%M`<O`9BcB9M`n^Y9AoC_=k0]oj4t?59W'*0-XtfW"T9l>nP:F\=5W6);-Z:366Q(@rkWL=mCh%2Of).CrUoC7BX\il:sVqF?&__A
%2l0nP>>X2C.KqPD_(FJ5BU#fU[d7N(>q)F'"n@T4:V#CGJn_(Ibr&7A(=cBe^F"9:JF')Xj4^eQJV%N+Bn]*M;iignU)TLI"$[Y)
%]_f:>!5FJU.buNoLS&QTpM?Mu&oJ7;QO-QjQRN$09+&EYTC+Qhn4s@.n*u7SgDDEnY!nOef3^'Y]nt]G-B]hMAZRfsJqf/!j="Vb
%%Ehp4QB/["m8A-Ig6nr$LZ2U<@>epRR3K.4"'bq)FhR;OQdW[GPO%47oQF<W*8IF:MqOGGR)i@inN*I@kk5Zg*)2l2nauh[9q?/q
%AD[?Lq/EO*4A;TV&'!TlRI3c1nX(YD;!D8]V/O7U7f##mHBk&q9Js\09WK?gFdc:drTU1K'e"\!5o%1g#&Sl95.-0[m@>4C`T\Ps
%#F.=$]!,-;L9$'*)0mt]HOcjU,FB%<dn[.:7TIVYIJ43I,6?hTPXtXRKF5h7p$SLSgjGE>W7,i*?U]jU$q3Ce4%'HqCY(!D*-OR(
%GXSbO^e*I/\(459U=K6<+L@>OAbV!-ID7?r=o)!WNd-keMXgcOFDUh1#m)-p8pYqUW(EUr75reVJr#u;M6t3-Zb3"C&<,s]U\sgc
%m"5<p/.L4N25=c6.>W`ie3ehe`1NcKVU^a%0R.6qkS)]>^[XS%BpBEKA'a#cJCks^\P\3$AE.A%g8[Mj5J+o&*3uEC_)3B`VtaN(
%1=\6j-X/\.Ao\GE7c,C+3U4!LqiH+ggGtTUHH@JA*uCpXX2LoMqSm?Jg!+uYcFd07%M6_08b2Jd:^$lE_\:0X]%ODLH=X&Bh?i"/
%A2(Y9n_)7oCf)#jJtUmKX>SZ))NLIRjR"!/$U5V^&"Bt;#BU2/(RH'/T]0\Q#b,r./%[D#g+=k"/_)S1mPZ_AREj7cc#/4FO-.gr
%W%liY;,<n^JDMaJ/$]E&i(?V5h5mI'rK,,<-]610M)D;'`Pr>%$SrXi#h`Rq3O),adM'm]alM,Y\[[At?Ho/6SaMI?`(l;*!Q51B
%!s#FO2@djk(uKVaK_'%]SR;0Fg=jAO>r!]"-Tg%58,<U]9sm\1!6).<P6M!mc,2oLW5'7'23pEiT>Y=L(=_X@DOfP:IA2j5WPi0J
%-9E7G%.1Fi''.`(fO;%nW`>In*;\7&2o]M7&1Ks:7LeM?;SB(L9\MAsAL:e%X[,6Ws$DKXKr!%c-\:[-YO4AZM6],\/(]BfTWY0W
%`n,N-UC(LpC-S_Q[/Rp\q2SFm)"J.Njc(2bc,S:iGr=I@84]b:f*Y*(S(=>m4kJT`:(h'>ApC2L,-MnX+8DZI'RW1WZ)\HFokc?P
%pH'A'SAF+fA_WZ@Y=c!GiB:X8HHV,YkHEUU(uCk=%7\ch0FT0lr+T2a+W]u$n#:Sr@I,d"N,X"$lIcYtL9ClBF$K#!`-c\/`l8E3
%^+:E6"#g>W/W0N5Tkm2/T@)2I3AA]3+(I$d+I2A-ei0m9O`U?k2BS1"RIV,gm6Q%B1WHB'aE3bT)g#7AGR*,h4.:&Hg"htQXZP0'
%7*GH>I\fk4[uHVQ"0="oYrVKiR6%NV@^AopO>L("g.'ssGX3$W]U0lu>=>aeh:*VEfImh(O6dZpiAB8S4N/a!S4I,D%52M3H%"ae
%1G/!.%G&PYVu_m0di'D'fuTI8S/A0Rr,[1^r:C8<rM+'q72D!?4'I+3a&Ff+#j:'k,*?TI2>rg-oj,)f"P1B.2G%uAfe^t(45J\e
%:?a-:JME9,Qk`-8)et.<#K[U%4U'S"Ta,k"$.n.NbMg.D\Y-gtSTOG8?JB%kTb:Upg-?:u\qE!l1N2IN(QsJD>h/u1[D10ZUje6+
%l&T[+K.DEuq/s7:HgT*p0Q2JYSsS%Jn8C,-K"eQKq68M1iAmMM*$"?s=jA3!ZW;jPkmO@,<T`]\e%/Igk4b&nakJ.H\(778V,Siu
%SIq]X)FDHBi_dO)V_U3'717+JkrOgtQ>e7fDXHQ/a[)t1@GWKKpSmo!:l4T\mkr1+/Xg+/=?I%9h9I0GZf+#+%Pl,*k73T=4?A3R
%UFa#WbuE)h*hJNYW=r(i;T@WjKM<-5GfWfag>^]G'?0H:;uQ2cRs7,AnS=UGmY!'ofh=a)6!WC2JMQDr:/Cuq'ds`!mi]$d+8K[F
%Xfq"#?ck`_-LINlQq2Ts]?.@<nrS"J!ijG)o"[;'!WA/Wp8'lj8A(re^2d."rNVX:DMENe&'VD7oS5*]J[`,skmol;O[G<p<<+[Y
%6<,(;$5!1+LrO$hF3u(WlaXqMX4=:)jT3lPN6`]e?-(LfgM%#ZO3B':Zn`<*D!$iqQkl+2eY.)[*9[q)VJm&(KjdBj[#CY7TD$nh
%U";VXPHPZoJ`;*l`^E:C2.-3tQh%q*(=F:2Pt*GR7S_%WgjPY<6bdDj]jKu7]-97a\aQ'Tr0dV*9I)X^4rhG>6,<k1N4>,uVc+h!
%d9o2,lqC5O&`p8c![UWs*A!7^ZR:ZZ8UHJ2o":4K%6Nu2>KX4]6N?S[Xn5[Vam%jQ>o9rQMd,<AG'ZQI<jp=n5_nFbhgZ3>jQ:;W
%8%%!(MLW*WFa&S2]7tobUHOCjPp/r`VY^sbK$5O+&PgJ=GU.l+P4QR"re[NG;%YBgV`>qe3m##YW^(0,=Q6`>ri>f8OX9hJYR1T3
%F1cqD<;55ZoOo<8.ro#R+J5CR_JNDSdnHYoWme6A&7\gaWV>t^8B:/,cgd`f*F67!QT_uC5;huD3BEm0]!Zqt[P[8@l%H3hDD[21
%ens7fM)a3a8J\a[]`eN'B13$JMsbi_7mmR)9AnFe70\OB.O$)B^j$Q]LbDQ".P_j4@WMC6aI"@IO,+2K%l8'JOjPa<HBH>-FU$2@
%99#dhS/+;MmIYOK^hskMS5*V'Ela?VJ5M3Q[N^@c"Zu1&5\0H9o\$dd`5nWQ5:84tE1YU9$jjPsM[Z2C#`ZI;m$L0fPW;)MR]@@u
%FrrcP?"Hu[GUNHb,,:XS5:83'4P%mL;4X[+:+7]UJT+:`-SgF/$Jd1Q9)hB!]tW(eEJh?Ga@CK<a;B0)?"HptfkD+&cFjUhX,OX.
%J?nuROc^k3Iop5lJ(fcJ7Lm3gM@>f;!.KEd]uWTI7)j53;;hO55:\M[K`5DB_=E3>AjMR,Y;//$Ta\ON]Z%8i);Qd+eVT7Z<CU8'
%^^n,GaJd.:lHp'[c]3$jDCU2<YP<J^TclqEgrAQG6j[\u\"tm1=WZSNdBdj5/rRcY<`%_6h1us\J]81^YBP:EL<#SGD^P7B$uf?.
%&kYgAiB#uaZm8*(*2LGD='lNR_?IKCYbMtI@sSWF!0(0:[d_ND\ZD+D'YMXsO5tm>V&!b7f*aPr+JM;15DnICJ-J!3`Eoae<Rr?8
%h?rIL1F^9_e1W4hCIHj8r+Lh6hD,(Y#L1=m?35ZNBi$+15-e\jo/No<1^F:3o$D+uE%OYO>?;NOTSZ,[IJEV'i$*^j-cd,o2A-T^
%1?KF7-:1Y.G9s?XMhGtH\BDWVhTMOZg-o_C>L."YU-Tk4feXWD>,2]P\5u6(:kWEqE,R0?DWZ,W:bLUBmCniMZ_u:39lYPVU@"Cp
%VY%7e.YYS.*X573&$&C52skR.Rk\LL3$e3S&UJVSK>(gaB&![f`i\(9Aa^`[JnlA"&]8>rlSLH+p5\6WiG>TM`ke[[9u9YKME1V*
%J;>`XXbel-*knASi4Yl4r)ubOeT7k#7HP$o:5Epa8R`XhC<*Tg#D]"8GSDG4NCGGC!R[m(I)1Xo7ALG\:Z6.9#ok,hb,50,GU2in
%SR'j_(S@%Z*4[Z3!!6_D#N*Og2%jVt$WiP"!#R&U"cP`^ai_`^KYg&IV7WY0Nh=bR.'q?GL3U<?dcUm'H\)JN@Z1S\r*Nu)B61V*
%0UL'rK?:1iO;BO&_8fq'7%HSt>dATJe$nB:UaGU/%KFbU1?m%Rr-/u."I$gjo'p]P?/^-o4s,a**a2LH[a'q--KJZKoXG]eX%fno
%/Cc]3+bF[KNU+Kohqc`8fk%E*)q-IPL\+lTZJM4kiDuf1G^dL"D\it:Qc`4f4^\5(XC(@9Q$96V?jtZCT&+jM@\:CSTkH*a)2`S5
%:SAV(]+0N6,#AA;g>n&oDr%okDYXUu<$Sjf$fWFo>HU8^&A1L9i^\V\8N[H.o!:WP;T_Q1LP%QD@A5t(`/.LT5o?-\58hCrNEC87
%V&BJT+)JJqr2++gr^&P`gnrYSq3fT(fnfUccqQBTqaX"4e]a7"%GesBRi'D2L2OjaI#Rp.Tps\tPpWl!cqTk:4]s=X0m?,5A`P6!
%p2JBMHsltqEI0ZY&!Y>b`pN$InaLU>He:Fii4HUM12[U-mHG6kIO&eALX2*Np60KC8snhg`pGd>]<*i+DrGXoIrTfPJ2'<*ol5<q
%!+FSW`pFY3p-WhHl<1o``pFXR"F\;Wae@mhluhYUQ1M/-c<eP)jLhOcZe#r,g!AC<d`/ro_tJD,UlTEkYe@32e,6/XY2?J`R(XR9
%n"j2Bc)`WbN#9Y5m4^8VV.cb!*I2O-:SfO3gsFA*=L"hZGf(1l.:5=u6GT]b48=Q/1=1E.#k?<UDh$f>;8r'W,jm)Q,"YcPgGl;P
%G(CqE&$lE/&e/<(.+T@(`btH;4ps'W707hcA\2.B^j^*6NBbKR1eqE;+[+J=C7]E\a2j]6-tC*6GC#SsD\$D4mr;6F-rCnX=mtgE
%b[JFpUh=^Y=QoTu32b"9.Y;RFNWR%Le>\K*>43&L]SR\8o<\6,=%RU.r5W4#jSnX8i"mCZs&%uEprqlQ1m8;&kqr7!L8RbQ[Y/Yf
%+<:bH_*[H5Mo)PNkfj<q0dll*(@\YcZf^Xp-!1G9g)X.>2],#4U,o56.Z.WS<<mj($2gNL7JM-&47K:RP'VjDMVH/2Y$IlD+&R70
%s3*W;I.``ogs^3>5:UmY+!9u<qL_E?^onFDm5K@bG;'ao$U27#_1$nE5$S8?0l/2!:?OFL<'$;c;n6^`UjL0.W-fp2ACsk5a\ck.
%Q-(IpF=*'?d"t^KVg6]X%@LHFPKkqPC.otjB!WCHao_qlDC.Tk-F+'!"B@GGHm53/V`!]!-dYWQQ!-oH\I?VK+PP8qJ14RhJZM?K
%4jMM:`#P3QScu(m`I&9*P=V,pdR7NM<.\R5,*a=?LCtJ@#/O*s<C5@IWm9bT3e":N-:'GVB.W=]%eWNu8:@3f7.X5!6\-L]WoDJ]
%7-Tt79C94ta@)YuH1J_5/SLU"q/h4cBJb/.FFqW3o0bd,aXC/,#(Bi^4WeA]d()P*78%cqZ3VG>8d4=k=BScn?r6T=Lj$0:%d;Eb
%H?9udbN'>)4Ing#W!&Z'F*JBTR08f#JV:7aCb@4s0gA0n;\YEd0q"O=_20-H+.Z-!%cs%m-UT#AnSo!h['6E(_'GQ)_!)<0*;Cm?
%ifD-.rZ?BH%OSAl'B,#C!3If0ge5fn?:=X@?^Y:]&q%4`M'6Ge@6'_A&&;_)!%.XH0I^ooko?-@CmIKo#`BsYb\-$GMFs"dBZd,a
%,_c'$bsS?'cjD,"q&/s]clnV81@Qft?k4$N":333BEX_lF.`)T8MI-6r1p;U8Q2R.MGg\=L6`A#[[+G*D77\)pVG_mggCC'gP<lK
%`<WsDGV\;kr"KkL56P:\I-$"?kN$Q+!f`EKaAfi<9>UW1&+LfD~>
%AI9_PrivateDataEnd
%%EndDocument

ENDEPSFILE
0 0 10795 13970 C
0 0 0 SH
-1 SOB
/f12 /Times-Roman 166.945 0 0 -166.945 0 0 MF
75 45 SS1
sv 1181 Y -105(FIG.)D 365(1.)D r
/f13 /BG-Maths-Roman 166.945 0 0 -166.945 0 0 MF
sv 292(\001)D r
/f14 /BG-Maths-Italic 166.945 0 0 -166.945 0 0 MF
sv 124(L)D r
/f15 /BG-Maths-Symbol 166.945 0 0 -166.945 0 0 MF
sv 154(\210)D r
/f13 f
sv 185(2)D r
/f12 f
sv 161(processes)D 718(generated)D 729(by)D 244(the)D 283(ef)D 127(fecti)D
295(ve)D 231(ve)D 156(rtex)D 193 Y -4064(\()D r
0.6666 1 1 SH

[/Dest /temp:intralink-d5 /Rect [972 12676 1055 12509] /Border [0 0 0] /LNK pdfmark
sv 56(5)D r
0 0 0 SH
sv 83(\).)D r
5556 6235 9879 6653 C
0 0 0 1 SCM
-1 SOB
/f12 f
0 setlinejoin
0 setlinecap
8 setlinewidth
75 45 SS1
NP 9879 6239 M -4319 0 R 
0 101 R ST
0 0 10795 13970 C
0 0 0 SH
-1 SOB
/f12 f
0 setlinejoin
0 setlinecap
8 setlinewidth
75 45 SS1
916 3880 5239 4323 C
0 0 0 1 SCM
-1 SOB
/f12 f
0 setlinejoin
0 setlinecap
8 setlinewidth
75 45 SS1
NP 916 3981 M 4319 0 R 
0 -101 R ST
0 0 10795 13970 C
0 0 0 SH
-1 SOB
/f12 f
0 setlinejoin
0 setlinecap
8 setlinewidth
75 45 SS1
0 0 0 SH
/f14 f
sv -11914 Y -139(CPT)D r
/f12 f
sv 330(-ODD)D 469(LEPTOGENE)D 963(SIS)D 5287(PHYSICAL)D 867(REVIEW)D 704(D)D
r
/f16 /Times-Bold 166.945 0 0 -166.945 0 0 MF
sv 174(00)D r
0 0 0 SH
/f17 /Times-Roman 158.155 0 0 -158.155 0 0 MF
sv 12671 Y -4353(3)D r

[/Dest /temp:intralink-f1 /View [/XYZ 52 208 0] /DEST pdfmark
pagesave restore
showpage
%%Page: 4 5
%%BeginPageSetup
%%IncludeResource: font BG-Maths-Fraktur
0 0 0 SH
% End of font info
/pagesave save def
/XX 0 def /YY 0 def /OH 0 def /OS 0 def /OB -1 def /IN true def
/OT 0 def /OO false def false SO
/ET 0 def
/pagemx matrix currentmatrix def
0.0566929 -0.0566929 scale 0 -13970 translate gsave
%%EndPageSetup
0 0 10795 13970 C
0 0 0 SH
0 0 0 SH
75 45 SS1
0 0 0 SH
0 0 1 SH
-1 SOB
/f0 /Times-Roman 0.184515 0 0 -0.184515 0 0 MF
sv 1067 Y 1951 ( )D r
[/Dest /temp:intralink-s2 /View [/XYZ 52 747 0] /DEST pdfmark
0 0 0 SH
/f1 /BG-Maths-Roman 184.515 0 0 -184.515 0 0 MF
sv 3(\377)D r
/f2 /BG-Maths-Roman 129.16 0 0 -129.16 0 0 MF
sv 37 Y 114(sph)D r
/f3 /BG-Maths-Symbol 184.515 0 0 -184.515 0 0 MF
sv -37 Y 238(')D r
/f4 /BG-Maths-Italic 184.515 0 0 -184.515 0 0 MF
sv 169(!T)D r
/f5 /Times-Roman 184.515 0 0 -184.515 0 0 MF
sv 444(with)D r
/f4 f
sv 512(!)D r
/f3 f
sv 194(')D r
/f1 f
sv 168(10)D r
/f6 /BG-Maths-Symbol 129.16 0 0 -129.16 0 0 MF
sv -65 Y 184(\377)D r
/f2 f
sv 108(5)D r
/f4 f
sv 65 Y 73(:)D r
/f5 f
sv 399 Y -3242(Equation)D 763(\()D r
0.6666 1 1 SH

[/Dest /temp:intralink-d10 /Rect [1741 1512 1925 1328] /Border [0 0 0] /LNK pdfmark
sv 62(10)D r
0 0 0 SH
sv 184(\))D 156(implies)D 640(that)D r
/f4 f
sv 373(B)D r
/f3 f
sv 161(\207)D r
/f4 f
sv 195(L)D r
/f5 f
sv 214(is)D 217(washed)D 647(out)D 331(com-)D 211 Y -3943(pletely)D 494(,)D
101(and)D 322(is)D 178(some)D 386(what)D 414(simplifed)D 754(relati)D 378(v)D
90(e)D 138(to)D 199(the)D 282(realistic)D 211 Y -3736(case.)D 409(A)D 176(detailed)D
631(analysis)D 639(sho)D 252(ws)D 247(\(see)D 341(e.g.)D 311(Ref.)D 356([)D
r
0.6666 1 1 SH

[/Dest /temp:intralink-c19 /Rect [4340 1934 4524 1749] /Border [0 0 0] /LNK pdfmark
sv 62(19)D r
0 0 0 SH
sv 184(]\))D 167(that)D 322(the)D 211 Y -4097(washout)D 707(is)D 215(only)D
420(partial,)D 612(with)D 420(the)D 319(\256nal)D 420(v)D 88(alue)D 401(of)D
r
/f4 f
sv 246(B)D r
/f3 f
sv 162(\207)D r
/f4 f
sv 194(L)D r
/f5 f
sv 210 Y -4204(controlled)D 826(by)D 259(a)D 158(nonzero)D r
/f4 f
sv 670(B)D r
/f3 f
sv 162(\377)D r
/f4 f
sv 194(L)D r
/f5 f
sv 119(,)D 121(b)D 90(ut)D 219(we)D 286(will)D 363(employ)D 630(the)D 211 Y -4097(nai)D
223(v)D 90(e)D 120(e)D 78(voluti)D 430(on)D 221(Eq.)D 288(\()D r
0.6666 1 1 SH

[/Dest /temp:intralink-d10 /Rect [2428 2566 2612 2382] /Border [0 0 0] /LNK pdfmark
sv 62(10)D r
0 0 0 SH
sv 184(\),)D 144(ar)D 142(guing)D 457(that)D 315(the)D 264(corrections)D
858(to)D 180(this)D 211 Y -4056(equation)D 681(are)D 270(much)D 454(smaller)D
588(than)D 362(the)D 269(uncertainty)D 877(with)D 371(which)D r
/f4 f
sv 211 Y -3872(!)D r
/f5 f
sv 196(is)D 177(kno)D 272(wn.)D 211 Y -460(Ne)D 213(xt)D 201(we)D 271(make)D
458(a)D 137(well-justi\256ed)D 1032(assumption)D 898(of)D 210(smallness)D
211 Y -3605(of)D 208(the)D 280(chemical)D 723(potentials:)D r
0 0 1 SH
/f0 f
sv 468 Y -15 ( )D r
[/Dest /temp:intralink-s2 /View [/XYZ 52 606 0] /DEST pdfmark
0 0 0 SH
NP 2146 3750 M 232 0 R 
0 7 R -232 0 R SFR 
/f4 f
sv -158 Y 74(n)D r
/f7 /BG-Maths-Italic 129.16 0 0 -129.16 0 0 MF
sv 37 Y 102(i)D r
/f4 f
sv 218 Y -142(n)D r
/f2 f
sv -91 Y 101(eq)D r
/f7 f
sv 140 Y 0(i)D r
/f3 f
sv -146 Y 213(\210)D r
/f4 f
sv 205(e)D r
/f7 f
sv -65 Y 90(\026)D r
/f8 /BG-Maths-Italic 92.255 0 0 -92.255 0 0 MF
sv 26 Y 100(i)D r
/f7 f
sv -26 Y 38(=T)D r
/f3 f
sv 65 Y 207(')D r
/f1 f
sv 168(1)D r
/f3 f
sv 134(\207)D r
/f4 f
sv 194(\026)D r
/f7 f
sv 37 Y 142(i)D r
/f4 f
sv -37 Y 51(=T)D 209(;)D r
/f5 f
sv 481 Y -3082(which)D 512(enables)D 616(us)D 224(to)D 205(linearize)D 700(the)D
288(kinetic)D 566(equations)D 769(in)D r
/f4 f
sv 205(\026)D r
/f7 f
sv 37 Y 142(i)D r
/f5 f
sv -37 Y 50(.)D 211 Y -4277(The)D 342(kinetic)D 559(equations)D 762(for)D r
/f4 f
sv 268(n)D r
/f7 f
sv 37 Y 102(l)D r
/f5 f
sv -37 Y 104(take)D 363(the)D 280(follo)D 346(wing)D 422(form:)D r
0 0 1 SH
/f0 f
sv 230 Y -3548 ( )D r
[/Dest /temp:intralink-d11 /View [/XYZ 52 546 0] /DEST pdfmark
0 0 0 SH
/f9 /BG-Maths-Symbol-Bold 184.515 0 0 -184.515 0 0 MF
sv 156 Y 294(\205)D r
/f4 f
sv 61(@)D r
/f7 f
sv 37 Y 102(t)D r
/f3 f
sv -37 Y 91(\207)D r
/f1 f
sv 195(3\377)D r
/f7 f
sv 37 Y 205(H)D r
/f9 f
sv -37 Y 112(\206)D r
/f4 f
sv 62(n)D r
/f7 f
sv 37 Y 102(l)D r
/f3 f
sv -37 Y 101(\210)D 205(\377)D r
/f9 f
sv 154(\205)D r
/f1 f
sv 61(4)D r
/f4 f
sv 92(W)D r
/f7 f
sv 37 Y 158(LL)D r
/f3 f
sv -37 Y 216(\207)D r
/f1 f
sv 195(2)D r
/f4 f
sv 92(W)D r
/f7 f
sv 37 Y 157(LH)D r
/f9 f
sv -37 Y 196(\206)D r
/f4 f
sv 62(\026)D r
/f7 f
sv 37 Y 142(l)D r
/f4 f
sv -37 Y 50(=T)D r
/f3 f
sv 312 Y -1575(\377)D r
/f4 f
sv 195(!T)D r
/f9 f
sv 259(\205)D r
/f4 f
sv 61(\026)D r
/f7 f
sv 37 Y 143(l)D r
/f4 f
sv -37 Y 50(=T)D r
/f3 f
sv 250(\207)D r
/f4 f
sv 195(\026)D r
/f7 f
sv 37 Y 142(b)D r
/f4 f
sv -37 Y 80(=T)D r
/f9 f
sv 209(\206)D 312 Y -2820(\205)D r
/f4 f
sv 61(@)D r
/f7 f
sv 37 Y 102(t)D r
/f3 f
sv -37 Y 91(\207)D r
/f1 f
sv 195(3\377)D r
/f7 f
sv 37 Y 205(H)D r
/f9 f
sv -37 Y 112(\206)D r
/f4 f
sv 62(n)D r
/f2 f
sv 13 Y 113(\026)D r
/f7 f
sv 32 Y -11(l)D r
/f3 f
sv -45 Y 101(\210)D r
/f9 f
sv 205(\205)D r
/f1 f
sv 62(4)D r
/f4 f
sv 92(W)D r
/f2 f
sv 13 Y 189(\026)D r
/f7 f
sv 28 Y -32(L)D r
/f2 f
sv -28 Y 137(\026)D r
/f7 f
sv 28 Y -32(L)D r
/f3 f
sv -41 Y 133(\207)D r
/f1 f
sv 195(2)D -39 Y 162(\026)D r
/f4 f
sv 39 Y -70(W)D r
/f7 f
sv 37 Y 169(LH)D r
/f9 f
sv -37 Y 196(\206)D r
/f4 f
sv 61(\026)D r
/f7 f
sv 37 Y 142(l)D r
/f4 f
sv -37 Y 51(=T)D r
/f3 f
sv 312 Y -1455(\207)D r
/f4 f
sv 195(!T)D r
/f9 f
sv 259(\205)D r
/f4 f
sv 61(\026)D r
/f7 f
sv 37 Y 143(l)D r
/f4 f
sv -37 Y 50(=T)D r
/f3 f
sv 250(\207)D r
/f4 f
sv 195(\026)D r
/f7 f
sv 37 Y 142(b)D r
/f4 f
sv -37 Y 80(=T)D r
/f9 f
sv 209(\206)D r
/f4 f
sv 62(:)D r
/f5 f
sv 843(\(11\))D 400 Y -3834(Fo)D 192(r)D 111(the)D 277(\(anti\)baryons)D 1035(the)D
277(kinetic)D 555(equations)D 758(are)D 277(the)D 276(same)D 211 Y -3943(exce)D
338(pt)D 232(that)D 365(there)D 458(are)D 314(no)D 271(contributi)D 718(ons)D
343(from)D 446(the)D 314(lepton-)D 211 Y -3799(number)D 617(violating)D 710(rates.)D
448(A)D 184(signi\256cant)D 822(simpli\256cation)D 1070(comes)D 211 Y -3851(from)D
397(the)D 264(smallness)D 756(of)D 191(the)D 265(chemical)D 707(potential.)D
733(There)D 470(are)D 264(two)D 210 Y -4047(possible)D 649(sources)D 597(for)D
r
/f4 f
sv 258(CPT)D r
/f5 f
sv 365(-odd)D 382(contrib)D 522(utions)D 495(to)D 188(the)D 270(reaction)D
211 Y -3726(rates)D 386(in)D 180(Eq.)D 288(\()D r
0.6666 1 1 SH

[/Dest /temp:intralink-d8 /Rect [1831 7346 1923 7162] /Border [0 0 0] /LNK pdfmark
sv 61(8)D r
0 0 0 SH
sv 92(\):)D 150(modi\256ed)D 693(dispersion)D 794(relations)D 674(and)D
r
/f4 f
sv 303(CPT)D r
/f5 f
sv 364(-odd)D 211 Y -3985(modi\256cations)D 1098(of)D 245(thermal)D 658(rates.)D
487(The)D 379(smallness)D 809(of)D r
/f4 f
sv 245(\026)D r
/f7 f
sv 37 Y 142(i)D r
/f4 f
sv -37 Y 51(=T)D r
/f5 f
sv 211 Y -4114(allo)D 275(ws)D 268(us)D 227(to)D 209(ne)D 172(glect)D 426(any)D
r
/f4 f
sv 329(CPT)D r
/f5 f
sv 365(-odd)D 402(ef)D 140(fects)D 414(in)D 208(the)D 291(reaction)D 211 Y -3726(rates)D
388(in)D 181(the)D 265(right-hand)D 808(side)D 335(of)D 191(Eq.)D 290(\()D
r
0.6666 1 1 SH

[/Dest /temp:intralink-d8 /Rect [3435 7979 3527 7795] /Border [0 0 0] /LNK pdfmark
sv 61(8)D r
0 0 0 SH
sv 92(\),)D 146(as)D 191(they)D 355(induce)D 531(ef)D 140(fects)D 211 Y -3974(of)D
303(the)D 376(2nd)D 425(order)D 539(in)D 293(the)D r
/f4 f
sv 376(CPT)D r
/f5 f
sv 365(-violating)D 869(parameter)D 731(.)D 211 Y -4277(Therefore,)D 830(we)D
268(take)D r
/f4 f
sv 363(W)D r
/f2 f
sv 13 Y 189(\026)D r
/f7 f
sv 27 Y -31(L)D r
/f2 f
sv -27 Y 136(\026)D r
/f7 f
sv 27 Y -32(L)D r
/f3 f
sv -40 Y 144(\210)D r
/f4 f
sv 205(W)D r
/f7 f
sv 37 Y 157(LL)D r
/f5 f
sv -37 Y 229(and)D r
/f1 f
sv -40 Y 391(\026)D r
/f4 f
sv 40 Y -70(W)D r
/f7 f
sv 37 Y 168(LH)D r
/f3 f
sv -37 Y 247(\210)D r
/f4 f
sv 205(W)D r
/f7 f
sv 37 Y 158(LH)D r
/f5 f
sv -37 Y 195(.)D 211 Y -3567(From)D 442(the)D 269(abo)D 265(v)D 90(e)D 125(equations)D
751(we)D 258(only)D 371(need)D 392(their)D 382(dif)D 202(ference,)D 210 Y -3732(the)D
265(actual)D 482(lepton)D 500(\(baryon\))D 674(asymmetry)D 810(.)D 84(Fo)D
192(r)D 99(con)D 262(v)D 90(enience,)D 650(we)D 211 Y -4108(exp)D 265(ress)D
367(the)D 308(equilibrium)D 945(number)D 646(density)D 614(in)D 225(terms)D
492(of)D 235(the)D 211 Y -4097(unmodi\256ed)D 895(number)D 618(density)D r
/f4 f
sv 587(n)D r
/f2 f
sv -65 Y 102(0)D r
/f7 f
sv 114 Y 0(i)D r
/f3 f
sv -49 Y 125(\210)D r
/f4 f
sv 205(g)D r
/f7 f
sv 37 Y 101(i)D r
/f4 f
sv -37 Y 51(=\031)D r
/f2 f
sv -64 Y 224(2)D r
/f3 f
sv 64 Y 115(\001)D r
/f4 f
sv 102(T)D r
/f2 f
sv -64 Y 117(3)D r
0 0 1 SH
/f0 f
sv 448 Y -2401 ( )D r
[/Dest /temp:intralink-s2 /View [/XYZ 52 286 0] /DEST pdfmark
0 0 0 SH
/f4 f
sv 3(n)D r
/f2 f
sv -91 Y 102(eq)D r
/f7 f
sv 161 Y 0(i;)D r
/f2 f
sv -28 Y 84(\026)D r
/f7 f
sv 28 Y -10(i)D r
/f3 f
sv -70 Y 108(\210)D r
/f4 f
sv 205(n)D r
/f2 f
sv -65 Y 102(0)D r
/f7 f
sv 114 Y 0(i)D r
/f3 f
sv -49 Y 73(\205)D r
/f1 f
sv 61(1)D r
/f3 f
sv 134(\007)D r
/f1 f
sv 194(12)D r
/f4 f
sv 184(\021)D r
/f7 f
sv 37 Y 127(i)D r
/f4 f
sv -37 Y 51(T)D r
/f3 f
sv 117(\206)D r
/f4 f
sv 61(;)D 446(i)D r
/f3 f
sv 111(\210)D r
/f4 f
sv 205(l;)D 136(b:)D r
/f5 f
sv 421 Y -3335(The)D 342(asymmetries)D r
/f4 f
sv 989(Y)D r
/f7 f
sv 37 Y 107(i)D r
/f5 f
sv -37 Y 104(then)D 373(can)D 310(be)D 229(de\256ned)D 597(as)D r
0 0 1 SH
/f0 f
sv 381 Y -2584 ( )D r
[/Dest /temp:intralink-s2 /View [/XYZ 52 247 0] /DEST pdfmark
0 0 0 SH
/f4 f
sv 3(n)D r
/f7 f
sv 37 Y 102(i)D r
/f3 f
sv -37 Y 91(\377)D r
/f4 f
sv 195(n)D r
/f2 f
sv 13 Y 112(\026)D r
/f7 f
sv 27 Y -10(i)D r
/f3 f
sv -40 Y 101(\021)D r
/f1 f
sv 205(2)D r
/f4 f
sv 92(n)D r
/f2 f
sv -65 Y 102(0)D r
/f7 f
sv 114 Y 0(i)D r
/f3 f
sv -49 Y 114(\001)D r
/f4 f
sv 103(Y)D r
/f7 f
sv 37 Y 107(i)D r
/f4 f
sv -37 Y 51(;)D 446(Y)D r
/f7 f
sv 37 Y 107(i)D r
/f3 f
sv -37 Y 102(\210)D r
/f4 f
sv 205(\026)D r
/f7 f
sv 37 Y 142(i)D r
/f4 f
sv -37 Y 50(=T)D r
/f3 f
sv 250(\377)D r
/f1 f
sv 195(12)D r
/f4 f
sv 184(\021)D r
/f7 f
sv 37 Y 127(i)D r
/f4 f
sv -37 Y 51(T)D 117(:)D r
/f5 f
sv 384 Y -3811(W)D 162(e)D 129(also)D 344(introduce)D 746(a)D 129(dimensionless)D
1093(parameter)D r
/f4 f
sv 788(\015)D r
/f5 f
sv 117(,)D 93(by)D 231(factor)D 430(-)D 211 Y -4262(ing)D 291(out)D 290(the)D
281(dimensionful)D 1029(parameters)D r
/f4 f
sv 867(T)D r
/f2 f
sv -65 Y 117(3)D r
/f4 f
sv 65 Y 73(=M)D r
/f2 f
sv -65 Y 259(2)D r
/f7 f
sv 113 Y -4(R)D r
/f5 f
sv -48 Y 148(from)D 413(the)D 281(rate)D 213 Y -4045(of)D 208(lepton-number)D
1142(violating)D 712(processes,)D r
0 0 1 SH
/f0 f
sv 507 Y -823 ( )D r
[/Dest /temp:intralink-s2 /View [/XYZ 52 185 0] /DEST pdfmark
0 0 0 SH
/f1 f
sv 3(4)D r
/f4 f
sv 92(W)D r
/f7 f
sv 37 Y 157(LL)D r
/f3 f
sv -37 Y 217(\207)D r
/f1 f
sv 194(2)D r
/f4 f
sv 93(W)D r
/f7 f
sv 41 Y 157(L)D r
/f2 f
sv -28 Y 125(\026)D r
/f7 f
sv 28 Y -42(H)D r
/f3 f
sv -41 Y 164(\210)D r
/f4 f
sv 205(\015)D r
NP 3668 11649 M 256 0 R 
0 7 R -256 0 R SFR 
sv -126 Y 181(T)D r
/f2 f
sv -64 Y 117(6)D r
/f4 f
sv 320 Y -150(M)D r
/f2 f
sv -64 Y 167(2)D r
/f7 f
sv 112 Y -4(R)D r
/f4 f
sv -178 Y 124(;)D r
/f5 f
sv 514 Y -3039(so)D 204(that)D r
/f4 f
sv 319(\015)D r
/f5 f
sv 157(scales)D 482(as)D 194(the)D 267(fourth)D 492(po)D 180(wer)D 317(of)D
194(the)D 267(neutrino)D 657(Y)D 113(uka)D 265(wa)D 210 Y -4108(couplings)D
777(or)D 212(the)D 286(sum)D 365(of)D 213(the)D 285(squares)D 612(of)D
212(the)D 285(eigen)D 396(v)D 88(alues)D 439(of)D r
/f4 f
sv 211 Y -4170(Y)D r
/f7 f
sv -64 Y 118(\027)D 117 Y -10(ab)D r
/f5 f
sv -53 Y 151(:)D r
0 0 1 SH
/f0 f
sv -11472 Y 4772 ( )D r
[/Dest /temp:intralink-d12 /View [/XYZ 316 747 0] /DEST pdfmark
0 0 0 SH
/f4 f
sv 4(\015)D r
/f3 f
sv 168(\210)D r
NP 6324 1112 M 298 0 R 
0 8 R -298 0 R SFR 
/f1 f
sv -125 Y 308(3)D 255 Y -103(2)D r
/f4 f
sv 92(\031)D r
/f2 f
sv -64 Y 132(2)D r
/f10 /BG-Maths-Extension-Bold 184.515 0 0 -184.515 0 0 MF
sv -299 Y 105(\022)D r
/f11 /BG-Maths-Extension 184.515 0 0 -184.515 0 0 MF
sv 74 Y 122(X)D r
/f3 f
sv 159 Y 239(j)D r
/f4 f
sv 53(h)D r
/f7 f
sv 37 Y 102(a)D r
/f3 f
sv -37 Y 80(j)D r
/f2 f
sv -64 Y 54(2)D r
/f10 f
sv -169 Y 73(\023)D r
/f2 f
sv 79 Y 92(2)D r
/f3 f
sv 154 Y 125(\210)D r
NP 7798 1112 M 298 0 R 
0 8 R -298 0 R SFR 
/f1 f
sv -125 Y 308(3)D 255 Y -103(2)D r
/f4 f
sv 92(\031)D r
/f2 f
sv -64 Y 132(2)D r
/f1 f
sv -66 Y 135(Tr)D r
/f3 f
sv 175(\205)D r
/f4 f
sv 61(Y)D r
/f7 f
sv -64 Y 117(\027)D r
/f2 f
sv 116 Y -9(diag)D r
/f4 f
sv -52 Y 232(Y)D r
/f7 f
sv -81 Y 117(\027)D r
/f6 f
sv 74(y)D r
/f2 f
sv 134 Y -84(diag)D r
/f3 f
sv -53 Y 232(\206)D r
/f4 f
sv 62(:)D r
/f5 f
sv 437(\(12\))D 483 Y -3831(Expressing)D 879(Eqs.)D 382(\()D r
0.6666 1 1 SH

[/Dest /temp:intralink-d11 /Rect [7062 1692 7247 1507] /Border [0 0 0] /LNK pdfmark
sv 61(11)D r
0 0 0 SH
sv 185(\))D 120(in)D 203(terms)D 470(of)D r
/f4 f
sv 213(Y)D r
/f7 f
sv 37 Y 107(i)D r
/f5 f
sv -37 Y 110(and)D 326(changing)D 737(v)D 88(ari-)D 211 Y -4065(ables)D 433(from)D
413(time)D 384(to)D 197(temperature,)D 985(we)D 267(get)D r
0 0 1 SH
/f0 f
sv 176 Y -2679 ( )D r
[/Dest /temp:intralink-d13 /View [/XYZ 316 689 0] /DEST pdfmark
0 0 0 SH
/f4 f
sv 250 Y 62(g)D r
/f7 f
sv 37 Y 102(l)D r
NP 5792 2232 M 219 0 R 
0 8 R -219 0 R SFR 
/f4 f
sv -162 Y 130(d)D 252 Y -58(dT)D -127 Y 240(Y)D r
/f7 f
sv 37 Y 108(l)D r
/f3 f
sv -37 Y 86(\210)D r
NP 6415 2232 M 305 0 R 
0 8 R -305 0 R SFR 
/f1 f
sv -125 Y 226(0)D r
/f4 f
sv 92(:)D r
/f1 f
sv 47(6)D r
/f4 f
sv 288 Y -176(g)D r
/f2 f
sv -86 Y 102(1)D r
/f7 f
sv 65(=)D r
/f2 f
sv 64(2)D r
/f6 f
sv 121 Y -129(\003)D r
NP 6763 2232 M 421 0 R 
0 8 R -421 0 R SFR 
/f4 f
sv -323 Y 246(!M)D r
/f2 f
sv 37 Y 305(Pl)D r
/f4 f
sv 219 Y -190(T)D r
/f2 f
sv -65 Y 117(2)D r
/f9 f
sv -66 Y 211(\205)D r
/f4 f
sv 61(g)D r
/f7 f
sv 37 Y 102(l)D r
/f3 f
sv -37 Y 50(\205)D r
/f4 f
sv 62(Y)D r
/f7 f
sv 37 Y 107(l)D r
/f3 f
sv -37 Y 79(\207)D r
/f1 f
sv 183(12)D r
/f4 f
sv 184(\021)D r
/f7 f
sv 37 Y 127(l)D r
/f4 f
sv -37 Y 50(T)D r
/f3 f
sv 117(\206)D 90(\207)D r
/f4 f
sv 183(g)D r
/f7 f
sv 37 Y 102(b)D r
/f3 f
sv -37 Y 80(\205)D r
/f4 f
sv 61(Y)D r
/f7 f
sv 37 Y 107(b)D r
/f3 f
sv -37 Y 109(\207)D r
/f1 f
sv 183(12)D r
/f4 f
sv 184(\021)D r
/f7 f
sv 37 Y 127(b)D r
/f4 f
sv -37 Y 80(T)D r
/f3 f
sv 117(\206)D r
/f9 f
sv 61(\206)D r
/f3 f
sv 566 Y -3397(\207)D r
NP 6598 2798 M 436 0 R 
0 8 R -436 0 R SFR 
/f1 f
sv -125 Y 183(0)D r
/f4 f
sv 92(:)D r
/f1 f
sv 46(6)D r
/f4 f
sv 92(\031)D r
/f2 f
sv -65 Y 133(2)D r
/f4 f
sv 353 Y -297(g)D r
/f2 f
sv -86 Y 102(1)D r
/f7 f
sv 64(=)D r
/f2 f
sv 65(2)D r
/f6 f
sv 121 Y -129(\003)D r
NP 7077 2798 M 397 0 R 
0 8 R -397 0 R SFR 
/f4 f
sv -323 Y 311(\015M)D r
/f2 f
sv 37 Y 280(Pl)D r
/f4 f
sv 219 Y -210(M)D r
/f2 f
sv -65 Y 167(2)D r
/f7 f
sv 113 Y -4(R)D r
/f3 f
sv -179 Y 192(\001)D 90(\205)D r
/f4 f
sv 62(Y)D r
/f7 f
sv 37 Y 107(l)D r
/f3 f
sv -37 Y 80(\207)D r
/f1 f
sv 182(12)D r
/f4 f
sv 184(\021)D r
/f7 f
sv 37 Y 127(l)D r
/f4 f
sv -37 Y 50(T)D r
/f3 f
sv 117(\206)D r
/f4 f
sv 540 Y -2942(g)D r
/f7 f
sv 37 Y 102(b)D r
NP 5762 3339 M 219 0 R 
0 7 R -219 0 R SFR 
/f4 f
sv -162 Y 160(d)D 252 Y -59(dT)D -127 Y 241(Y)D r
/f7 f
sv 37 Y 107(b)D r
/f3 f
sv -37 Y 116(\210)D r
NP 6415 3339 M 305 0 R 
0 7 R -305 0 R SFR 
/f1 f
sv -125 Y 226(0)D r
/f4 f
sv 92(:)D r
/f1 f
sv 47(6)D r
/f4 f
sv 288 Y -176(g)D r
/f2 f
sv -86 Y 102(1)D r
/f7 f
sv 65(=)D r
/f2 f
sv 64(2)D r
/f6 f
sv 121 Y -129(\003)D r
NP 6763 3339 M 421 0 R 
0 7 R -421 0 R SFR 
/f4 f
sv -323 Y 246(!M)D r
/f2 f
sv 37 Y 305(Pl)D r
/f4 f
sv 219 Y -190(T)D r
/f2 f
sv -65 Y 117(2)D r
/f9 f
sv -66 Y 211(\205)D r
/f4 f
sv 61(g)D r
/f7 f
sv 37 Y 102(l)D r
/f3 f
sv -37 Y 50(\205)D r
/f4 f
sv 62(Y)D r
/f7 f
sv 37 Y 107(l)D r
/f3 f
sv -37 Y 79(\207)D r
/f1 f
sv 183(12)D r
/f4 f
sv 184(\021)D r
/f7 f
sv 37 Y 127(l)D r
/f4 f
sv -37 Y 50(T)D r
/f3 f
sv 117(\206)D 447 Y -1913(\207)D r
/f4 f
sv 183(g)D r
/f7 f
sv 37 Y 101(b)D r
/f3 f
sv -37 Y 81(\205)D r
/f4 f
sv 61(Y)D r
/f7 f
sv 37 Y 107(b)D r
/f3 f
sv -37 Y 109(\207)D r
/f1 f
sv 182(12)D r
/f4 f
sv 185(\021)D r
/f7 f
sv 37 Y 127(b)D r
/f4 f
sv -37 Y 80(T)D r
/f3 f
sv 117(\206)D r
/f9 f
sv 61(\206)D r
/f4 f
sv 62(:)D r
/f5 f
sv 1704(\(13\))D 346 Y -4019(The)D 352(quantity)D 671(of)D 219(the)D 291(ultimate)D
673(interest)D 610(is)D 187(the)D 291(baryon)D 577(asym-)D 211 Y -3871(metry)D
491(at)D 194(the)D 286(present)D 593(time)D 390(\(normalized,)D 1000(e.g.)D
326(on)D 244(the)D 286(photon)D 228 Y -3810(number)D 644(density)D 522(,)D
r
/f4 f
sv 127(n)D r
/f7 f
sv 37 Y 101(\015)D r
/f3 f
sv -37 Y 142(\210)D r
/f4 f
sv 205(s=)D r
/f1 f
sv 173(7)D r
/f4 f
sv 92(:)D r
/f1 f
sv 46(04)D r
/f5 f
sv 265([)D r
0.6666 1 1 SH

[/Dest /temp:intralink-c20 /Rect [7934 4667 8119 4482] /Border [0 0 0] /LNK pdfmark
sv 61(20)D r
0 0 0 SH
sv 185(]\).)D 249(Using)D r
/f4 f
sv 519(s)D r
/f3 f
sv 132(\210)D r
NP 9224 4571 M 212 0 R 
0 7 R -212 0 R SFR 
/f2 f
sv -67 Y 205(2)D r
/f7 f
sv 65(\031)D r
/f12 /BG-Maths-Roman 92.255 0 0 -92.255 0 0 MF
sv -45 Y 92(2)D r
/f2 f
sv 175 Y -115(45)D r
/f4 f
sv -63 Y 201(g)D r
/f6 f
sv 37 Y 102(\003)D r
/f4 f
sv -37 Y 73(T)D r
/f2 f
sv -64 Y 117(3)D r
/f5 f
sv 64 Y 73(,)D 229 Y -4276(one)D 345(can)D 335(exp)D 265(ress)D 364(the)D
305(e)D 80(xperimentally)D 1107(measured)D 787(baryon)D 591(to)D 211 Y -4179(photon)D
566(ratio)D 391(via)D 281(the)D 280(asymmetry)D r
/f4 f
sv 875(Y)D r
/f7 f
sv 37 Y 108(b)D r
/f5 f
sv -37 Y 133(that)D 332(enters)D 495(\()D r
0.6666 1 1 SH

[/Dest /temp:intralink-d13 /Rect [9079 5106 9263 4922] /Border [0 0 0] /LNK pdfmark
sv 62(13)D r
0 0 0 SH
sv 184(\),)D r
0 0 1 SH
/f0 f
sv 428 Y -3526 ( )D r
[/Dest /temp:intralink-d14 /View [/XYZ 316 506 0] /DEST pdfmark
0 0 0 SH
/f13 /BG-Maths-Fraktur 184.515 0 0 -184.515 0 0 MF
sv 34(a)D r
/f7 f
sv 37 Y 132(B)D r
/f3 f
sv -37 Y 145(\210)D r
/f1 f
sv 205(7)D r
/f4 f
sv 92(:)D r
/f1 f
sv 46(04)D r
NP 6606 5438 M 206 0 R 
0 8 R -206 0 R SFR 
sv -125 Y 226(45)D r
/f4 f
sv 255 Y -11(\031)D r
/f2 f
sv -64 Y 132(4)D r
NP 6873 5438 M 182 0 R 
0 8 R -182 0 R SFR 
/f4 f
sv -191 Y 135(g)D r
/f7 f
sv 37 Y 102(b)D r
/f4 f
sv 215 Y -98(g)D r
/f6 f
sv 37 Y 101(\003)D r
/f4 f
sv -164 Y 108(Y)D r
/f7 f
sv 37 Y 107(b)D r
/f3 f
sv -37 Y 132(')D r
/f1 f
sv 168(0)D r
/f4 f
sv 92(:)D r
/f1 f
sv 46(6)D r
/f4 f
sv 92(Y)D r
/f7 f
sv 37 Y 108(b)D r
/f3 f
sv -37 Y 131(\021)D 205(\205)D r
/f1 f
sv 61(6)D r
/f4 f
sv 93(:)D r
/f1 f
sv 46(1)D r
/f3 f
sv 133(\006)D r
/f1 f
sv 194(0)D r
/f4 f
sv 93(:)D r
/f1 f
sv 46(3)D r
/f3 f
sv 92(\206)D 102(\002)D r
/f1 f
sv 195(10)D r
/f6 f
sv -64 Y 184(\377)D r
/f2 f
sv 108(10)D r
/f4 f
sv 64 Y 137(;)D r
/f5 f
sv 379 Y -80(\(14\))D 312 Y -4015(where)D 501(we)D 268(use)D r
/f4 f
sv 300(g)D r
/f7 f
sv 37 Y 101(b)D r
/f3 f
sv -37 Y 132(\210)D r
/f1 f
sv 204(18)D r
/f5 f
sv 238(and)D r
/f4 f
sv 321(g)D r
/f6 f
sv 37 Y 102(\003)D r
/f3 f
sv -37 Y 124(\210)D r
/f1 f
sv 205(106)D r
/f4 f
sv 277(:)D r
/f1 f
sv 46(75)D r
/f5 f
sv 184(.)D 211 Y -2819(Note,)D 470(that)D 344(in)D 209(the)D 291(limit)D 416(when)D
465(the)D 291(rate)D 344(of)D 218(sphaleron)D 783(pro-)D 210 Y -4015(cesses)D
549(is)D 212(v)D 90(ery)D 325(small,)D r
/f1 f
sv 536(\377)D r
/f2 f
sv 37 Y 114(sph)D r
/f3 f
sv -37 Y 238(\034)D r
/f1 f
sv 245(\377)D r
/f7 f
sv 37 Y 114(L)D r
/f5 f
sv -37 Y 181(\()D r
/f1 f
sv 61(\377)D r
/f7 f
sv 37 Y 113(L)D r
/f5 f
sv -37 Y 181(is)D 212(the)D 315(rate)D 367(of)D 243(the)D 229 Y -4096(lepton-number)D
1192(violating)D 762(processes\),)D 918(one)D 371(can)D 361(solv)D 305(e)D
187(the)D 211 Y -4096(kinetic)D 558(equations)D 762(exac)D 338(tly)D 185(.)D
99(T)D 100(aking)D r
/f4 f
sv 465(!)D r
/f3 f
sv 193(!)D r
/f1 f
sv 226(0)D r
/f5 f
sv 146(in)D 197(\()D r
0.6666 1 1 SH

[/Dest /temp:intralink-d13 /Rect [8887 7086 9071 6901] /Border [0 0 0] /LNK pdfmark
sv 62(13)D r
0 0 0 SH
sv 184(\),)D 161(we)D 269(hav)D 263(e)D r
0 0 1 SH
/f0 f
sv 424 Y -3127 ( )D r
[/Dest /temp:intralink-d15 /View [/XYZ 316 394 0] /DEST pdfmark
0 0 0 SH
NP 6671 7429 M 219 0 R 
0 7 R -219 0 R SFR 
/f4 f
sv -111 Y 92(d)D 252 Y -58(dT)D -141 Y 249(Y)D r
/f7 f
sv 37 Y 108(l)D r
/f3 f
sv -37 Y 102(\210)D r
NP 7335 7414 M 390 0 R 
0 7 R -390 0 R SFR 
/f4 f
sv -126 Y 205(\025M)D r
/f2 f
sv 37 Y 274(Pl)D r
/f4 f
sv 219 Y -207(M)D r
/f2 f
sv -64 Y 167(2)D r
/f7 f
sv 112 Y -4(R)D r
/f9 f
sv -178 Y 191(\205)D r
/f4 f
sv 62(Y)D r
/f7 f
sv 37 Y 107(l)D r
/f3 f
sv -37 Y 92(\207)D r
/f1 f
sv 194(12)D r
/f4 f
sv 184(\021)D r
/f7 f
sv 37 Y 127(l)D r
/f4 f
sv -37 Y 51(T)D r
/f9 f
sv 117(\206)D r
/f4 f
sv 61(:)D r
/f5 f
sv 820(\(15\))D 495 Y -4015(where)D 496(we)D 265(hav)D 263(e)D 132(introduced)D
r
/f4 f
sv 840(\025)D r
/f3 f
sv 163(\210)D r
/f1 f
sv 204(0)D r
/f4 f
sv 93(:)D r
/f1 f
sv 46(6)D r
/f4 f
sv 92(\031)D r
/f2 f
sv -65 Y 132(2)D r
/f3 f
sv 65 Y 74(\205)D r
/f4 f
sv 61(g)D r
/f2 f
sv -87 Y 102(1)D r
/f7 f
sv 64(=)D r
/f2 f
sv 65(2)D r
/f6 f
sv 121 Y -129(\003)D r
/f4 f
sv -34 Y 202(g)D r
/f7 f
sv 37 Y 102(l)D r
/f3 f
sv -37 Y 50(\206)D r
/f6 f
sv -65 Y 62(\377)D r
/f2 f
sv 107(1)D r
/f4 f
sv 65 Y 74(\015)D r
/f5 f
sv 117(.)D 95(A)D 182(solu-)D 211 Y -3954(tion)D 360(that)D 350(corresponds)D
963(to)D r
/f4 f
sv 217(n)D r
/f7 f
sv 37 Y 101(l)D r
/f5 f
sv -37 Y 123(close)D 452(to)D 216(equilibrium)D 937(v)D 88(alue)D 381(at)D
r
/f4 f
sv 211 Y -4188(T)D r
/f3 f
sv 168(\035)D r
/f4 f
sv 245(T)D r
/f7 f
sv 36 Y 108(R)D r
/f5 f
sv -36 Y 147(has)D 299(the)D 280(follo)D 346(wing)D 422(form:)D r
0 0 1 SH
/f0 f
sv 451 Y -844 ( )D r
[/Dest /temp:intralink-d16 /View [/XYZ 316 318 0] /DEST pdfmark
0 0 0 SH
/f4 f
sv 3(Y)D r
/f7 f
sv 37 Y 108(l)D r
/f3 f
sv -37 Y 101(\210)D 205(\377)D r
/f1 f
sv 154(12)D r
NP 7513 8783 M 434 0 R 
0 7 R -434 0 R SFR 
/f4 f
sv -125 Y 215(\021)D r
/f7 f
sv 37 Y 127(l)D r
/f4 f
sv -37 Y 50(M)D r
/f2 f
sv -65 Y 167(2)D r
/f7 f
sv 113 Y -4(R)D r
/f4 f
sv 204 Y -319(\025M)D r
/f2 f
sv 37 Y 275(Pl)D r
/f3 f
sv -164 Y 179(\377)D r
/f1 f
sv 194(12)D r
/f4 f
sv 185(\021)D r
/f7 f
sv 37 Y 126(l)D r
/f4 f
sv -37 Y 51(T)D 117(;)D r
/f5 f
sv 910(\(16\))D 445 Y -4015(which)D 493(pro)D 244(vides)D 431(us)D 205(with)D
371(the)D 268(exp)D 265(ression)D 564(for)D 257(the)D 269(lepton)D 504(asym-)D
211 Y -3871(metry:)D r
0 0 1 SH
/f0 f
sv 452 Y 1486 ( )D r
[/Dest /temp:intralink-d17 /View [/XYZ 316 255 0] /DEST pdfmark
0 0 0 SH
/f4 f
sv 3(Y)D r
/f2 f
sv -65 Y 117(fr)D r
/f7 f
sv 117 Y -9(l)D r
/f3 f
sv -52 Y 155(\210)D 205(\377)D r
/f1 f
sv 154(12)D r
NP 7882 9890 M 434 0 R 
0 7 R -434 0 R SFR 
/f4 f
sv -126 Y 215(\021)D r
/f7 f
sv 37 Y 126(l)D r
/f4 f
sv -37 Y 51(M)D r
/f2 f
sv -64 Y 167(2)D r
/f7 f
sv 112 Y -4(R)D r
/f4 f
sv 204 Y -319(\025M)D r
/f2 f
sv 37 Y 275(Pl)D r
/f4 f
sv -163 Y 168(:)D r
/f5 f
sv 1225(\(17\))D 444 Y -4015(The)D 325(inclusion)D 715(of)D 191(sphalerons)D
826(will)D 325(dif)D 202(fuse)D 344(approximately)D 1107(half)D 211 Y -4035(of)D
206(the)D 280(lepton)D 515(number)D 618(yield)D 423(into)D 341(the)D 279(baryon)D
566(number)D 617([)D r
0.6666 1 1 SH

[/Dest /temp:intralink-c3 /Rect [9463 10641 9555 10457] /Border [0 0 0] /LNK pdfmark
sv 62(3)D r
0 0 0 SH
sv 92(],)D 160(so)D 211 Y -4159(that)D 332(Eq.)D 305(\()D r
0.6666 1 1 SH

[/Dest /temp:intralink-d17 /Rect [6254 10852 6439 10668] /Border [0 0 0] /LNK pdfmark
sv 61(17)D r
0 0 0 SH
sv 185(\))D 115(is)D 176(also)D 351(an)D 229(estimate)D 671(for)D 269(the)D
280(B)D 117(A)D 123(U.)D r
/f14 /Times-Bold 184.515 0 0 -184.515 0 0 MF
sv 458 Y -2865(III.)D 313(THE)D 443(STRENGTH)D 1077(OF)D r
/f15 /BG-Maths-Italic-Bold 184.515 0 0 -184.515 0 0 MF
sv 311(CP)D 250(T)D r
/f14 f
sv 174(VIOLA)D 586(TION)D 210 Y -2287(DERIVED)D 900(FR)D 242(OM)D 372(B)D 119(A)D
125(U)D r
/f5 f
sv 317 Y -2790(In)D 228(this)D 341(section,)D 644(we)D 289(pro)D 244(vide)D
393(the)D 300(numerical)D 815(solutions)D 741(to)D 211 Y -4179(Eqs.)D 359(\()D
r
0.6666 1 1 SH

[/Dest /temp:intralink-d13 /Rect [5976 12048 6160 11863] /Border [0 0 0] /LNK pdfmark
sv 61(13)D r
0 0 0 SH
sv 184(\),)D 144(determine)D 778(the)D 263(required)D 652(strength)D 632(of)D
r
/f4 f
sv 190(CPT)D r
/f5 f
sv 401(violation)D 211 Y -3664(and)D 320(confront)D 680(it)D 157(with)D 382(e)D
80(xisting)D 557(exp)D 265(erimental)D 754(constraints.)D 210 Y -3011(T)D
100(o)D 140(solve)D 437(the)D 274(system)D 561(of)D 202(kinetic)D 553(equations,)D
803(one)D 315(has)D 294(to)D 193(add)D 211 Y -4056(proper)D 545(initial)D
497(conditions.)D 879(It)D 177(is)D 186(reasonable)D 854(to)D 207(impose)D
597(these)D r
0 0 0 SH
/f16 /Times-Roman 166.945 0 0 -166.945 0 0 MF
sv -11914 Y -8582(P)D 79(A)D 99(VEL)D 378(A.)D 216(BOLOKHO)D 806(V)D 153(AND)D
413(MAXIM)D 645(POSPELO)D 714(V)D 3546(PHYSICAL)D 867(REVIEW)D 704(D)D r
/f17 /Times-Bold 166.945 0 0 -166.945 0 0 MF
sv 174(00)D r
0 0 0 SH
/f18 /Times-Roman 158.155 0 0 -158.155 0 0 MF
sv 12671 Y -4353(4)D r

pagesave restore
showpage
%%Page: 5 6
%%BeginPageSetup
%%IncludeResource: font MathematicalPi-One
0 0 0 SH
% End of font info
/pagesave save def
/XX 0 def /YY 0 def /OH 0 def /OS 0 def /OB -1 def /IN true def
/OT 0 def /OO false def false SO
/ET 0 def
/pagemx matrix currentmatrix def
0.0566929 -0.0566929 scale 0 -13970 translate gsave
%%EndPageSetup
0 0 10795 13970 C
0 0 0 SH
0 0 0 SH
75 45 SS1
0 0 0 SH
0 0 0 SH
-1 SOB
/f0 /Times-Roman 184.515 0 0 -184.515 0 0 MF
sv 1037 Y 916(initial)D 504(conditions)D 839(at)D 204(the)D 296(temperatures)D
1026(where)D 521(the)D 296(essential)D 211 Y -3686(part)D 365(of)D 229(leptogenesis)D
991(be)D 172(gins,)D 430(which)D 527(we)D 291(take)D 386(to)D 220(be)D
r
/f1 /BG-Maths-Italic 184.515 0 0 -184.515 0 0 MF
sv 251(M)D r
/f2 /BG-Maths-Italic 129.16 0 0 -129.16 0 0 MF
sv 37 Y 163(R)D r
/f3 /BG-Maths-Symbol 184.515 0 0 -184.515 0 0 MF
sv -37 Y 145(\210)D r
/f4 /BG-Maths-Roman 184.515 0 0 -184.515 0 0 MF
sv 211 Y -4170(10)D r
/f5 /BG-Maths-Roman 129.16 0 0 -129.16 0 0 MF
sv -65 Y 185(15)D r
/f4 f
sv 65 Y 199(GeV)D r
/f0 f
sv 348(:)D r
0 0 1 SH
/f6 /Times-Roman 0.184515 0 0 -0.184515 0 0 MF
sv 331 Y 337 ( )D r
[/Dest /temp:intralink-d18 /View [/XYZ 52 711 0] /DEST pdfmark
0 0 0 SH
/f1 f
sv 3(Y)D r
/f2 f
sv 37 Y 108(l)D r
/f3 f
sv -37 Y 50(j)D r
/f2 f
sv 37 Y 54(M)D r
/f7 /BG-Maths-Italic 92.255 0 0 -92.255 0 0 MF
sv 26 Y 114(R)D r
/f3 f
sv -63 Y 130(\210)D r
/f1 f
sv 204(Y)D r
/f5 f
sv -90 Y 118(eq)D r
/f2 f
sv 144 Y -10(l)D r
/f1 f
sv -54 Y 141(;)D 446(Y)D r
/f2 f
sv 37 Y 107(b)D r
/f3 f
sv -37 Y 80(j)D r
/f2 f
sv 37 Y 54(M)D r
/f7 f
sv 26 Y 114(R)D r
/f3 f
sv -63 Y 129(\210)D r
/f4 f
sv 205(0)D r
/f1 f
sv 92(:)D r
/f0 f
sv 808(\(18\))D 351 Y -4016(At)D 234(high)D 377(temperatures)D 1005(leptons)D
582(and)D 316(antileptons)D 861(were)D 408(in)D 193(ther)D 286(-)D 211 Y -4262(mal)D
330(and)D 317(chemical)D 721(equilibrium,)D 961(which)D 502(had)D 318(a)D
133(nonzero)D 644(v)D 88(alue)D 211 Y -4014(of)D 220(the)D 292(lepton)D 529(number)D
630(de\256ned)D 610(by)D r
/f1 f
sv 250(\021)D r
/f2 f
sv 36 Y 127(l)D r
/f0 f
sv -36 Y 50(.)D 112(This)D 394(choice)D 550(is)D 189(quite)D 210 Y -3953(sensible)D
649(since)D 433(the)D 280(freeze-out)D 804(temperature)D r
/f1 f
sv 938(T)D r
/f2 f
sv 37 Y 108(R)D r
/f0 f
sv -37 Y 146(suggested)D 781(by)D 211 Y -4139(neutrino)D 697(masses)D 603(is)D
204(suf\256ciently)D 912(smaller)D 626(than)D r
/f1 f
sv 399(M)D r
/f2 f
sv 37 Y 163(R)D r
/f0 f
sv -37 Y 93(.)D 127(As)D 284(for)D 211 Y -4108(baryons,)D 675(we)D 259(impose)D
578(symmetric)D r
/f1 f
sv 826(n)D r
/f2 f
sv 37 Y 102(b)D r
/f3 f
sv -37 Y 131(\210)D r
/f1 f
sv 205(n)D r
/f5 f
sv 13 Y 128(\026)D r
/f2 f
sv 32 Y -26(b)D r
/f0 f
sv -45 Y 124(conditions)D 814(at)D 179(high)D 211 Y -3995(temperatures)D 1036(\()D
r
/f4 f
sv 62(10)D r
/f5 f
sv -65 Y 184(15)D r
/f4 f
sv 65 Y 199(GeV)D r
/f0 f
sv 348(\),)D 187(as)D 234(there)D 450(are)D 306(no)D 264(fast)D 347(processes)D
211 Y -3617(that)D 332(would)D 514(bring)D r
/f1 f
sv 444(Y)D r
/f2 f
sv 37 Y 107(b)D r
/f0 f
sv -37 Y 134(to)D 197(the)D 280(equilibrium)D 917(position)D 649(set)D 259(by)D
r
/f1 f
sv 238(\021)D r
/f2 f
sv 37 Y 126(b)D r
/f0 f
sv -37 Y 80(.)D 211 Y -4092(Since)D 462(we)D 271(chose)D 475(to)D 199(\256x)D
r
/f1 f
sv 250(M)D r
/f2 f
sv 37 Y 163(R)D r
/f0 f
sv -37 Y 93(,)D 102(the)D 281(only)D 384(free)D 343(parameters)D 868(left)D
211 Y -4076(are)D r
/f1 f
sv 268(\021)D r
/f2 f
sv 37 Y 127(i)D r
/f0 f
sv -37 Y 92(and)D r
/f1 f
sv 308(\021)D r
/f2 f
sv 37 Y 127(b)D r
/f0 f
sv -37 Y 121(parametrizing)D 1070(the)D 268(strength)D 637(of)D r
/f1 f
sv 195(CPT)D r
/f0 f
sv 406(violation,)D 211 Y -3619(and)D 323(the)D 282(neutrino)D 672(Y)D 113(uka)D
265(wa)D 271(couplings.)D 820(F)D 99(or)D 210(the)D 282(latter)D 437(there)D
426(is)D 210 Y -4200(some)D 427(natural)D 552(range)D 448(suggested)D 765(by)D
221(the)D 264(oscillations)D 880(among)D 540(the)D 211 Y -4097(light)D 392(neutrino)D
669(\257a)D 182(v)D 90(ors.)D 323(Introducing)D 914(an)D 227(`)D 48(`ef)D
201(fecti)D 327(v)D 90(e')D 131(')D 113(neutrino)D 211 Y -3707(mass)D 423(that)D
332(the)D 280(kinetic)D 558(Eqs.)D 377(\()D r
0.6666 1 1 SH

[/Dest /temp:intralink-d13 /Rect [2947 4928 3131 4744] /Border [0 0 0] /LNK pdfmark
sv 61(13)D r
0 0 0 SH
sv 184(\))D 115(depend)D 588(on,)D r
0 0 1 SH
/f6 f
sv 484 Y -2274 ( )D r
[/Dest /temp:intralink-d19 /View [/XYZ 52 517 0] /DEST pdfmark
0 0 0 SH
/f1 f
sv 3(m)D r
/f5 f
sv -65 Y 142(eff)D r
/f2 f
sv 102 Y 0(\027)D r
/f3 f
sv -37 Y 211(\021)D r
/f8 /BG-Maths-Extension 184.515 0 0 -184.515 0 0 MF
sv -233 Y 205(\022)D 74 Y 92(X)D r
/f1 f
sv 159 Y 238(m)D r
/f2 f
sv 37 Y 142(\027)D r
/f7 f
sv 26 Y 74(i)D r
/f8 f
sv -296 Y 47(\023)D r
/f5 f
sv 79 Y 92(1)D r
/f2 f
sv 65(=)D r
/f5 f
sv 65(2)D r
/f3 f
sv 154 Y 124(\210)D r
/f8 f
sv -233 Y 205(\022)D r
NP 3357 5316 M 898 0 R 
0 8 R -898 0 R SFR 
sv -47 Y 92(P)D r
/f3 f
sv 129 Y 195(j)D r
/f1 f
sv 54(Y)D r
/f2 f
sv -65 Y 117(\027)D r
/f5 f
sv 117 Y -10(diag)D r
/f3 f
sv -52 Y 232(j)D r
/f5 f
sv -65 Y 54(2)D r
/f1 f
sv 65 Y 73(v)D r
/f5 f
sv -65 Y 110(2)D r
/f4 f
sv 343 Y -550(2)D r
/f1 f
sv 92(M)D r
/f2 f
sv 37 Y 163(R)D r
/f8 f
sv -397 Y 368(\023)D r
/f5 f
sv 79 Y 92(1)D r
/f2 f
sv 65(=)D r
/f5 f
sv 64(2)D r
/f1 f
sv 154 Y 74(;)D r
/f0 f
sv 382(\(19\))D 490 Y -4016(we)D 277(notice)D 515(that)D r
/f3 f
sv 340(\205)D r
/f1 f
sv 61(m)D r
/f5 f
sv -65 Y 142(eff)D r
/f2 f
sv 102 Y 0(\027)D r
/f3 f
sv -37 Y 159(\206)D r
/f5 f
sv -65 Y 62(2)D r
/f0 f
sv 65 Y 135(is)D 184(lar)D 194(ger)D 298(than)D 380(any)D 326(of)D 215(the)D
288(indi)D 285(vidual)D r
/f4 f
sv 211 Y -3861(\001)D r
/f1 f
sv 137(m)D r
/f5 f
sv -65 Y 142(2)D r
/f2 f
sv 113 Y 0(ij)D r
/f0 f
sv -48 Y 156(measured)D 761(in)D 197(the)D 279(oscillations)D 895(exp)D 265(eriments.)D
736(Thus,)D 467(tak-)D 238 Y -4035(ing)D 322(the)D 312(lar)D 194(gest)D 383(of)D
r
/f4 f
sv 239(\001)D r
/f1 f
sv 136(m)D r
/f5 f
sv -64 Y 142(2)D r
/f2 f
sv 112 Y 0(ij)D r
/f0 f
sv -48 Y 190(suggested)D 813(by)D 270(the)D 311(oscillation)D 858(of)D 291 Y -4170(atmospheric)D
995(neutrinos,)D r
/f8 f
sv -159 Y 947(\201\201\201\201\201\201\201\201\201\201\201\201\201)D 446(\201)D
r
/f4 f
sv 159 Y -446(\001)D r
/f1 f
sv 137(m)D r
/f5 f
sv -64 Y 142(2)D 103 Y 0(atm)D r
/f8 f
sv -198 Y -402(p)D r
/f3 f
sv 159 Y 657(')D r
/f4 f
sv 168(0)D r
/f1 f
sv 92(:)D r
/f4 f
sv 46(05)D 246(eV)D r
/f0 f
sv 306([)D r
0.6666 1 1 SH

[/Dest /temp:intralink-c21 /Rect [4311 6643 4495 6458] /Border [0 0 0] /LNK pdfmark
sv 61(21)D r
0 0 0 SH
sv 184(])D 153(we)D 305(\256nd)D 211 Y -4037(the)D 281(follo)D 345(wing)D 422(natural)D
569(range)D 464(for)D r
/f1 f
sv 269(m)D r
/f5 f
sv -64 Y 142(eff)D r
/f2 f
sv 101 Y 0(\027)D r
/f0 f
sv -37 Y 159(:)D r
0 0 1 SH
/f6 f
sv 334 Y -1520 ( )D r
[/Dest /temp:intralink-d20 /View [/XYZ 52 409 0] /DEST pdfmark
0 0 0 SH
/f4 f
sv 3(0)D r
/f1 f
sv 93(:)D r
/f4 f
sv 46(05)D 246(eV)D r
/f3 f
sv 266(\024)D r
/f1 f
sv 205(m)D r
/f5 f
sv -64 Y 142(eff)D r
/f2 f
sv 101 Y 0(\027)D r
/f3 f
sv -37 Y 210(\024)D r
/f4 f
sv 205(0)D r
/f1 f
sv 92(:)D r
/f4 f
sv 46(65)D 246(eV)D r
/f1 f
sv 215(;)D r
/f0 f
sv 870(\(20\))D 334 Y -4016(where)D 498(the)D 272(upper)D 467(limit)D 397(comes)D
518(from)D 405(the)D 273(cosmological)D 1033(bound)D 211 Y -3863(on)D 222(the)D
264(sum)D 345(of)D 191(neutrino)D 654(masses)D 559([)D r
0.6666 1 1 SH

[/Dest /temp:intralink-c22 /Rect [3213 7732 3397 7548] /Border [0 0 0] /LNK pdfmark
sv 62(22)D r
0 0 0 SH
sv 184(].)D 145(De\256ning)D 683(the)D 264(freeze-out)D 211 Y -3573(temperature)D
936(via)D 280(relation)D r
/f4 f
sv 620(\377)D r
/f2 f
sv 37 Y 114(H)D r
/f3 f
sv -37 Y 112(\205)D r
/f1 f
sv 61(T)D r
/f2 f
sv 37 Y 108(R)D r
/f3 f
sv -37 Y 93(\206)D 113(\210)D r
/f4 f
sv 205(\377)D r
/f2 f
sv 37 Y 113(L)D r
/f3 f
sv -37 Y 92(\205)D r
/f1 f
sv 62(T)D r
/f2 f
sv 37 Y 107(R)D r
/f3 f
sv -37 Y 94(\206)D r
/f0 f
sv 61(,)D 100(one)D 321(can)D 311(trans-)D 211 Y -3903(late)D 323(\()D r
0.6666 1 1 SH

[/Dest /temp:intralink-d20 /Rect [1300 8154 1485 7969] /Border [0 0 0] /LNK pdfmark
sv 61(20)D r
0 0 0 SH
sv 185(\))D 115(to)D 197(the)D 280(realistic)D 642(range)D 464(of)D r
/f1 f
sv 207(T)D r
/f2 f
sv 37 Y 108(R)D r
/f0 f
sv -37 Y 93(:)D r
0 0 1 SH
/f6 f
sv 339 Y -1636 ( )D r
[/Dest /temp:intralink-d21 /View [/XYZ 52 335 0] /DEST pdfmark
0 0 0 SH
/f4 f
sv 34(10)D r
/f5 f
sv -65 Y 215(12)D r
/f4 f
sv 65 Y 200(GeV)D r
/f1 f
sv 388(<)D 195(T)D r
/f2 f
sv 37 Y 107(R)D r
/f1 f
sv -37 Y 135(<)D r
/f4 f
sv 194(10)D r
/f5 f
sv -65 Y 185(14)D r
/f4 f
sv 65 Y 199(GeV)D r
/f1 f
sv 347(:)D r
/f0 f
sv 778(\(21\))D 352 Y -4016(On)D 323(the)D 324(lo)D 141(wer)D 374(end)D 365(of)D
251(this)D 365(range)D r
/f1 f
sv 509(T)D r
/f2 f
sv 37 Y 107(R)D r
/f0 f
sv -37 Y 191(ov)D 181(erlaps)D 539(with)D 427(the)D 211 Y -4097(sphaleron)D
773(ignition)D 629(temperature)D r
/f1 f
sv 940(T)D r
/f5 f
sv 37 Y 107(sph)D r
/f0 f
sv -37 Y 188(,)D 96(which)D 505(is)D 177(estimated)D 764(to)D 229 Y -4179(be)D
229(of)D 207(the)D 280(order)D r
/f4 f
sv 443(10)D r
/f5 f
sv -65 Y 185(12)D r
/f4 f
sv 65 Y 199(GeV)D r
/f0 f
sv 401([)D r
0.6666 1 1 SH

[/Dest /temp:intralink-c23 /Rect [2922 9285 3106 9100] /Border [0 0 0] /LNK pdfmark
sv 62(23)D r
0 0 0 SH
sv 184(].)D 210 Y -2005(The)D 345(\256nal)D 386(result)D 469(of)D 211(our)D
303(analysis)D 653(is)D 180(the)D 284(prediction)D 808(for)D 273(the)D
211 Y -4097(strength)D 662(of)D r
/f1 f
sv 221(CPT)D r
/f0 f
sv 432(violation)D 725(in)D 211(lepton)D 529(and)D 334(baryons)D 651(sectors.)D
211 Y -3765(Since)D 450(Eqs.)D 362(\()D r
0.6666 1 1 SH

[/Dest /temp:intralink-d13 /Rect [1789 9917 1974 9733] /Border [0 0 0] /LNK pdfmark
sv 61(13)D r
0 0 0 SH
sv 185(\))D 100(are)D 266(linear)D 461(in)D r
/f1 f
sv 184(Y)D r
/f2 f
sv 37 Y 107(i)D r
/f0 f
sv -37 Y 50(,)D 86(it)D 142(is)D 162(suf\256cient)D 727(to)D 183(solv)D
305(e)D 122(them)D 211 Y -3953(numerically)D 939(for)D 269(two)D 330(cases)D
r
0 0 1 SH
/f6 f
sv 321 Y -1283 ( )D r
[/Dest /temp:intralink-s3 /View [/XYZ 52 224 0] /DEST pdfmark
0 0 0 SH
/f1 f
sv 3(\021)D r
/f2 f
sv 37 Y 126(l)D r
/f9 /MathematicalPi-One 184.515 0 0 -184.515 0 0 MF
sv -37 Y 102(\336)D r
/f4 f
sv 205(0)D r
/f1 f
sv 92(;)D 446(\021)D r
/f2 f
sv 37 Y 127(b)D r
/f3 f
sv -37 Y 131(\210)D r
/f4 f
sv 205(0)D r
/f1 f
sv 92(;)D r
/f0 f
sv 261(and)D r
/f1 f
sv 452(\021)D r
/f2 f
sv 37 Y 126(l)D r
/f3 f
sv -37 Y 102(\210)D r
/f4 f
sv 205(0)D r
/f1 f
sv 92(;)D 446(\021)D r
/f2 f
sv 37 Y 127(b)D r
/f9 f
sv -37 Y 131(\336)D r
/f4 f
sv 205(0)D r
/f1 f
sv 92(;)D r
/f0 f
sv 333 Y -4023(and)D 351(then)D 403(using)D 483(the)D 311(e)D 80(xperimental)D
969(v)D 89(alue)D 393(of)D 237(B)D 117(A)D 123(U,)D 263(\256x)D 278(the)D
211 Y -4097(v)D 89(alues)D 434(of)D r
/f1 f
sv 207(\021)D r
/f2 f
sv 37 Y 126(l)D r
/f0 f
sv -37 Y 104(and)D r
/f1 f
sv 321(\021)D r
/f2 f
sv 37 Y 127(b)D r
/f0 f
sv -37 Y 133(as)D 207(functions)D 741(of)D r
/f1 f
sv 208(m)D r
/f5 f
sv -64 Y 142(eff)D r
/f2 f
sv 101 Y 0(\027)D r
/f0 f
sv -37 Y 159(.)D 211 Y -2813(Figure)D r
0.6666 1 1 SH

[/Dest /temp:intralink-f2 /Rect [1629 11204 1721 11020] /Border [0 0 0] /LNK pdfmark
sv 528(2)D r
0 0 0 SH
sv 139(e)D 80(xhibits)D 550(the)D 273(resulting)D 693(dependence)D 920(of)D
r
/f1 f
sv 200(\021)D r
/f2 f
sv 37 Y 127(i)D r
/f0 f
sv -37 Y 96(on)D r
/f1 f
sv 231(m)D r
/f5 f
sv -64 Y 142(eff)D r
/f2 f
sv 101 Y 0(\027)D r
/f0 f
sv 174 Y -4164(within)D 516(a)D 126(phenomenologically)D 1554(viable)D 496(range)D
454(of)D r
/f1 f
sv 197(m)D r
/f5 f
sv -65 Y 142(eff)D r
/f2 f
sv 102 Y 0(\027)D r
/f0 f
sv -37 Y 203(bounded)D 211 Y -3688(by)D 236(two)D 325(vert)D 286(ical)D 320(dashed)D
564(lines.)D 447(One)D 358(notices)D 575(that)D r
/f1 f
sv 329(\021)D r
/f2 f
sv 37 Y 127(b)D r
/f0 f
sv -37 Y 131(does)D 389(not)D 211 Y -4087(change)D 582(much)D 468(in)D 201(the)D
283(`)D 48(`physical')D 726(')D 111(re)D 142(gion.)D 432(Fo)D 192(r)D
r
/f1 f
sv 118(\021)D r
/f2 f
sv 37 Y 127(l)D r
/f0 f
sv -37 Y 50(-dominated)D 211 Y -3480(scenario,)D 728(in)D 209(contrast,)D 696(the)D
292(increase)D 672(of)D r
/f1 f
sv 218(\021)D r
/f2 f
sv 37 Y 127(l)D r
/f0 f
sv -37 Y 115(with)D r
/f1 f
sv 393(m)D r
/f5 f
sv -65 Y 143(eff)D r
/f2 f
sv 102 Y 0(\027)D r
/f0 f
sv -37 Y 224(is)D 188(well)D 210 Y -4005(pronounced.)D 983(As)D 267(exp)D 265(ected,)D
502(the)D 291(lo)D 140(wer)D 341(mass)D r
/f1 f
sv 433(m)D r
/f5 f
sv -64 Y 142(eff)D r
/f2 f
sv 101 Y 0(\027)D r
/f0 f
sv -37 Y 224(leads)D 444(to)D 209(a)D r
/f10 /Times-Italic 184.515 0 0 -184.515 0 0 MF
sv 211 Y -4241(higher)D r
/f0 f
sv 577(freeze-out)D 846(temperature)D r
/f1 f
sv 981(T)D r
/f2 f
sv 37 Y 107(R)D r
/f0 f
sv -37 Y 94(,)D 141(and)D 362(thus)D 402(lo)D 140(wer)D r
/f1 f
sv 372(m)D r
/f5 f
sv -64 Y 142(eff)D r
/f2 f
sv 101 Y 0(\027)D r
/f0 f
sv 174 Y -4164(requires)D r
/f10 f
sv 659(lower)D r
/f1 f
sv 485(CPT)D r
/f0 f
sv 428(violating)D 723(parameter)D r
/f1 f
sv 805(\021)D r
/f2 f
sv 37 Y 126(l)D r
/f0 f
sv -37 Y 115(to)D 208(get)D 290(an)D 239(ob-)D -6907 Y 562(serv)D 305(ed)D 224(v)D
89(alue)D 358(of)D 204(B)D 117(A)D 123(U.)D 228(Also)D 397(not)D 286(surprisingly)D
870(,)D 95(the)D r
/f1 f
sv 276(\021)D r
/f2 f
sv 36 Y 127(l)D r
/f0 f
sv -36 Y 100(and)D r
/f1 f
sv 317(\021)D r
/f2 f
sv 36 Y 127(b)D r
/f0 f
sv 174 Y -4243(required)D 675(to)D 203(reproduce)D 799(B)D 117(A)D 123(U)D
191(in)D 203(our)D 305(scenario)D 676(hav)D 263(e)D 142(opposite)D 211 Y -3697(signs.)D
211 Y 184(The)D 349(lo)D 140(wer)D 337(end)D 327(of)D 214(the)D 287(range)D
471(\()D r
0.6666 1 1 SH

[/Dest /temp:intralink-d20 /Rect [7926 6405 8111 6221] /Border [0 0 0] /LNK pdfmark
sv 61(20)D r
0 0 0 SH
sv 185(\))D 121(corresponds)D 952(to)D 204(a)D 143(hier)D 286(-)D 211 Y -4261(archical)D
692(scenario)D r
/f1 f
sv 721(m)D r
/f5 f
sv -65 Y 142(2)D 116 Y 0(1)D r
/f0 f
sv -51 Y 74(,)D r
/f1 f
sv 150(m)D r
/f5 f
sv -65 Y 142(2)D 116 Y 0(2)D r
/f3 f
sv -51 Y 125(\034)D r
/f1 f
sv 245(m)D r
/f5 f
sv -65 Y 142(2)D 116 Y 0(3)D r
/f0 f
sv -51 Y 74(,)D 147(with)D 433(the)D 331(tau-neutrino)D 217 Y -3418(being)D
447(the)D 264(hea)D 255(viest.)D 432(The)D 325(size)D 325(of)D 190(the)D
r
/f1 f
sv 264(CPT)D r
/f0 f
sv 398(violation)D 695(suggested)D 211 Y -3595(by)D 238(the)D r
/f1 f
sv 280(CPT)D r
/f0 f
sv 365(-odd)D 391(leptogenesis)D 968(in)D 197(this)D 321(case)D 372(is)D
176(found)D 484(to)D 198(be)D r
0 0 1 SH
/f11 /Times-Roman 0.210875 0 0 -0.210875 0 0 MF
sv -4583 Y -3955 ( )D r
[/Dest /temp:intralink-d22 /View [/XYZ 316 747 0] /DEST pdfmark
5594 826 9916 3899 C
0 0 0 SH
-1 SOB
/f11 f
75 45 SS1
0 -174.254 17.6388 -17.6388 -2161 -1536.5 [1 0 0 1 0 0] 2161 1536.5 0 5594 826 BEGINEPSFILE
%%BeginDocument: S:\aps\prd\pool\DX10072\2.eps
%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: 2.eps
%%Creator: Adobe Illustrator(R) 12
%%AI8_CreatorVersion: 12.0.0%AI9_PrintingDataBegin%%For: Your User Name
%%CreationDate: 11/23/2006
%%BoundingBox: 0 0 246 175
%%HiResBoundingBox: 0 0 245.0806 174.2540
%%CropBox: 0 0 245.0806 174.2540
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.19 0
%%+ procset Adobe_CoolType_Core 2.23 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%ADO_BuildNumber: Adobe Illustrator(R) 12.0.0 x198 R agm 4.3861 ct 5.530
%ADO_ContainsXMP: MainFirst
%AI7_Thumbnail: 128 92 8
%%BeginData: 7534 Hex Bytes
%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD0AFFA87DFD7DFFA8275252FF7DFD05A87DFD05A87DA87DA8A8A8
%7DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA87DFD05A8
%7DA8A8A87DA87DA87DA8A8A87DFD05A87DA87DA8A8A87DA8A8A87DA8A8A8
%7DA8A8A87DA8A8A87DA8A8A87DA8A8A884A8A77E7EA8A8A87DA8A8A87D7D
%A8FD0AFFA87DA8FFA87DFFFFA8FFFFFFA8FFFFFF7DFFFFFFA8FFFFFFA8FF
%FFA8A8FFFFFFA8FFFFFFA8FFA8A8A8FFFFFFA8FFFFFFA8FFA8FFA8FFFFFF
%A8FFFFFFA8A8FFFFA8FFFFFFA8FFFFFF7DFFFFFFA8FFFFFFA8FFFFA8A8FF
%FFFFA8FFFFFFA8FFA8A8A8FFFFFFA8FFCACAA8FF7EFFAFFFFFFFAFFFFFFF
%A8A8FD0FFF7DFD26FFA9FD38FFC3FCFCB5CAFFC3CAC3CAC3CAC3FFFFFF7D
%FD0EFFA8A8FD26FFA9FD39FFC3C4BDC3A9CAC3CAC3CAC3CACAFFA8A8FD0F
%FF7DFD26FFA9FD38FF656564FFCACBFD0AFF7DFD0FFFA8FD26FFA9FD37FF
%893F3FFA64AEA98A89AE89AE8989AEFFFFA8FD0FFFA8FD25FFA9FD3CFF89
%3FFFA8FFAEFFAEFFAEFFFFFFA8FD0FFFA8FD26FFA9FD3DFFA9FD0AFFA8FD
%0FFFA8FD64FFA9A9FD09FFA8FD09FF7D7DFFA8A8FFA8FD26FFA9FD3DFFA9
%FD0AFFA8FD08FFA82752527D27FF7DFD26FFA9A9FD3DFFA9FD08FFA87DFD
%08FFA87DA8FF7DA8A8A8FD26FFA9FD3DFFA9FD09FFA8A8FD0FFFA8FD26FF
%A9FD48FF7DFD0FFFA8FD26FFA9FD3DFFA9FD0AFFA8FD0FFFA8FD25FFA9FD
%3EFFA9A9FD09FFA1FD0FFFA8FD26FFA9FD3DFFA9FD09FFBCC3FD0FFFA8FD
%65FFA9FD06FFCABCC3A8FD0EFFCB83AEFD25FFA9FD3DFFA9FD06FFCABCCA
%AFA8FD0FFF7D8964AEFD23FFA9A9FD3DFFA9FFFFFFCABCBCFFFFFF7DFD0B
%FFA87DA8A8CBFFFF8989AEFD21FFA9FD3DFFA9FFFFFFC3BCCAFD04FFA8FD
%0AFFA8272752FF7DFFFFFFAE896489AEFD1EFFA9FD40FFBCC3FD05FFA87D
%FD0BFF7D52A8FFA8FD06FF898989FD1DFFA9FD3DFFA9CABCCAFD06FF8389
%FD0FFFA8FD08FFAE6489AEFD19FFA9FD3DFFCABC9AFD07FF8989A8FD0FFF
%A8FD0AFFAE8989AEFD18FFA9FD3BFFC3BCA1FD07FF64AEFFA8FD0FFFA8FD
%0DFF898989AEFD50FFBCC3CFAFA9FD04FFAE64AEFFFFA8FD0EFFA8A8FD10
%FF898989FD13FFA9FD38FFCABCCAFFFFA9FD04FF8989FFFFFFA8A8FD0FFF
%7DFD11FFAEAE898989FD11FFA9FD35FFCABCBCFD05FFCBFFAE8989FD05FF
%7DFD0EFFA8A8FD15FFAE898989FD0DFFA9FD35FFC3BCCAFD05FFCBFF8989
%FD06FFA8A8FD0FFF7DFD17FFAEAE898989FD0AFFA9FD33FFCABCC3FD07FF
%8A64AEFD08FF7DFFFFA8A8A8FD0AFFA8FD1AFFAEAE898989AEFD06FFA9FD
%32FFC3BCCAFD06FF898983FD0AFFA8FFA8A87D7DA8FFFFA85252527D52FF
%7DFD1DFFAEAE898989AEAEFFCBFD31FFCABCC3FD05FFAE896489AECBA9FD
%08FFA87DFFFFA87D7DFFFFFF7D52527D527DFFA8FD22FFAEAE89AE84FD2F
%FFC3C3CAFD05FF898989FFFFFFA9FD09FFA8A8FF7D52A8A8FD04FFA8FFA8
%FFA8FFA8FD25FFAEAE898989AEAEFD28FFCABCCAFD04FF898989AEFD06FF
%A9FD09FFA8FFA87DFD0BFFA8A8FD26FFA9FFFFFFAEAE898989AEAEFFAEFD
%1FFFCAC3BDFFAFAE898989AEFD08FFA9FD09FFA8A8FFFF5252FD0BFF7DFD
%26FFA9A9FD05FFAEAE89AEFD0589FD04AEFFAEFD13FFAFFFA1997C8A8989
%89AEAEFD0BFFA9FD09FF7DFFFF5227FD0AFFA8A8FD26FFA9FD0DFFFD04AE
%898989AE89AE89FD0BAE89AE89AE89AD7BA789AFAEFD0FFFA9FD09FFA8A8
%FFFF7DF8FD0BFF7DFD3BFFAEFFFD04AE89AE89AEAEAE89FD04AEAFA8C29A
%FD1FFF7DFFFF7D52A8FD0AFFA8FD26FFA9FD25FFC3BCCAFD15FFA9FD0AFF
%A8FFA87D52FD0BFFA8FD25FFA9A9FD23FFCABCC3CAFD16FFA9A9FD09FFA8
%FFFF7D7D7DFD07FFA8FFFFA8FD26FFA9FD22FFC3BCFD19FFA9FD0AFFA8FF
%FFFF7DFD07FF522752FF7DFD47FFC3BCC3FD1AFFA9A9FD09FF7DFFFF5227
%FD06FFA8522752A8A8A8FD25FFA9FD1EFFCABCC3FD1CFFA9FD09FFA8A8FF
%FF52F8FD07FFA8FFFFFFA8FD26FFA9A9FD1BFFCAC3BCCAFD1DFFA9A9FD09
%FF7DFFFF7D52FD0AFFA8A8FD26FFA9FD1BFFC3C3CAFD1FFFA9FD09FFA8A8
%FFFF7D527DFD0AFF7DFD26FFA9FD19FFCABCC3FD2CFF7DFFFFFFA8A8FD0A
%FFA8FD26FFA9FD17FFCABCBCFD23FFA9FD0AFFA8FFFFFF7D52A8FD09FFA8
%FD25FFA9FD16FFCABCBCCAFD25FFA9FD09FFA8FFFFFF7D27FD0AFFA8FD26
%FFA9FD14FFC3BCCAFD26FFA9FD0AFFA8FFFF7D2752A8FD09FFA8FD39FFC3
%BCC3FD28FFA9A9FD09FFA8FFFF7D52A8FD05FFA8FFFFFFA8A8FD26FFA9FD
%10FFCABCC3FD2AFFA9FD09FFA8A8FFFF7DF8FD05FF5252527D52FF7DFD27
%FFA9FD0DFFCABCBCFD2DFFA9FD08FFA87DFFFF527DFD04FF7DFD04527DFF
%A8A8FD25FFA9FD0DFFBCC3CAFD2DFFA9FD09FFA8A8FD09FFA8FFA8FFFFFF
%A8FD26FFA9FD0AFFCAC3BCCAFD30FFA9FD09FFA8FD0FFFA8FD26FFA9FD09
%FFC3C3C3FD31FFA9FD0AFFA8FD0FFFA8FD25FFA9FD07FFCAC3BCC3FD33FF
%A9A9FD09FFA8FD0FFFA8FD26FFA9FD05FFC3BCC3FD35FFA9FD0AFFA8FD0F
%FFA8FD2AFFCABCC3CAFD36FFA9A9FD09FFA8FD0EFFA8A8FD26FFA9FFC3BC
%C3FD39FFA9FD09FFA8A8FD0FFF7DFD26FFC3BCC3CAFD3AFFA9A9FD09FF7D
%FD0EFFA8A8FD24FFC3C39BFD3DFFA9FD0AFFA8FD0BFF522752FF7DFD22FF
%C3BCC3CAFD48FFA87DFD0AFFA852277DFF7DA8FD1FFFC3C3C3FFFFFFA9FD
%3DFFA9FD09FFA8A8FD0BFFA8FFFFFFA8FD1DFFCAC3BCC3CAFFFFFFA9A9FD
%3DFFA9A9FD09FFA8FD0FFFA8FD1CFFC3C3C3FD07FFA9FD3DFFA9FD0AFFA8
%FD0FFFA8FD19FFCAC3BCCAFD48FFA9FD09FFA8FD0EFFA8A8FD17FFCABCC3
%CAFD0BFFA9FD3DFFA9FD09FFA8A8FD0FFF7DFD15FFC3BCBCFD0EFFA9A9FD
%3DFFA9FD09FF7DFD0EFFA8A8FD12FFCAC3BCCAFD10FFA9FD3DFFA9FD09FF
%A8A8FD0FFF7DFD0FFFCACABCC3C3FD12FFA9FD3EFFA9FD09FF7DFD0FFFA8
%FD0EFFC3BCC3FD15FFA9FD3DFFA9FD0AFFA8FD08FFA85252527D52FF7DFD
%0BFFC3BCBCCAFD16FFA9FD3EFFA9A9FD08FFA87DFD08FF7DFD04527DFFA8
%A8FD07FFCAC3BCC3CAFD19FFA9FD3DFFA9FD09FFA8A8FD09FFA8FFFFFFA8
%FFA8FD05FFCAC3BCC3C3FD5AFFA9A9FD09FFA8FD0EFFA8A8FFFFCACABCC3
%C3FD1FFFA9FD3DFFA9FD09FFA8A8FD0FFF7DCABCBCC3CAFD22FFA9FD3DFF
%A9FD09FF7DFD0FFFC3C3CAFD24FFA9FD3DFFA9FD09FFA8A8FD0FFF84FD26
%FFA9FD48FF7DFD0FFFA8FD26FFA9FD3DFFA9FD0AFFA8FD0FFFA8FD25FFA9
%FD3EFFA9A9FD09FFA8FD0FFFA8FD26FFA9FD3DFFA9FD0AFFA8FD0BFF7D52
%7DFF7DFD0AFFA8A8FD09FFA8FD0AFFA8A8FFFFFFA9FD05FFA8A8FD0AFFA8
%FD0AFFA8A8FD09FFA8FD0AFFA8A8FD09FFA87EA9FD09FF7DFD0AFFA852F8
%52FF7D7DFD09A87DFD0BA87DFD09A87DFD05A87EFD05A87DFD09A87DFD0B
%A87DFD0BA87DFD09A87DFD0BA87DFD09A87DA8FD0BFF527D7DFFA8FFFFFF
%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FD07FFA8FF
%FFFFA8FFFFFFA8FFA8FFA8FFFFFFA8FD07FFA8FFFFFFA8FFA8FFA8FFFFFF
%A8FFFFFFA8FFA8FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FF
%A8FFA8FFFFFFA8FFFFFFA8FD0EFFA87D7DFD08FF7D7DA852FD07FFA87DA8
%27FD07FFA87DFF27FD07FFA87DA852A8FD08FF7DA8FD08FF527DA852FD07
%FF7D7D7D52FD07FFA852A827FD07FFA852A87DA8FD07FFA852A8FD0DFFA8
%277DFD07FFA87D7D5252FD06FFA87D7D7D27FD07FF7D7D7D27A8FD05FFA8
%A852A827A8FD07FFA852A8FD07FFA8277D5252FD06FFA852527D27FD07FF
%52527D52A8FD06FF7D527D27A8FD08FF27A8FD3BFFA8FD2BFFA8FD0BFFA8
%FD48FFA8A8A8FFA8FFFFA8A8FD04FFA8A8A87DA8A8A8FD6DFF27525252A8
%A87D7DF87D7DA87D2727527DA87DFD6CFFA8A87D522752277D7DA8525227
%7D527DA87D7D7DFD6FFFA8A8FFFFA8FD05FFA8FFFFFFA8FFA8FDAFFFFF
%%EndData
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright (C) 2000-2003 Adobe Systems, Inc.  All Rights Reserved.
systemdict /setpacking known
{
	currentpacking
	true setpacking
} if
userdict /Adobe_AGM_Utils 70 dict dup begin put
/bdf
{
	bind def
} bind def
/nd{
	null def
}bdf
/xdf
{
	exch def
}bdf
/ldf 
{
	load def
}bdf
/ddf
{
	put
}bdf	
/xddf
{
	3 -1 roll put
}bdf	
/xpt
{
	exch put
}bdf
/ndf
{ 
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/ps_level
	/languagelevel where{
		pop systemdict /languagelevel get exec
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr} stopped {
		-1
	}if
def
/set_gvm
{
	currentglobal exch setglobal
}bdf
/reset_gvm
{
	setglobal
}bdf
/makereadonlyarray
{
	/packedarray where{
		pop packedarray
	}{
		array astore readonly
	}ifelse
}bdf
/map_reserved_ink_name
{
	dup type /stringtype eq{
		dup /Red eq{
			pop (_Red_)
		}{
			dup /Green eq{
				pop (_Green_)
			}{
				dup /Blue eq{
					pop (_Blue_)
				}{
					dup () cvn eq{
						pop (Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def} repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash /AGMUTIL_GSTATE_do xdf /AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit /AGMUTIL_GSTATE_gy_xfer xdf cvlit /AGMUTIL_GSTATE_b_xfer xdf
		cvlit /AGMUTIL_GSTATE_g_xfer xdf cvlit /AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx {AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def} repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht /HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone /HalftoneType get AGMUTIL_GSTATE_ht /HalftoneType get ne
			{
			  mark AGMUTIL_GSTATE_ht {sethalftone} stopped cleartomark
			} if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		} ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/thold_halftone
{ 
	level3
		{sethalftone currenthalftone}
		{
			dup /HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}
			{
				begin
				Width Height mul {
					Thresholds read {pop} if
				} repeat
				end
				currenthalftone
			} ifelse
		}ifelse
} def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%) anchorsearch {pop} if
} bdf
/filter_cmyk
{	
	dup type /filetype ne{
		exch () /SubFileDecode filter
	}
	{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length /AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	] cvx
} bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
} bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type /filetype ne{
		0 () /SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict /AGMCORE_gget cvx /begin cvx
			currentdict /srcStr get /readstring cvx /pop cvx
			/dup cvx /length cvx 0 /gt cvx [
				Adobe_AGM_Utils /AGMUTIL_ndx 0 /ddf cvx
				names_index Names length currentdict /srcStr get length 1 sub {
					1 /index cvx /exch cvx /get cvx
					currentdict /dstStr get /AGMUTIL_ndx /load cvx 3 -1 /roll cvx /put cvx
					Adobe_AGM_Utils /AGMUTIL_ndx /AGMUTIL_ndx /load cvx 1 /add cvx /ddf cvx
				} for
				currentdict /dstStr get 0 /AGMUTIL_ndx /load cvx /getinterval cvx
			] cvx /if cvx
			/end cvx
		] cvx
		bind
		/exec cvx
	] cvx
	end
} bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict /DataSource get def
	/origMultipleDataSources imageDict /MultipleDataSources get def
	/origDecode imageDict /Decode get def
	/dstDataStr imageDict /Width get colorSpaceElemCnt mul string def
	imageDict /MultipleDataSources known {MultipleDataSources}{false} ifelse
	{
		/imbufCnt imageDict /DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub {
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict /DataSource get imbufIdx [ AGMUTIL_imagefile imbufs imbufIdx get /readstring cvx /pop cvx ] cvx put
		} for
		DeviceN_PS2 {
			imageDict begin
		 	/DataSource [ DataSource /devn_sep_datasource cvx ] cvx def
			/MultipleDataSources false def
			/Decode [0 1] def
			end
		} if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or {
			/srcDataStrs [ imageDict begin
				currentdict /MultipleDataSources known {MultipleDataSources {DataSource length}{1}ifelse}{1} ifelse
				{
					Width Decode length 2 div mul cvi string
				} repeat
				end ] def		
			imageDict begin
		 	/DataSource [AGMUTIL_imagefile Decode BitsPerComponent false 1 /filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource /exec cvx] cvx def
			/Decode [0 1] def
			end
		}{
			imageDict /DataSource [1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx /pop cvx names_index /get cvx /put cvx] cvx put
			imageDict /Decode [0 1] put
		} ifelse
	} ifelse
	imageDict exch
	load exec
	imageDict /DataSource origDataSource put
	imageDict /MultipleDataSources origMultipleDataSources put
	imageDict /Decode origDecode put	
	end
} bdf
/write_image_file
{
	begin
	{ (AGMUTIL_imagefile) (w+) file } stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources {DataSource 0 get}{DataSource}ifelse type /filetype eq {
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{ 
			pop
			MultipleDataSources {
			 	0 1 DataSource length 1 sub {
					DataSource type dup
					/arraytype eq {
						pop DataSource exch get exec
					}{
						/filetype eq {
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						} ifelse
					} ifelse
					AGMUTIL_imagefile exch writestring
				} for
			}{
				DataSource type dup
				/arraytype eq {
					pop DataSource exec
				}{
					/filetype eq {
						DataSource imbuf readstring pop
					}{
						DataSource
					} ifelse
				} ifelse
				AGMUTIL_imagefile exch writestring
			} ifelse
		}for
		end
		true
	}ifelse
	end
} bdf
/close_image_file
{
	AGMUTIL_imagefile closefile (AGMUTIL_imagefile) deletefile
}def
statusdict /product known userdict /AGMP_current_show known not and{
	/pstr statusdict /product get def
	pstr (HP LaserJet 2200) eq 	
	pstr (HP LaserJet 4000 Series) eq or
	pstr (HP LaserJet 4050 Series ) eq or
	pstr (HP LaserJet 8000 Series) eq or
	pstr (HP LaserJet 8100 Series) eq or
	pstr (HP LaserJet 8150 Series) eq or
	pstr (HP LaserJet 5000 Series) eq or
	pstr (HP LaserJet 5100 Series) eq or
	pstr (HP Color LaserJet 4500) eq or
	pstr (HP Color LaserJet 4600) eq or
	pstr (HP LaserJet 5Si) eq or
	pstr (HP LaserJet 1200 Series) eq or
	pstr (HP LaserJet 1300 Series) eq or
	pstr (HP LaserJet 4100 Series) eq or 
	{
 		userdict /AGMP_current_show /show load put
		userdict /show {
		  currentcolorspace 0 get
		  /Pattern eq
		  {false charpath f}
		  {AGMP_current_show} ifelse
		} put
	}if
	currentdict /pstr undef
} if
/consumeimagedata
{
	begin
	currentdict /MultipleDataSources known not
		{/MultipleDataSources false def} if
	MultipleDataSources
		{
		DataSource 0 get type
		dup /filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup /arraytype eq exch /packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch get exec length exch 0 ne {pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup /filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height { pop DataSource flushbuffer readstring pop pop} for
			end
			}if
		dup /arraytype eq exch /packedarraytype eq or /DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	  2{/exec load}repeat
	  3 1 roll
	  [ 5 1 roll ] bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs /TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{ 
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs /TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type /dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		} if
	dup type /arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		} if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch {cvx} if
}bdf
/clonedict
{
	dup length dict
	begin
		{
		dup type /dicttype eq
			{
				clonedict
			} if
		dup type /arraytype eq
			{
				clonearray
			} if
		def
		}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get /DeviceN eq level3 not and
} bdf
/Indexed_DeviceN
{ 
	/indexed_colorspace_dict AGMCORE_gget dup null ne {
		dup /CSDBase known {
			/CSDBase get /CSD get_res /Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	} ifelse
} bdf
/DeviceN_NoneName
{	
	/Names where {
		pop
		false Names
		{
			(None) eq or
		} forall
	}{
		false
	}ifelse
} bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup /arraytype eq exch /packedarraytype eq or
		{
			dup 0 get /DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}
			{
				true
			}ifelse
		}
		{
			true
		} ifelse
	}
	{
		true
	} ifelse
} bdf
/base_colorspace_type
{
	dup type /arraytype eq {0 get} if
} bdf
/currentdistillerparams where { pop currentdistillerparams /CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5 {cleartomark} bind def
}{
	/pdfmark_5 {pdfmark} bind def
}ifelse
/ReadBypdfmark_5
{
	2 dict begin
	/makerString exch def string /tmpString exch def
	{
		currentfile tmpString readline pop
		makerString anchorsearch
		{
		pop pop cleartomark exit
		}{
			3 copy /PUT pdfmark_5 pop 2 copy (\n) /PUT pdfmark_5
		} ifelse
	}loop
	end
} bdf
/doc_setup{
	Adobe_AGM_Utils begin
}bdf
/doc_trailer{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict /setpacking known
{
	setpacking
} if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright (C) 1997-2005 Adobe Systems, Inc.  All Rights Reserved.
%% Note: This procset assumes Adobe_AGM_Utils is opened on the stack below it, for
%% definitions of some fundamental procedures.
systemdict /setpacking known
{
	currentpacking
	true setpacking
} if
userdict /Adobe_AGM_Core 201 dict dup begin put
/Adobe_AGM_Core_Id /Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen [currentscreen] cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_in_pattern false def
/AGMCORE_currentpagedevice nd
/knockout_unitsq nd
currentglobal true setglobal
[/CSA /Gradient /Procedure]
{
	/Generic /Category findresource dup length dict copy /Category defineresource pop
} forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer {readline} stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type /dicttype eq{
		dup /HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup /HalftoneType get 2 eq{
				/GraySpotFunction get
			}{ 
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
} def
/clp_npth
{
	clip newpath
} def
/eoclp_npth
{
	eoclip newpath
} def
/npth_clp
{
	newpath clip
} def
/graphic_setup
{
	/AGMCORE_graphicsave save def
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[] 0 setdash
	10 setmiterlimit
	newpath
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias get exec
	/Adobe_AGM_Image where {
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			get exec
		}{
			pop pop
		}ifelse
	} if
	100 dict begin
	/dictstackcount countdictstack def
	/showpage {} def
	mark
} def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub {end}for
	end
	AGMCORE_graphicsave restore
} def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox newpath pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				} if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show ( ) show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}
			{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			} ifelse
		} forall
} bdf
/doc_setup{
	Adobe_AGM_Core begin
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict /AGM_handleerror known not{
		errordict /AGM_handleerror errordict /handleerror get put
		errordict /handleerror {
			Adobe_AGM_Core begin
			$error /newerror get AGMCORE_cur_err null ne and{
				$error /newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error /newerror true put
			end
			errordict /AGM_handleerror get exec
			} bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err /AGMCORE_bad_environ def} if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product (Adobe PostScript Parser) ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 10 def
		/AGMCORE_&gsave /gsave ldf
		/AGMCORE_&grestore /grestore ldf
		/AGMCORE_&grestoreall /grestoreall ldf
		/AGMCORE_&save /save ldf
		/AGMCORE_&setoverprint /setoverprint ldf
		/AGMCORE_gdictcopy {
			begin
			{ def } forall
			end
		}def
		/AGMCORE_gput {
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget {
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave {
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge {limitcheck} if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore {
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt {1 add} if
			dup AGMCORE_gstack exch get dup /AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall {
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save {
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge {limitcheck} if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup /AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub {
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		} for
	}if
	level3 /AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern /makepattern load def
	}if
	/currentcmykcolor [0 0 0 0] AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace [/DeviceGray] AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent () AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	<<
	/MaxPatternItem currentsystemparams /MaxPatternCache get
	>>
	setuserparams
	end
}def
/page_setup
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor /setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore /currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3 {
			3 index add neg dup 0 lt {
				pop 0
			} if
			3 1 roll
		} repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{
		pop
	}ndf
	/currentoverprint
	{
		false
	}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{ 
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.) ==
			Adobe_AGM_Core /AGMCORE_have_reported_unsupported_color_space true ddf
		} if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where {pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias {
				/Name get exch pop
			} if
			dup dup (None) eq exch (All) eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{ 
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_in_pattern known {//Adobe_AGM_Core/AGMCORE_in_pattern get}{false} ifelse
						not AGMCORE_currentpagedevice/OverrideSeparations known and
						{
							AGMCORE_currentpagedevice/OverrideSeparations get
							{
								/HqnSpots /ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name /HqnSpots /ProcSet findresource /TestSpot get exec not
						}{
							gsave
							[/Separation AGMCORE_name /DeviceGray {}]AGMCORE_&setcolorspace
							false
							AGMCORE_currentpagedevice/SeparationColorNames 2 copy known
							{
								get
								{ AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where {pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{ 
				dup true exch
					{
					dup (Cyan) eq exch
					dup (Magenta) eq 3 -1 roll or exch
					dup (Yellow) eq 3 -1 roll or exch
					dup (Black) eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup (Cyan) eq exch
						dup (Magenta) eq 3 -1 roll or exch
						dup (Yellow) eq 3 -1 roll or exch
						(Black) eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					dup (Cyan) eq exch
					dup (Magenta) eq 3 -1 roll or exch
					dup (Yellow) eq 3 -1 roll or exch
					dup (Black) eq 3 -1 roll or
					{pop}
					{convert_spot_to_process or}ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space  
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup (Cyan) eq exch dup (Magenta) eq exch dup (Yellow) eq exch (Black) eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{ 
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			  	AGMCORE_magenta_plate{
			  		4 3 roll pop pop pop
			  	}{
			  		AGMCORE_yellow_plate{
			  			4 2 roll pop pop pop
			  		}{
			  			4 1 roll pop pop pop
			  		}ifelse
			  	}ifelse
			}ifelse
			settransfer  
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			  	AGMCORE_magenta_plate{
			  		{4 3 roll pop pop pop}
			  	}{
			  		AGMCORE_yellow_plate{
			  			{4 2 roll pop pop pop}
			  		}{
			  			{4 1 roll pop pop pop}
			  		}ifelse
			  	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup /Cyan eq 1 index (Cyan) eq or
					{pop (_cyan_)}if
				dup /Magenta eq 1 index (Magenta) eq or
					{pop (_magenta_)}if
				dup /Yellow eq 1 index (Yellow) eq or
					{pop (_yellow_)}if
				dup /Black eq 1 index (Black) eq or
					{pop (_black_)}if
				}def
			dup type /arraytype eq
				{[exch {filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3 {
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup (Cyan) eq exch /Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup (Magenta) eq exch /Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup (Yellow) eq exch /Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup (Black) eq exch /Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type /stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string /string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in /readstring cvx
						[component /get cvx 255 /exch cvx /sub cvx string_out /exch cvx 0 /exch cvx /put cvx string_out]cvx
						[/pop cvx ()]cvx /ifelse cvx
					]cvx /ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type /dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict /Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode [1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0 [C0 channel get 1 exch sub] def
							/C1 [C1 channel get 1 exch sub] def
							}{
							/C0 [1] def
							/C1 [1] def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions [Functions {channel paint? AGMCORE_separateShadingFunction} forall] def			
						}if
					currentdict /Range known
						{/Range [0 1] def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict /Function known
					{
					currentdict /Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction /Function xdf
					/ColorSpace [/DeviceGray] def
					}{
					ColorSpace dup type /arraytype eq {0 get}if /DeviceCMYK eq
						{
						/ColorSpace [/DeviceN [/_cyan_ /_magenta_ /_yellow_ /_black_] /DeviceCMYK {}] def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get /Separation eq
						{
							{
								[1 /exch cvx /sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub /index cvx 1 /exch cvx /sub cvx ColorSpace 1 get length 1 add 1 /roll cvx ColorSpace 1 get length{/pop cvx} repeat]cvx
							}{
								pop [ColorSpace 1 get length {/pop cvx} repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2 /DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup /ColorSpace get
				dup type /arraytype ne
					{[exch]}if
				dup 0 get /DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get /Separation eq
					{
					exch begin
					ColorSpace 1 get dup /None ne exch /All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type /arraytype eq {0 get}if /DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get /exec cvx
										4 AGMCORE_plate_ndx sub -1 /roll cvx
										4 1 /roll cvx
										3 [/pop cvx]cvx /repeat cvx
										1 /exch cvx /sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get /DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type /arraytype eq {0 get}if /DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get /exec cvx
									4 AGMCORE_plate_ndx sub -1 /roll cvx
									4 1 /roll cvx
									3 [/pop cvx]cvx /repeat cvx
									1 /exch cvx /sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace [/DeviceGray] def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup /DeviceCMYK eq exch dup /Separation eq exch /DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type /arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get /CIEBasedA eq
								{
								/ColorSpace [/Separation /_ciebaseda_ /DeviceGray {}] def
								}if
							ColorSpace 0 get dup /CIEBasedABC eq exch dup /CIEBasedDEF eq exch /DeviceRGB eq or or
								{
								/ColorSpace [/DeviceN [/_red_ /_green_ /_blue_] /DeviceRGB {}] def
								}if
							ColorSpace 0 get /CIEBasedDEFG eq
								{
								/ColorSpace [/DeviceN [/_cyan_ /_magenta_ /_yellow_ /_black_] /DeviceCMYK {}] def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup /AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace [/Separation (None) /DeviceGray {}] def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup /AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup /PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading /AGMCORE_ignoreshade known
					currentdict end exch
					{pop <</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{ 
				4 {4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{ 
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf /AGMCORE_y xdf /AGMCORE_m xdf /AGMCORE_c xdf
				end
				[/Separation 4 -1 roll /DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation (All) /DeviceGray {}] setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4 {4 index mul 4 1 roll} repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval {255 div} forall
	} bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	} bdf
	/n_color_components
	{
		base_colorspace_type
		dup /DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo /moveto ldf
		/li /lineto ldf
		/cv /curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2 /setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace /setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup /arraytype eq exch /packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where {
						begin
						dup 0 get dup /Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[ 
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get [ 
									exch {
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									} forall 
								] 1 xpt
							}if
						}ifelse
						end
					} if
				}if
			}def
			/setcolorspace
			{
				dup type dup /arraytype eq exch /packedarraytype eq or
				{
					dup 0 get /Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps {AGMCORE_&&&setcolorspace} if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1 [8 0 0 8 0 0] {<ffffffffffffffff>} image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		} def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		} def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup /DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup /DeviceGray ne{
				dup /DeviceCMYK ne{
					dup /DeviceRGB ne{
						dup /Separation eq{
							pop
							currentcolorspace 3 get exec
							currentcolorspace 2 get
						}{
							dup /Indexed eq{
								pop
								currentcolorspace 3 get dup type /stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err /AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		} def
	}ifelse
	/sop /setoverprint ldf
	/lw /setlinewidth ldf
	/lc /setlinecap ldf
	/lj /setlinejoin ldf
	/ml /setmiterlimit ldf
	/dsh /setdash ldf
	/sadj /setstrokeadjust ldf
	/gry /setgray ldf
	/rgb /setrgbcolor ldf
	/cmyk /setcmykcolor ldf
	/sep /setsepcolor ldf
	/devn /setdevicencolor ldf
	/idx /setindexedcolor ldf
	/colr /setcolor ldf
	/csacrd /set_csa_crd ldf
	/sepcs /setsepcolorspace ldf
	/devncs /setdevicencolorspace ldf
	/idxcs /setindexedcolorspace ldf
	/cp /closepath ldf
	/clp /clp_npth ldf
	/eclp /eoclp_npth ldf
	/f /fill ldf
	/ef /eofill ldf
	/@ /stroke ldf
	/nclp /npth_clp ldf
	/gset /graphic_setup ldf
	/gcln /graphic_cleanup ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin /clonedict load end def
	/clonearray Adobe_AGM_Utils begin /clonearray load end def
	currentdict{
		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and {
			bind
		}if
		def
	}forall
	/getrampcolor
	{ 
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type /stringtype eq {indx get} if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		} for
		ColorSpaceFamily /Separation eq 
		{sep}
		{
			ColorSpaceFamily /DeviceN eq
			{devn} {setcolor}ifelse
		}ifelse
	} bdf
	/sssetbackground {aload pop setcolor} bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where {pop /setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			newpath
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			newpath
		} if
		c1x c2x eq
		{
			c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse
		}
		{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if
			c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if
		} ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{ pathbbox } stopped
		{ 0 0 0 0 } if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}
		{
			/max { 2 copy gt { pop } {exch pop} ifelse } bdf
			/min { 2 copy lt { pop } {exch pop} ifelse } bdf
			rampdict begin
			40 dict begin
			background length 0 gt { background sssetbackground gsave clippath fill grestore } if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}
				{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}
						{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{ /theta 89.99 def}
							{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}
							{
								/L1maxX 0 def
								/L2maxX 0 def
							} ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						} ifelse
					} ifelse
				} ifelse
			} if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt { exch } if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			} if
		} if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		newpath
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}
		{
			0
			numsteps
			{
				dup
				subsampling { round cvi } if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			} repeat
			pop
		} ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}
			{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}
				{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}
					{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{ /theta 89.99 def}
						{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}
						{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					} ifelse
				} ifelse
			} ifelse
		} if
		grestore
		grestore
		end
		end
		end
		} ifelse
	} bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where {pop /setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			newpath
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			newpath
		} if
		x1 x2 eq
		{
			y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
		}
		{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
			x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{ pathbbox } stopped
		{ 0 0 0 0 } if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}
		{
			rampdict begin
			20 dict begin
			background length 0 gt { background sssetbackground gsave clippath fill grestore } if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt { exch } if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				} if
			} if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				} if
			} if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling { round cvi } if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			} repeat
			pop
			ext1 {
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				} if
			} if
			grestore
			grestore
			end
			end
			end
		} ifelse
	} bdf
}def
/page_trailer
{
	end
}def
/doc_trailer{
}def
/capture_currentpagedevice {
	//Adobe_AGM_Core/AGMCORE_currentpagedevice currentpagedevice ddf
} def
systemdict /findcolorrendering known{
	/findcolorrendering systemdict /findcolorrendering get def
}if
systemdict /setcolorrendering known{
	/setcolorrendering systemdict /setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup //Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name /MappedCSA xdf}ifelse
} def
/setsepcolor
{ 
	/sep_colorspace_dict AGMCORE_gget begin
		dup /sep_tint exch AGMCORE_gput
		TintProc
	end
} def
/setdevicencolor
{ 
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		} for
		TintProc
	end
} def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2 {AGMCORE_tmp mul NComponents 1 roll} repeat
			LMax sub AGMCORE_tmp mul LMax add  NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add  NComponents 1 roll
				} repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
} def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
} def
/sep_proc_name
{
	dup 0 get 
	dup /DeviceRGB eq exch /DeviceCMYK eq or level2 not and has_color not and{
		pop [/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
} def
/setsepcolorspace
{ 
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup /sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup () eq exch (All) eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{ 255 div } /exec cvx 3 -1 roll [ 4 1 roll load /exec cvx ] cvx 
		] setcolorspace_opt
		/TintProc {
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get /DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc [
				Components aload pop Name findcmykcustomcolor 
				/exch cvx /setcustomcolor cvx
			] cvx bdf
		}{
 			AGMCORE_host_sep Name (All) eq and{
 				/TintProc { 
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get /DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name () eq and{
					/TintProc [
						MappedCSA sep_proc_name exch 0 get /DeviceCMYK eq{
							cvx /setcmykcolor cvx
						}{
							cvx /setgray cvx
						}ifelse
					] cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup /DeviceCMYK eq exch /DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc [
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get /DeviceGray eq{
								1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx
							}if
							/Name cvx /findcmykcustomcolor cvx /exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load /exec cvx
								/not cvx /and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							] cvx /if cvx
							/setcustomcolor cvx
						] cvx bdf
 					}{ 
						/TintProc {setcolor} bdf
						[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
} def
/additive_blend
{
  	3 dict begin
  	/numarrays xdf
  	/numcolors xdf
  	0 1 numcolors 1 sub
  		{
  		/c1 xdf
  		1
  		0 1 numarrays 1 sub
  			{
			1 exch add /index cvx
  			c1 /get cvx /mul cvx
  			}for
 		numarrays 1 add 1 /roll cvx 
  		}for
 	numarrays [/pop cvx] cvx /repeat cvx
  	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add /index cvx  
			c1 /get cvx /sub cvx /mul cvx
			}for
		/sub cvx
		numarrays 1 add 1 /roll cvx
		}for
	numarrays [/pop cvx] cvx /repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc [
		/TintTransform cvx /setcolor cvx
	] cvx bdf
	MappedCSA setcolorspace_opt
} bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length {pop} repeat
	end
} bdf
/setdevicencolorspace
{ 
	dup /AliasedColorants known {false}{true}ifelse 
	current_spot_alias and {
		7 dict begin
		/names_index 0 def
		dup /names_len exch /Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup /Names get
		{
			dup map_alias {
				exch pop
				dup /ColorLookup known {
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup /Components known {
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index [null null null null] put
						end
					} ifelse
				} ifelse
				new_names names_index 3 -1 roll /Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup /LookupTables known {
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index [null null null null] put
					end
				} ifelse
			} ifelse
			/names_index names_index 1 add def 
		} forall
		alias_cnt 0 gt {
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge {0 get length}{length}ifelse def
			0 1 names_len 1 sub {
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge {0 get length}{length}ifelse lut_entry_len ne {
					/AliasedColorants false def
					exit
				}
				{
					new_LookupTables names_index get 0 get null eq {
						dup /Names get names_index get /name xdf
						name (Cyan) eq name (Magenta) eq name (Yellow) eq name (Black) eq
						or or or not {
							/AliasedColorants false def
							exit
						} if
					} if
				} ifelse
			} for
			lut_entry_len 1 eq {
				/AliasedColorants false def
			} if
			AliasedColorants {
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq {/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod /Additive eq {/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict /TTTablesIdx known not {
					/TTTablesIdx -1 def
				} if
				end
			} if
		}if
		end
	} if
	dup /devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict /AliasedColorants known {
		AliasedColorants
	}{
		false
	} ifelse
	dup not {
		CSA map_csa
	} if
	/TintTransform load type /nulltype eq or {
		/TintTransform [
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup (Cyan) eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup (Magenta) eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0 /exch cvx 0 0
							}
							{
							(Yellow) eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1 /roll cvx 0
								}
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1 /roll cvx
								} ifelse
							} ifelse
						} ifelse
					5 -1 /roll cvx /astore cvx
					}
					{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx /mul cvx /round cvx /cvi cvx /get cvx
					} ifelse
					Names length TTTablesIdx add 1 add 1 /roll cvx
				} for
			Names length [/pop cvx] cvx /repeat cvx
			NComponents Names length
  			TintMethod /Subtractive eq
  				{
  				subtractive_blend
  				}
  				{
  				additive_blend
  				} ifelse
		] cvx bdf
	} if
	AGMCORE_host_sep {
		Names convert_to_process {
			exec_tint_transform
		}
		{	
			currentdict /AliasedColorants known {
				AliasedColorants not
			}{
				false
			} ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants {
				/currentspotalias current_spot_alias def
				false set_spot_alias
			} if
			Names {
				AGMCORE_is_cmyk_sep {
					dup (Cyan) eq AGMCORE_cyan_plate and exch
					dup (Magenta) eq AGMCORE_magenta_plate and exch
					dup (Yellow) eq AGMCORE_yellow_plate and exch
					(Black) eq AGMCORE_black_plate and or or or {
						/devicen_colorspace_dict AGMCORE_gget /TintProc [
							Names names_index /devn_makecustomcolor cvx
						] cvx ddf
						/painted? true def
					} if
					painted? {exit} if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq {
					/devicen_colorspace_dict AGMCORE_gget /TintProc [
						Names names_index /devn_makecustomcolor cvx
					] cvx ddf
					/painted? true def
					exit
					} if
				} ifelse
				/names_index names_index 1 add def
			} forall
			AvoidAliasedColorants {
				currentspotalias set_spot_alias
			} if
			painted? {
				/devicen_colorspace_dict AGMCORE_gget /names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget /TintProc [
					names_len [/pop cvx] cvx /repeat cvx 1 /setseparationgray cvx
 					0 0 0 0 /setcmykcolor cvx
				] cvx ddf
			} ifelse
			end
		} ifelse
	}
	{
		AGMCORE_in_rip_sep {
			Names convert_to_process not
		}{
			level3
		} ifelse
		{
			[/DeviceN Names MappedCSA /TintTransform load] setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and {
				[
					Names /length cvx [/pop cvx] cvx /repeat cvx
				] cvx bdf
			}{
				{setcolor} bdf
			} ifelse
		}{
			exec_tint_transform
		} ifelse
	} ifelse
	set_crd
	/AliasedColorants false def
	end
} def
/setindexedcolorspace
{
	dup /indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict /CSDBase known {
			CSDBase /CSD get_res begin
			currentdict /Names known {
				currentdict devncs
			}{
				1 currentdict sepcs
			} ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt /Names where {pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal {
					/tableIndex xdf
					Lookup dup type /stringtype eq {
						compCnt tableIndex map_index
					}{
						exec
					} ifelse
					/Names where {
						pop setdevicencolor
					}{
						setsepcolor
					} ifelse
					currentgray
					tableIndex exch
					HiVal mul cvi 
					NewLookup 3 1 roll put
				} for
				[/Indexed currentcolorspace HiVal NewLookup] setcolorspace_opt
				end
			}{
				level3
				{
					currentdict /Names known {
						[/Indexed [/DeviceN Names MappedCSA /TintTransform load] HiVal Lookup] setcolorspace_opt
					}{
						[/Indexed [/Separation Name MappedCSA sep_proc_name load] HiVal Lookup] setcolorspace_opt
					} ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict /Names known {
						Lookup dup type /stringtype eq
							{/exch cvx CSDBase /CSD get_res /Names get length dup /mul cvx exch /getinterval cvx {255 div} /forall cvx}
							{/exec cvx}ifelse
							/TintTransform load /exec cvx
					}{
						Lookup dup type /stringtype eq
							{/exch cvx /get cvx 255 /div cvx}
							{/exec cvx}ifelse
							CSDBase /CSD get_res /MappedCSA get sep_proc_name exch pop /load cvx /exec cvx
					} ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			} ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or{
						pop [/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{ 
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval {} forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						} bind
					}{
						Lookup
					}ifelse
				}ifelse
				] setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep {
		/indexed_colorspace_dict AGMCORE_gget dup /CSDBase known { 
			begin
			CSDBase /CSD get_res begin
			currentdict /Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
			end
		}{
			/Lookup get 4 3 -1 roll map_index setcmykcolor
		} ifelse
	}{
		level3 not AGMCORE_in_rip_sep and /indexed_colorspace_dict AGMCORE_gget /CSDBase known and {
			/indexed_colorspace_dict AGMCORE_gget /CSDBase get /CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		} ifelse
	}ifelse
} def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode [0 1] def
		/DataSource <FF> def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict /image get exec
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup /CSD eq {
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	} ifelse
}def
/del_res
{
	{
		aload pop exch
		dup /CSD eq {
			pop 
			{
				//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef
			}forall
		}{
			exch
			{
				1 index undefineresource
			}forall
			pop
		} ifelse
	} forall
}def
/get_res
{
	dup /CSD eq {
		pop
		dup type dup /nametype eq exch /stringtype eq or {
			AGMCORE_CSD_cache exch get
		} if
	}{
		findresource
	} ifelse
}def
/get_csa_by_name
{
	dup type dup /nametype eq exch /stringtype eq or{
		/CSA get_res
	} if
}def
/pattern_buf_init
{
	/count get 0 0 put
} def
/pattern_buf_next
{
	dup /count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
} def
/cachepattern_compress
{
	5 dict begin
	currentfile exch 0 exch /SubFileDecode filter /ReadFilter exch def
	/patarray 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	patarray 1 array dup 0 1 put /count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq {
			pop
		}{
			patarray dup length 1 sub 3 -1 roll put
		} ifelse
		{string_size}{0}ifelse string
	} /LZWEncode filter def
	{ 		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not {exit} if
	} loop
	LZWFilter closefile
	patarray				
	end
}def
/cachepattern
{
	2 dict begin
	currentfile exch 0 exch /SubFileDecode filter /ReadFilter exch def
	/patarray 20 dict def
	currentglobal true setglobal 
	patarray 1 array dup 0 1 put /count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		patarray dup length 1 sub 3 -1 roll put
		not {exit} if
	} loop
	patarray dup dup length 1 sub () put					
	end	
}def
/wrap_paintproc
{ 
  statusdict /currentfilenameextend known{
	clonedict
	begin
	/OldPaintProc /PaintProc load def
	/PaintProc
	{
		mark exch
		dup /OldPaintProc get stopped
		{closefile restore end} if
		cleartomark
	}  def
	end
  } {pop} ifelse
} def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index /XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index /YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			  1 index begin
		BBox 0 get XStep div cvi XStep mul /xshift exch neg def
		BBox 1 get YStep div cvi YStep mul /yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[ xshift yshift /translate load null /exec load ] dup
		3 /PaintProc load put cvx /PaintProc exch def
		end
	1 index dup /ID get exch /Pattern add_res
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup /PatternType get 1 eq{
		dup /PaintType get 1 eq{
			currentoverprint sop [/DeviceGray] setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{
		pop
	}{
		setcolorspace
	}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}{null}ifelse
	Intent ne {
		Intent /ColorRendering {findresource} stopped
		{
			pop pop systemdict /findcolorrendering known
			{
				Intent findcolorrendering pop
				/ColorRendering findresource 
				true
			}
			{false} ifelse
		}
		{true} ifelse
		{
			dup begin
			currentdict /TransformPQR known {
				currentdict /TransformPQR get aload pop
				3 {{} eq 3 1 roll} repeat or or
			}
			{true} ifelse
			currentdict /MatrixPQR known {
				currentdict /MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true} ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR [
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add} bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add} bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add} bind
				] def
				/MatrixPQR [ 0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296 ] def
				/RangePQR [-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392] def
				currentdict end
			} if
			setcolorrendering_opt
		} if		
	}if
} def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict /ColorRendering known{
			ColorRendering /ColorRendering {findresource} stopped not {setcolorrendering_opt} if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type /arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		clonedict
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process //Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp) flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep) flushinput
	}if
}def
/cpaint_gend
{
	newpath
}def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add} if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0} ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup /Name get map_alias {/CSD put}{pop} ifelse} forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get /CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not {
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor /setcustomcolor load put
	} if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		currentdict/TintProc known currentdict/CSA known and 3 1 roll
		//Adobe_AGM_Core begin
		dup /customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			4 -1 roll{
				exch pop /sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
			pop
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd /setpagedevice load def
	/setpagedevice { get_gstate spd set_gstate } def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known{
			currentpagedevice/NegativePrint get //Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<< /NegativePrint //Adobe_AGM_Core/AGMCORE_inverting get >> setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
		gsave newpath clippath 1 /setseparationgray where{pop setseparationgray}{setgray}ifelse 
		/AGMIRS_&fill where {pop AGMIRS_&fill}{fill} ifelse grestore
	}if
	end
}def
/lw_save_restore_override {
	/md where {
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{} def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage /showpage load def}
		ifelse
		/showpage {orig_showpage gR} def
		end
	}if
}def
/pscript_showpage_override {
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage /restore load def
		/restore {exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where {
		pop
		md /initializepage known {
			md /initializepage {} put
		} if
		md /rC known {
			md /rC {4{pop}repeat} put
		} if
	}if
	/mysetup where {
		/mysetup [1 0 0 1 0 0] put
	}if
	Adobe_AGM_Core /AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core /AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/driver_check_media_override
{
	/PrepsDict where
		{pop}
		{
		Adobe_AGM_Core /AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core /AGMCORE_Default_PageSize get type /arraytype eq
			{
			Adobe_AGM_Core /AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core /AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core /AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ (Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. ) def
	/AGMCORE_color_space_onhost_seps (This job contains colors that will not separate with on-host methods. ) def
	/AGMCORE_invalid_color_space (This job contains an invalid color space. ) def
end
/set_def_ht
{
	AGMCORE_def_ht sethalftone
} def
end
systemdict /setpacking known
{
	setpacking
} if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.25 0
%%Copyright: Copyright 1997-2005 Adobe Systems Incorporated.  All Rights Reserved.
%%Version: 2.25 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict /Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{ /Adobe_CoolType_Core userdict /Adobe_CoolType_Core get def }
if
userdict /Adobe_CoolType_Core 60 dict dup begin put
/Adobe_CoolType_Version 2.25 def
/Level2?
	systemdict /languagelevel known dup
		{ pop systemdict /languagelevel get 2 ge }
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal /pop load def
	/gcheck { pop false } bind def
	/currentpacking false def
	/setpacking /pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict /Adobe_CoolType_Data 2 copy known not
	 { 2 copy 10 dict put }
if
get
	 begin
	 /@opStackCountByLevel 32 dict def
	 /@opStackLevel 0 def
	 /@dictStackCountByLevel 32 dict def
	 /@dictStackLevel 0 def
	 end
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup /args
			7 index
			5 add array put
			put get
			}
			{
			get dup /args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch /args exch put
				}
				{ pop }
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{ pop count }
			if
			dup /argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{ pop }
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	} bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{ { pop } repeat }
				{ pop }
			ifelse
			args 0 argCount getinterval {} forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{ { end } repeat }
		{ pop }
	ifelse
	} bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	} bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	} bind def
/@ReRaise
	{
	cvx $error /errorname get errordict exch get exec
	stop
	} bind def
/@Stopped
	{
	0 @#Stopped
	} bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{ @_RestoreStackLevels true }
		{ @_PopStackLevels false }
	ifelse
	} bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	} bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch /@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					 { (*) { pop stop } 128 string /Category resourceforall }
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data /@shouldNotDisappearDict get ne dup
					 {
						  /@shouldNotDisappearDictValue known
								{
										  {
												end
												currentdict 1 index eq
													 { pop exit }
												if
										  }
									 loop
								}
						  if
					 }
				if
				end
		}
		{ false }
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{ /steveamerige /Category resourcestatus }
		stopped
			{ cleartomark true }
			{ cleartomark currentglobal not }
		ifelse
		}
		{ false }
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec
				{ cleartomark false }
				{ { 3 2 roll pop true } { cleartomark false } ifelse }
			ifelse
			end
		} bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad /ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup /CMap CTHasResourceStatusBug
						{ CTResourceStatus }
						{ resourcestatus }
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup /CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{ exit }
								{ stop }
							ifelse
							}
						ifelse
						}
						{ pop }
					ifelse
					}
				128 string /CMap resourceforall
				}
			stopped
				{ cleartomark }
			stopped pop
			setglobal
			}
		if
		}
	if
	} bind def
/doc_setup
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mov /moveto load def
		/nfnt /newencodedfont load def
		/mfnt /makefont load def
		/sfnt /setfont load def
		/ufnt /undefinefont load def
		/chp /charpath load def
		/awsh /awidthshow load def
		/wsh /widthshow load def
		/ash /ashow load def
		/sh /show load def
		end
		currentglobal false setglobal
	  userdict /Adobe_CoolType_Data 2 copy known not
		  { 2 copy 10 dict put }
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	} bind def
/doc_trailer
	{
	currentdict Adobe_CoolType_Core eq
		{ end }
	if
	} bind def
/page_setup
	{
	Adobe_CoolType_Core begin
	} bind def
/page_trailer
	{
	end
	} bind def
/unload
	{
	systemdict /languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{ undef }
				{ pop pop }
			ifelse
			}
		if
		}
	if
	} bind def
/ndf
	{
	1 index where
		{ pop pop pop }
		{ dup xcheck { bind } if def }
	ifelse
	} def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where { /globaldict get begin } if
			dup where pop exch get
		/globaldict where { pop end } if
		end
	end
Adobe_CoolType_Core_Defined
	{ /systemfindfont exch def }
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{ pop } ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq { 0 } { dup length } ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index /FID eq
				{ pop pop }
				{ def }
			ifelse
			}
		forall
		dup null eq
			{ pop }
			{ { def } forall }
		ifelse
		currentdict
		end
	exch setglobal
	} bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	} bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index  known
			{ SharedFontDirectory 3 index get /FontReferenced known }
			{ false }
		ifelse
		}
		{
		FontDirectory 3 index known
			{ FontDirectory 3 index get /FontReferenced known }
			{
			SharedFontDirectory 3 index known
				{ SharedFontDirectory 3 index get /FontReferenced known }
				{ false }
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont /FontReferenced get
		2 index dup type /nametype eq
			{findfont}
		if ne
			{ pop false }
		if
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{ 2 copy get 3 index 3 1 roll put }
		for
		pop pop pop
		}
		{
		dup type /nametype eq
		  { findfont }
	  if
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index /FID ne
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type /stringtype eq { cvn } if def dup
			currentdict
			end
		definefont def
		}
	ifelse
	} bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type /dicttype ne
			{ 0 dict }
		if
		currentdict /$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{ def } forall
					{ def } forall
					currentdict
					dup /$Init known
						{ dup /$Init get exec }
					if
					end
				/$Strategy exch def
				}
				{ pop pop pop }
			ifelse
			}
			{ pop pop }
		ifelse
		end
	} bind def
/scff
	{
	$SubstituteFont
		begin
		dup type /stringtype eq
			{ dup length exch }
			{ null }
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{ $sname }
			ifelse def
		end
		{ findfont }
	@Stopped
		{
		dup length 8 add string exch
		1 index 0 (BadFont:) putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{ findfont }
		@Stopped
			{ pop /Courier findfont }
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	} bind def
/isWidthsOnlyFont
	{
	dup /WidthsOnly known
		{ pop pop true }
		{
		dup /FDepVector known
			{ /FDepVector get { isWidthsOnlyFont dup { exit } if } forall }
			{
			dup /FDArray known
				{ /FDArray get { isWidthsOnlyFont dup { exit } if } forall }
				{ pop }
			ifelse
			}
		ifelse
		}
	ifelse
	} bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 4 index def
		/$doSmartSub false def
		end
	3 index
	currentglobal false setglobal exch
	/CompatibleFonts /ProcSet resourcestatus
		{
		pop pop
		/CompatibleFonts /ProcSet findresource
			begin
			dup /CompatibleFont currentexception
			1 index /CompatibleFont true setexception
			1 index /Font resourcestatus
				{
				pop pop
				3 2 roll setglobal
				end
				exch
				dup findfont
				/CompatibleFonts /ProcSet findresource
					begin
					3 1 roll exch /CompatibleFont exch setexception
					end
				}
				{
				3 2 roll setglobal
				1 index exch /CompatibleFont exch setexception
				end
				findfont
				$SubstituteFont /$substituteFound true put
				}
			ifelse
		}
		{ exch setglobal findfont }
	ifelse
	$SubstituteFont
		begin
		$substituteFound
			{
		 false
		 (%%[Using embedded font ) print
		 5 index ?str1 cvs print
		 ( to avoid the font substitution problem noted earlier.]%%\n) print
		 }
			{
			dup /FontName known
				{
				dup /FontName get $fontname eq
				1 index /DistillerFauxFont known not and
				/currentdistillerparams where
					{ pop false 2 index isWidthsOnlyFont not and }
				if
				}
				{ false }
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		exch pop exch pop exch
		2 dict dup /Found 3 index put
		exch findfont exch
		}
		{
		exch exec
		exch dup findfont
		dup /FontType get 3 eq
	  {
		  exch ?str1 cvs
		  dup length 1 sub
		  -1 0
		{
			  exch dup 2 index get 42 eq
			{
				 exch 0 exch getinterval cvn 4 1 roll 3 2 roll pop
				 exit
			  }
			  {exch pop} ifelse
		  }for
		}
		{
		 exch pop
	  } ifelse
		2 dict dup /Downloaded 6 5 roll put
		}
	ifelse
	dup /FontName 4 index put copyfont definefont pop
	} bind def
/?str2 256 string def
/?add
	{
	1 index type /integertype eq
		{ exch true 4 2 }
		{ false 3 1 }
	ifelse
	roll
	1 index findfont
	dup /Widths known
		{
		Adobe_CoolType_Data /AddWidths? true put
		gsave dup 1000 scalefont setfont
		}
	if
	/Downloaded known
		{
		exec
		exch
			{
			exch ?str2 cvs exch
			findfont /Downloaded get 1 dict begin /Downloaded 1 index def ?str1 cvs length
			?str1 1 index 1 add 3 index putinterval
			exch length 1 add 1 index add
			?str1 2 index (*) putinterval
			?str1 0 2 index getinterval cvn findfont 
			?str1 3 index (+) putinterval
			2 dict dup /FontName ?str1 0 6 index getinterval cvn put
			dup /Downloaded Downloaded put end copyfont
			dup /FontName get exch definefont pop pop pop
			}
			{
			pop
			}
		ifelse
		}
		{
		pop
		exch
			{
			findfont
			dup /Found get
			dup length exch ?str1 cvs pop
			?str1 1 index (+) putinterval
			?str1 1 index 1 add 4 index ?str2 cvs putinterval
			?str1 exch 0 exch 5 4 roll ?str2 cvs length 1 add add getinterval cvn
			1 dict exch 1 index exch /FontName exch put copyfont
			dup /FontName get exch definefont pop
			}
			{
			pop
			}
		ifelse
		}
	ifelse
	Adobe_CoolType_Data /AddWidths? get
		{ grestore Adobe_CoolType_Data /AddWidths? false put }
	if
	} bind def
/?sh
	{
	currentfont /Downloaded known { exch } if pop
	} bind def
/?chp
	{
	currentfont /Downloaded known { pop } { false chp } ifelse
	} bind def
/?mv 
	{
	currentfont /Downloaded known { moveto pop pop } { pop pop moveto } ifelse
	} bind def
setpacking
userdict /$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{ get }
			{ pop pop { pop /Courier } bind }
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams /CannotEmbedFontPolicy 2 copy known
			{ get /Error eq }
			{ pop pop false }
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup /WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type /stringtype eq { cvn } if def
								/FontType 3 def
								/FontMatrix [ .001 0 0 .001 0 0 ] def
								/Encoding 256 array dup 0 1 255 { /.notdef put dup } for pop def
								/FontBBox [ 0 0 0 0 ] def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth /y exch def /x exch def
											x y setcharwidth
											$SubstituteFont /$Strategy get /$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									} bind def
								currentdict
								end
							exch setglobal
							} bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup /WMode known
										{ dup /WMode get }
										{ 0 }
									ifelse
									/$WMode exch def
									$fontname exch
									dup /FontName known
										{
										dup /FontName get
										dup type /stringtype eq { cvn } if
										}
										{ /unnamedfont }
									ifelse
									exch
									Adobe_CoolType_Data /InVMDeepCopiedFonts get
									1 index /FontName get known
										{
										pop
										Adobe_CoolType_Data /InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{ $deepcopyfont }
									ifelse
									exch 1 index exch /FontBasedOn exch put
									dup /FontName $fontname dup type /stringtype eq { cvn } if put
									definefont
									Adobe_CoolType_Data /InVMDeepCopiedFonts get
										begin
										dup /FontBasedOn get 1 index def
										end
									} bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{ /y 1000 def }
										{ /x -1000 def 500 120 translate }
									ifelse
									Level2?
										{
										[ /Separation (All) /DeviceCMYK { 0 0 0 1 pop } ]
										setcolorspace
										}
										{ 0 setgray }
									ifelse
									10 setlinewidth
									x .8 mul
									[ 7 3 ]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{ .2 setcolor }
											{ .8 setgray }
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									} bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict /FontName known
											{
											FontName
											dup type /stringtype eq { cvn } if
											}
											{ /unnamedfont }
										ifelse
										def
										/FontName $fontname dup type /stringtype eq { cvn } if def
										/currentdistillerparams where
											{ pop }
											{
											/FontInfo currentdict /FontInfo known
												{ FontInfo null copyfont }
												{ 2 dict }
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[ 1 0 ItalicAngle dup sin exch cos div 1 0 0 ]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									} bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont {} bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type /stringtype eq { cvn } if
						dup /$fontname exch def
						$sname null eq
							{ $str cvs dup length $slen sub $slen getinterval }
							{ pop $sname }
						ifelse
						$fontpat dup 0 (fonts/*) putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont /$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{ /$match exch def exit }
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont /$dstack get
								{
								exch
									{
									1 index eq
										{ pop false }
										{ true }
									ifelse
									}
									{ begin false }
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{ $match (fonts/) anchorsearch pop pop cvn }
							{ /Courier }
						ifelse
						} bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1  [ /Ryumin-Light /HeiseiMin-W3
										  /GothicBBB-Medium /HeiseiKakuGo-W5
										  /HeiseiMaruGo-W4 /Jun101-Light ] def
							/Korea1  [ /HYSMyeongJo-Medium /HYGoThic-Medium ] def
							/GB1	  [ /STSong-Light /STHeiti-Regular ] def
							/CNS1	 [ /MKai-Medium /MHei-Medium ] def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup /FontType get 0 eq
							{
							1 dict dup /FontName /copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup /FontName /copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{ $Strategies /$Type3Underprint get exec }
						ifelse
						} bind def
					/$buildfontname
						{
						dup /CIDFont findresource /CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index (-) putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy (-) putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{ pop pop 3 2 roll putinterval cvn /$cmapname exch def }
							{ pop pop pop pop pop }
						ifelse
						length
						$str 1 index (-) putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						} bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{ get }
								{ pop pop [] }
							ifelse
							}
							{ pop pop [] }
						ifelse
						false exch
							{
							dup /CIDFont resourcestatus
								{
								pop pop
								save
								1 index /CIDFont findresource
								dup /WidthsOnly known
									{ dup /WidthsOnly get }
									{ false }
								ifelse
								exch pop
								exch restore
									{ pop }
									{ exch pop true exit }
								ifelse
								}
								{ pop }
							ifelse
							}
						forall
							{ $str cvs $buildfontname }
							{
							false (*)
								{
								save exch
								dup /CIDFont findresource
								dup /WidthsOnly known
									{ dup /WidthsOnly get not }
									{ true }
								ifelse
								exch /CIDSystemInfo get
								dup /Registry get Registry eq
								exch /Ordering get Ordering eq and and
									{ exch restore exch pop true exit }
									{ pop restore }
								ifelse
								}
							$str /CIDFont resourceforall
								{ $buildfontname }
								{ $fontname $findfontByEnum }
							ifelse
							}
						ifelse
						} bind def
					end
				end
				currentdict /$error known currentdict /languagelevel known and dup
					{ pop $error /SubstituteFont known }
				if
				dup
					{ $error }
					{ Adobe_CoolType_Core }
				ifelse
				begin
					{
					/SubstituteFont
					/CMap /Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{ dup $str cvs dup length $slen sub $slen getinterval cvn }
									{ $sname }
								ifelse
								Adobe_CoolType_Data /InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{ exch pop true exit }
												{ pop }
											ifelse
											}
											{
											FontDirectory 1 index known
												{ exch pop true exit }
												{
												GlobalFontDirectory 1 index known
													{ exch pop true exit }
													{ pop }
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{ pop pop false }
								ifelse
									{
									exch pop exch pop
									}
									{
									dup /CMap resourcestatus
										{
										pop pop
										dup /$cmapname exch def
										/CMap findresource /CIDSystemInfo get { def } forall
										$findfontByROS
										}
										{
										128 string cvs
										dup (-) search
											{
											3 1 roll search
												{
												3 1 roll pop
													{ dup cvi }
												stopped
													{ pop pop pop pop pop $findfontByEnum }
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup /CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup /$cmapname exch def
															/CMap findresource /CIDSystemInfo get { def } forall
															$findfontByROS
															true exit
															}
															{ pop }
														ifelse
														}
													for
													dup type /booleantype eq
														{ pop }
														{ pop pop pop $findfontByEnum }
													ifelse
													}
												ifelse
												}
												{ pop pop pop $findfontByEnum }
											ifelse
											}
											{ pop pop $findfontByEnum }
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{ //SubstituteFont exec }
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{ $findfontByEnum }
								{ //SubstituteFont exec }
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core /scfindfont /systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup /FontName known
								{ dup /FontName get dup 3 index ne }
								{ /noname true }
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def /$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{ 1 index /FID eq { pop pop } { def } ifelse }
										forall
										currentdict
										end
									definefont
									dup /FontName known { dup /FontName get } { null } ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using ) print
										dup /FontName known
											{ dup /FontName get } { (unspecified font) }
										ifelse
										$str cvs print (.\n) print
										}
									if
									}
									{ exch pop }
								ifelse
								}
								{ exch pop }
							ifelse
							end
						} bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core /findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type /stringtype ne { $str cvs } if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{ dup $inVMIndex $AddInVMFont }
						if
						$doSmartSub
							{
							currentdict /$Strategy known
								{ $Strategy /$BuildFont get exec }
							if
							}
						if
						}
					if
					end
				} bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch /FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data /InVMFontsByCMap get exch
		$DictAdd
		}
		{ pop pop pop }
	ifelse
	} bind def
/$DictAdd
	{
	2 copy known not
		{ 2 copy 4 index length dict put }
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get { forall } def
				2 copy currentdict put
				end
			}
			{ pop }
		ifelse
		}
	if
	get
		begin
			{ def }
		forall
		end
	} bind def
end
end
%%EndResource
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.21 0
%%Copyright: Copyright 1987-2005 Adobe Systems Incorporated.
%%Version: 1.21 0
systemdict /languagelevel known dup
	{ currentglobal false setglobal }
	{ false }
ifelse
exch
userdict /Adobe_CoolType_Utility 2 copy known
	{ 2 copy get dup maxlength 27 add dict copy }
	{ 27 dict }
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		  <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A> def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch /eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{ globaldict begin currentglobal true setglobal }
if
	/ct_AddStdCIDMap
		ct_Level2?
			{ {
				mark
				Adobe_CoolType_Utility /@recognizeCIDFont currentdict put
					 {
					 ((Hex) 57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77) 0 () /SubFileDecode filter cvx exec
					 }
				stopped
					 {
					 cleartomark
					 Adobe_CoolType_Utility /@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						  {
						  2 copy get 3 index eq
								{ 1 index length exch sub 1 sub { end } repeat exit }
								{ pop }
						  ifelse
						  }
					 for
					 pop pop
					 Adobe_CoolType_Utility /@eexecStartData get eexec
					 }
					 { cleartomark }
				ifelse
			} }
			{ {
				Adobe_CoolType_Utility /@eexecStartData get eexec
			} }
		ifelse bind def
userdict /cid_extensions known
dup { cid_extensions /cid_UpdateDB known and } if
	 {
	 cid_extensions
	 begin
	 /cid_GetCIDSystemInfo
		 {
		 1 index type /stringtype eq
			 { exch cvn exch }
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				 {
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					 {
					 1 index load
					 3 index get
					 dup null eq
						  { pop pop cid_UpdateDB }
						  {
						  exch
						  1 index /Created get eq
							  { exch pop exch pop }
							  { pop cid_UpdateDB }
						  ifelse
						  }
					 ifelse
					 }
					 { pop cid_UpdateDB }
				 ifelse
				 }
				 { cid_UpdateDB }
			 ifelse
			 end
		 } bind def
	 end
	 }
if
ct_Level2?
	{ end setglobal }
if
	/ct_UseNativeCapability?  systemdict /composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring () def
		/usewidths? true def
		end def
	ct_Level2? { setglobal } { pop } ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict /languagelevel known
				{ pop /CIDFont findresource /GlyphDirectory get }
				{
				1 index /CIDFont findresource /GlyphDirectory
				get dup type /dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			} def
		/+
			{
			systemdict /languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{ 1 dict begin }
			ifelse
			/$ exch def
			systemdict /languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			? { $ begin } if
			} def
		/? { $ type /dicttype eq } def
		/| {
			userdict /Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data /AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					  begin
						AddWidths?
								{
								Adobe_CoolType_Data /CC 3 index put
								? { def } { $ 3 1 roll put } ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont /Widths get exch CC exch put
								}
								{ ? { def } { $ 3 1 roll put } ifelse }
							ifelse
					end
				end
				}
				{ ? { def } { $ 3 1 roll put } ifelse }	ifelse
				}
				{ ? { def } { $ 3 1 roll put } ifelse }
			ifelse
			} def
		/!
			{
			? { end } if
			systemdict /languagelevel known
				{ gvm setglobal }
			if
			end
			} def
		/: { string currentfile exch readstring pop } executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		 /c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		 /c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		 /c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		 /c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		 /c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		 /c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		 /c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		 /c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		 /cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		 /cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		 /cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		 /cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		 /cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx [.001 0 0 .001 0 0] def
		/ct_1000Mtx [1000 0 0 1000 0 0] def
		/ct_raise {exch cvx exch errordict exch get exec stop} bind def
		/ct_reraise
			{ cvx $error /errorname get (Error: ) print dup (						  ) cvs print
					errordict exch get exec stop
			} bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			} bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility /ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{ dup string /dst_string exch def }
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex  get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string  dst_index 2 index putinterval
						length dst_index add /dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string  dst_index 2 index putinterval
						pop dup dst_index add /dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							  { arrayIndex get }
							  {
							  pop
							  exit
							  }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			} bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{ /unknowninstancename /Category resourcestatus }
			stopped
				{ cleartomark setglobal true }
				{ cleartomark currentglobal not exch setglobal }
			ifelse
				{
					{
					mark 3 1 roll /Category findresource
						begin
						ct_Vars /vm currentglobal put
						({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec
							{ cleartomark false }
							{ { 3 2 roll pop true } { cleartomark false } ifelse }
						ifelse
						ct_Vars /vm get setglobal
						end
					}
				}
				{ { resourcestatus } }
			ifelse bind def
			/CIDFont /Category ct_resourcestatus
				{ pop pop }
				{
				currentglobal  true setglobal
				/Generic /Category findresource
				dup length dict copy
				dup /InstanceType /dicttype put
				/CIDFont exch /Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit /ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				  /Registry (Adobe) def
				  /Ordering (Identity) def
				  /Supplement 0 def
				end def
				/CMapName /Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000> <FFFF>
				endcodespacerange
				1 begincidrange
				<0000> <FFFF> 0
				endcidrange
				endcmap
				CMapName currentdict /CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont  10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{ pop pop /defineresource /undefined ct_raise }
				ifelse
				} bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{ get 3 1 roll pop pop}
						{ pop pop /findresource /undefinedresource ct_raise }
					ifelse
					}
					{ pop pop /findresource /undefined ct_raise }
				ifelse
				} bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{ pop pop /findresource /undefined ct_raise }
				ifelse
				} bind def
			/ct_resourcestatus /resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup (Binary) eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{ cid_BYTE_COUNT () /SubFileDecode filter }
							stopped
								{ pop pop pop }
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup (Hex) eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{ null exch /ASCIIHexDecode filter /readstring }
							stopped
								{ pop exch pop (>) exch /readhexstring }
							if
							}
							{ (>) exch /readhexstring }
						ifelse
						load
						exit
						}
					if
					/StartData /typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch /GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop /readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				} bind def
			/StartData
				{
				mark
					{
					currentdict
					dup /FDArray get 0 get /FontMatrix get
					0 get 0.001 eq
						{
						dup /CDevProc known not
							{
							/CDevProc 1183615869 internaldict /stdCDevProc 2 copy known
								{ get }
								{
								pop pop
								{ pop pop pop pop pop 0 -1000 7 index 2 div 880 }
								}
							ifelse
							def
							}
						if
						}
						{
						 /CDevProc
							 {
							 pop pop pop pop pop
							 0
							 1 cid_temp /cid_CIDFONT get
							 /FDArray get 0 get
							 /FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							 } def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup /cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup /SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup /SubrMapOffset undef
										dup /SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{ pop }
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict /CIDFont defineresource pop
					end end
					}
				stopped
					{ cleartomark /StartData ct_reraise }
				if
				} bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit /ProcSet ct_resourcestatus
				{ true }
				{ /CIDInitC /ProcSet ct_resourcestatus }
			ifelse
				{
				pop pop
				/CIDInit /ProcSet findresource
				ct_UseNativeCapability?
					{ pop null }
					{ /CIDInit ct_CIDInit /ProcSet defineresource pop }
				ifelse
				}
				{ /CIDInit ct_CIDInit /ProcSet defineresource pop null }
			ifelse
			ct_Vars exch /ct_oldCIDInit exch put
			} bind def
		/ct_restoreCIDInit
			{
			ct_Vars /ct_oldCIDInit get dup null ne
				{ /CIDInit exch /ProcSet defineresource pop }
				{ pop }
			ifelse
			} bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility /ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{ pop 0 }
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{ get }
								{ pop pop nullstring }
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{ 0 FDBytes ct_cvnsi }
									{ pop 0 }
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{ /charstring nullstring def exit }
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			} def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			} def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont /Widths get cid
					2 copy known
						{ get exch pop aload pop }
						{ pop pop stringwidth }
					ifelse
					}
					{ stringwidth }
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			} def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{ get }
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup /FontMatrix 2 copy known
						{ get }
						{ pop pop ct_defaultFontMtx }
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont /Widths get def
					/CharStrings 1 dict dup /.notdef
						<d841272cf18f54fc13> dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup /CharStrings get 1 index /Encoding get
			ct_dfCharCode get charstring put
			rootfont /WMode 2 copy known
				{ get }
				{ pop pop 0 }
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ ct_str1 show }
			ifelse
			} def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup /FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ ct_1000Mtx matrix concatmatrix concat }
				{ pop }
			ifelse
			/Private get
			Adobe_CoolType_Utility /ct_Level2? get not
				{
				ct_dfDict /Private
				3 -1 roll
					{ put }
				1183615869 internaldict /superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility /ct_Level2? get
				{ 1 index }
				{ 3 index /Private get mark 6 1 roll }
			ifelse
			dup /RunInt known
				{ /RunInt get }
				{ pop /CCRun }
			ifelse
			get exec
			Adobe_CoolType_Utility /ct_Level2? get not
				{ cleartomark }
			if
			} bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility /ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{ stop }
			if
			end
			end
			end
			end
			} bind def
		/BaseFontNameStr (BF00) def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix  [0.001 0 0 0.001 0 0] def
			/FontBBox  [-250 -250 1250 1250] def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix  [0.001 0 0 0.001 0 0] def
			/FontBBox  [-250 -250 1250 1250] def
			/Encoding ct_cHexEncoding def
			/BuildChar /ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString /ct_Type3ShowCharString load def
				/ct_dfSetCacheProc /ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup /lenIV 4 put def
				/CharStrings 1 dict dup /.notdef <d841272cf18f54fc13> put def
				/PaintType 0 def
				/ct_ShowCharString /ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{ exit }
				if
				}
			for
			exch pop exch pop
			} bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch /WMode exch def
				exch /FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup /FontMatrix known
				{ dup /FontMatrix get /FontMatrix exch def }
				{ /FontMatrix matrix def }
			ifelse
				/bfCount 1 index /CIDCount get 256 idiv 1 add
					dup 256 gt { pop 256} if def
				/Encoding
					256 array 0 1 bfCount 1 sub { 2 copy dup put pop } for
					bfCount 1 255 { 2 copy bfCount put pop } for
					def
				/FDepVector bfCount dup 256 lt { 1 add } if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont /FontBBox known
						{ CIDFont /FontBBox get /FontBBox exch def }
					if
					CIDFont /CDevProc known
						{ CIDFont /CDevProc get /CDevProc exch def }
					if
					currentdict
					end
				BaseFontNameStr 3 (0) putinterval
				0 1 bfCount dup 256 eq { 1 sub } if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup /CIDFirstByte exch 256 mul def
						FontType 3 eq
							{ /ct_FDDict 2 dict def }
						if
						currentdict
						end
					1 index  16
					BaseFontNameStr  2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{ /Widths 1 index /CIDFont get /GlyphDirectory get length dict def }
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont /Widths get
						begin
						exch /CIDFont get /GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{ exch pop }
			ifelse
			} bind def
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{
				2 index /CMap ct_resourcestatus
					{ pop pop exch pop }
					{
					/CIDInit /ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch /WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry (Adobe) def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-) search
									{
									pop pop
									(-) search
										{
										dup length string copy
										exch pop exch pop
										}
										{ pop (Identity)}
									ifelse
									}
									{ pop  (Identity)  }
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000> <FFFF>
							endcodespacerange
							1 begincidrange
							<0000> <FFFF> 0
							endcidrange
							endcmap
							CMapName currentdict /CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get /CIDFont findresource
				ct_makeocf
				}
			ifelse
			} bind def
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index /CMap ct_resourcestatus
					{ pop pop }
					{
					/CIDInit /ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry (Adobe) def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-) search
							{
							pop pop
							(-) search
								{ dup length string copy exch pop exch pop }
								{ pop (Identity) }
							ifelse
							}
							{ pop (Identity) }
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000> <FFFF>
					endcodespacerange
					1 begincidrange
					<0000> <FFFF> 0
					endcidrange
					endcmap
					CMapName currentdict /CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get /CIDFont findresource
				ct_makeocf
				}
			ifelse
			} bind def
		currentdict readonly pop
		end
	end
%%EndResource
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict /ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
  version
  cvi
  2015
  ge
} bind def
/AllocGlyphStorage
{
  Is2015?
  {	
		pop
  } 
  { 
		{string} forall
  } ifelse
} bind def
/Type42DictBegin
{
	25 dict begin
  /FontName exch def
  /CharStrings 256 dict 
	begin
		  /.notdef 0 def
		  currentdict 
	end def
  /Encoding exch def
  /PaintType 0 def
  /FontType 42 def
  /FontMatrix [1 0 0 1 0 0] def
  4 array  astore cvx /FontBBox exch def
  /sfnts
} bind def
/Type42DictEnd  
{
	 currentdict dup /FontName get exch definefont end
	ct_T42Dict exch
	dup /FontName get exch put
} bind def
/RD {string currentfile exch readstring pop} executeonly def
/PrepFor2015
{
	Is2015?
	{		  
		 /GlyphDirectory 
		 16
		 dict def
		 sfnts 0 get
		 dup
		 2 index
		 (glyx)
		 putinterval
		 2 index  
		 (locx)
		 putinterval
		 pop
		 pop
	}
	{
		 pop
		 pop
	} ifelse			
} bind def
/AddT42Char
{
	Is2015?
	{
		/GlyphDirectory get 
		begin
		def
		end
		pop
		pop
	}
	{
		/sfnts get
		4 index
		get
		3 index
	  2 index
		putinterval
		pop
		pop
		pop
		pop
	} ifelse
} bind def
/T0AddT42Mtx2
{
	/CIDFont findresource /Metrics2 get begin def end
}bind def
end
%%EndResource
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright (C) 2000-2003 Adobe Systems, Inc.  All Rights Reserved.
systemdict /setpacking known
{
	currentpacking
	true setpacking
} if
userdict /Adobe_AGM_Image 75 dict dup begin put
/Adobe_AGM_Image_Id /Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf () def
/AGMIMG_ybuf () def
/AGMIMG_kbuf () def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/doc_setup
{ 
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage /colorimage ldf
	}if
	end
	end
}def
/page_setup
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists {/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				 }ifelse
			 }ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode [ Decode 1 get Decode 0 get] def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode [1 1] def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub} currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{ pop 1 } currenttransfer addprocs settransfer
		}def
	}ifelse
	/img /imageormask ldf
	/sepimg /sep_imageormask ldf
	/devnimg /devn_imageormask ldf
	/idximg /indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/page_trailer
{
	end
}def
/doc_trailer
{
}def
/AGMIMG_flushfilters
{
	dup type /arraytype ne
		{1 array astore}if
	aload length
		{
		dup type /filetype eq
			{
			dup status 1 index currentfile ne and
				{dup flushfile closefile}
				{pop}
			ifelse
			}{pop}ifelse
		} repeat
}def
/imageormask_sys
{
	begin
		save mark
		level2{
			currentdict
			Operator /imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask {
					level3 {process_mask_L3 AGMIMG_&image}{masked_image_simulation}ifelse
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator /imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix /DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix /DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict /_Filters known {_Filters AGMIMG_flushfilters} if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint {
		0 get dup type /nametype eq {
			dup /DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			} forall
			not
		} ifelse
	}{
		pop false
	}ifelse
}def
/process_mask_L3
{
	dup begin
	/ImageType 1 def
	end
	4 dict begin
		/DataDict exch def
		/ImageType 3 def
		/InterleaveType 3 def
		/MaskDict 9 dict begin
			/ImageType 1 def
			/Width DataDict dup /MaskWidth known {/MaskWidth}{/Width} ifelse get def
			/Height DataDict dup /MaskHeight known {/MaskHeight}{/Height} ifelse get def
			/ImageMatrix [Width 0 0 Height neg 0 Height] def
			/NComponents 1 def
			/BitsPerComponent 1 def
			/Decode [0 1] def
			/DataSource AGMIMG_maskSource def
		currentdict end def
	currentdict end
}def
/use_mask
{
	dup type /dicttype eq
	{
		dup /Mask known	{
			dup /Mask get {
				level3
				{true}
				{
					dup /MaskWidth known {dup /MaskWidth get 1 index /Width get eq}{true}ifelse exch
					dup /MaskHeight known {dup /MaskHeight get 1 index /Height get eq}{true}ifelse
					3 -1 roll and
				} ifelse
			}
			{false} ifelse
		}
		{false} ifelse
	}
	{false} ifelse
}def
/make_line_source
{
	begin
	MultipleDataSources {
		[
		Decode length 2 div cvi {Width string} repeat
		]
	}{
		Width Decode length 2 div mul cvi string
	}ifelse
	end
}def
/datasource_to_str
{
	exch dup type
	dup /filetype eq {
		pop exch readstring
	}{
		/arraytype eq {
			exec exch copy
		}{
			pop
		}ifelse
	}ifelse
	pop
}def
/masked_image_simulation
{
	3 dict begin
	dup make_line_source /line_source xdf
	/mask_source AGMIMG_maskSource /LZWDecode filter def
	dup /Width get 8 div ceiling cvi string /mask_str xdf
	begin
	gsave
	0 1 translate 1 -1 Height div scale
	1 1 Height {
		pop
		gsave
		MultipleDataSources {
			0 1 DataSource length 1 sub {
				dup DataSource exch get
				exch line_source exch get
				datasource_to_str
			} for
		}{
			DataSource line_source datasource_to_str
		} ifelse
		<<
			/PatternType 1
			/PaintProc [
				/pop cvx
				<<
					/ImageType 1
					/Width Width
					/Height 1
					/ImageMatrix Width 1.0 sub 1 matrix scale 0.5 0 matrix translate matrix concatmatrix
					/MultipleDataSources MultipleDataSources
					/DataSource line_source
					/BitsPerComponent BitsPerComponent
					/Decode Decode
				>>
				/image cvx
			] cvx
			/BBox [0 0 Width 1]
			/XStep Width
			/YStep 1
			/PaintType 1
			/TilingType 2
		>>
		matrix makepattern set_pattern
		<<
			/ImageType 1
			/Width Width
			/Height 1
			/ImageMatrix Width 1 matrix scale
			/MultipleDataSources false
			/DataSource mask_source mask_str readstring pop
			/BitsPerComponent 1
			/Decode [0 1]
		>>
		imagemask
		grestore
		0 1 translate
	} for
	grestore
	end
	end
}def
/imageormask
{
	begin
		SkipImageProc {
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator /imagemask eq DeviceN_PS2 not and {
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get /DeviceGray eq and{
						[/Separation /Black /DeviceGray {}] setcolorspace
						/Decode [ Decode 1 get Decode 0 get ] def
					}if
					use_mask {
						level3 {process_mask_L3 image}{masked_image_simulation}ifelse
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not {
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file {
									Names {
										dup (None) ne {
											[/Separation 3 -1 roll /DeviceGray {1 exch sub}] setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq {true setoverprint} if
											/names_index names_index 1 add def
										}{
											pop
										} ifelse
									} forall
									close_image_file
								} if
								grestore
								end
							}{
								Operator /imagemask eq {
									imagemask
								}{
									image
								} ifelse
							} ifelse
						}{
							Operator /imagemask eq {
								imagemask
							}{
								image
							} ifelse
						} ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator /imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix /DataSource load
					/Adobe_AGM_OnHost_Seps where {
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator /colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource [
											DataSource 0 get /exec cvx
											DataSource 1 get /exec cvx
											DataSource 2 get /exec cvx
											DataSource 3 get /exec cvx
											/AGMCORE_get_ink_data cvx
										] cvx def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0 () /SubFileDecode filter def
									}ifelse
									/Decode [ Decode 0 get Decode 1 get ] def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator /image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
  			 							1 AGMCORE_&setgray
  			 							currentdict imageormask_sys
  			 						}{
  			 							currentdict ignoreimagedata
  			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator /image eq{
							AGMCORE_host_sep{
								/DoImage true def
								HostSepColorImage{
									invert_image_samples
								}{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}ifelse
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys} if
							}{
								use_mask {
									level3 {process_mask_L3 image}{masked_image_simulation}ifelse
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict /_Filters known {_Filters AGMIMG_flushfilters} if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	SkipImageProc {
		currentdict consumeimagedata
	}
	{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get /DeviceCMYK eq and
		currentdict/Components known and 
		Name () ne and 
		Name (All) ne and 
		Operator /image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load /exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			} /exec cvx
			] cvx bind
			MappedCSA 0 get /DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
					AGMCORE_avoid_L2_sep_space not currentcolorspace 0 get /Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{ 
					currentdict
					Operator /imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name (All) ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator /imagemask eq{
 											/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									[ /Separation Name [/DeviceGray]
	 									{ 
	 										sep_colorspace_proc AGMCORE_get_ink_data
											1 exch sub
	 									} bind
										] AGMCORE_&setcolorspace
										/sep_tint AGMCORE_gget AGMCORE_&setcolor
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator /imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name (All) eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					currentcolorspace 0 get /Separation ne{
						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentoverprint 
					MappedCSA 0 get /DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					Name inRip_spot_has_ink not and 
					Name (All) ne and {
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict /_Filters known {_Filters AGMIMG_flushfilters} if
	end
	end
}def
/decode_image_sample
{
	4 1 roll exch dup 5 1 roll
	sub 2 4 -1 roll exp 1 sub div mul add
} bdf
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
} bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub {
			dup currentdict /dataSource get /exch cvx /get cvx /exec cvx
			/exch cvx names_index /ne cvx [ /pop cvx ] cvx /if cvx
		} for
	] cvx bind
	end
} bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources {origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0 () /SubFileDecode filter
				BitsPerComponent 8 idiv string /readstring cvx /pop cvx /putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0 () /SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv {DataSource /read cvx /not cvx{0}/if cvx /mul cvx}repeat /mul cvx /add cvx
			}for
		/convProc load /exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2 /add cvx /index cvx
			3 1 /roll cvx /exch cvx 255 /mul cvx /cvi cvx /put cvx
			}for
	]bind cvx 0 () /SubFileDecode filter
	end
} bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs [ 3 -1 roll begin
		currentdict /MultipleDataSources known {MultipleDataSources {DataSource length}{1}ifelse}{1} ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt {1 add 2 div cvi}{exit}ifelse
			} loop
			string
		} repeat
		end ] def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	SkipImageProc {
		currentdict consumeimagedata
	}
	{
		save mark 
		AGMCORE_producing_seps not {
			level3 not {
				Operator /imagemask ne {
					/DataSource [ [
						DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse
						colorSpaceElemCnt /devicen_colorspace_dict AGMCORE_gget /TintTransform get 
						devn_alt_datasource 1 /string cvx /readstring cvx /pop cvx] cvx colorSpaceElemCnt 1 sub{dup}repeat] def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt [ exch {0 1} repeat ] def
				} if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process {
					CSA get_csa_by_name 0 get /DeviceCMYK eq {
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse
							4 /devicen_colorspace_dict AGMCORE_gget /TintTransform get 
							devn_alt_datasource
						filter_cmyk 0 () /SubFileDecode filter def
						/MultipleDataSources false def
						/Decode [1 0] def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate {
							/DataSource
								DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse
								CSA get_csa_by_name 0 get /DeviceRGB eq{3}{1}ifelse /devicen_colorspace_dict AGMCORE_gget /TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt [ exch {0 1} repeat ] def
				 			currentdict imageormask_sys
				 		}
						{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						} ifelse
 					} ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget /names_index known {
	 					Operator/imagemask ne{
	 						MultipleDataSources {
		 						/DataSource [ DataSource devn_sep_datasource /exec cvx ] cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource /DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						} ifelse
							invert_image_samples
	 					} if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict /_Filters known {_Filters AGMIMG_flushfilters} if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{ 			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN [
				AGMIMG_c 0 ne {/Cyan} if
				AGMIMG_m 0 ne {/Magenta} if
				AGMIMG_y 0 ne {/Yellow} if
				AGMIMG_k 0 ne {/Black} if
				] /DeviceCMYK {}] setcolorspace
				AGMIMG_c 0 ne {AGMIMG_c} if
				AGMIMG_m 0 ne {AGMIMG_m} if
				AGMIMG_y 0 ne {AGMIMG_y} if
				AGMIMG_k 0 ne {AGMIMG_k} if
				setcolor			
			}{	
				/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def
				[/Indexed 				
					[
						/DeviceN [
							AGMIMG_c 0 ne {/Cyan} if
							AGMIMG_m 0 ne {/Magenta} if
							AGMIMG_y 0 ne {/Yellow} if
							AGMIMG_k 0 ne {/Black} if
						] 
						/DeviceCMYK {
							AGMIMG_k 0 eq {0} if
							AGMIMG_y 0 eq {0 exch} if
							AGMIMG_m 0 eq {0 3 1 roll} if
							AGMIMG_c 0 eq {0 4 1 roll} if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				] setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation /Black /DeviceGray {}] setcolorspace
			gsave
			/Black
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 1 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Yellow /DeviceGray {}] setcolorspace
			gsave
			/Yellow
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 2 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Magenta /DeviceGray {}] setcolorspace
			gsave
			/Magenta
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 3 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Cyan /DeviceGray {}] setcolorspace
			gsave
			/Cyan 
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		} if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
} def
/indexed_imageormask
{
	begin
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup /CSA known {
					/CSA get get_csa_by_name
				}{
					/Names get
				} ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN {
					/devicen_colorspace_dict AGMCORE_gget /names_index known {
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					} ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator /imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN {
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget begin
					CSA get_csa_by_name 0 get /DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and {
						[/Indexed [/DeviceN [/Cyan /Magenta /Yellow /Black] /DeviceCMYK {}] HiVal Lookup]
						setcolorspace
					} if
					end
				} ifelse
				imageormask
				Indexed_DeviceN {
					end
				} if
			}{ 
				Operator /imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict /_Filters known {_Filters AGMIMG_flushfilters} if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not {
			currentcolorspace 
			dup 1 /DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		} if
		currentdict 
		Operator /imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask {
				level3 {process_mask_L3 AGMIMG_&image}{masked_image_simulation}ifelse
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
  /OPIimage
  {
  	dup type /dicttype ne{
  		10 dict begin
  			/DataSource xdf
  			/ImageMatrix xdf
  			/BitsPerComponent xdf
  			/Height xdf
  			/Width xdf
  			/ImageType 1 def
  			/Decode [0 1 def]
  			currentdict
  		end
  	}if
  	dup begin
  		/NComponents 1 cdndf
  		/MultipleDataSources false cdndf
  		/SkipImageProc {false} cdndf
  		/HostSepColorImage false cdndf
  		/Decode [
  				0 
  				currentcolorspace 0 get /Indexed eq{
  					2 BitsPerComponent exp 1 sub
  				}{
  					1
  				}ifelse
  		] cdndf
  		/Operator /image cdndf
  	end
  	/sep_colorspace_dict AGMCORE_gget null eq{
  		imageormask
  	}{
  		gsave
  		dup begin invert_image_samples end
  		sep_imageormask
  		grestore
  	}ifelse
  }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter /WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0 (%EndMask) /SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not {exit} if
	}loop
	WriteFilter closefile
	end
}def
/cachemask_level3
{
	currentfile
	<<
		/Filter [ /SubFileDecode /ASCII85Decode /RunLengthDecode ]
		/DecodeParms [ << /EODCount 0 /EODString (%EndMask) >> null null ]
		/Intent 1
	>>
	/ReusableStreamDecode filter
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type /dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode [/customcolor_tint AGMCORE_gget 0] def
				/Operator /image def
				/HostSepColorImage false def
				/SkipImageProc {false} def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA [ /DeviceCMYK ] 
			/TintMethod /Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components [ AGMIMG_colorAry aload pop pop ] 
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage /customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			AGMIMG_&customcolorimage
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt /AGMIMG_xSign? exch def /AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign? {floor 0.1 sub}{ceiling 0.1 add} ifelse exch
		AGMIMG_xSign? {floor 0.1 sub}{ceiling 0.1 add} ifelse exch
		itransform /AGMIMG_llY exch def /AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign? {ceiling 0.1 add}{floor 0.1 sub} ifelse exch
		AGMIMG_xSign? {ceiling 0.1 add}{floor 0.1 sub} ifelse exch
		itransform /AGMIMG_urY exch def /AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub  AGMIMG_llX AGMIMG_llY] concat
	}{
	}ifelse
	end
} def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					} if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf} true 4 colorimage	
		end
	} def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				} currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get /DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub} currenttransfer addprocs settransfer
						currentdict imageormask
					}{ 
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub} exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub} exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub} exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub} exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get /DeviceGray eq {
						{255 mul round cvi ColorLookup exch get 0 get} currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get /DeviceCMYK eq {
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub} exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{ 
							currentcolortransfer
							{pop 1} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get} exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{ 
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div} currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get /DeviceGray eq {
					{HiVal mul round cvi Lookup exch get HiVal div} currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get /DeviceCMYK eq {
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{ 
						currentcolortransfer
						{pop 1} exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div} exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div} exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div} exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict /setpacking known
{
	setpacking
} if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/doc_setup get exec
Adobe_CoolType_Core/doc_setup get exec
Adobe_AGM_Image/doc_setup get exec
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: (Page 1) 1
%%EndPageComments
%%BeginPageSetup
/currentdistillerparams where
{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse
{ userdict /AI11_PDFMark5 /cleartomark load put
userdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}
{ userdict /AI11_PDFMark5 /pdfmark load put
userdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse
[/NamespacePush AI11_PDFMark5
[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5
[{ai_metadata_stream_123}
currentfile 0 (%  &&end XMP packet marker&&)
/SubFileDecode filter AI11_ReadMetadata_PDFMark5
<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="3.1.1-111">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">genesis.dvi</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/"
            xmlns:xapGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xap:CreatorTool>Adobe Illustrator CS2</xap:CreatorTool>
         <xap:CreateDate>2006-11-23T17:46:57+05:30</xap:CreateDate>
         <xap:ModifyDate>2006-11-23T17:46:57+05:30</xap:ModifyDate>
         <xap:MetadataDate>2006-11-23T17:46:57+05:30</xap:MetadataDate>
         <xap:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xapGImg:width>256</xapGImg:width>
                  <xapGImg:height>184</xapGImg:height>
                  <xapGImg:format>JPEG</xapGImg:format>
                  <xapGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAuAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FWG+dfL/nfVdW0d&#xA;9H1KK00u2u4Z70Rz3FpcrFGwaTiYxPDc86BfTmjCBeQPJmVo1V2mxedtPtPLWgNqFrLfppsj6xqd&#xA;1FNeGae1NtGeFJrRv3hmdizV6dMVTv6t5q/6uNj/ANIM3/ZXirvq3mr/AKuNj/0gzf8AZXiqisPn&#xA;M3ciNe2AtljjaKX6nLVpCzh1K/W9uICGvv7YqrfVvNX/AFcbH/pBm/7K8Vd9W81f9XGx/wCkGb/s&#xA;rxVRtYfObxMbi9sIpBJIqqLOVgY1kYRtX63+0gDEdq4qrfVvNX/Vxsf+kGb/ALK8VWTQeblhdor+&#xA;weUKSiGymALU2FfrfjiroYPNzQo0t/YJKVBdBZTEBqbiv1vxxVbGnmxp5YzfWIWPjxb6jPRuQqdz&#xA;dAbexOTMQACrV1D5zSJTb3thLIZI1ZTZyqBG0iiRq/W/2UJYDvTIKrfVvNX/AFcbH/pBm/7K8Vd9&#xA;W81f9XGx/wCkGb/srxVRaHzmLuNFvbA2zRyNLL9TlqsgZAihfre/IFzX298VVvq3mr/q42P/AEgz&#xA;f9leKu+reav+rjY/9IM3/ZXiqisPnM3ciNe2AtljjaKX6nLVpCzh1K/W9uICGvv7YqrfVvNX/Vxs&#xA;f+kGb/srxV31bzV/1cbH/pBm/wCyvFVG1h85vExuL2wikEkiqos5WBjWRhG1frf7SAMR2riqt9W8&#xA;1f8AVxsf+kGb/srxVZNB5uWF2iv7B5QpKIbKYAtTYV+t+OKuhg83NCjS39gkpUF0FlMQGpuK/W/H&#xA;FUBr+s6h5f086hrGt6faWYdY/VawuG+N/sgKl0zH7sryZYwFyNBy9Foc2qyeHijxSq6/tSnTPO2p&#xA;67p9zN5e1KzvLyzSCW4spdNu4XSOc13BuCWPphiOHKtNuow6bNDLIAHuv4+9u7R7J1GkrxRQldEE&#xA;EHh58v0pz+lr3/qYtH/5EN/2W4+JHvDj/ks38yX+lK6LUdRlkWOLzBpEkjmiItuxYk9gBeYjJE9Q&#xA;iWkyxFmEgPcVS3ufM0Hma2sb64s7nTrmzuZ6wW0kEqTQS26KCz3E6srLO+3AdBvk3HT7FXYq7FUq&#xA;uf8AlKtO/wCYG+/5PWmKprirsVdirsVdirsVdirsVdiqFt1UX94Rx5H060412XvTf78tmfRH4oRW&#xA;VJdirsVdirsVdirsVdirsVdirsVdirsVY75uttavYVs7XS7PULNwzSfWwktHUVSkUvFK8uhqfozV&#xA;9onU7DFCMhvz+zY0Pv8Ag63WavtHDIHRgA0fVxVIbe+P3nzpIbTS9NjLRXuiWuj6wI7i4rZRWyRS&#xA;xtBJH+/oXLD94/X4a0r1AL2Xnl48IZYcGW79NVXwJPf8feG7Se0etyg6fV8XiTjt6uKIiCDY9cq+&#xA;mj091hkY06xpX/DkQNK042vgTTr7U+nL+KX+pf7n9bk/yrq+7J/px/xSrb2FnHcxsmhRQsrArOq2&#xA;4K/ERyHE8thvtkoyN/3defp/Wn+UdTI8MhPhP9MV/ul9z/ylWnf8wN9/yetMy2Sa4qo3t9ZWFpLe&#xA;X08draQKXnuJmEcaKOrMzEAD54qwjTfzk8vX9pdXEem6nGbTTb3VmieCNvUg091SVIZI5ZIJZS0g&#xA;ARJDQ7PxNBiqY2PmnSdS1DQNW9QWUGoWN6sMV08aSiX17VTCwV3X1VZSrIGJBBHXFWWYq7FXYq7F&#xA;XYq7FXYq7FXYqhrcf6bdbk/3e29B8PapI+4DLZfSPihE5Ul2KuxV2KuxV2KuxV2KuxV2KuxV2Kux&#xA;V2KobVBXTLsVK1hk3FQR8B6cSp+4j55bh+uPvCDyROVJdiqSz3dq3nOxtVmja5j0+9eSAMDIqtNa&#xA;UYrWoBxVOsVcQCKHcHqMVSWLyT5MhsvqEOg6dHY8Hj+qJaQLFwkZGdfTCcaM0SEim5UeAxVbFY2V&#xA;hr+k2djbx2lnBp96kFtAixxoomtKKiKAqgeAxVPMVdirsVdirsVdirsVdirsVQtvT6/eeP7vw/l/&#xA;1V/4k30ZbP6I/H8c/wBSEVlSXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqhdWp+ir2u49CWo2/kPi&#xA;sn/EG+R6Zbg/vI+8fjmPvHvQeSKypLsVSq5/5SrTv+YG+/5PWmKprirsVdiqR6rdfVfMumymKSVP&#xA;qV8H9JebKvqWp5cR8RG1KKCd+mU5svALokeW9fDn8raM+fwxfDKQ61vXw5n4AlN7a6trmP1LeVZU&#xA;BKkqa0INCD4EHJ48sZi4mwzxZoZBcSCFXJtjsVdirsVdirsVdirsVQtuR9fvBTcen3H8v+sf1D6c&#xA;tn9EfihFZUl2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KoXViBpV6SKgQS1FQP2D3LJ/xIfMZbg/vI&#xA;+8fjr9yDyRWVJSPVfMwhvDpWkwfpPWqAtbo3GKAN0e6moREvcLu7fsqcpnlo8Md5fjm7HTdn8UPF&#xA;ynw8Xf1l5Qj/ABe/6R1KA03SL6182Wd5qd619qVzYXnqkVS3iUTWtI7eKp4qK7sas3c9ADjxkG5G&#xA;5fjkx1WsjOPh448GIfGRPfKXU+QqI6BleWuA7FWAfmf5X/MPXltovLWpQWlvG4eQC8vdMnHEVI9e&#xA;0E/qiQgLRkUKvKlXKPGqi9A0rzHpz+WrC+vY5dUttPvBqFxK016JP39qWCSyGCU9QFaTkQPtcj8R&#xA;VZTdaXbTuZV5W9yQB9ZgPCTatK9QwHI7MCMx8mmjI2PTLvGx/b8bDi5tHCZ4hcZ/zo7H9vPlIEKJ&#xA;m1a0r60Qvoan95AAkoG53jY0bsPhb6Mr482PmOMeWx+XX4H4NRyZ8X1DxI98dpf6U8/gfgibXUbK&#xA;6LLBKGkT+8iIKyL2+JGow6eGXYtRCe0TuOnX5c2/DqseSxE7jmORHvB3RGXOQ7FXYq7FXYq7FUNB&#xA;z+uXVQeP7viSGA+zvQkAH6Dlkq4R8UInK0uxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVAa/fW1jol&#xA;9d3MyW8MUEjNNIeKr8JpuKnr4CvhkscoxkDLYWGzFhnlkIQBlI8gEm+s6/5k+Gz9XRdDbreuvC/u&#xA;F/4pjYf6Oh/ncc/BV2bMW5ZOXpj9p/V97tPDwaT66y5v5vOEf6x/jPkPT3k8k80rSNN0mzW00+Bb&#xA;eAEsQtSWY9XdjVnZu7MSTl0ICIoOu1OpyZp8eQ8R/Gw7h5BKlu3ufOtuY5Uks4rC7RKRsD6hltC1&#xA;JS5VwBTonfqd6VY84nIiO4HXpfd5/d8XAxakZJERFxH8XS+7z94287ZDl7kOxV2KpVc/8pVp3/MD&#xA;ff8AJ60xVNcVdiqHvNPs7wKLiIOUrwcVV1JFKo60ZTQ9jlOXBDJ9Q/WPceYaM+mx5frF1yPUe4jc&#xA;fBD/AFXVLaptbgXKb0gutj0JoJVFRvT7SttlXh5YfTLiHdL/AIofpBaPBzY/olxjun8f4h8OYLjr&#xA;MUNRfRSWdK1kccoqCu/qrVRstfipj+bEf7wGHv5fMbfOlOujD+9Bx+Z+nr/ENul70jo5I5FDxsHQ&#xA;9GUgj7xmVGQIsOZGQkLBsLsLJ2KuxVC2/wDvfedP91/y1+z3pv8Afls/oj8UIrKkuxV2KuxV2Kux&#xA;V2KuxV2KuxV2KuxV2KpJqnmeKC7bTNMgbVNZABaziYKkQbo9zMarCvzqx/ZU5TPLRoby/HN2On7P&#xA;Mo+JkPh4v5x6+UY85H7B1IQE/liWW1uNT8w3C6jqMUMj28IAWytTwP8AcRSVUsP9+y1b/VG2WabF&#xA;eSJlubHuHu/XzZZ+0BGBx4B4eM8z/HL+se7+iPT33zZLdXdtawma4kEcY2qepJ6KoG7MewG5yOXL&#xA;GAuRofj8U6fNmhjjxTND8fM9w5lA+leakazhrWw7QV4yyip+2RuinY8Qa9m8MxuGeb6rjj7up9/c&#xA;PLn39zicGTP9Vwx938Uvf/NHLbn0l3KckUUXmbTIokWONLC9VEUAKAJrSgAHTMuMREUBQDnQgIgC&#xA;IoBR1Lzpoem372Nyt80sfESyW+nX9zBHyUMPUuIIJIEopBPJxQdaZJknpIAqdgOpxVhsP5wfl7Mk&#xA;zrqUiLb2095OZbO9iCRW0bSy8vUhX4xFGzhPtsvxAEYqj7bW9L1HV9D1O1nBsr/TruS0lkDQl1eW&#xA;0K0SUI4JHYiuKsjxV2KuxV2KuxVBS6NZMzSRBrWZq1lt2MRJNd2C/C27E/EDvmNLSQJsek98dv2H&#xA;n1tw56HGSTG4S74nh7+7Y8+oK0x6zAf3csV5H/LMPSkpX+dAVO3+QPnkeHNHkRMeex+Y2/2I97Hh&#xA;1EORjMf0vSfmNv8AYj3uGrCOgvLaa1PQsV9SOu37cfIAVb9qmEaqvrjKP2j5i/tpI1vD/eRlD4WO&#xA;nWN9/WkTbXlpdJztpkmXxjYN1Fe3zy7HmhMXEg+5yMWeGQXCQkPI2p29fr13vt+7oKk/s+BJA+gZ&#xA;kz+mPxbEVlSXYq7FXYq7FXYq7FXYq7FXYq7FULqeqadpdo13qFwltbqQC7nqx6Ko6sx7KNzkZzER&#xA;ZbtPp8maXBjBlL8fZ5pEW8x+Yv7v1tB0Vv8AdhAXUbhf8kGv1ZD4n957Icp9c/6Mft/Z9/udlWn0&#xA;vOs2b/pXH/iz/sP6ydadpmk6LY/V7KGO0tUJZt6VZju7uxqzE9WY1OWARxx7g6zV6yeWRnllZ7z0&#xA;/QB5ckFqOqPd6ddDTojLEYXreMWjioVr8DLR3NCaFO4+0MrwamWSY8IXuPUfp6f6b4bdCXVfnJZf&#xA;7kcQ/nHaPw6y+G3SwjbXTEjlFzcObm8pT1nFAtaVEabhBVa+Pvgx6YA8UjxT7/1Do24dIIy45njy&#xA;d56f1R05ftRuZLlpPcTRHzdYRB1Mq2F6WQEcgDNaUJHXFWGwRWuoefdW0/zJrlza6k06jy9YWtzq&#xA;elLJAkIl5Qr9c+rX3FT+84wCjq/LkvRV6Je2Nlf2ktnfQR3VpOpSe3mUSRup6qysCCPnirEbT8nf&#xA;y/s04W1ndRL9WksaDUtR/wB5p3Msse9x0d2LN4nFUfa6DpGmaxo2m2dsFs7Wyv2gSQtMwY3Fq7OX&#xA;lLuzszFizEkk1JxVkuKuxV2KuxV2KuxV2KuxVDXOmafctzmt0eTtJQBx06OKMPsjvlGTTY5m5RF9&#xA;/X5uPl0mLIblEE9/X580DBpskd3ci0vJoiAlRIROp+AgVMi+oaVr/eYZaaUYjhnIc+fq++z9oafy&#xA;ko/ROQ9/qH+y9X+yRJOtx9ra5Ar0LwHuR19Yfyjr4n2yv9+P5svnH/ivJN6mP8yfzj3/ANby+0+T&#xA;X6TnQkT2FwgrQOgSVTuB+wxb33XH8zIfVCQ+R+439i/m5D6scx7ql9xv7G/05pY/vZvQ2B/0hXhp&#xA;WnX1Av8AMMfzuLqeH+sDH7671/lDCPqlw/1gY9384DvRMN5aT/3M8cv+oyt4+B9jl0MsJfSQfi5G&#xA;PPCf0yB9xVcsbXYq7FXYq7FXYqxjU/O0HryWWiCG8uozwnu5pBFY27b7STb+o4p/dx1bx49cw8us&#xA;hHYEfE0Px5BzfAw4Y+JqsgxQ6Dbjl7onkP6UqHdfJT0zT7IXialeyXGvawpPp3fossEPIgEWqMRD&#xA;EKN1DFyOrHK4ZoE2OLJLyG3wvb7XHz9vxnHw9PGUcXdEH1cvqmaEu/nw90U8D61PSiRWSHqXPrSf&#xA;sn7K8UB6j7Ry280uggP9Mf0Dv6l1glqJ9I4x5+o9O6h39S3Ho9sXWS6Z72ZaUecgqCKbrGAI13Fd&#xA;lwx0kbudzPn+rl9iY6GF3MnJL+l/xP0j5KmqhTpd4G+z6ElaU6cD4rIP+FPyOZ+D64+8fjp94cw8&#xA;kVlSXYqk9xDEPN1hKEUStYXoZwByIE1pQE9cVeT6mqP/AM5M6NdWLQQSRiez1W2MifXJlGnGaK4E&#xA;dfUNsfVWMEjiHjNCCTVV7hirsVSq5/5SrTv+YG+/5PWmKprirsVdirsVdirsVdirsVdiqFtyv167&#xA;p1/d16fy/wCsf+Ij6ctn9Mfj+PxaEVlSXYq7FUPNpunTgia1hlB6841bsR3Hgcpnp8cvqjE/AOPk&#xA;0mKf1QifeAo/oTTP2IfT/wCMTPH3LfsFe5yv8ni6CvcSPua/5Pw9I17iR9xDY0i3FOM1yAKbfWJm&#xA;rSnXk7fy/r8Th/Kx6GX+ml+k/j4r+SiORn/p5eXefL7+8tDSqCn1y66Ur6m/Qjw98H5X+lP5r+T/&#xA;AKc/9M2dLqa/W7n5ept1J8PfD+W/pS+anR/05/6ZK9YvdI0kxR3N1eXN9NvbafbyySXM3Gg+GJCv&#xA;w/D8TGijepFcqnihHnKZPdxGz8vc5mk7Enn3Ep8EecpTMYjlzPw5Dc77bpfB5T1DV5EuNcaSysRT&#xA;ho8VxJM7U6fWrpmYt7pFQdizjIDQRl9d13cRPzJP483InptFhHDjics+XHkMpDu9MJE/6aVnyiyi&#xA;00zTrNFS0tYbdEFFWJFQACv8oHjmZjwY4fTED3Bwo4IRNiIBPkictbXYq7FULqpUaXeFvs+hJWlO&#xA;nA+LRj/hh8xluD64+8fjr9xQeSKypLsVSq5/5SrTv+YG+/5PWmKvN/NOvaVP+deleTJdJ1NxqsBm&#xA;utSi1LVrK0rFbyyFPqkXpWlwvGGNXfmR8XEiqkYq9dxVgP5my/mkfqkHk2CRI2kBmvbSSweVUAq4&#xA;lg1ERpTbinpyVq3JiAnCRVX8tyec/wDnWm163jOvNY336SjmmjDIpubanx2sTQySKnGvBVUmp+Hp&#xA;irN8VdirsVdirsVdirsVdirsVQtvX69d7bfu6GhH7PiQAfoOWz+mPxQisqS7FXYq7FXYq7FUPf6h&#xA;Y6faSXl9cR2trEKyTSsERR7k5GUhEWeTbhwTyyEIAykegSH9JeYtePHSI20nSz11W6j/ANJkXxtr&#xA;Zx8IP88w/wBgcp4pz+n0jv8A1D9fydl4GDTf3p8XJ/MifSP68xz90P8ATBNNG8u6ZpAka2RpLqeh&#xA;ur6djLczEdDJK3xGnZfsjsBlkMQjy5/a4eq12TPQkaiOURtGPuH6eZ6lMsscR2KuxV2KuxVC6rX9&#xA;F3lBU+hJQAE/sHsoZj9Ay3B9cfeEHkisqS7FUlna6/xnYq0cYthp96Y5Q5Mhb1rSoKcAAPfmflir&#xA;DfP/AJftbHzbYeeLzVbLT5bUfVbGaXT768uIgYZfV4i2vIoCEiaaT1JbZxGvJmPEbKvTAQRUbg9D&#xA;irsVSq5/5SrTv+YG+/5PWmKprirsVdirsVdirsVdirsVdiqFt/8Ae+86f7r/AJa/Z703+/LZ/RH4&#xA;oRWVJdirsVdiriQASTQDqcVY5J5rm1GRrbyvbrqTqSsmpOxTT4iNj+9AJmYfyxA+DMuUHNxbQ38+&#xA;n7fg7aPZwxDi1J8P+jzyH4fwjzlXkJK1h5UiF3HqOs3DavqkZ5RSzKFggP8Ay7W4JSP/AFjyfxbD&#xA;HDvcvUfxyH4LXm7RPCceEeFjPMD6pf1pcz7to/0U9y51rsVdirsVdirsVdiqF1b/AI5V70/uJevG&#xA;n2D15/D9+2W4P7yPvCDyRWVJdiqVXP8AylWnf8wN9/yetMVeQ/nVp+s+a/zC0fyPHqPpWNxbx6lb&#xA;2f1pbVTe263jRtIsUD3kiExKS0coROFG4u8bYq9yHwrueg3P+3irDofzg/LyZZ2XUpEW2t5ru4Mt&#xA;neRcIreN5pOXqQrR/SidxH9tlHJQRiqZWWq2Oravoup2EhlsrzTbya3lZHjLI8toVPCQK4qPEYqy&#xA;DFXYq7FXYq7FXYq7FXYq7FUNBz+uXVSeP7viCWI+zvQEkD6Blkq4R8UInK0uxV2KpHqPmy0hu307&#xA;TYZNW1ZNns7anGInvcTNSOEf6x5eCnKZZgDQ9Uvxz7nY4OzZSiMmQjFi/nS6/wBWPOXw27yEOPLO&#xA;oat+880XK3EJ3XRbXktkvtKTSS5/2dE/yMj4Rl9Z+HT9v42bfz8MG2mjwn/VJfX8OkPhcv6TIooo&#xA;oo1iiRY4kAVEUBVUDYAAdBmQBTqpSMjZ3JXYodirsVdirsVdirsVdiqG1Ln+jrr0yQ/oycCpYGvE&#xA;0oVKsD8jXLMNcYvvCCicrS7FUquf+Uq07/mBvv8Ak9aYq1/hHyp+nf8AEH6FsP091/S/1aH65X0/&#xA;S/3o4+p/d/B9r7O3TFUwvbGyv7SWzvoI7q0nUpPbzKJI3U9VZWBBHzxViEH5Nfl5AkSxafcAW9vP&#xA;aQE6hqBKQ3TF51QmclfVLHmRufHFUbD5a0Kx1fRNMgs42s7KzvpLaOas7LIbi1cyc5i7mQsxJcnk&#xA;Sa1xVlGKuxV2KuxV2KuxV2KuxV2KoW3A+v3hrufT7D+X/VH6z9GWz+iPxQisqSlGreaNM064FmBJ&#xA;e6m45R6baL6twR2ZlBCxr/lyFV98qnmETXM9wc7Tdn5MsePaGP8Any2j+0+UbPkgv0V5j1r4tYuf&#xA;0XYHcaXYSETMPC4uxQ/NYQv+uwyHBOf1Gh3D9J/U5H5jT6f+6j4k/wCfMbf5sP0yv+qE707TNP02&#xA;0Sz0+2jtbWP7EMKhFFepoO57nLowERQFB1+fUZMsjPJIykepROSaXYq7FXYq7FXYq7FXYq7FXYqh&#xA;dWAOlXoJoDBLU0B/YPYq/wDxE/I5bg/vI+8fjp96DyRWVJdiqSz2lqvnOxulhjW5k0+9SScKBIyr&#xA;NaUUtSpAxVOsVdirsVSq5/5SrTv+YG+/5PWmKprirsVdirsVdirsVdirsVdirH7/AMzaTpep3FvK&#xA;73GoSiMwadbIZrl6L1EaMxC/5ThFHjjmzRjGI677dfu/S5ul7Py5gZAcOMc5S2iPj3+Qs+Sn9U80&#xA;62tb6U6DYN/x52jh711/4suRVIvdYgT4SZRwznz9I8ufz/V83J8XTaf6B40/50hUB7o85e+VD+gm&#xA;+k6JpWkW5t9Ntkt42bnIVqXdz1eR2q7sf5mJOWQxxiKAcHU6vLnlxZJGR+7yA5AeQRuTcd2KuxV2&#xA;KuxV2KuxV2KuxV2KuxV2KoXVqfoq9rsPQlqdv5D4tH/xNfmOuW4P7yPvH45H7j7kHkisqS7FUquf&#xA;+Uq07/mBvv8Ak9aYqmuKuxVg35hz/mmLnT4vJlpGymdDLctNb+lxBq63sU6CUQmnH/RmMnxFtuAS&#xA;RVV8vv5xVfKn6ehgk8xfoq4XWqzBFEnqWgldTDEyFid+KgL2DU3KrNMVdirsVdirsVdirsVSfVPN&#xA;Wk2F0LEF73VGFV02zX1rih6FlFFjX/KkZV98qnmjE1zPcHP0/Z2XLHj2hj/nS2j+0+UbPkhFs/Nm&#xA;rkm/nGh2DdLKzYSXjD/i25I4R/KJSfB8jwzlz9I8ufz/AFfNvOXS4PoHjT/nS2h8Icz/AJxr+ijN&#xA;C0XStJnvIdPtRAHKNLJ8bPIxBPJ5HBaRvcsxzIGKMIih3/jv+bg6nWZc5vJImuXcPcOQ+Cb4HHdi&#xA;rsVdirsVdirsVdirsVdirsVdirsVdiqG1Q00y7NC1IZNhUk/AenEMfuB+WW4frj7wg8kTlSXYqks&#xA;7XX+M7FWjjFsNPvTHKHJkLetaVBTgAB78z8sVTrFXYq7FUquf+Uq07/mBvv+T1piqa4q7FXYq7FX&#xA;dNziqQXHnLT2ne00eGXW72M8ZI7IK0UbeEtwxWBKdxy5f5Jyk5xdR9R8v18nZw7LmIiWUjFA/wA7&#xA;mfdEeo++q81MaP5k1U8tav8A6han/pWaW7KSPCW8ISVv+eSx/M4OCcvqNDuH6/1Uz/NafDthhxy/&#xA;n5P0Q3j/AKYyTfS9H0vSrYW2m2sdrBWpWNQOTHqzHqzHuTucthARFAU4Go1WTNLiySMj5/jYeSMy&#xA;TQhbdlN/eAceQ9OtONd1703+/LZj0R+KEVlSXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqhdWZV0q&#xA;9ZuPFYJS3LiFoEPXl8NPntluAXkj7wg8kVlSXYqlVz/ylWnf8wN9/wAnrTFU1xVxIAqdgOpxViVv&#xA;+a/kC4gmmj1WgtrS61G4ikguI5o7WxCG4leF41lUKJVK1Wr/ALHKhxVG2Wq2Oravoup2EhlsrzTb&#xA;ya3lZHjLI8toVPCQK4qPEYqyDFXYqhNS1bS9Lt/rGo3cVpBWgeZwgJ/lWvU+wyM5iIsmm/BpsmaX&#xA;DjiZHyFpP/iTWNSPHQdJkaI9NR1LlaW9PFIipuJPb4FU/wA2VeLKX0j4nb9rn/kMWL+/yC/5sPXL&#xA;4n6B8yfJv/CMl/8AH5j1CXVQd/qKD6tYj2MCEtIPaZ3GPg8X1m/sH496P5TGLbTwGP8ApfVP/TH6&#xA;f8wRT63t7e2hSC3iSGCMcY4o1Coo8AooBlwAGwdZOcpkykbJ6lUwsXYq7FUNbl/rt1Utx/d8a8qf&#xA;Z3pU8fuy2X0j4oROVJdirsVdirsVdirsVdirsVdirsVdirsVdiqG1QuNMuyhYOIZOJXkGrwNKcCG&#xA;r/qmvhluH6433j8boPJE5Ul2KpVc/wDKVad/zA33/J60xVNcVUb2xsr+0ls76CO6tJ1KT28yiSN1&#xA;PVWVgQR88VYnb/k9+XNtBHFDpJVoreezjufrN0blbe6fnNELkymfgzcjTn+09PttVVXOg+W9J1LR&#xA;rP6vDHpun2V9LCbo+qI3+sWrGUyzl25lnJLs3Ik9cBIHNlCEpGoiyUUfO2nXPJNDt7jXZAacrJB9&#xA;Xr73Upjt/wDgXJ9sp8cH6fV7v18nZDsnJDfMY4R/S+r/AEgufzAHm19T856l/vXeQ6JbN1gsQLm5&#xA;ofG4mURqfZYT7Njw5Jczw+7c/P8AYnxdJi+mMs0u+fpj/pYmz8Zj3IvTfKmh2Fz9cSA3GoUodQun&#xA;a4uaHqBLKWZRv9laD2yUcMYm+vf1aM/aObLHgJ4YfzYjhj8hV+82U3y1wXYq7FXYq7FXYqhbdaX1&#xA;2a9fT227L/qg/ictmfTH4oRWVJdirsVdirsVdirsVdirsVdirsVdirsVdiqF1VeWl3i1pWCQVNO6&#xA;HxVx96n5HLcB9cfeEHkisqS7FUlntLVfOdjdLDGtzJp96kk4UCRlWa0opalSBiqdYq7FXYqkGsaV&#xA;pmo+Z9KS/tIbtIbS9liSdFkVZBLagMAwIqAx3yMoRlzFt+HU5MV+HKUb2NGtk/ACgKooBsAOgGSa&#xA;CXYq7FXYq7FXYq7FXYq7FULb0+vXe9T+7qPD4f8AWb/iI+nLZ/TH4/j8WhFZUl2KuxV2KuxV2Kux&#xA;V2KuxV2KuxV2KuxV2KoXVafou8qeI9CSrHt8B3+1H/xIfMZbg+uPvH46/cUHkisqS7FUquf+Uq07&#xA;/mBvv+T1piqa4q7FXn35q+dPPOgQQx+VNEkvryQ/BNJZXF/bP8JYq31GT1oONPtOm7FVUEF3jVRe&#xA;m3/nK9g8u69JpIkuXsrqDVLNq2LRyzS25SRIrgvIqcYHPFyHoRUA1AVZD+kde/6tH/TxH/TFXfpH&#xA;Xv8Aq0f9PEf9MVUU1DzR9dlLaUv1QxxiFRcR8hIGf1CTToV4U+nFVb9I69/1aP8Ap4j/AKYq79I6&#xA;9/1aP+niP+mKqNpqHmgRMLrSlaX1JSpW4jA9MyMYh06iPiD74qrfpHXv+rR/08R/0xVZPqHmMwyC&#xA;HSQJuJ9Mm4joGptXbxxV0GoeYxDGJtJBm4j1CLiOham9NvHFVkV35gW5nkOkfDJw4/6TF+yKfy5O&#xA;UgYgIdd6h5oMSi10pVl9SIsWuIyPTEimUdOpj5Ae+QSrfpHXv+rR/wBPEf8ATFXfpHXv+rR/08R/&#xA;0xVRfUPNH12IrpS/VBHIJlNxHyMhZPTINOgXnX6MVVv0jr3/AFaP+niP+mKu/SOvf9Wj/p4j/piq&#xA;imoeaPrspbSl+qGOMQqLiPkJAz+oSadCvCn04qrfpHXv+rR/08R/0xV36R17/q0f9PEf9MVUbTUP&#xA;NAiYXWlK0vqSlStxGB6ZkYxDp1EfEH3xVW/SOvf9Wj/p4j/piqyfUPMZhkEOkgTcT6ZNxHQNTau3&#xA;jiroNQ8xiGMTaSDNxHqEXEdC1N6beOKr/wBI69/1aP8Ap4j/AKYqgtZuvNVxps0FnpSrPJxWrXMd&#xA;OBcCQCqncx8qbdcnikBIE9Cgo39I69/1aP8Ap4j/AKZBLv0jr3/Vo/6eI/6Yqg7f/ENz5strm505&#xA;bTTbaxuommM6SM808tsyKEUVACwvU/LFWQ4q7FXYqw/zh5Cu/MWt6LqH6UWK10m9gvWsJ7VJ1Jt3&#xA;Eg+ryq0EsDsyjk5Z+nEAI0iuqzDFVK6hkmtpYY53tpJEZEuYghkjJFA6CRZE5L1HJSPEHFXm/mT8&#xA;mJ9Yt7m2j15oILjXY9f5S25uZQ4tPqs0XOSYActnjZFX0jsgoFoq9NxVDX9nJdwCFLqa0HNWeS3K&#xA;B2QGrR8nV+IcbErRh+yynfFWBaT+Uc9j5g8oatJrX1geUrI6fDAbdgZo2tmgZuTTOEd3fm7cSSFR&#xA;QRRiyr0bFUi82eV5PMEFrCNRnso7W5trpoYgpila2uobkCUUWQ7QlQA4X4qsrUFFUJ5Y8lXGjeZd&#xA;e1+41efUrjzAtp68EqqsUD2glWluFqUiIlFEJJFCSzFq4qyjFWOaz5RuNQ13TdZTVJUuNKnnntLe&#xA;VQ9uouLJ7Up6cRtyw5OJeUjM4+JVZVY4qhfyz8q2/lTQJdBS/tr+4trl3u2tIRarHJMqyBGtxLOI&#xA;zwZTQEVBDEEksyrKbi4t7a3luLiVIbeFGkmmkYIiIgqzMxoAABUk4qk2r+V5NS1zSdUbUZ0TSroX&#xA;cdjRfQP+jT27AcQjVf6wGJkZ6cfhC1JxVNLrVNMtFuGu7uG3W0hN1dNLIiCKAcqzSciOMY4N8R22&#xA;PhiqGm1fSLuG6tbbV4YbhW+qvNBLA0sE8jNEg4yCRBJ6ikKrqasKUPTFXms/5DXcvl9NF/xEoij1&#xA;iLWRcGxVpXZLZraQSVm4+tKtJGnQKwl5OAKgKq9cxVKPNugS+YPLmoaNHfy6ab+CSBrqBY3YLIpU&#xA;grIrAqQfipRqdGU74qw7R/ygnsPMnljWpNZWUeWo7mGCzjtWjiMd0koZIQZ5FhRXn2HFjwSNARxY&#xA;uq9IxViP5keQpfOmkR6cNVfT4o2Z3hMMdxbylkKBpYzwkLRci8RWVQr0YhuIGKqvlfyTcaL5k17X&#xA;rjV7jUrjX0sxPDMqrHA9osq0twu6xMJRRCSRQksxauKspxVhvmr8v7zW/MWla3HrDQyaTJJLbQTW&#xA;6TLGX9A0heJraRAzW9JOTOWR3QFQRRVFflz5Kbyd5bGjtcw3b+tJO01vbm0jJkI2WD1Z1WlKfCd+&#xA;p+IliqyjFWL+aPJH6d8x+XtZ+ufVv0FJJJ6Xpc3fm8Mn7uTmvpE+hwc8W5Rsy7VrirKMVdirsVdi&#xA;rsVdirsVdirsVdirsVdirsVdirsVeb+dvyY0nXdQv9dt5pTrVyTLHBM0ItWk+qpacWLW9w6xmOP4&#xA;loyOf7xJFAUKpbpn5NeZtP0PTrFPNE00enWtui6RKZjZPNbJAfTJ509B5oCT+5JVSAnEc1kVRj/k&#xA;Ro9pqF7qnl7WdQ0bVdRurq8vbqFwvqvdUdUf0PqzvHDOqyIjuR9tWqHOKpePyBXVb6wn85a7c66d&#xA;OS1ZLhGe3a4ltrm7lMdzHI1zyhMd2qCknLZqEBsVTqz/ACqbS4vqWmXIexQaIqzXbtJdSNpmrTap&#xA;dTzuqKGlmac0P85LHFXomKuxV2KuxV2KuxV2KuxV2KuxV2KuxV//2Q==</xapGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xap:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xapMM:DocumentID>uuid:B69822BCEB7ADB1188C7FE7CDF27E46F</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:B79822BCEB7ADB1188C7FE7CDF27E46F</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:B59822BCEB7ADB1188C7FE7CDF27E46F</stRef:instanceID>
            <stRef:documentID>uuid:B49822BCEB7ADB1188C7FE7CDF27E46F</stRef:documentID>
         </xapMM:DerivedFrom>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>
%  &&end XMP packet marker&&
[{ai_metadata_stream_123}
<</Type /Metadata /Subtype /XML>>
/PUT AI11_PDFMark5
[/Document
1 dict begin /Metadata {ai_metadata_stream_123} def
currentdict end /BDC AI11_PDFMark5
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
Adobe_AGM_Utils begin
Adobe_AGM_Core/page_setup get exec
Adobe_AGM_Core/capture_currentpagedevice get exec
Adobe_CoolType_Core/page_setup get exec
Adobe_AGM_Image/page_setup get exec
%%EndPageSetup
Adobe_AGM_Core/AGMCORE_save save ddf
1 -1 scale 0 -174.254 translate
[1 0 0 1 0 0 ]  concat
% page clip
gsave
newpath
gsave % PSGState
0 0 mo
0 174.254 li
245.081 174.254 li
245.081 0 li
cp
clp
[1 0 0 1 0 0 ] concat
gsave % PSGState
245.081 174.254 mo
0 174.254 li
0 0 li
245.081 0 li
245.081 174.254 li
cp
clp
.4 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
27.6187 157.976 mo
29.8101 157.976 li
242.029 157.976 mo
239.838 157.976 li
false sop
/0 
[/DeviceRGB] /CSA add_res
0 0 0 rgb
@
27.6187 138.601 mo
29.8101 138.601 li
242.029 138.601 mo
239.838 138.601 li
@
27.6187 119.26 mo
29.8101 119.26 li
242.029 119.26 mo
239.838 119.26 li
@
27.6187 99.8848 mo
29.8101 99.8848 li
242.029 99.8848 mo
239.838 99.8848 li
@
27.6187 80.5449 mo
29.8101 80.5449 li
242.029 80.5449 mo
239.838 80.5449 li
@
27.6187 61.1704 mo
29.8101 61.1704 li
242.029 61.1704 mo
239.838 61.1704 li
@
27.6187 41.8301 mo
29.8101 41.8301 li
242.029 41.8301 mo
239.838 41.8301 li
@
27.6187 22.4551 mo
29.8101 22.4551 li
242.029 22.4551 mo
239.838 22.4551 li
@
27.6187 3.11475 mo
29.8101 3.11475 li
242.029 3.11475 mo
239.838 3.11475 li
@
27.6187 157.976 mo
27.6187 155.784 li
27.6187 3.11475 mo
27.6187 5.30615 li
@
49.0459 157.976 mo
49.0459 155.784 li
49.0459 3.11475 mo
49.0459 5.30615 li
@
70.5083 157.976 mo
70.5083 155.784 li
70.5083 3.11475 mo
70.5083 5.30615 li
@
91.9346 157.976 mo
91.9346 155.784 li
91.9346 3.11475 mo
91.9346 5.30615 li
@
113.397 157.976 mo
113.397 155.784 li
113.397 3.11475 mo
113.397 5.30615 li
@
134.824 157.976 mo
134.824 155.784 li
134.824 3.11475 mo
134.824 5.30615 li
@
156.251 157.976 mo
156.251 155.784 li
156.251 3.11475 mo
156.251 5.30615 li
@
177.713 157.976 mo
177.713 155.784 li
177.713 3.11475 mo
177.713 5.30615 li
@
199.14 157.976 mo
199.14 155.784 li
199.14 3.11475 mo
199.14 5.30615 li
@
220.602 157.976 mo
220.602 155.784 li
220.602 3.11475 mo
220.602 5.30615 li
@
242.029 157.976 mo
242.029 155.784 li
242.029 3.11475 mo
242.029 5.30615 li
@
27.6187 157.976 mo
242.029 157.976 li
242.029 3.11475 li
27.6187 3.11475 li
27.6187 157.976 li
@
0 0 0 rgb
%ADOBeginSubsetFont: Helvetica Initial
%ADOt1write: (1.0.24)
13 dict dup begin
/FontType 1 def
/FontName /Helvetica def
/FontInfo 6 dict dup begin
/Notice (Copyright (c) 1985, 1987, 1989, 1990, 1997 Adobe Systems Incorporated.  All Rights Reserved.Helvetica is a trademark of Linotype-Hell AG and/or its subsidiaries.) def
/Weight (Medium) def
/ItalicAngle 0 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 40 /parenleft put
dup 41 /parenright put
dup 45 /hyphen put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 56 /eight put
dup 71 /G put
dup 86 /V put
dup 97 /a put
dup 101 /e put
dup 103 /g put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 116 /t put
dup 117 /u put
def
/UniqueID 43142 def
/FontBBox {-166 -225 1000 931} def
end
systemdict begin
dup /Private
13 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-19 0 718 737 523 538 688 703] def
/OtherBlues [270 281 -220 -207] def
/FamilyBlues [-19 0 718 737 523 538 688 703] def
/FamilyOtherBlues [270 281 -220 -207] def
/BlueScale 0.0437917 def
/StdHW [76] def
/StdVW [88] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
25 dict dup begin
/space <1C60D8A8C9B854D00D> |-
/parenleft <1C60D8A8C9B81F2C027D90222AF37AF8158DABD8A6A3309F2136
FACBE1848A44C17EBCB6720936CA51DBF738C2EEE54BA4F168ED7CF54A35C3CA
C2EC5792742EF714EF05> |-
/parenright <1C60D8A8C9B81F2C3A8416F95B41DEC1B2BC8682121EE1FC7A7
6516A86A96EAF9A7B20C852F99192A17B1BC2E1C3BBEEF7820FA171548238E9D
502CFB76D8CAB7DA316A1> |-
/hyphen <1C60D8A8C9B81F2C7AA0A4886749083959B4683A19B1432D49D2312
3C29302> |-
/period <1C60D8A8C9B854D0E112FCA896665672EF12164189457C7632C9> |-
/zero <1C60D8A8C9B7EF326C968E306016D52B972317960D8F5FD9CF1940741
2ACDAB79CA610AF5680AA7B72207450A6242E2E0D68A5786F14263E889E5C8F2
E3B1F3B57C131555AFBBA2F2574AAA6D70E3BCBA1C3BCCEEE066DF7> |-
/one <1C60D8A8C9B7EF322B88E7B3B83FEFDBAEDBDBF34DA8137760E7130B21
E4AD345C85AC723F334BEB61938BD65CFC89B4FB9FF8> |-
/two <1C60D8A8C9B7EF326B521ECF54C8B5A1823FE69FA06387976EF15912CA
2CDA2533C9465BA7A26890CB14E00D5302DA30754A8D882285488F566A848DB1
47F35FB324475F64975761151E92421F0A87A071DBDCE313F43B7ED0EE45382A
201B4EE4186F1FFE753A5DFF15AB1D98FE235181891E842EE4EC730EB3A21CE3
8A847AF33F417CDE> |-
/three <1C60D8A8C9B7EF32628E1261785C20D980324E75073C191110FF1DF4
F419F448F462DDCBF01F49514B54CF7F0EB797563420F11FA9B2A870CA2FAFCA
7BF082E8CA0E2FF35D921F9F1AC34584712B0A0077B0C704E6D603F8AD41559F
54EB34B872207887B41FB66A1203507BC16DAB327994FA639B9001AE05899646
700CF8E1B6168C5B7CF545795406B8E1F23BB3C2F5D73EC7968D39A5B597FC2B
C81D1DC416629EB76E1C99970D381D679CD5A57691EAF8> |-
/four <1C60D8A8C9B7EF322BF511E331CA00D363470942D767E1013D8E7F4F5
9F447A73A07F5975B5A79C571CD13B4D3557C550D5B9A82EC34D373E687DACA8
586AE16B88F81251D9B> |-
/five <1C60D8A8C9B7EF322448D34FC69162D5B3FA33847725A6C54ED91995E
45D690B7D0E476479D9EDB4F61F0B8E7F37F7415ECCEF12BD0BB3A993663B38C
8EEAA49F314551016ECC1F8DE4119690672560B970B6156CCA876B5A96262978
DF14B4FCFDE401A9555> |-
/six <1C60D8A8C9B7EF326DA8A82F3E3A701BDBF87B0445B24BB4A9441F8832
C322D1BC33CF817D969D30356F5A9C7B6A3BC04BCB60307EEA3C8DBDCAEDF63B
B0D16D5E88C603BCDDAF740BE4D413C23FF83ABB568EDD80EC21C6080EFCCE97
BC5B698D120BBDD3ACB1C21306A55CFC0AF870A681C2F910A278AFB09345386F
B78FE3E94B4F156D6934F4> |-
/eight <1C60D8A8C9B7EF3215BE57159D4F4BFA3C872F39ADA92BFE9288487A
97C6EFD98F578BBC2816F32D04509AD26EEA95F04BA1945FA81AF290563239CF
0739378BE51FE126D55A1BC75807D245336424C9214BC46BA6D4CEC05163B30F
75014D6052F2FC7397D286353B5ED17ABCA76ED3D83B8303060D3490C1FF5CCC
7BE6E338C40F50110AC16AF7E8E791FB357412BEC619138DE3107B599DC60AB8
D303142F26A30837419BF59F47881153A58F64FE59AE91D9C7C833E81BE56AAE
FBE2F7B6282D006375F76B8AD9A83CFA32DAD6A43E42C103A582803691A9856C
CFF6D9043F2C28AC> |-
/G <1C60D8A8C9B6FF86B9622784C5AE8BB608F49275812B8BED8B2F216F3CF4
984811F6E30360478D932FC5A9BB5E5C49AA6591893A8F4E0EF5366B27003689
F8A98E4B3B2625B26DF1727FDFB38B5448BCE9E2B2A0DD18BED0F6B43C66C855
C55C56CBDDC5AB60DD227D224C8868E7CFED577880E1E77C27DBFD9903D82683
33EC8550A6DD5A3A8E80797AE9F2BC97A960FF8D4036> |-
/V <1C60D8A8C9B64EDF9C190D5B185267C623706747942DFA58165CFF144DF6
9E63B5969B51517A9D030D98446EC727B268B4D3> |-
/a <1C60D8A8C9B7EF3273C24379F199D6821E3F14208DEF3C4337A53DE6901B
660C75F101B03394F6F9BD8DCD4322CADDBC8814F5DB79F9E9D7FC3035F0FE48
95762467E048327795ED13D396DE40B26AE95DEF750E44472B211D640A97EC27
5DB0014E9E9447470AD9CE9137C1E699B672E6F3342B0A3A79BA1C9BE63B1660
FAC94DA74CDC8595736126CD88283E656A88F9CF1E89CFDECB908FEFA4623BBD
E9E0AFD9A22C14CF12539F01080861F728E64D5156B21605> |-
/e <1C60D8A8C9B7EF326F03D0F4E599F9BA01540FB0E0E85D7F225CDC294805
3BFC3EBD8940FD214D65182E7E2A6BF280C1D3E71E32DCA4B45882394B8537B4
55EEE6231FF45D6BCFA8256009524D08C8BF5B282ED3F5CE087BE2CCF3F7D8A7
3D66E823FC9A9819C98A55> |-
/g <1C60D8A8C9B7EF326F0C168637D7A49AFFC209EC4BD7378EE8A777DA14ED
0433ABB575BAA4A098791F7EC46D250F5BCBA737E6ADD6E1EA28A72C69A1D253
4789ED43F588B444BB33EF91B59EF2C4FE743D22BB1490B1C3D985CEC86DB4CA
EC82645FBE79A010F5150407B5C45EDC871B2352EC6CDA69E6218B8BDC142A04
2A82C9883A9AD58050E49048D70FE68B76C0D9A131CC220EC7E7E2F97A2B0A63
67D497A8C9EC9D8ECB2B25078AAF1A> |-
/l <1C60D8A8C9B88C084B70B34E18F97D5BE3EC751C999BBCABC0C091C0A8BE
BF64> |-
/m <1C60D8A8C9B6B41C803D68C39EF50D06E406D806E0103B4C2937F43F706F
E45E46BB4B168951587EB26A51BD9E5D6D15548973928DA7BD71E5C6A2EC7542
58679A8719AC099ECB167292DC3AC16D6A6399789AE1244C2D9A7EDD1242D52D
A81BBE025DB4544A719A686DB3A0393D2301EEF964B14766F22C4A5827> |-
/n <1C60D8A8C9B7EF3210B37219030E01F02282E2A4B3835E14985CCF7C3467
D9FD4AC1150C39CE785493938E35F9F3F8803A5C0BCA739B1427F3A792710D82
4D3F659181245D5369B70D282E18CB80E971FF79556B187036E1B58967C9A193
404842FD07115898E3B6> |-
/o <1C60D8A8C9B7EF3272B02106A74C8947A7F8FA1419E5E472F49BCDB7E37D
B09471BBF80EE42CCA6FD4E21D2814D7572265E2E4A9069CEBA0E56B55BD82CF
9D974E2C43A3987976A98AAD8BA603247E89D1475E7FEE31FC957BAD71> |-
/t <1C60D8A8C9B854D0E39D4A6FD38FFEE65D2052948A24EB808F85141A7307
6E5305FE4B51354AB4CDEBC31E5AC6CD8CD9912464DD321E756CA23CBAFB773F
242158A04D01B1DC> |-
/u <1C60D8A8C9B7EF321358E32ACF4492BE8CEC4361503FA645CEFF7A0A2E97
9121DA7938ED2A528311C300A3D3E5F26385152F50A11A4A1361D7A4DF44BC51
E875E6F3E5834F6095333E0EE17D363278DE53728FA8D89564F52C0E94488CAC
6906E8228966BE3C3830> |-
/.notdef <1C60D8A8C9B854D00D> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/JJEAKN+Helvetica /Helvetica findfont def
/JJEAKN+Helvetica*1 
[
32{/.notdef}repeat /space 7{/.notdef}repeat /parenleft /parenright 3{/.notdef}repeat /hyphen /period 
/.notdef /zero /one /two /three /four /five /six 
/.notdef /eight 14{/.notdef}repeat /G 14{/.notdef}repeat /V 10{/.notdef}repeat /a 
3{/.notdef}repeat /e /.notdef /g 4{/.notdef}repeat /l /m /n 
/o 4{/.notdef}repeat /t /u 138{/.notdef}repeat
] JJEAKN+Helvetica nfnt
JJEAKN+Helvetica*1  [4.86982 0 0 -4.86982 0 0 ]mfnt sfnt
17.6597 159.6 mov
(-25) sh
13.5986 140.225 mov
-0.000213623 0 52 (-24.5) wsh
17.6597 120.884 mov
(-24) sh
13.5986 101.51 mov
-0.000213623 0 51 (-23.5) wsh
17.6597 82.1689 mov
(-23) sh
13.5986 62.7944 mov
(-22) sh
20.6353 62.7944 mov
(.5) sh
17.6597 43.4541 mov
(-22) sh
13.5986 24.0791 mov
-0.000213623 0 49 (-21.5) wsh
17.6597 4.73926 mov
(-21) sh
25.4541 164.469 mov
(-2) sh
44.8511 164.469 mov
(-1.8) sh
66.3125 164.469 mov
(-1.6) sh
87.7397 164.469 mov
(-1.4) sh
109.201 164.469 mov
(-1.2) sh
132.66 164.469 mov
(-1) sh
152.056 164.469 mov
-0.0010376 0 48 0.000457764 0 (-0.) awsh
157.739 164.469 mov
(8) sh
173.518 164.469 mov
-0.0010376 0 48 0.000457764 0 (-0.) awsh
179.201 164.469 mov
(6) sh
194.945 164.469 mov
-0.0010376 0 48 0.000457764 0 (-0.) awsh
200.627 164.469 mov
(4) sh
216.407 164.469 mov
-0.0010376 0 48 0.000457764 0 (-0.) awsh
222.089 164.469 mov
(2) sh
239.999 164.469 mov
-0.000289917 0 ( 0) ash
JJEAKN+Helvetica*1  [-2.98181e-016 -4.86982 -4.86982 2.98181e-016 0 0 ]mfnt sfnt
6.354 101.22 mov
0 -0.000396729 111 (log) wsh
JJEAKN+Helvetica*1  [-2.44921e-016 -4 -4 2.44921e-016 0 0 ]mfnt sfnt
7.81543 94.7261 mov
0 0.000366211 (10) ash
JJEAKN+Helvetica*1  [-2.98181e-016 -4.86982 -4.86982 2.98181e-016 0 0 ]mfnt sfnt
6.35449 89.4932 mov
(\() sh
6.35449 88.748 mov
0 -0.000686646 101 0 0.000305176 ( eta) awsh
6.35449 80.625 mov
0 -0.000747681 40 0 0.000305176 ( \(G) awsh
6.35449 73.8613 mov
0 -0.00038147 (eV) ash
JJEAKN+Helvetica*1  [-2.44921e-016 -4 -4 2.44921e-016 0 0 ]mfnt sfnt
3.91992 67.3281 mov
(-1) sh
JJEAKN+Helvetica*1  [-2.98181e-016 -4.86982 -4.86982 2.98181e-016 0 0 ]mfnt sfnt
6.35449 64.0644 mov
(\) \)) sh
JJEAKN+Helvetica*1  [4.86982 0 0 -4.86982 0 0 ]mfnt sfnt
116.965 171.287 mov
(log) sh
JJEAKN+Helvetica*1  [4 0 0 -4 0 0 ]mfnt sfnt
123.461 172.748 mov
(10) sh
JJEAKN+Helvetica*1  [4.86982 0 0 -4.86982 0 0 ]mfnt sfnt
128.593 171.287 mov
(\() sh
130.214 171.287 mov
( ) sh
130.594 171.287 mov
(m) sh
JJEAKN+Helvetica*1  [4 0 0 -4 0 0 ]mfnt sfnt
135.325 172.748 mov
(nu) sh
JJEAKN+Helvetica*1  [4.86982 0 0 -4.86982 0 0 ]mfnt sfnt
139.158 171.287 mov
0.000747681 0 40 -0.000289917 0 ( \(e) awsh
144.84 171.287 mov
0.00038147 0 41 (V\) ) wsh
151.064 171.287 mov
(\)) sh
.521766 lw
[.695688 1.04353 ] 0 dsh
102.544 157.976 mo
102.544 3.11475 li
0 0 1 rgb
@
221.959 157.976 mo
221.959 3.11475 li
@
1 0 0 rgb
JJEAKN+Helvetica*1  [4.86982 0 0 -4.86982 0 0 ]mfnt sfnt
211.751 8.87842 mov
-0.000686646 0 116 0.000396729 0 (eta) awsh
JJEAKN+Helvetica*1  [4 0 0 -4 0 0 ]mfnt sfnt
218.92 10.3394 mov
(l) sh
.869613 lw
[] 0 dsh
222.307 7.74121 mo
236.186 7.74121 li
27.6187 146.322 mo
32.9058 144.548 li
38.1235 142.739 li
43.2715 140.861 li
48.3853 138.948 li
53.4292 136.966 li
58.4023 134.982 li
63.3071 132.965 li
68.1426 130.913 li
72.873 128.826 li
77.5693 126.774 li
82.1255 124.687 li
86.6479 122.6 li
91.0303 120.513 li
95.3438 118.46 li
99.5879 116.373 li
103.727 114.355 li
107.797 112.304 li
111.727 110.286 li
115.588 108.304 li
119.38 106.32 li
123.067 104.407 li
126.649 102.494 li
130.163 100.581 li
133.572 98.7373 li
136.876 96.9287 li
140.111 95.1201 li
143.277 93.3799 li
146.337 91.6416 li
149.294 89.9717 li
152.216 88.3027 li
155 86.7021 li
157.747 85.1357 li
160.39 83.5713 li
162.964 82.0752 li
165.469 80.5801 li
167.905 79.1533 li
170.27 77.7627 li
172.53 76.3711 li
174.756 75.0488 li
176.913 73.7627 li
179 72.4746 li
181.018 71.2578 li
183 70.041 li
184.878 68.8916 li
186.723 67.7441 li
188.532 66.6309 li
190.27 65.5527 li
191.94 64.5098 li
193.575 63.4658 li
195.175 62.4917 li
196.706 61.5181 li
198.202 60.5439 li
199.663 59.6396 li
201.088 58.7354 li
202.445 57.8652 li
203.767 56.9961 li
205.088 56.1611 li
206.34 55.3608 li
207.558 54.5615 li
208.776 53.7959 li
209.924 53.0308 li
211.072 52.3003 li
212.185 51.5693 li
213.263 50.874 li
214.306 50.1777 li
215.35 49.4824 li
216.359 48.8218 li
217.333 48.1953 li
218.307 47.5342 li
219.247 46.9087 li
220.185 46.3174 li
221.089 45.6909 li
221.994 45.0996 li
222.864 44.5083 li
223.733 43.9175 li
224.568 43.3608 li
225.404 42.8037 li
226.238 42.2471 li
227.073 41.6904 li
227.873 41.1348 li
228.638 40.6123 li
229.438 40.0557 li
230.203 39.5342 li
230.968 39.0127 li
231.734 38.4907 li
232.499 37.9688 li
233.229 37.4468 li
233.996 36.9604 li
234.725 36.4385 li
235.456 35.9165 li
236.186 35.395 li
236.917 34.9077 li
237.647 34.3857 li
238.377 33.8643 li
239.108 33.3433 li
239.838 32.8208 li
240.569 32.2993 li
241.299 31.7773 li
242.029 31.2559 li
@
0 1 0 rgb
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
JJEAKN+Helvetica dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/b <1C60D8A8C9B7EF321971A47DFE20E8D12DCF13F4249D8C10F901B23F44CC
4B3D3A92004F0335A22F210BEA5D37F0BB876327B7669538E9C228B4F9012AC0
9E7AB8937DE3BD3C93AD209929444D3EC0B4BBF5D8B9DF5E8C3FD49F5CB13269
34117A7908DD33DF7B17F4FE705EE06995B3EE50B3CFAC312A1CD31550BD2D1D
0A2D1F066FE2FC163F13BEAE60205651F222EFB82A5FCA786DD06D4664499DF6
9B7A8F9C33FD1DACC817EF935E99AFC1C29B34EF83408D745D039AA6C7> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JJEAKN+Helvetica /Encoding get
dup 98 /b put
pop
%ADOEndSubsetFont
/JJEAKN+Helvetica*1 
[
32{/.notdef}repeat /space 7{/.notdef}repeat /parenleft /parenright 3{/.notdef}repeat /hyphen /period 
/.notdef /zero /one /two /three /four /five /six 
/.notdef /eight 14{/.notdef}repeat /G 14{/.notdef}repeat /V 10{/.notdef}repeat /a 
/b 2{/.notdef}repeat /e /.notdef /g 4{/.notdef}repeat /l /m 
/n /o 4{/.notdef}repeat /t /u 138{/.notdef}repeat
] JJEAKN+Helvetica nfnt
JJEAKN+Helvetica*1  [4.86982 0 0 -4.86982 0 0 ]mfnt sfnt
208.829 13.748 mov
-0.0010376 0 101 0.000457764 0 (-et) awsh
214.511 13.748 mov
(a) sh
JJEAKN+Helvetica*1  [4 0 0 -4 0 0 ]mfnt sfnt
217.619 15.209 mov
(b) sh
[1.39138 .695688 ] 0 dsh
222.307 12.6113 mo
236.186 12.6113 li
27.6187 35.5688 mo
32.9058 38.2129 li
38.1235 40.7168 li
43.2715 43.0474 li
48.3853 45.2739 li
53.4292 47.3955 li
58.4023 49.3784 li
63.3071 51.2563 li
68.1426 52.9956 li
72.873 54.666 li
77.5693 56.1963 li
82.1255 57.6572 li
86.6479 59.0137 li
91.0303 60.2661 li
95.3438 61.4487 li
99.5879 62.5269 li
103.727 63.5356 li
107.797 64.4746 li
111.727 65.3096 li
115.588 66.1094 li
119.38 66.8047 li
123.067 67.4658 li
126.649 68.0225 li
130.163 68.5439 li
133.572 68.9971 li
136.876 69.4141 li
140.111 69.7617 li
143.277 70.0752 li
146.337 70.3184 li
149.294 70.5273 li
152.216 70.7012 li
155 70.8057 li
157.747 70.875 li
160.39 70.9102 li
162.964 70.9453 li
165.469 70.9102 li
167.905 70.8398 li
170.27 70.7363 li
172.53 70.6318 li
174.756 70.4922 li
176.913 70.3184 li
179 70.1104 li
181.018 69.9014 li
183 69.6582 li
184.878 69.3789 li
186.723 69.1006 li
188.532 68.7881 li
190.27 68.4746 li
191.94 68.1611 li
193.575 67.8135 li
195.175 67.4307 li
196.706 67.083 li
198.202 66.7012 li
199.663 66.2832 li
201.088 65.9009 li
202.445 65.4834 li
203.767 65.0313 li
205.088 64.6138 li
206.34 64.1621 li
207.558 63.7441 li
208.776 63.292 li
209.924 62.8052 li
211.072 62.353 li
212.185 61.9009 li
213.263 61.4136 li
214.306 60.9272 li
215.35 60.4741 li
216.359 59.9873 li
217.333 59.5 li
218.307 58.979 li
219.247 58.4917 li
220.185 58.0049 li
221.089 57.5176 li
221.994 56.9961 li
222.864 56.5088 li
223.733 55.9873 li
224.568 55.5 li
225.404 54.9785 li
226.238 54.4565 li
227.073 53.9351 li
227.873 53.4126 li
228.638 52.8911 li
229.438 52.3696 li
230.203 51.8481 li
230.968 51.3267 li
231.734 50.77 li
232.499 50.248 li
233.229 49.7266 li
233.996 49.1694 li
234.725 48.6133 li
235.456 48.0566 li
236.186 47.5 li
236.917 46.9434 li
237.647 46.3862 li
238.377 45.8301 li
239.108 45.2388 li
239.838 44.6479 li
240.569 44.0562 li
241.299 43.4648 li
242.029 42.8735 li
@
grestore % PSGState
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
% page clip
grestore
grestore % PSGState
Adobe_AGM_Core/AGMCORE_save get restore
%%PageTrailer
[/EMC AI11_PDFMark5
[/NamespacePop AI11_PDFMark5
[
[/CSA [/0 ]]
] del_res
/JJEAKN+Helvetica*1 ufnt
Adobe_AGM_Image/page_trailer get exec
Adobe_CoolType_Core/page_trailer get exec
Adobe_AGM_Core/page_trailer get exec
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/doc_trailer get exec
Adobe_CoolType_Core/doc_trailer get exec
Adobe_AGM_Core/doc_trailer get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 12.0
%%AI8_CreatorVersion: 12.0.0
%%For: (Your User Name) (Your Organization Name)
%%Title: (2.eps)
%%CreationDate: 11/23/2006 5:46 PM
%AI9_DataStream
%Gb"-6B6Pi9dO>$BT!e>(i(0^Ifn%q/NGTYS:*eS1PMEstg!>HNgTO67T[$9apWRs7l^<`,\"o0ZWi.C]GIKP7N-g3IB6!L7XHuYd
%?7qf@`n?S8Sn(!6mI&O0=8eQ$:c+T]UnD6TR:]8m2Ao6.)%P2*U)?.dKSnk_G;8BDk=osEmE]C@a`&HLZJO$up=O`Cr^:\YhM;)L
%3;LU!*4EK:F<+dFStiU!rp]CUI*c`Zn#dJUl#>#<R?T/M'5t`qfG>moW'0mPUC;UmEc8q9@+[PJN&lA!%3UkSchTNTWR_LN#'C@R
%`m7S%oauLlh4N$@Qk9a?B(r<//1kK*aTr\N&+P/KVlTg[?oAhUo>+u8&s+$Gl&V^Zp:QFu`\Y_M_TQR)n>ZC=(I]@a`R7UI_m"-!
%KM-QR$m/3L%-pWo.B/hpci2gSr]aP(ZUFY>;\oT*o`,$Z9/n>UoBX6mTJ7`qcC;sqdc7CIYV3H)K=Nh769R\>31KR:6\H8`\hIs\
%J`Hc4oi!>[dhY1FF0mVJ_Zbu<Fe4`Q+Y5S+^\]_:S-7n^g)o3GDK2j_Sr4pNI+fN8ZdBK1a1XV3cEU]ANMFcG3%pc@nD`;(;?G'O
%i,\Rb2/#X;Ooc'Z2URIhLkF$i31EAcN(;@]9N%>)W]94AZ^KgcC%?h1'MVO+1@dZ/k6MUiH%.C*#-F]L)7;)aW!q\J$SAN$HN7a?
%dbYCI*dUgSMdp"0ceA_A!faV=s,XYaHetBgQON`LH2(&[iA6[KcVd>`b4G+lkM\#=_cr][DZp/C-e4AO.$dQD[q$,/-'M.VR1oe7
%d7abeA26t.K77e49EpAc1/JDYJkmdq.RC=;$*':`n>90:14fLE"X0;PeHGs\#Qgtn3_d1ZH:2/([np(Rch"(rr.8B30)1*/0J7XX
%j;eX95+rAn$9n"4ATX$V0J<-RD_NU7KVf$\8CK7@pr$Zt5N"8T$_S-&OrckC(`Icg)*rdcngrbF'20'E&lc[pWCfWU#!faqH:QoR
%cHB-4(El">%)rRFckMm=132q\RQ1'EMSU.kR3njUQ!oX@$/]-@A0&I`e9Q9AT25s9#bPW_a`8QG,s;6qnlii"QWK>4FejoupJ?ek
%:W<h]4W+7f4R!c89\Pf1N>.M)TF;6*?DB2>>b-hD]S8/X-PRe@*QCY>67Tl#P^rk0lLHEk.>a^Y^`Y.5?I&,9Ok1WA4BXFM;92-L
%cRlssko[`)JP;/\4"jBg4?h2A-mlhZc'&@QHh&D(Se*ASfjsLWJk-OVrZOp;V1);I<L9[dV)&ul.NOV90%5?^&oi&:29D)dcF/[I
%FZ,mg1-0Dt'd[mEjY"`<8].>Rb;/htIS6c*Q$t]Q]Ma6CT6QlR=+?DU<'??dO4<(J-^>n5e_fF8SL37CBa&fdqC*-"/+kjs.2L$L
%of)\4e]VOp8Gu83.M_M[rCq_Xj[\>%0Sf-hk*LI^^QID-7P8#)-\O6R&;3A2<>Na@+8Um_+uR1C!^'m(j:1oZrkX)_]):_H^ZD>7
%e`iCET]ps<J=_drcW$p-Wp&?<arl5`lF>7!AGcN,-KpSAPGd-tG]?&S``E:tflQgJJM+V[J%:+[Qc@D>Tp?%^!rPend!%d%/l9pb
%kR!b7LT%/5&^!48jFran.OIakp_u)cr0.!]d*#*OlASn,K.FlujUtqAckW6-EbU8M?4So]5l\fC[u4ctn/<F%;+md*kL1;T5eSTl
%j+U)KK::%!.c_\!8f1AT-`"n@EMTiZQVgd\ru!<.&Bj,n=XO90>qQ37/S+@oN)Ve>h'N7Mc*jbuJi]k_-EU0LWm%;QXCu"bCD0'2
%Ws_s7cR.JmW;'Ej!V;=X`mY^UeW!Ri5X8UD1M548&bNenfXP)dZj<WW#'bFp?=Psnd8D^DUNoZ`X/mgSJBePfU.&gC**;'@ke]P\
%V-$V$WQZ&&JgDg4CJ98tJ<ros@l5r3"$F@e($"Sl(W^^7KMgf5JY%sXfEu=@c7!0u&>3RjMbl"Aa\)`U#(9%;.VtO@!u\@CJko%_
%7UDg6kpeACC.5(eJSHWJE"]Tm?7-CXR8$<hMe'2>1/UK!<mCQ[fZS;:TkZn4?O:]d4@sP@,Du1/m_CRpo?'%<MURYa$A-\3/u*GU
%\aqM-/5/rqF<<Fe:Kg)QD2`>!>#L6*Q`<t)9#q0TOYYIG4QfTu:kE(=8TtI7-Dg)=7P-I7b6sd^':;dN/6!rJ0,g6lANF</FCVgs
%;Pc@5lBo4lGbq\gb;39`!&FY!!c(b)?!5p2!Ri"Q/5(+D5qh=t;1bsT*eF6T=$<odTFc!rLkq7GTRUtRSa^p389c#M'!_XO`apJC
%;$Fs2>TT2!YS7Jn%\_+G91W2J.f(Ds-a@9?If]dg(oB^<>22@VW&fk4#f8``:s_m3>!E!Q_!7(NijcSBa-hU<)Yf%'9O*=*.0=h3
%Ahp=u#W'-YjAFnhB4T[^+<aT*bs0Hu@4@CpEHT]4ndh1Os2P)]WF@$)IcDJ'](qGp$Nr&`Nef>\JeCG4Rj,`oc[\*D\4cpe%'+%q
%'$!pO]A-\PU,Z2>$O&sVJdIVqWX9nS;5#^L<CLsu=Z/YViu(W!MWR=CQAA.ET/&F+A&hRMf<Q;7:IuSh-'HLikCm@]UoGW3V%J<8
%OD0_,l'E!:No6buNmh:S9baFH8PiJhHQm6+'%Y;C$*Gi,,\o:+R&UlI9W=IX]?Z[T"dMcb9X&8cPffFT?AiI@b"sE[78m*e$6>D(
%b/?t'X&K'A$$<*a=4`^()@BHB7RNHk<`E?C=^&G/1`]<;F$^BPfEFX9VdO$H&ih6DX,pI@7W:ua4B&+RVH<fe)T+?EQW@din6\VV
%<tJAt"E]307TBa0Sk+S[W<Y8ceFgd:)Vc;(4_`I*28p5s@])RK.A_$ULeGsjD':0(]&OJ#k1*I5T\0CM@gaUf$Z6Y@,Wo347_Mr2
%r<,0!<_)n1;^bBpOXZ`4dmYiMiJ<"bgQ&=DWZX)/QsD8t0sO>A<WjhL#KGFKC)I7\<\[o1aH\X5c*.`&8Y/o*M[TfA7O]Y-6!cBf
%NI]Ml?R^8d@-e%s^6r1X=FH=o+)?*96g#1"9LIbq/<V`>0UTWaOnN;dnY?IrWM0J=W+3#-!^Ub6BP]do`Ihc&PXhQB0c?G2k[W%E
%C<+[/Be:pq7P^:.U_p#0=V8f>)aK$HBNDTSi[F.a,U5qmX,3%m2rR&m>*`(1'YI'?M2U+GM7#s@c`^s"iec,eYqF7LflSGW[@e-]
%/P20SWeR!>`M:"\X=Hn=;ABXq,]4a#Z+j%S0qd.(:+Q:g:k#a.TR-!iEd69)<mc:rR?d-^TZ)T.=5<dU'H'iAQ$H65pH%NLWfFh/
%XjX"t'g]9F,[(9i@.bs;hVa7.lA"pr&En%/=Jg3II;+9s\J[snKE'GETp"+<I$6$1hh`JBTW?ctBa-M\PeTlV:eCr0V,W-PO.ANl
%[#b6A`p![BLQlVmb1s$?GqFi0-oI=qCg]t0<n3*Xd7A%::3e7!FhFB7HaI]l-mp`q$-SPoO!dFQErdo+Q<hVS&nqFD"OCL1"S7dC
%:-'o#$!!(\bO_@QXp]JTOOr9*A__ot=R"/[A-ACd1M)cY.8GV]:[,"X"i%\;cPKO+?Vd9.pe:$e0q%cKKCS-/n'*+fT47]d54&*b
%.LU7UAU0"[d:pr'Z&dj3*/r"g?ACZ/%u5f%Ck0=AHL9&)^*rqHmpk1)fNjG"LAh.jVL<I`2-J/Wj'M)`gD20sf]Q]t`,-%^+7n,R
%`QQ77Uht@,g;ADuK?pa3!YQ<7^Q;Nf"aW4jouFc>lmpX/iEu2mYh+r\`HJFLC5^uJZ'c(MWBBFcHB\0/5FW+pCa'O>kRIA4)Y)#j
%Rn_XCKT9S*em4)@J)(!^^*I2/EUqp-GM8eS0/f5YalR$gan3'lVV(e0Ns=X\(fa@O0nfQm[lk^,k-;,Ie$&a1-K78u<3[5Y[Cad;
%KN9p$Z0?3^6T#[df_hA`Ck7[+R#&$CQe:aWhqHo*]H8(E]PO$tiFfhVRXa*r\)/,5LM18;-=aFflHlImlRmq%8*MkCr)pBq<!WF#
%C(EN7%-c`pb@\7d!NuaX<.R:c:pX:Ipamnh0>IQsKhAElFWjf%eRK>!)7<A9W`PF2F],575h)bgFeqcCrY7N8!)YNgUr!;7E'[L6
%+FUgtlAZRsq-Z8]*P7[J@84,i!OYJ[(0.oAe9W5jDn[PB=tP/BKN;o%3/b0Ni3kb>2H@@`5e!"Jg)(jtI]P&pUJIoa8aCf412<hm
%e/OKI"&`l!JJ]eHq?S*O!cUJ`:ZO]6W!X3;Lf1E8pj2uO#Vm0kl@M9)B_o&3lMN!4k85)Oji<t-DCRVJ,`t'3]9t6?rN,`5/L1i5
%n%js[1@@m[c78..;rX80#cFSfqE1X@+AjmQNum'hia6^fhEl//l/2E1b)nt,ar:E:7(Aguni<?%GNlU!E.M=r`Q;Rm++HsHJ,+)$
%DmMV,neR":<QkMNko'<^,ur=@`o(e2@C/1b"rs)E&^`p1h7MnKl?DEi^@X\hlZt:QpY@[VKE*$4Hncu('Gn)/n',Au<4XOoOBsA!
%/r4RHk?e<Z.;T1g^&7U_?>:^)L.GhN2<^L:Dt738A5Uqf=<nIZlXg^9Y7tBa)ZL:,JEW'1\;.*BKs+s'17CPrV>'he4b^pQ;P6Xn
%l$p8D0bHq*gu>5sn_a<(AD1+W.o-`Jp>33rW@R'-*d&gI_/,q,KR0BjmA;=@fG:ISi32A=#Q/a6V8N#:/UHppV)Obt2;<rAl*qIW
%VDanD^.ECc8ApX'B#m%>\"*I>6;V%UF?KA3N5'YEd'<*D!K<SY7t#:m]d@0Vb'V-T!?Z'<-0)[W_\;.dDtnL-rq_>?rSrlacb*%,
%N47t9n#f4'q]9L>N:=XSQT'Yr)u_PWMO3KGHP=YCM0MK'pA'L@`&m^M@G+U8!J-Y1-C'V/+"X&D&kY+_E#7R7P"C$fceCuXHZ@XZ
%3I$k^kK;/r_D9qXXh0F(!RVEH$-jgHCa0;j1b\pdm-$O/O0$@)mf*NRTF\SNG1"(!$<(Ya3VmTc7Q!.`%ZD*)O^51"GtFAI2"gmj
%cV\3KVcFA):<VVSP"kfhP97RQJ?OSXTVjC@-4^r3XH$W`&NJ@BPf8rj\'Z7H0%uqR-VgPS3l=dFB2FkoIX;?C1>[r.I(G\lYM*B9
%%K6UmhQ'+r99n._VUAThM*Imf%+R5Tq`uF/OaIg^]u])%6_&th:)e3IDI9QB<69BIp!oJ;`LaOHZ0Y?he7K;L>uG-hA>eX^%?PGU
%VB?gs'UMul%E\"539aRa3f'fO8_^T9A?L^>7ab'3%,$d#100SoI\uL=:O76ch=MHuo8/&MH(b/71M#]#7MO^0p93Xe/"+_\TO>!\
%%$1DC$]IF0FWIWs_nd&G&,=4q]O5DK`\WB";eTE(JopR-?_"tOQ#">+cPku1?Cr@j^YP+M8+laD,@oL%q@WK>X5,Qbn995hO@s,[
%l(Hq[Io#1XaJ9U+dVS3[1$[*>4[^ijkQSS=0E+F1DS%]XjHA32VC2D(Nr6Z3a+7Eoqh<7CZ#@`$W1mu$Mh;MFmq3!tRP"BNZa2Pd
%'<p["_H\`K2I4@sRZ$&!pVsPK0$]55YUE4iSbk'6M`_][l+sR/J%H[J>+r9PpF'Gu@@&KeosHNEFMI]9(J$nSF8t-T06n,+<8/0#
%YnD?H369AFk<uWUeq)8%q=AB3)8>Y0V^M3Ue"L4Dn]u\dRa-Y?mf+n:MFVbO=btltc9qRI%o1aJc=DsrA#'&Y-^gsZ*ESKmIhbNl
%a'gl%?[^SJEulQm@&%G-QgLGqeO\dVR#UR,6#Zba4?Pe>O$]l4^N+_M(edpR(TW`o7al/to<0.fJ'<]@gVnc'VkZAt-N9:JqYb=G
%hFPN^DirkF'jI.H#3@Qo\6rFueH*_6:&dG!Dl#C[[l]6$?nSXIA0Si;/H''begi68Y@GsUZ*0*1_8WslF^^;Ff<Ha[Y%&h?lDel@
%\78cp:i7noa0TKL"JgF&K:[:aqUcVoH=blY#I=^ViIRHa@n#:ho_03U'pHTV[6@H8W/QH!%$e_=-$(nq/rS$;&43-E'#^i^'=$0X
%R4L(2m!LS?^=P>V;84X+CN!4+fF-2Qf^C&f>.nuXirisSDkZT95]:&N(i&"UkYR0;F&>Zd7h!U1(U`i8TIqLSh5Jt;C%!u5UN]m>
%,qrjs!?)Fs@0GUI$]=O7VNQ@DqDnD46G1ibo'm;<\s@4?e&Aqo.-af^TPt,PNJ`s$j%%>*2'-iOo9"=.Y5,%Vq%sMhl7hPA#h=.N
%U=^,ldIqfYqoT@"i^+`FEE@&,h!](^k!.<C-*#0sTG!H&DrFZ)k1E.IU0BIc'&ZKN8u**^7C:eeArrmrBQl5'@o%tfU!<Y(RnS+i
%AVU/uqa6ib50!3XCse[8a[KR62l*=AZ!;L/A+k8(`U'<]]hV:W$`1JpAEm+u[qJ_(f;+$12]oG9(W4$abhJZ(#+uu6LqW!l$"?>$
%QsgR6c+;a$b\ifDcudq=D21/#2%`'JJ%I0%AI!*$/j[d53X8";:8_P8Md5#>5q1M1nJC3YTV2Dj3Z[BWQP:pGZ/ZIb7$P#/9)$,C
%mSOk]kdG,[np]5%rm_h@(%%$1bPQmk6>bY<)W7^M0F797</0)M"un5l<-gqS4U3#d)']GI-YeE"6^3I+apaTsAjnonjMitk77BR@
%e$2]ja;r9[9$R3R>sV(Wd?jfHpE45"^;V6'4/Qk!L':7u"S4cti%VM$\Gt6R&,s")2W;JNnRJ<Y,qd.9>[a!P$:D&-H]C7eH*L:V
%D:99U*>J<E>I;@4'GRMh&>uh_p*Wb*5%LqC7(It^DgVEn;!Trsaal$028g9nKDEk?'.$#bK^GFIiK@B%[:]&e%#=5L$],u@PR#9u
%;Z`(Km9s@9dBTA"U7'^;V5BI0^gY6U(n-'@f0oNYLLLo/N!#t(!:ihj;Wto!P7E:XhD_"Lm?Snd6JQ1"7W\qqAXue9V-lgaFk`5K
%ok/p'YmpdMU@ntWi2giigI*=!/>nW82R7Q-LM:L'6$nG^.d1t?]:r%o81Ec@J5F''$3"s8`j>J;U>kFe:7ad4WF<3-MmcJk:s=[$
%&'dTq=?_.1]<,Jq-W35b]r3&@4%jQK*;6YJX5.9MS5^%E=HH1&_(^%H,[7BnJCgASd>j#V*HBYcp-bCt6daT]@#EUQfNng#"Gmm)
%;J/5=7sQlS5TDOB`g#c8OrOrWYUaliU=kG#BJp57`jNhP@k:]5\?1o.[rnO(gN!rf##3a(Mp]GX4qG,tco=Rt#D%f82$VifbD<Wd
%G<A`te\$MhNd(YWUs?#\3E"h<\sQ,U+UQ-k(QeP-Ekfs/q@P:M_KDha:FF;5+=GrbkVuH=Nor%OO."k]FWQ#qcI@#dWA"$URSP:Q
%PG?19aLa,th=41"W`FK4QULB=C/CiTcYLDYd=3HQG.);Z+#d+HG;;KmR+cnn'ZtjKq1Ppc\;255B":b+[M*/<^eU>,R0U"h;18-Q
%/m`I"_I4biMnG%')Db7OAg:YnI+e%D3MG@=4mp)[!q.4F?hj?&iX<4/;'pJYi.o_$&2*!!DK`JT(lgY2nFZW(J!ucGVe_'3;)Fa:
%D+/i$ABKtM_i8V739h\ACp9!>947Ocb>9W#/2=j:VioQ`]70s%Vmnh8[l>7EEABVRL/%ph0+XH&rHCk8"@dHSQ2D8egJ@>fhafCe
%a&V#g3j*.4QEG7dL\D;T=rj@%HRRA1*mF&kQU(A*M8c[s\0pQD;9dHtI#H/P@;^C<m$O4W%/$H^/6bG8>k6dH("@Htj_*Gu6,cKI
%!%rDW=7$9+$?_ZKA$)ETigJW>[lMsUXhEEec3,>]c%[`$hP313cHatH):["Vf<?0/EdR]WnN<LtMSYCrH['(S@e.AMa]lWcoZigg
%BUV4uKTC#q''^MSJ#EqL1`:3/TuU-5ie.'V$9p,FFOPedNDBuS\j+>0:n.@Z(okd`nC7$gD<qWt7>nfWd8'(mpenhC!n;a?6,d3j
%o4TX`%Wtr:6""eb<N+#\k$ZpNC0,dWZhNTYcRZj!TB,!*Ko3[EJ7mWcU0n/4QK-!OUH-hKi$!1rCn7%]7B>YYU@Ns4]3sB0\;ZNK
%**Y[&DXUifM?ann+'ofCV08\%L!e6TC3HiY*P9!CKj"p=c7PaXpHS6ck"lS:Yb8tg[(-9hK*ET.$GfssmfOi5VL#2#<:N8+q@N2_
%TI-i]hmW`'jnW,r*1@f6A"IBs<>)0*[q\.6eG&ZJdM1tL:`NS(7:>]DDl&$m=9J4F^g(OL1NTLmOlt2"5<LlYHMs-k:nbb]BE=_i
%f1q3(:eT%"rdEK?C1DU1rRpG3c(G-E\S\PabMfn0Z0K[Cl7$d9jms6aF+N)t]CuA]MSSG2H^F%$/YTnl($9]U:nQdlbJd2k$n;<7
%gH*+Er,l@1%%8C9AKJOlKK<k&p?o&U$I%8dcQS#mlN6]t0Cf/6WA#ij6EU0C,V>[dCVIE%VEpl`\)p[*.aSX!T:EF$H\qp`OF_X/
%[LWGCMpWJqH6hdL^'Cib,cKUgTE]/jCQCK>,S'som2u4@>,mR>Zd4hPJ/U.7Sjq6(]U]`JeGRN5AY1=f!]B/EKN4tdT`N9LJoIuU
%!HTpcm"q#][R(5,UD&.r1\/L#)bDp\INbZ,64['9j8p/JSt#(X<'/l=X15ccLnXCM<hl?+lh8dYd<WTlLG?r%bhgqLr3D?UEWMrX
%+c;!!\/!`Z%s8&O\&J"=6`]a)@et8qp)Pp]kKr#Dm66&/gU$%N=TL>i6J/bOgaU-F',K1;-W@kl$Z?J)B<1_`9oet34FV(STPJ$l
%Fn&@&=B(p=e*QU7b5?+)c^2DVX'FrH.XKfLI=?-=5M;Wr=$L8&)PKu:@IZ8OG+Lp)ls%+crBObZg!jlWZp=KcOU_),:G;2qCuedD
%N\[*DL#5Gh[G"EAA,OmdBoPL[D<^OBDc+1b]\=#'7>nX_n67>eo;m;>,42HSr&P2S!V>U>='r^SDj?F'g\Y>&IMUrphN!$rQq?AN
%T/J@lnC!QoC6Q+[_'`fV)rJC.grc/7*,4eemV",@'$RENn'?^`ej\Kom0E7R[K!;AAVIMI]?B'5hfkYJX"K9"DjPkNddMt#;<(l`
%=MM?sNo7$j+,P\1YWZX5Qi43ni-6/"S199Q'QY8Ei['=/1?bkPHYT?e/p)99r5GWtbniK*@"%#)eK"\nf''Lpr78LMq4@]rpoEXH
%I(eU!SA$9t'CY^0nnhuTa3N,nI:Oqd07^\3&[2*l<1n-L#"P3aYs#QGZZJ"#AVB%Y[sund&?QaB+c?4>DtEkY&BA5`m%A9^pX2mu
%JS,CVdaKJW"R;<B)R4sQm2ue88F&]fd$kLp2PUQ9LKCh@8l2S&KJc`5K+t8s#&:^R[_XbrVcALU,eq]&j4?@,eF[>OMLsR:gY5c&
%@bX-QQ'bD]P/0&DRR<'!4BOu,&j@1+W7X#$oe^!1A?ZM(<`%O/:od8j#8O9Z1171s=@*0[ULf/<Yh`FIH[99KDR!WG7,T]U^SJt2
%?h@Tg]@cP@Pp9TF:!p)$,G0l@`PpU+0#]bWe?YG(,c@DF![d93*'NMh&h%sHN#RDEXa4u@d!QUp5&s>&[HStB;`oFr;cRlLqpQs3
%;u<SN\sf00:]7sG4e"e-Mm9I7Go&ZQ'aR)]:DrHC;je(1IgJr)="J'N#9FsgG,Z#3pQDmtaVRD]DXRJE7AKsb4_@G%]=[h?JUp7`
%YpHc+68XF;kd\O^-lc.;YI9n`lQ1kG7F8>9`+MHK27)aPCp9H>it$`>ih+$rWU#7G]s5pm>sXn`nbD.%2SVsUQt&o2:*[\!mJF3M
%kd$dL5'M@+?%9N3*/;e8771l4is:LS3=*3`7TXY5]cNZF;W%VBpp+W$G.BJKi?6/8@QsL8makTKb2SjtMdU24[Pmg[oeB+h_\-&a
%qjlF24@52i7Rm"]*p^@5jgd4E+XlApk!Bu!$GuUSKrr#3W_+5C3=`*fH]k[HK"fD!`E_"8"*n?V+,5h(g=L()?Nk9-;[Xpi7@jO<
%jn;m:G7I@eCC]bMKX<PHpBW?Ron;S=hcfa6,5X<M4ZkRmAcE=5We+a"+T^CuT$(!UMHB"=_eb]h1V0JajQWX)Y!2kf+pR+f>MOU:
%rJt!2qbgQWWo+B?/SO:A'Ra/i2$<Mo\-]#reNjV%U:o*]*r$@_5[.'BOP-E]!dR,MPq`#qk)17LYDj%,j^q+2>sMkUfRn%Hm+Y`W
%XCZ1PY=[s!fWje(V(U-RI^nBIk/;Z'L5UKomEBHO^=-#G.:TkSh*TXrU+PPNbCusH(dTOHjS^$!g*APt]rIC;)T@pFOn;DBEK\)c
%Mp3YM`:3!cm-t6(N&`K&n'%)goMg1uU0@o]f="\Onga1pk)`V(k\5.cp"gJ]DW_Q]HBPp\1QAha-t3s1fb@b,bI#jTDc`7n(hT>Y
%f!GKjX^U4C^G2P;CO=5K:!7h67@KOS/NHMH%43YcY'BsXO]6JR\uc"T<&UC0c]9LbU5_i$ZS]njiNqZQog[Yf3I03J#5cR(q,u`a
%(<'5LQ)6L<aj.$qJo\Ks/691blk/=81,N(9C3XWrc&l47_J6Ypp?Vg4EU:nI<hNSk0Gr:W-X#Z1-X*WNdh>pNF?k`t"4.pH*Bp,'
%/<)]H#kfjaSEWeW2\k40,m3&2GfT_SX$GeEjnWp./DM=iY_&q,RZ/14Yoj`kW*.;lZT\sSLK1fA`!UtD6*gT0YWaR&,MZMW046fW
%>k[`)$2uOLa[G"$@^&oV%#`_(c0&DF?S&$rY.M'@%o[fr+d&[;)-NBq^Zs#J]CiBj^@3haAea0=8Rf0F=(3'3BuH@(fT5/EYtLX!
%:DQ"/9>bS3nO9#4M;?sT,'b/-&!UtBZ)9\WL8A,9T&7XZpKT^W>W?b"oZFjjE5\0MkN#K+D>;_&KLgFCM*Y%Ci$9530`B]!S_9))
%BdQbj0r1#PMG?=Z9&k+N5Oil8,9u>FFRfq,QpSk45rQFt"&g=):#hMcC>+('B$P)?lr1TdD$toTkVCFNp2YLcoUW"&;4/AOO'IU_
%l)@]9RP"t:*HVjPfum+:c)G#!g2\UBT(o\@OOn3;mbFOaY-lHV3$`f9T,PZ+$ERW]WY^/l]NGS#3Y.tn2-3d<$j]J95`e&b2rL%?
%Y17r+1p6`AjU':=_ajXWi-neE>7Q,ZL^W`#41ac)+LDo*ZcM(B9Gc+A!iRtg>o$@*.*XDMEG4)QMe?p!)5si9I7%1JEs2ofX[mQ4
%We7?1A@'UU[N[00[LF*biUVS^kQ87Om7-,6Xm$hjea'J8'.*(%l`h-'E9hOsVG+ph\jruhP6Ul!ZYO*Z;eW"1gu#W[-EWZ(E&X%E
%hZH.Xmag)#G9_0M4'?q!()0MZI\]$9h!+R[Re<hG-$Q\W2p`JP2KqON_tDRb\3S4hGB;aFXc7;/(0L]S.iPoZS(P^!%D>n^^ZCm_
%]G6VGP#4HjAjo8^G/.3@?Sjj+jt8]/77]Sp7lKpXd,7nWXV4@$*WN6VCg3q)c5IWqWEYAjUN'bSW&84Yhk&l.*#c5nG!H36!1@#U
%nh.(\_QH"f6d)e@PEgk@EmX;\G)$F(OHnSN)KMYu67^]V@agDr"Zbo7<)Z]9#eNQA3pf.J+rp%W:YUj%s86@U*1&>d_$Y7FBU6M4
%(NV+7k/tWLdf-XK`V#hWQ'PX$X1ttAZ$*S_&"(!4esDGAp;54j=M&XTrL:2])=4l,Q0"c\d`sg8ZWU'f654`J-QI702;7HJA`_sc
%SMQ^pb5u:N7!Db-!;5_ZDmc$D;l*1R/Ng6`*-=p,8hb!0mSXV+U%>?MiIYWSUUtB)2Kn&-[l-M9"b#j&ipF0_&Oi)_]]i6Ca+un7
%,.!tD4d!j-@k4OQ-BdY&.5=7N[&'S`b\YK_(SPh0^VGIcK\q[4g^mWYrd/EZTtSh,NsefPjGYiQ(>D(#g3g$1X@8Qs5;]3\(h+N9
%feeWZ[FnutcoXkIQqaA0]e!W-T<,IFE48L\b3k*[EYiG3BG-,=!g$15o3^m\I,V89f8ucZn3tcf2`7/P5*lf'Rn]^Mg#qpOU_@.e
%:?OEeWoW`Mnn--g55SSKO.<ekDE=D</g'IS=Y$$rA=Ld*Ti)]Y9'<O2.cp5HXATk$:$8k/jn#FMMsI52l/l!4:o>jqFjp0QF8<&V
%^56qqqcl<`B?D^gI.k*uP*a'E!89IOC$NPjej\G"-R7`T_qWu?$*U_uT'-k=Iamo"aAoSUStTTu?1%bNpDi2EQZ*K\<&L#!?alQ>
%r@Q&,.(?/'$\)Y+>EAt;]1GU&/VtrO;qd0Fe67)QMa<]G8)e=nK60,jW7sL]S.[RL]0WLjM6K_oa0QGZga2DL`B^t<[guophD/%s
%'HPW3XOF%P`KsEDm;$9MGI'EALd%<M+q2b*E(e6<Qj*7LKVt+Z-;.k^dVe34*Q45>[XIA\HXkd#[70"o[fR_--;W6JMKN^C=^iGB
%Zt.dW2S]\<[agI?ZOiX#GP<)g]le8XJT>6<e!@AF<8OZ]jD8&IYsOFP>M9<)fPZXH*Yhr\N/b"qAFuhmWbumF>\n_7Vl^INE1;gK
%;0*):k4Uijqj^"5d0_qL^_6HVNp02L'2@Q$9t08q'+;XeA=fQEjLq93\k:>llr_QlZ=+%DYG\umUfjT"?VWUA9<<s7oiS+"XOWb6
%MN/[%^I2iI_>HqMbpI.;foEb&Rm`^iBaq5,VY(b'7"%Hfj;L$*Pe#8W5AQ:Y`%p"MqDt0Gp[$TVa`b,*LIf`1Q@([=q)i:akOoi@
%`pHcY8(bg&1f_r5iks?=dm5dMD;;n:[VAd3BJW\ZZh@YJP($o[<8P\cO`dt#',N>iLI[sXa"<>a*BMEqS1\t],P%r.R@<aC/DIU>
%F^;<@bH)B-C7'.A9O42<C9sR?B&dGB*3KqIN17d52Q_+*QJ8c\B0?]Hb9>9a`?qRYVnL=QHI?(.<VpBVdKCr.7?n6fODZ(@34dTr
%4dRc-]<&UBT6m-rl#(d8oSHpQXP%`3.IW7=8A$QBDb3oB]f.tFA7dr8K\smF*R$]+hO>L3C3j..P$r;W.sc,-,O\,M)tMjY_<l.`
%39eA`pP'g8-6I,BmgUP[E>22Q-QgXUHR!6q::YuBH>g%#6+C&]6-'C!8TtQr?&2m;@7ZC&?M[pFWk2-(Vl(KUONb+7#=kpi460B(
%rmCUZQLY#M:YeM)8dj?&+7:P]IMs0H5cq\%/]H&TZ"G>*clpAHm>TUp!bUP]5RKHY#qR,DJ_<'M"R#S`HVWtL=OoNUiID4+p:bE?
%(14SXU?'eV2f`rqVDIh&HN`bX=-gqOo/N;5[[G?%Z31TXGtSC[3b7B`%u+@?1QRP:]O#=d_lc'*3]%]?/fRtL1XCAWAYYZ=*[qKC
%i)JEHAtHh[]DBO<?"TZuGDlPKbVklW#J7Kh+e:,pjr$+>/Z^i!]5/U^,ZkUi:3gWX6SAm=-sLGW/l(7O)$2Hlj8uIVZi>Ru\IH&j
%d?)?;)bY#`6USF`N`R3eU>_T]5V:HH]CT%mp8V&IFj&?ejs#jP3=S`W8!=BJ8>f[X*\CVa0H"XJG$?^`j]LKgbL9t_q:5]Ql$/XC
%4]\-roO6HHbJ7=UN9dM/+P&Jme1kiS=aDpLP=?!uJ0(C!$]A4Besm\"Oh#AZqG!@e[&,u"a6B6JRs55V@E;rgp&H-qSq5k?m"Qda
%N?lV0s(jG^(:CTe,h_@Q%4''$>GbOf96ph_U0)YchWHU?aeFMJ^dM$MP``@o$l!U#[=./A99OFId']&B%-@a"`TARNk@c8,4_FY$
%*AM"W=hhjb\>2X\UccNCQH^4L3[kRm!=OQu0I]daROdRI)G,5BI@Y."jk8:XRnUu2ecdt#PQsa#<Z8@aisJA',[J5d'JN)-<DU@g
%("/Y@2WeK!'L-<!hjM'hT&r(o$khIaiXSs9U`7?1Zt=M/j)US_B;RgYH.AGlS4gn!LB'?CAg&ZIOMP,aW67LD5&/\$Qcm6F<iF;j
%a^]EaY0o+3eZqr+Y5h:F4FO$JO2C:,4uP&P.cTdAgX/akRk5@b-[4\>rlK:C(V7=@R_4E=#RpQ-D5*d%-/ni+k]-L?>@f"NYa:aJ
%6VDoCddGD%F@MYc$GGi]LScsH<h"tiS1Qle=Jaj0>Gg55Mt\c<#1XqEq_8-c4JO.o[:siaX2'Wng7<)dhiu`0'C!s5[NA_>;"s:H
%kbhEM=MQI4bbO#nR,Fq%C/`Mlql)aO8mHeu*F&V+[)d\(fI-Q5$14Z;<(8i1Cg'(uDXYTkbO7@2IW'CDG<8B3W7B)Y7gl9[g?ur<
%XR38fp:IW@VssWVef&;"dLrqY\jKrWRpl5KapVGWO(,\pk2l@Nj.[M9m6-gg\0r9<:?E9kR%dGB`:YU[Z2pa7YXBME0A2^ucLJTZ
%i;?t+&^YDMPs*,#?rg#T3jK6#UOA^$mQ`QLRdQnG`eZ7sXcgR:2(gZpB6l@KUY"h"q4^!$\aU%i?E`PGD5SH1[P"R,N6,Mm[]tHX
%hlLJV[Ti]B4kCps?sH/*4,qV_Fp6LR=t3*0m?>Bbi8RWtpO,qE4c7D@-F@sh>PU)cilrbB\anFTT@bM-VR-+EUhqllcYRRQ.,8WJ
%T38an*&tCC`'1LNah^Of9^K(qnD@ngT,D*oIC%>>53KgW2Nl_U;Fn!\fLPU+Z*#,&h5_gpRCQijjRB6F-MEj=opJ;ZXd.OOVD7A1
%L,P1HB9q*20gGPDS]!]J5"fgtDCDd9XA>"lfjnQa=]V/p5]&'WcV/2@/:pSCp6j1!a3A1"b9ckM27:S=YsVum=]6BrI*\&jqlGpg
%dDWan,0`\hF@+^XM1'!J0W(!,lQu7mAbG:ik9^i=bd.(-<[Wp0T%KqgEldP;39>K>T@df-J6b;0MMZbmon'"`m>'Op@\9'_A$bX7
%C1<eN*S_:Jk#c*2Xh9jA4>rSZB,NH+h/^"lcIk\2q9,MX7c[lfT6":7ho^dj4r9-><]R7fY?WFX>BtZC%_]tgr9RFDNSWT,Q4[`B
%^&"etFK;;aWoOT9k/]\]ZQ3:rDLZ)u]Gn8@$iI+'Um3mK>O/FA\PI/?1Pf+&Q/aa8H=g[9XhM]`+D1OMCG/+f0H--hFJ:X\9OaLH
%\FNBQ&o+hujaV#GK\cTV91;"t0H5fEs44p^:\!,Jb3<.+k]84Mg#i:K-&,rZq4APjFNSf4+]Z\CKJ^CBcT\qZK(m][s4K&=GHm/\
%0)sC62G7mOn[V\6g[0m&Q8d:A%HViqZBtGf,ij:1:M=]Ms8(D:do0?<*>Y\ThBmiE5$)q<3F&n(Ok3"UT'gXq<f/`b8PdEO[#PQ7
%J"NDu+kL4QKV!7Hg?DKa9cfMA[e0<R2+PZNVWMP@a_.rh#.]W=9jAjN_,.2uNJ:VBY:0BlIK>,nFf8,.Fq!TC;9[f+mM^,.kc;/O
%YtDiaL,P0%)SgIY,&kc2+W"kd/d'.5CTD%Db!K:(m;$_D1O=4T0=[?.h@Nj@RAS:]V>A;.EGf\uU4ep\2LkCP0!OTfh2?%b[>hQ'
%J3JYg4`e-8b$_GX7W#W#]%>]bbCN(<`_o?G-_%d(nTM3;$ABcBR!l/aUT_8ai&kED*fm]IEg)F?[.TCt>!Kif`"!i)+K5INU<T4[
%*S.`"('Q%Lj\mSo2N'jK$Q;p3p4"&/_mT*-^A;c=r%aNS/V>TZe"`sjs7AFuOri5epJ8ngYe'[LfgJO*HiK&H(X<Jl5Xkqk=+Bo#
%)WTOFDU^H9r],8S9:NKd:Gk6cY5VWegQt[OEd`A1?!<Ui#`*-(ZW*X+2]);#HKBqU$YWc1\FqLVW=X8gr6uYA6.l*XOmVI^7MfcP
%?0<$2JsX:LftOCH[R!lW[H?8+p"=L`M,[HU\k4C:A`%8][0%"d$#&SnIP^U%6YGb1RXHfR=_=+\N#@[s9"^)+[+.Mh%<HU*Yqt1/
%.G;:>c.Ap`RL9edV<nSWVlh3j/J>$.Ii9RqhHI8MjYTHjPAXOeg^hTkh3OcIK>q#Nl?d@>Vn($`I;jNN-C-9E6CKF]Ip!g?iT;mh
%SXrl>3nR00:Xqd+kqcm&S<0oEDG*jU1Bpq/C^`TQ/+$#TPZnsUcb"nC""e&Va,l>K.T:GGb:jZtWen5^.@H#!D\4dUEk5Ji,`4U*
%QXgK\jAHNM8)`F(r)aR&Kj+'0Uf<:r_=fDpA#BkkH9IO)dI'ic6-0q>]:,l[*Bom(jrO;iFI@CqEWE4^2-mX^0.9P,?Ke&/@?h@j
%p^6F1qBf8=J8h$]>tSKXAdO_7DMjbr:m9Wn>>;HP[".%NTN39T$EF)?\nl&W5h5&=!I<OO2%D/M&\%\(3HF-=S[H`J$lpCJW,)/^
%H"r(LF6d63iQ:LS]TI@),OdNuEcY_FguS08U]8lNK%d]W#J@_$Z;,g?i;$=%'$6Sh*VE5^%J,Hj'Z9Z9GH<2C5&4;#>OK:,\bL55
%Qg\Wo1sdLB8qOC31f6bS$5OCE]eBWQZH)eWXM!5k'6_ck+l`lSc+V43nS*1+qPe9Q@Un[sYtdU]=[$NK1gU0)CT.jal^TV<e.r4"
%WEl[)Z;]\O`X,?$`ldc"gijFlk$n/uR,nCYCsq?[@`1E&VT1]n7d0g4;H"X#dh5Jm:2AAP#c/@lf--#0,BU1U4dqk`D7X:"*:C72
%l;e&K!4iR@F6o)6#)qF2b**ka9d)+SMG=S]lQJBu=*$NBDiAtDXKr?c>6L7Ih^ok8?SSmLFj.k5RJ^7A`&82Gh"/,V[+C3##$]-?
%L*kdErjQ17qF3Tq("o4f5&T0=XZ9QBd$j[@]4DI!_Fm-1MULH1qGc>F<l=o]DqE41__!cV8XoO;BkF^$*kG_uQ)AgCW,\@D*Z-k)
%c2+(c2a0EZ4I(89nG*ffLkMf"aUi?S'OjZ.W]&jW\V.E`ge:;elp`RhQhY<F'Z4sZ?;AoC)BZ,)TDDbMZ0Er@Fh1@0p9.1_oMG:/
%]#dUpZ@CK:V.L(aGK/SsU*\sk2WDUCE8R*Oerab_\noW;X5:R#nns]#2922Lh04h6.+0)Q**X%i%Q>C[M6sd(CPFBPCUK;M7o\Tp
%8h#TddPB-=e:mKFS!%HeAm:_6X/%#0ZY<o5ip)!VV(N[ncoU![,eD5jP`]Q<h%j[,ntJG!!#YGZM/Mns4Uu0i%Om6Po+B4M_%J2R
%[egG35,)gcg1h#A4s*YeNY4Ee\ZN9-b6k?eoS,"LFRQYBl`rj_n*-?-Z0#VO)J8U(/h;%tOPJ2oKc"M^(B\R=Z9jaWN^%MdTuZfj
%Y`3!jBVGm9F]kE@:Q>.UDL7XLX]qq`Q8KI"b'@CW[iNnR0l('>\9pWrL/,.ND`b<7\6SaE_t??C?!hhiT)^9p>-4&R";`+?3[*<*
%7rI<cWsr<YBRed1Z@B4KKnoAQO`XFW=r/76C\.D\Um3SqU]tXUgS)Fc[H`I$p9@Lnrlt9U*nh(k.'UFh;nDJFIU!r7b>2ALG\B;e
%]]lh\$P.*l8=%Bl>k-YaM[[^M;P5RZ47m3LQI`S8:_VJk\F!*/T=4TML\?`6O3QWd93ldUY?kYB[YYA&m;G(.^!`E'4EQ'?fif15
%C0E@55]c,e$5Xc;[pkr6ZGM<NG(&Z">d7$_(ES<ID`dUD-=STIiLt[CN)ga6b)Wa;nBbo?1Lr:#.pR=4J(pY:$+]b`LK=4S#']ff
%(EV<!0hXT^lX+mM^K79E"RB<;80QbV\Mr@@?KK$kqc:o\>q93*B\J>QUT]qT6=4tNhhjcNM=JI#APt,hTtTc!Gc7H/r@+]YR.W*p
%<0HTA\,JP6VoPnPo0M+iCL)0uJ(rrYWk*<2iOZ&#b6nhdhG^obHF16Md'N@-Ke$<]3p"rR_S`4Q.+C1e3!<pN$P2WC4-ZT)9)E;o
%KnjI62"qe-g+,B/l,_G8h=bZ6gS&M_E:jSLQd3QUmD;5S<nn`NZ-7oWp8rQZmO;Du^;@?"HN(5,a]L=gb3l]*O1S?Mp%2q1nBh0C
%6Z_Gh$5XbP-!m"OmFJl<d/LI@rS4K:G\)*RU#NV*STn^ciLtU*k?8ZCg<?Ga+O(W6YG;O:m?`Om&4NK)&+)5DM5RJ*iM!s)W8/n-
%j2+0i1c@5\_e`goV$dh$GC2OLPi#Io4LC/5epGqK^@9JXBkiBSrGL*t(EU.^q-EU/6i0%rL<$kA*ZAQX,9BirKaO[h\*5^]'2Bp]
%mdiN.n!NN2/A)d6_e^=PrO#4]H4QCojgD#@/:R>SBGVOue&krE3'T^S_b/BaEil_VBk]d2;deRB`:hNOHm>sbWToJ2-uuYG0DHu&
%`Zi%J4oXk#;+Ms"Z`e[kZ=r^YqWU[-pU'P%jf?]0^4L;=gNn*=Ap:EH[`c;?j6O^6s(`NE?8m>i;W#1-BE%f,r9L_>S]N!.kKgQ.
%gM:tYqJlIV3>f3)Z*VF:>;b>gHRjdO^E+$&/k4+4_8eD)R%K;KfD^1qjEGuUPPui9bNsTs"<JN<gJB5=k!/ju))[f<m^Og*\ST_2
%I&W_5\DdZo"JLHc4O4:,m[+T(mKBDu4ZR/T([#/"364P,`RjYZCd3=(J^O@jbg5=A9'@[OrWL^0_[1Q]jYlcYc9>%4RFjr8c^AmK
%<]K46GW%3>$AF4R<&j0C(M&[J(AE_O=6B8rZLR7af$9>D+",B_GNYkIFfYR42r)B!F=4T-Hf*UM*t4(>c0OZ:rqgj:.%]*R988[Q
%<A[_%Pt7p[pC"*_O>,E%l4KXJG_n^UknOgg(S]Ja,LiH&?15BmNCOb+%*;.H<!T<n,8q6+e:)RZ_Sn$L`Lkn4C`Y-_13%+B'J!E?
%Nujpaj?Hg,kCm+1rB-<9*9Djtc;h(?EjAugA*&RYTaDr_HnO5pp!+(02#^<3]XnaQ[<eCG]Oh[IK6E3-#oZmVh`hu*G5i$GHZF&4
%?C6SWIj-$0G9FsN!nED=4dpci\^jdqn+Xo)IX</@92$lK&)aVsC&&)3RLS5ZLoRY-d+<YuI!qFU_o+44NS)2.iOeRpGWKD"?Lsfb
%K8*/i4[5dT)J7"Xb)7D@U9rZP?A.PZ/[gFAOHju-V;H\BI41?tl:#6]r[#<=&)a^ue](WoGo!+]='q_.jTW@4Q$PC61@R7M8W(GH
%"%cE9[[(`Kn<G5XG@#KY`\0]T88$)^M'A8uL%jr,p#:b]EA#@If2/K:/3uXi$pGo.mFEoZ=/k$DitI?q(aer!KOSTGh`Q43'?4t$
%5Vh)XU#&0D(acJNB"6gmDC(eZ]HT'*"6Oc^?C?V!&dF8r:nrjt#m/UebcFCBp8"er(JQYaPAG&^Fr4s7Lrn[Xr4J,;l1kWc"Wjjq
%dP?8riX2GP@obS&]6f<=>\0%;JOT$3*rR+eA@Q[I#ZS`(ZH0TIA"=pH^YHLn8:M(QSFkFmknVZ0<sc7kN)?TC^ekEN8(1b$!@[$n
%ScL+rLZkqZ':>9ACmr7HTY+qs02*76mXek]*M/4GV1I9@!"T3PZ4fp;+h>\]&$QJJd]/*1Nt]hq-kHbdDXV@kct=eL3l1[_"f1pf
%;"QU[,dcIc\rPgj_<1QUAd$LF:AkCQiXlLl>>[<2dI5R.iL_3om$"FC"EB0/BpC(gn:D,<J&Qqs"#PF=k27@GV5P+J*fU^BenKfa
%8GG'm=1A6F,B[3@]mgiETXG8e_l^2:k6J3onali\LiVUu;i$91o-'L31JN68d9*d<#/X*@V!&YNeiF"'r35-=?]j_^e^!r\/=U6e
%q>EAGiP2S=gI)>1cNQ*.SVkJ?j,4_Y5pCXUhFnuj+7Y'Zo*\.--WeoK?Kfp?NVam>"YuVJo2gcqpJiuIaj\Gc+Ikr_CVgHc;!R7%
%g6V#"*'Ni(MqKg(B'Ubm?9$-sp)&@_IdJM68m8M%AYR^R(d[J"Pip1j_&?LK<K8a#?.QMNC5638"Zg&Wqu!sd7g+pU0`=a1aRAqf
%FbHDW7>fug0(Y&QB($LDUA+g0k?n15JiUAd7UN34#.s9Ho@DE_k7H()-cf=?Q1<f`bc1X8QoSmC$^(V>,uc^V!J#JA+/`n80/g,*
%'Y*_4f"a78%E4C\cK?a=EUEneD"u1TJC0n`5H=qMKu<j%>Q+JANH6rK>W"F<Q?"+2%T/jAnm!<P?^;\'ne*eLE_ti5L#]-/rZgjE
%Eh8"3Lp2.U'S'Dt?%UDHBbom9,F10gY)!\Pj-HYgg)j>Rr4%D+3fJF61e*(PVm4'*]>X0'gBX#]YsV#(c?:+-E4-c2k?;=PN'+B(
%Cq[p'NIj$7F;X^7BoM[G7k$&%l':Wj@Y50J@3&Ler[_`Rn)[nH.q)sA#oGt`mHufb0[,jpL+`m=j^?TgTgN`4;Aa]?hB%.eF+I1#
%g;m5i[oi8[#Em+B8ftV<?j+TO\"/u+3g4q7aHZM;i$Ri;Oe&e6:r9\'F_Dm,]^g_/`[8`<%@Ccs5T?>@FeQ\+c_5%jeX)YhMu`:R
%1@,^pZ1Rtl6o';=-'fARh$LNZS(60Zdp^M,'?9qh>sGiVO"$bk(+Cmm&4@Jr30MsenK](QM#\>W%9;K=.Q?ZDS7\hgI?i\'?]Y[)
%-7c#jq')Q!d"AV^NnIgF=&ul?-F=R\R8eo$q)-/C4H2_]*80dE>"`MEF1<_E_]gt4aIIXmSl.o\d*gM>-1,imqh]5!%-moX>.Iq#
%2^)*I($.U4^5O0Ab+,,ciX&F]!gl:T/`2V!a_0(car`cO9.JZhiO/kco$ct-e/UZRLG*8JYK]#-.(X-J+n]`1(41p!-NTRe1t'*N
%a34eC.d;[<q^Y*XG?WhqhEj$S3'jkbm(:[LE_(u_/>G).c[[WEMg^"iA`_`Fc)bA/9["p8<5EgmGhtm5k19c=<DP4_FKjC_Ma>F:
%<KTSk/qYFlF=Lr>,LHZeg;2aQDPM[Kj:FVB@<1B5QK`BmrMrbO+F-nr\MVdMkUG'8@JFX54G[AcKh1PQd7!CsK$RiKNJ)a4b?t3/
%FVqbB[F!<DV'igINk0QuY<"Rq%Sqq*+.)._2k@H>U%fLqH$(ICnZLj=d(lC)r/(!(oRcl+p)^aXD/^,:loTLnlh5''%_S+iUaL-H
%`?1Oj)i9D:;%S2rf:UOsY17TaLq=V""kt$56>?q;f05KUi-4^te^mS$r%8$7=o0Qp4o=(C6+U2c0t_fNK6$N7HaL(0=_[G(C\bSM
%)nW5fgBBK2F$dNQrnPtao)<+M&33jo4M+XSV0W<khNm6U)n+%cT3LgE_4s5lbqIC;EdK0V'f_P@'Dl;sM\2T-!k=(O4K<9d7Q<PI
%dS;QFN!(%3!eYfjk<i:Ja-!,+N'2[Ap+EGJS?Lk7aEQ\if!;ApV7gMSEX-S'Z<n9j>E`?]JU;XHXeNdrog:&ndqsX#_0<!=a^Cm0
%P<nV7>%TOsA)/M%@3Qi%_0oW>D7n54F>(ojgHb^"%bc+.4,E;#61,IpUD%lm!R*TA'^m+f0!L2722aB6re7V:(EEh/=LVCkP#:GP
%_QU[FFaZ&40mR2VKHD\AlQQOCL+8\gnuE.ZWKjYK$EUM@*:`?p#6N`rQ"bMg;>=E'mK/5:4#HSI%)%-'5.dj\mki]'7]A\8L=pKj
%!$!bI]i1q\*H-397h^Imd!IP`5@O8,]\a>3/+Eps^HZT&q8-LRDL=P-e/X&0mFCoF'QiHD4e3`KD=c4[e>;N+Pb[VV#>[[O_*ATW
%5ncG2cYP*;1*5!!SG6X`&SO6o>e[+'a2o[lRb(K*#PD2c".28k-._d0?%`$j?BN03c!Zkn=+'(E(qG#Kc)2)0=1@?r0UEV?/9gG$
%e@^G$i#8&WmG]bQh;'Mi/c_Ad4SG"1_I(aIp5oQD0CZror=i+DO@l.3P',JCGNp0bBXkmQ#*-W\B&g%Ve\W-(+<^9#0Xq4EM'G1"
%:>>_PYfaX$o]!/@%2kWMUcJ"21M$2j"Y^sZroq0Yi!\P;Ka.+=jPCD'7BR9)>_$D*F)SH`NpYtM=jWn79lXHU?'Vo,In+;\]WkB/
%eX=la.ZG?b,P.jU?^<UP'<GQ>E+`lMA3`V[YCRA4&`5QU8b^bP:bmH^njVr,HB_@1.)jEkLtSP-fK]4Gk$um7/koM?:Xs0AC:0Ju
%A\X25F7;e;s.j@OAFCY^n(i,)nJ[P>a2H_;ni<HW@S\cu9tr*[lG-!f16\jJL!.nCq6]S%7ZAM?7.L&N;pL*"+oeF0oCj<Z@YT/M
%g5f)0db5\*G'a(W$*&H!LcUMG\[\;^Yeec:,A\&VWe>4W$ea9=JOV@25aBn^`K`qZA;:R7Z$V8h$UHHSY_!?@XcT*9*cHNbn8HeH
%(7t%:+op8WMk*T?.=U_>"!LpW0Lcs9n_Ta=$M#E&3%@1@>$/'o5-cL&4`LFu[S4Kp`ZN"8Ih\1\'`X<h3A`iEokV<cXL^FF:87j(
%o[aqc8:W8hD7jY<:sdC^J?&%B*CLU?CUEdqDB&&\@&fJ`()p3hFZ)?6AIqj)*HU>?SIunROQPDJqhWPD5FU5AL=Tf4(`>]=)4G)I
%:HR\?i,#SlHR2(JXYQbWn:"HkYeLbSbJ,#9FBV\td8ok>Rj)Nt@R103+acA3K!`0_W3QZNSqtX-3Ge-E:QpF&$YmZ8Wu?RIUK2[/
%2Mu24i?G9s<O-b3/JVH9#@i&>mWscL-\e2K*^5ZHP_l^h4k\30Ytp)!a;:P8[&3/l+d-(W:GkI0?LC@OaU1=1p2U`,-s&(M@7%7o
%#s5c>;CDg<Zd^mDF6c+l+Z*`GL!e&&mR,eIfosu`VJZS1RrQC=,?&2Cb/>qql<P!*b5Blnq)g6%PSnq/,,Ut>8:6Hm>?&/[%thVC
%8r5DW\KNX30;GuiFYAiT.#,G^+r1a(UMMpe'SA8mbadI4DXi89\=-LOd4F>&6/mIDUC,,`qL01LRI_tceT4+r]4onT6B[DC5@cqr
%;h9aP`ZKUcqUkS,f\k`&#!:sM,ZZ-)/3TULYa3$;ChNTdaLqfhX,>IgOuF<>!J8DX%s%c-%'#-5':B1".1sL_#Vj_86euG)(HVP\
%FeQmFBsEoi.4_]VLN\=-j&ul0N.oB>X0a74p^GidcfG\%793++RlgT6b@B^:EL>V&lY@Hp%rG\KX`oC]\rTt('j;T%0BT9K,I;^_
%2H5'JEl=Q04CrOXEFa+b'd=N@!:5pe*Y1V#"X^sV9+&&=45SDKbXM*.^N3)'WKS7`mG*gB0;.2M%9D-,kNai^Lj9afbR.Od_*=aN
%<q[*fT..qMD2:2(q\mE42%aV]s&YJ!%r0;?f6K0e,/gYT4+^h!*mCiiO[ET?&5T)O_WM#]WuT^UPT3a^>gQqCpca;mUe7kE=tBMZ
%Q0EdbN\IlXY%SDPp7+tdIa'SpSQG%m0pu3D87q<5"mW]@`]Gg2*?6o.MBM9l_1MMgJW3#4ClW#6Q9RJfVcHtE#uUj[+]M0LY6beF
%l+4.:EU2c`h%sT'JLKQ^s#P&2gqR#*YMpS0U>KO=GIji?G;1\U0bJ\KjIL+,QEZ]Z?/O>lA*uVpqKL(?&Qqd"r<#lDK1=`T@afsb
%WsW:H>2Q\$\9;sYe#uL6I8\&V-1`sI`6QS?02m4"5Scd3N0P]Fa,/jS"@ZI&buZrKC+m!?FbHl^G=\>VSN=nTQ)`/lW&o`^qA+7R
%C33c5pKC#8A-fH>n+d$QGWt[!K`*05&\il@+3^:+.[bkT'P&ui0@rHE/CNj:'e[kHLOJ't)V^82FDTt6QO$5+D?6Q#.eA@tkn+kH
%)mEmmG_L@ZpgWUX"DP$\\dPO$_Ki3hCDEkl9s_^]_=s6f&TS#Z$iA=X*S($f1]b/oNLkm\/$=7M%t/FH]1q;3Z?laT2ade]cLPWU
%%PQa&_\C>9\Ite">5Up!-jaGI>EN.lZ>V$nEpHql%!E*El?k*A]tqC#jT,6ZWi51t2VBA?=U,!fe-[5p7MK%j:M&tmmP-6^T$D,.
%.pnT?BT_KCgflE[SM-hd"qme9Yh"[C%h7T>&K?B,JM5gP%M8"^!Z/pJ"Go7h0/+9WPBBhmK/:J;,??:'n8m"dAWk/jh=u9kdO+%9
%\gmhUX<21+.`(J)$9F/i'eQ_/<fPA#JoT'!#3WoQ6"b;PJ@<q!(Er&t!:=H[[rZmAHHj*Y<*/aBb*u]fd:h^`/WE@h>2oZQeW!Ef
%@,Rr+C*Z8;'0,-/7VOR%1eNEm%=?Wl;A$aZ1!pUmU*>=gbNIJ(dM&uUIO?q?6gRN6P,R)gW]216<MamOqVJDQ&[niqJB3;%eU*J@
%WmH_tp3W&MP'a0V&o**d]M]6mH%R=aq`5A#q#d?L.T0+o'%7+nXWe^5Saeb'La0LfHj-sJO#4)a`ul+.&"eI%Ub;HF*#9]G63s%=
%Yk3lfSW^u8/B70]OKBXre!;m'i!+a_4SoI#g50!mEbgW]+R(2=^:d@j>'"h[[M%h=gcs2u9!L3,\k:fT8I:dJAEE3;L[`qb+=S^8
%CUcuRr1p]QO:F8S+jkSs=*2OI]eNWgdDEq3X;s&\%$4!%k`E?),a[DNPdS(%!RhL29r=>-Vo@q3-)MX"(V.=[m9JY/)KEm^DU2*%
%>,;E`C)OZqJ]O$F[Qu`qM2cA$n#hJB[kC=O)C`-eJZYaYZ#fSml1qM*?@ZR0oOm(YM!Q'@0'Ko-`3J=E(fJZUVh8In_@jXC=aE(W
%>SR?n_I33,$l=7.KW"(C1QYRXkp195+UP.YiY@t/!6/="[&Vf\j<S^qrbr#1l:qu$iX`iW8\c0M&F[n<SL!Y/4TqXI9'_^An7PeS
%E8t"kQ!.;U,_CqN7N0]EP#d/bKdp@O"!Qc9Fb1!0Bpr[0fj77E5)n(/=V7\r8_i$?\kjn:&TFY<Y!ncWO3e([8;^*Gg(<$R"jtJ0
%5fpHRE/g7[7<$E'Sfod#6CT43R4Ap(]9bc]S'S=0cOmX3ab/^oYI%#?dTPq`Z1st\LkKl^8Vd;VYB"PW4(at(V_I9A%0`0>FTt>5
%$#8iW:U%ESIX'"9>JJ;`V$L+&$$Lc`Z6tHc=K3K2d?e?<k+>(-$ljh;_?.%E;cJ,EEtaYTQ$YTKYfafR[=+$0HCFN@3qIgt^opHu
%*delrH`tL?k#PF9;RF_L,#6'.6afXldQk*dH6R"6ZjsnJ\F`<.#eFt#0&oA/JN';/U")HuA;%18K3]N0Q)-*C<V[c8CetJ'4eWDj
%<kjoZ^uu(nJUma2.,r!8oX%hMjW11q)8iW;gfs0PJ5jjc3!iQe$`MP@+nt[iMa=#A!(fh+8?$<5Ft+*YgJ/@RD0Q9!W!'t_U^1^F
%9qo#2q&*CbI6Ap.h>Lro^_bkbO5rZ'Z+fpePr7:=;*/[O>YUK3Znq&$8UW])[h%pW=82"lNtQ!^+s'0opgI#[o19`<:UtUecG*&E
%<15\dZL#6.>icO'l.[9m3/2O+R#R5.D2r:T2tps-1eN\6D8bml0pZ+1?Z6Lel"4--o%['R$e<6tB%>^Z<&^b6njdlX'Ae`6VNP%!
%A[G>6S('jrBK!J.B;17NHfV6Fgi"o(UI^c[l6)mJj8QpZ"<f@fU`s+&b^Ug"j#Od>+L)DF;TKkP5fuNWHTsVoYNS0FcG]e8KsJBr
%`5+7@*!iWdq"P&0]GHs!ffT8Yr!\"-]U%50#8'!W0IQ2Ia==:R,46(4XStDEA:(2*q%q]F2,p_"_9@fHI:!^#=`e^Eit?:39QngM
%gJLJQ4Cp&,U(<sP&#,j?;VTdIM7Vq?FFCgW<>ha>0s!_E-WB1EV^O(el^E[`\p<fUHb:EiD3YH4-I^ti6qfR2^hh=nnj!AF-Ysf'
%PHtCn'OqY;"NXb*Np-0Fm5&K/76Q[sgk<&D(\Jj2@'__e]sXg-1g1&&30sA4lJbJ,.6:!85DdP^+O1-C`<OSY!8V&q6/<W77g[HI
%]&k]%A?2?;Wo2#n6<#(:&)?J4Q<GQZ#5Dm*,(l-=Ri7frb9@&\o8p*9,B\hWfgZ!jj\N.S-X/,IiS.XkWQY&n=8RWbdcEumHtKef
%,0Lph(q34WJ<8t"C(Fi$/U<oqfaC-qJ4iHL67tT,CJI>BSMH8-T?8To9@e9SPeAY_$HA>k\We]1q.k1CF4.0B#stPEXgP3#gr,^N
%!p9LF.$P*Uku;47js3fF1@O`?.k2d@O@p3e"EF^45V:Z6;cRBs6+oDAJlX0t)&oEK-UFK"<_i_9DhBf;$[6e"WaCt<PEd;"%fHV8
%$m[;"W7&XP*NHfIJ8q?Y;C:f9[K:E&Q'mb+gte!6-Cf(N$d@Z>iopc<3LFMtr];95%7O*Eb!7O*AuDUk)Ec"2&<J77LIpM`YKj@I
%a2;5+U?:E%<<@N1_MN=q2mDsMBG?)-d;o$Y?k;5/TVu"d$CK^J9q_,m1H)1<@B"gKpAu/`)1faEj+)$-?uHR-2,@"F\[m=A_8/lB
%VAgQ$CTs@k5D&[$,=FXq=frAgT&WKNf]KBq5aD@MA.&*>.Yk2nG42=B%qu+u2msf9k/rpbVlY@gM<jR77*RUlUlZ2OrICZRfs)T!
%B6rc90LJ7[qYL;*-5^^ceZH';g[/t!V4(m1$j_\'Zi'kD\52P/4Ka,b1coG37QGtBQ$X*<:BKJs+*dYX.S3]dM!M!)g/6l\Va.]p
%3'8=D.PV[H3rN%_mjOpD6`(9)C?3Hu*;sIjTg#p+Rn4YQdf,'`g$Q+bTp'D=S;M40^+g?eP0.4l,dBno=[N&I(J=8;nnu`X[Q2t&
%"U$$Qa@?/H),F%*U)u;)++Vp3V5[DO4NacOlgG)2AF+Q>HO=%+m6L:GM\#?31V*W+6)6LS80J"JO!'>hX%WVTn%<7!"`i$dX*;LI
%F0g`l2j?!(VbiA!$%Y*1W5;5oA2UmVFnqi(21;%#>.u&6Fe<u=Mcd3[ll[aUc]'BL=T0i'6&O6mqC>Y"/O4Ffd\t[<1*:-jBC\>E
%p&\qadR]OmbJe*G09('^f2fN4Y,,"eH)d-!jB*reUSO*YZi[3`K(tAK)2V'FQU[AuK_h%G\&D?:-]Qd(lNIFGZij'XfUlb'O>\>C
%4;Pt3.09gO&\#2*njo[>Y2Z`o65mrcg*i$a!AhF7SPg70khL,&(m_/A#0fULdL\1FA$e/#l%[!T*PLncFC/XNo!,*1?0`LH]>5VM
%5=c`"pYWI&]dGOR_6\BYRLW1?kJJa(_e$>uUkcrDrrjU"a*r\/3-,gDT_8auq'si=a-4X00J&BAOc#QD"F=7=m1l;%',%%LN-XL8
%2Y(PQest![e[DD>.qX4qJiq+3O4InT!okJkb\d?;M'ErL/PZ"_n^)73=s4_69'=8U\eX#s'XWI"Bt&[uT7Y,E["Ka\$H/hr#cC:6
%Jnis%;ip^U4j)<rEgWO)C%U-"Hd]u=.\95p".I?)@.@-96CV!rbb2@NWA>nrU#a'=>$_DYX:iZlA5EhJ:j=E,jM<2kXlko&pb;u(
%d#'T785FUBS,:)TQ^9uZl*TbNB9;@gOOhUKNR?RT%._IuPek'F'Su&W%a1VTN@X1EFb:)0k"akP`$;^[X(Nto:`p(4@l56FR2tf%
%;EXOo_Y.=VDha4pjj!@,jPX/0BMs:<in?:8,Dcf0k$&+Eh3*n4V((,'fLSKR)Eu<*3/NqJ,D4b=^Rg7l%N25X`&_aqOARg.,9sW9
%q95U/9[8W.Pc;O^CBZVXGo[b'(n$Q.!P@pe\lpl3p2\r80I%ri0!!,D8DBf8qu,q=`9#up>1MdulQp#Oe`RXXfn?8Mh_I(jJT7C3
%_5V,lXZjcklq%rVhllDHNbouaYa3uiM?>4T^i?->V+M!SUA/h&.[@P/LLAoN(Wg?aI;Ap*%dhTIi@eM4`72BOaG,iFN+jjmncEKQ
%a)#rIQ./G`PIr@PBre%13TjD55o<B'L\&a.O*1#o>T=,:<gr9p!+Do)X+g>!SU7<tXXtL(#Lt'1`%.X5Z\Z[`(T%/hh/2EEjs5.0
%gbV7,]7[p$Q/ZJ]Dj]!O]*d^W(G4J!qIA)6U^5cg8nRc3Q:A/+rTCIW1ri=!JY__Fr\m`ZS9t\s";/.C?fp%*'n$H$;&.IaU:h6R
%6u_p11eHM25^;"/^',=)Lj3gho.@Ik/4a+?21,eCh,YQE,W-"m#&@\G=[[GhaK0:A<0M\;o'HM>C&s<D3t3A'2733%:X(F7PE>Q(
%Z.nQk*(,^EU(@r)[C8kg*uq?Ll<p(-3oW['gqp'tocQ/k)md1Z!@o6;Y4LjJ3dpT1A7&ad.1,6'R!iOT'O!uM^"&5';;k="<oSnd
%B9m6"`P?e'OK!f&G0C,EYD7pcHH2+ZJp3$6#Y_!a:)'BNLqZ(Sl%JfO85JhWE4Qe&/!Nj\dkb,SXQT*.FC+c-[mO\Ko*%iSFnB\R
%hHcV0Up01HcZb6t77JP`^dO<3c0&+SUXqW',9u+JQ?Sj8:'O:E7mJld)t7e3A.U(`*1?-L^E(.]J.RC0!uZYYKQkg,jQ;@JPM97"
%SH!Y07n'$m/aEsq2Ye!B-:5D!EfHt:^?S(//F4Yph[1CpHO!>L<3;_O$f]D[Cjg@M3!m[*oSL*ujClLCR?Ik!]Ko^VMse#nd318+
%3e(M.N9!7cFcT+8O@C:Xa+E`/V,fbqFT9PQd2rar'1eR-If@-fTGots2l+IKXr5"A/<,It>HcIh05?*pJoJ/KI/l<B"H3[?9n+`u
%9;@Qr#ac'*I@XCn&SVDH$5$M-&5CK0?(6Fb=McO_DP3Y\YZki&EHgRD]$cD#T'fAn$o?r9;Ii0rRR0Ti31qWD=rJ-FBO%a=,V<gM
%C#kD_M;/q:X%O[uoD**iO@GDGd0_-e7Z'I:P"'C_dZ_IHJoK_P:)_qD<NpQteDo%@j;7uY5_9)H;"[JO'qpm^YfD+ChuZu8l(r(8
%EdMpt=qY`,An7^n-MgYrG)!BPF2^L.OTFg1<\$g=F+KRD#OS<!KVER$OSTu>3"sCJbf\d&953J_o@ZMSNBk$s167/R)em5H80.\c
%B"@ZBl*48-V8,Z(@&p+.W9TZM$+<nGR$7>7a_2`Xdm)$s^8f4Y:lr\0ZWRWM79!us$\6p3P?T=XcX1IU8*4>]g<Jp(#]J\4ea#i>
%+WG-KYA?A9,"Im`[Tmt64KIPJ]%M*-\lgV8%M+C9dc\:)8o:Z"7A(_(>b3"CG0qJNP/E.Cg3m$CqI"NF;3W=tE2S6BG#'"BCZG6H
%?LS*C'RN^NMX7?AJk/tpDug&Q2Lcj>4%.,0?N>jn?`rP55N:a)4ks/@rLn;Pr6!S.\PINC-[-+[idt>]\!ES:Eo1T'K#"s!F4gMW
%P?Xf&Cs'lUi<,DB*4FE,dLOQEn/m9HATGA76pZQ\#b;N@[#a,^LC;WcJER6;?:DA++e1gWI8k`d<0PfAOm]O*cLe*WPt/eli^U,W
%o`K[3r8e3]jU?8_KP'K8ohD8*"Qg4B7"jcfqCiMd0/o"A[lsG_2GHZ4^NSGPU#p"ROHH>]qX)U.YU:Z*ciU>5Zf/A69V.C&SYFk[
%fN/bT=:f:,P1rYA;*buKkHMQ16pO4-90n6m%1spU.XkUQlh9Z*:9R8D=[A9lGG/%%kY$]SQ_S'CpD#)[.NDJs9<&8S0o0r;'tJst
%g^)tmQ=RnN;BTh2N',OFA'9UJ0.Dn)[8&qh-nCICmZ7Sp,7i(]<!?1e4>s.H":5"<s)[VrNJ2GC\\%53d`U!o)$a/UK]S3mdVR!@
%^#Efm13'EQJs`-D%::)a.?0u)%Vi)G'SO:6JHYk]d`!@KV]`+XY"!-R7g`7O9RiX0A&G&qRP\UVqDD4^mk+`mXU[jINh3MLL;s7T
%^sSs8V%]Q>&tW`>gLm.eK&B6mAESMl"+_72ZbSPdN+i,(o(CD^W)>4E@KLPH.G15g5s*(AZ/`?$l08Y^,lLmA75h*Y?n8G66hs/7
%XM3WdF,a]*Kb1(e]I[C\'UT*"^;F6<?<"9+50s9=\sa//kbCFFKo#R,iNOW&B8r9K^*#R>]jQBDK^_Rok\H*/`e0)(bqi6:LuI8J
%\YUg@S+VT]c5,trYg#WO(Qf!2H,W#g#)ctOAj(BZ:YJ5_1QIW4%.$@a,Z$Jo:ra6,^m*IR$**,[["J?ni1oq0'J?3IQ8J>i@b.M`
%)62I-Wk1##20fpXgS@u!1=A!R[MZDDjl3`CdT>^U>.?#?mr/mc=*t@hP%>Wsh@K/^%A/FlfaY,9Z?LGGZ"DI!W(X!>>nYc"_?m)J
%&qPi<C2_otn6ZIkf0SsD-j2M2&hU'"\npQ%NO>pAIE=@RKB=c!Nu+%np6u_0D'1'0VRY4qgkd&2%CV^PA>q9^kY."S+p[L'n.G:P
%fEiW-L&.40&2PdT_Y4TRMGjcg<Ou`Ifceq38+$:D0jeOnYAh&j:nd5r;D2P#8Y:r^b8n=TDGM/[]K8Or5<o,JhYJj7qNR()GTJog
%Z`s)'Ks-4pNDaQt/u1"i*)7>ELJ4F`$?H%Yht=+;WYU)IETmsfEs1H1JgUgns'25Vh'`4-WC3_-3oNd\dOB,$C,,(5(ZO@o0_U5a
%Ij'Od/(@_12==0AZ/<=\s(>Z0F;L_OGj`h&@tj5H]q.u`qqXiImg[Hk*b7H/gb[H3Hq]PA%jUP[,^%-`4e4&HMT>+(Fa3ea;g^gA
%//5s2p>mF;hPSKN]`m3e<\Dpo?SL#/l-(&9'tFaTr/mt-f=%lCg>rk-iE5RGg7R7"^n&4t3,rsT/kC?[KfS,GkHE-<2"9RWh#+;I
%qdNp'k2,d1\eA%B[9Q'G2`Umh[@c9EE:M(VnHT[lo!*JE*6Q2]Z!rEfjjE+pPPdr:#&[mu57_<<7l_a!F4DeSS8?f;Is+9j6]sh0
%%c=#GVq(jeCG5No2<#-\2rGS`Wu9oQ'7OA!NT,(N-&bJu^u<d_G)Q_5J&MPDW<[p<['2q^ifQ!0V/u+Q?i84.iB-RCI_=f-Pr2<\
%<C[VM$S>@,00k@]eBq4Okt'l&H,3<1,!5HNq8IW0crd]\eQ/8qBG,WNG%#:LG7j]-1^i*t>`n=7%(<(l6n&V['#g:+]^@8/?\V+6
%cBJM"nkoo#g]:h/V*\EV8L\285XUkH537Ufeh6GnWSR"&'.XG=+V[#Mre@5nS$6uV?o"c*L;*O'mt_FVG:VWGi)RM,e+Vp/j[4/6
%UF'KX2JR'SUL%En\k.Y-hW5]fPK0g#Gp2k/o+S,24C7o\2>lqHR]dojhUP%!7dINGqE&H6^le!!:%-.IkK8j.QE:(+pHm<ci+u-P
%YJntklilE!JbGT$nmD\,@""8lOTAkT#M,;7`"17^_ioIa2U,Y_:gUMu(T%U+@5/As+RAN-,RI"p$R.qaMdeb97@<!3_!NK$MXsab
%WZqDgf9D)N3[-/.Kqg*M_8EY;hR\`2lmZJ"r5b$Z+,LGe3WVde_:sddiEK0n.6St_"96ck5+/L)&o`S<BpC(gf]5ENHjn(U5gsph
%%PI\.OB1N&#]'&l+plTI<+"ScW/];DXn;TukTO+.4Y.)P`e'd(^_4T7#>?:u9UM^hemG6WIAX^U;SM'Y$-SLXQG51cL$<DjKe,'K
%#,#AAKq&MpRe@@-JP&PMcU^f9r+Z`'Dc,JS6Z!bC\q0@DU2(lNg<!@UG^8X%i;AuJ?4GW.caL9BF&f*H4"cHNd3M80(r/eK,m[HP
%9ReQ)dku)oh^ha3k"FDFpbhq0aKi[G$I;W3q&fa)-jt7(LOn]A_KZj6cThkrP%QGS2]aVP3<99V#O'f<9Ef[&LYV&='0Ed4LgiL9
%!n)FR]K#+]S:N6HJenq9oLUAOFT3ld,k;t_k-li"i]YUt%9;sqIKfY[V\dk5GSRo%UDiSoBIqD&r8Ee%$ilP):(NiD4Q-*P!&4bA
%]bi)!e8fSVkA%rKiZ0c8[NU%p#T6NcG-)2;=kiP07F/<AVKY;PUj%AkZI5NY@XQSf06!p4SiPS\e3VT/r[uhmo+_nbMeE6/isJP9
%C:Ac.@WHXu[cajdA.2]*<g+-%T+'OL+>CgW#R%+bFq9#iEZ7N=g4mAKF7j?(RfPZYnTK^o5>9c:0Ad)L:G38^G9Ba=C_EPS*XH71
%,H)8t\ZcOkFR(Y$G1i\>I7,<ZX2$_JLPY,W;9KQR1X'#]l"ZSo:5)-&4+UBp<Uq'iU9PikXYG=PPe/g4<;f)88gk=abGDq5%9'(.
%s'^>HfY@7'+4f$e)O%i2U\[$.pks=qYeD`,md0j[I9hh8pnR\semSMfqDq(a;VD)S^+KZLd/#fT8Eil@P8*)Q#<u(I/'eAmMEuN)
%>Yh1?Ltk>l]_R"4mYC#!BLk1(>KK4f`ss+\W<:EN8Z?AXJ3t6)%4R;R6udM0MaUPkXQ).TfF&H6gs;b6>;QUu6^Vf5/pDrc&Dk68
%PcRqZ+4tolanXmqJ9(;q^Zb2bLjIY/WZuB[\:b/1U6rLN@k/r(G3^m%Vo2D(Ze!;MWP]"PLsMm=['8)H5>?N#6q&_YD[B\Fi'D[i
%N-hr+#X.$5O08BO`=s+[]G:=9K5m[b].\L0@_Lhe#5ne!WJm2*dU"Pg5[P/n["2bG+.)],!H/&s['s.'S<jK:q-YsqMncr.r9XEa
%dAiPH=YD6&L.WP4rMWN9)_-kS"gI%P%=7m5q2=bYi8aeYcX/Z5$[ROgMX*_UNa649+&R70s2LXN9D+Njh,D88K+%Hp"WoMJi4jVD
%7eu`s^7Cq3IX.>ph#!/!A\;[4V\dA-o:X^6HCX)l8T4t+$l@/61>WU*A#&Qf>'\Wer,mu'T#jC2<19^XEXXFcbbT>LK.Y3-pj[':
%QPR2n.gjT+r?(Gqi(V9n]ACGU@k];V_1<FYC2bC&'$3\]:B#[mWor&*f>cF/4)6Fu3N#pF7t"Cn9ED`4QS3WVaEp@%CB&\\cc\99
%^45r3"n+*OIf&C.L]8q0VRb8B?c(pN:X.)W:Tr4.Ma(I\qo>nP?Tt*j2\G(u:u6qKp9mJ/DeeM'hW1ruJhnj2U<H@!m-ZQNgXCdn
%pZEU`00*NVlKE/$B7G]AgRfO7]0H0pJ&N=5C/Y&.G4p+s]D_!12uAg8=FZ]c:-k,ZWL`u.`bp9PnEp4t6i@0iNO'cLr@REtml5Ld
%3t8p[?[f(@?VJO@qjZ<mhdPmFV[),I00RlnbbdAU?^>m/G8Rsjl+sk+Mi[@OFj:4HRO%"dm;Hq1#;$i1mI/p3,Wrr9Lc*l*Ugp]!
%j_sBRFP5B=rZ8p/'#_:Z[(W;MG=+Q_>LK)!*l9Om]SR@D?('HAFuT)h]rg,Tmih$A,oU=F.6"`7rD!7SDejRnHO.6.RnP4QihO8@
%W;J7Gi:!>pkKc;E?+a]HSTENB(:CoV+8p'D:4Ed_(E][I=`4aRe*_s<1q08B]fh$QHq%>D<B&3UW812HBQ%[1qKiLWpaSarbM(hh
%[D/[_rGCpsIh1M(?f849.Y$&'0:$dZ^Dj`F"t$rGh0"A@q&6oV#,,t<J6VboS'N&LjgLL_#DbHKH@=DZo;1'Jb55LkI=&QoS_(?(
%qqcV3(#Sc2lg=/TG@#2JpV$0ERK#U!UW?>)rdl5f#%Y3Vb`_G6*lV]@gUq7.-Llq5i>n/DrmIrU,mP[GCZ_,?kre2\RXqN.0;`n2
%HeZ6bYEf't,JIf%Iq(oe@rRd<ee22B-&c*gA2ANpIW.JD>`H.pF@e?`GCA%H?,51P:tEqU_8I&(R4]@a;W^#sXTelIG]:X3MO75Y
%;q3+a*lgU:ICj@U&^c>0+Z`O>p*PC99;1Q(_p[+B4@UY]*>'Nd.[l)n-6C#pK=iXH@Pu-a=QT@3\99AH!Rnt8LcDir^:ah,9*Cm'
%CL"/n6IB<.O\[>LrQ8/M1#?O'P/e*I^G#sPOG\eq[NBLsMqM3*kf2R8jNoLf,s/bq:NI"[bU:HF>!=2FF7"-k2$&UAZ'aThIqS:]
%A43;M1%UR_jF!1TYbD,F`HNND'DbVX?nu<o&`8^57/C?+_cR1ms7Y$3,/TgVCJ[L*Mp[?93=ia)p;aiu=NcB<;h3]<-$n`J`aKru
%7(r6)2W$hr6Wf]m6gc.-<B6n/jfeWJ_Qj^!136@i.hV`sFiuW+9%T4tYp)<3AM8JsJp"E@*KO4F[H@o"h<q(ecGh6h^Oo')4QLQ<
%"ioB#A`JHs``q:ZAr\-o.IcaB^5D5P#KNFSqd=>ImP/?R?)\gcn;_WY<!2@6j-0kmke7YYR"\VcGsBQH1A-#\-rQC>2eRT9ieQ%>
%0W&\l79O(o]82h`JenKdm/^ijI:3u?^g%nb77bhLi#Cq=XmbjQdnOC+NqI80IO7pGK9?0B.8#S\B2!?IDb?mO?9U0#7`5p'Sle*g
%(%C,4!b!]t,Jdi;X6ihU;0W\1W/_emis7Jk9+ie>X\.23^Uam*U]*cp+O38t9`qY0Oh7"#dn';iJ!ksLj51I75!5UWY^92?m=[n;
%@E6*u0-DkQ:)BIXW&8>?qX1k$H:Vb+/C1TX8;.\<f`=7>H#FntSt./e2D*\HLKpc,Q6t`Ri`athg3pCsmJ"'/>d1A=T5n$>rg%_`
%[A%G7b^M)G;PZ08ngrA$Rmr97Q:!q5=W-mhma1.MRWn2kXB]^>'*/SQM7E(En!dEK3[8L9nD_8=.sdP"BiB_lKEicE(XY+fgmY`R
%*GK"d)1gPYBNGm@c!=!hNt2tMPL+46dBgkT.sn`^Z(2g?n44lO0BS;Gd5%\XBRpnp6a>]MVcXR1%9q%],GnS+p,K+gNKIn^XK<UY
%hnb?a+TZ)8-FW[YZ'<*9@GUIM0&kq+UMjVdII\u;$I_n)$.r"bLeMlPmu34t&drBJM:)(T2DN`k:)oZ5b;A@<<3s7#Jf$kYa-LHg
%.u7<pD#G&(H:S]ZF[I-Mn:G>`i=\_9jr^([I.U>_%\^J="?g>i_+E:MHF8,nYkY6]:/ApOjthH,]R3HDc0mbH54B-V)p_>nNiE^Z
%?-qZ8K@AqSk]N-u]hl,!h`bp%i+O-6nJ'G(UK8n9@U?PCFlY!;)KJ^H'WW#h7T)@fi$#G^Of+QU0d]a[`=,+Q7Ia@CKt]%,@X=d]
%V^"sE#)p9pE/M%LH18l8.@+S2JM.\8=P9'/e3Lt^V=`d%5fKkGk,a+@I0KXJ2,J9O9,a]Xml@,:.C?W0]nLBnK'9"29iFUT\Ii_J
%68u#a[.$L_&D*egBF6DrI^HaV;\5^_]jfA'6o=50Bo3<Ql"/6V`8l4a2blZW$AlVKBJTS>@cJ0@#!iTo+9M"p`[Qe$^VVF;6Y1(*
%$`DLiM,P,S!5X@fr-7V^[W)Wuc=:#9'^^PSI1)s5`YVBiM'Rl]WYSMd-_NdajV1HT`M+4)[YY>Gok0r7%NQn[/3bmmDW?st.+pS6
%L+(>]SAGrjT5b43M_6HK@UcK":7S&GU'jJ]@]%%d<]EN&6mi>>."ZX?&Z8_laJUe5MZ:t)U;A>ph1Enn;\To%HfQWA/?1-ISt['[
%Mi+E7nS?^>V]#n98=DMlIUVVS\VX5r6^e[W3!Bo)k;?$)Qcso3CZ,sH'=spX.4^m0(JaMC5\a=ZKjGSNM5H</\o8"I'$\1)S:\7_
%\SqnXA'K&QPiYb%3K6u8`D8+TVP)ICUS]KIo-g>A$I+Bn-lSu8Ti*kd'QsaddKue\D:j5f.56QN+_d<qLi"AOQpTCDRC67USIc[@
%=UJQrA^JY1.>T:rO&+m\(]//\.>YAmd4C">$C4lJe6*-jkkr>\bu3>#lN"cok9pU88P-6&`01"SIBf$[rGNSg9*'T\O5oCOKg(:C
%/K1I_\5CCSrqPOLDM]%JLs?0&_j>0a%$3MsIbs(RK8?6fSrNuDO'`W_O8n_A$?Yq.l.+[9+Zj)rqB('urp011QbS#prn"p\Vk.fk
%56(7qH%,MUrMSgS00eI2/oNteHj#>?>X&/Vrb!^.BKbk]oq26Sp!]uA"&lL*c2~>
%AI9_PrivateDataEnd
%%EndDocument

ENDEPSFILE
0 0 10795 13970 C
0 0 0 SH
-1 SOB
/f12 /Times-Roman 166.945 0 0 -166.945 0 0 MF
75 45 SS1
sv 1818 Y -35(FIG.)D 365(2)D 146(\(color)D 463(online\).)D r
/f13 /BG-Maths-Italic 166.945 0 0 -166.945 0 0 MF
sv 683(CPT)D r
/f12 f
sv 330(-odd)D 370(parameters)D r
/f13 f
sv 798(\021)D r
/f14 /BG-Maths-Italic 116.86 0 0 -116.86 0 0 MF
sv 33 Y 115(l)D r
/f12 f
sv -33 Y 46(,)D r
/f13 f
sv 105(\021)D r
/f14 f
sv 33 Y 115(b)D r
/f12 f
sv -33 Y 137(necessary)D 193 Y -3673(to)D 168(generate)D 606(the)D 243(observ)D
443(ed)D 196(B)D 106(A)D 111(U)D 157(versus)D 462(the)D 243(ef)D 127(fecti)D
295(ve)D 195(neutrino)D 595(mass.)D 193 Y -3947(The)D 297(left)D 262(v)D 81(ertical)D
458(line)D 289(indicating)D 708(the)D 239(v)D 80(alue)D 317(of)D r
/f13 f
sv 176(m)D r
/f15 /BG-Maths-Roman 116.86 0 0 -116.86 0 0 MF
sv -58 Y 129(eff)D r
/f14 f
sv 92 Y 0(\027)D r
/f12 f
sv -34 Y 182(suggested)D 696(by)D 204(the)D 194 Y -4118(oscillation)D 764(of)D
205(atmospheric)D 885(neutrinos)D 688(and)D 307(the)D 271(right)D 382(vertical)D
569(line)D 193 Y -4071(sho)D 227(wing)D 399(the)D 269(cosmological)D 958(upper)D
446(limit)D 382(on)D r
/f13 f
sv 232(m)D r
/f15 f
sv -58 Y 129(eff)D r
/f14 f
sv 91 Y 0(\027)D r
/f12 f
sv -33 Y 209([)D r
0.6666 1 1 SH

[/Dest /temp:intralink-c22 /Rect [8863 5048 9030 4881] /Border [0 0 0] /LNK pdfmark
sv 56(22)D r
0 0 0 SH
sv 167(],)D 162(bound)D 481(the)D 193 Y -4117(phenomenologically)D 1421(viable)D
464(domain)D 556(of)D r
/f13 f
sv 192(m)D r
/f15 f
sv -58 Y 129(eff)D r
/f14 f
sv 92 Y 0(\027)D r
/f12 f
sv -34 Y 145(.)D r
0 0 1 SH
/f11 f
sv 4076 Y -2872 ( )D r
[/Dest /temp:intralink-d22 /View [/XYZ 316 357 0] /DEST pdfmark
5594 7691 9916 10754 C
0 0 0 SH
-1 SOB
/f11 f
75 45 SS1
0 -173.6871 17.6388 -17.6388 -2161 -1531.5 [1 0 0 1 0 0] 2161 1531.5 0 5594 7691 BEGINEPSFILE
%%BeginDocument: S:\aps\prd\pool\DX10072\3.eps
%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: 3.eps
%%Creator: Adobe Illustrator(R) 12
%%AI8_CreatorVersion: 12.0.0%AI9_PrintingDataBegin%%For: Your User Name
%%CreationDate: 11/23/2006
%%BoundingBox: 0 0 246 174
%%HiResBoundingBox: 0 0 245.0796 173.6871
%%CropBox: 0 0 245.0796 173.6871
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.19 0
%%+ procset Adobe_CoolType_Core 2.23 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%ADO_BuildNumber: Adobe Illustrator(R) 12.0.0 x198 R agm 4.3861 ct 5.530
%ADO_ContainsXMP: MainFirst
%AI7_Thumbnail: 128 92 8
%%BeginData: 6917 Hex Bytes
%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD09FFA8A87DFFFFA87DA8FD77FF7D7D7D27F8522727F8FF7D7D7D
%A87D7D7DA87D7D7DA87D7D7DA87D7D7DA87D7D7DA8FD077DA87D7D7DA87D
%7D7DA87D7D7DA87D7D7DA87D7D7DA87D7D7DA87D7D7DA87D7D7DA8FD077D
%A87D7D7DA87D7D7DA87D7D7DA87D7D7DA87D7D7DA87D7D7DA87D7D7DA87D
%7D7DA8FD047DFD0BFFA8A87D7DA8A87D7DA87DA8FFA8FFA8FFA8FFA8FFA8
%FFA8A8A8FFA8FFA8FFA8FFA8FFA8A87DFFA8FFA8FFA8FFA8FFA8FFA8A8A8
%FFA8FFA8FFA8FFA8FFA8FFA8A8A8FFA8FFA8FFA8FFA8FFA8FF7DFFA8FFA8
%FFA8FFA8FFA8FFA8A8A8FFA8FFA8FFA8FFA8FFA8FFA8A8A8FFA8FFA8FFAF
%FFA8FFA8FF52FD14FF7DFD5BFFA8527DFFFFFFC3CAC3FD04CAFFFF7DA8FD
%13FF7DFD5CFF7DA8A8FFCAC3C3CAC3C3C3CAFFFF7DFD14FF7DFD58FFA87D
%FFFFFFA852FD0BFF7DA8FD13FF7DFD58FF7D27A8FF52A87DFFAEAE898989
%AE89AEFFFF7DFD14FF7DFD57FFA8FF7D7D52F82727A8FFAEFFAEFFAEFFAE
%FFFF7DA8FD13FF7DFD5BFFA8FFFF7DFD0BFF7DFD14FF7DFD6AFFA8A8FD13
%FF7DFD6AFF7DFD14FF7DFD6AFF7DA8FD13FF7DFD6AFF7DFD10FFA8FFFFFF
%7DFD6AFF7DA8FD0BFFA852A8A87D5252A87DA8FD68FFCA4CFD0CFFA852F8
%52525227FF52A8FD68FF702EA8FD13FF7DFD68FFC3A234FD14FF7DFD68FF
%BD595EA8FD13FF7DFD68FF9B8A58FD14FF7DFD67FFC3A25F7DA8FD13FF7D
%FD67FFC3A2AE7DFD14FF7DFD66FFCA9A8589A2A8FD13FF7DFD66FFC3C484
%AEA2FD14FF7DFD66FFC3A284AEA2A8FD13FF7DFD66FFBCA983FF7DFD14FF
%7DFD65FFC3C38589FFA8A8FD13FF7DFD65FFC3A8AF89FF7DFD0CFFA87DFF
%FF7D7D7DFF7DFD65FFBCA984AEFF7DA8FD0BFF7DF82752522727A87DA8FD
%63FFCAC3A98AAEFF52FD0CFF7D7D52A87D7D7DFF7DFD64FFC3A2A95FFFFF
%7DA8FD13FF7DFD64FFBCFFA989FFFF7DFD14FF7DFD63FFC3C3A98489FFFF
%7DA8FD13FF7DFD63FFC3CAFF83AEFFFF7DFD14FF7DFD63FFBCFFA989AEFF
%FFA8A8FD13FF7DFD62FFC3C9AFA989FFFFFF7DFD14FF7DFD62FFC3A8A984
%89FFFFFF7DA8FD13FF7DFD62FFBCFFA9AEAEFFFFFF7DFD14FF7DFD61FFC3
%C3A9CB83AEFFFFFF7DA8FD13FF7DFD61FFC3FFFFA989FD04FF7DFD14FF7D
%FD60FFCABCFFA9A889FD04FF7DA8FFFFA852A8FD0EFF7DFD60FFBCCFFFCB
%83AEFD04FF7DFFFF7D7DA8FD07FF52527DA8525252FF7DFD5FFFCABCFFFF
%A989AEFD04FF7DA8FFA827A8FD07FF7D5227527D5252A87DA8FD5EFFC3C3
%FFA9AF89FD05FF52FFFFFFA8A8FD07FFA8FFFFFFA8FFFFFF7DFD5FFFBCFF
%A9CB83AEFD05FF7DA8FD13FF7DFD5EFFC3CAFFFFA9AEAEFD05FF7DFD14FF
%7DFD5EFFBCCAFFA9A989FD06FF7DA8FD13FF7DFD5DFFC3C3FFA9FFA8AEFD
%06FF7DFD14FF7DFD5DFFBCFFAFA9A989AEFD06FF7DA8FD13FF7DFD5CFFC3
%CAFFFFA9FF89FD07FF7DFD14FF7DFD5BFFCABCFFFFA9CB8489FD07FFA8A8
%FD13FF7DFD5BFFC3CAFFA9FFCB89AEFD07FF7DFD14FF7DFD5AFFC3BCFFFF
%A9A9AF64FD08FF7DA8FD13FF7DFD5AFFBCFFFFFFA9FF8AAEFD08FF7DFD14
%FF7DFD59FFBCCAFFFFA9FFA989AEFD08FF7DA8FD0CFFA8FFFFA87DA8FF7D
%FD58FFBCCAFFFFA9FFA9AE89FD09FF7DFD0CFF5227F8522727F8FF52A8FD
%56FFC3C3FFFFFFA9A9CB89AEFD08FFA87DA8FD0CFF7D7DA8A87DA8FF7DFD
%56FFC3BCFFFFFFA9FFFFAF89FD0AFF7DFD14FF7DFD55FFC3BCFD04FFA9FF
%A9AD89FD0AFFA8A8FD13FF7DFD54FFC3BCFD04FFA9FFA9FF64FD0BFF7DFD
%14FF7DFD53FFC3BCFD04FFA9FFA9FF89AEFD0BFF7DA8FD13FF7DFD52FFBC
%C3FD09FF89FD0CFF7DFD14FF7DFD50FFCABCC3FD04FFA9A9FFA9CB8989FD
%0CFF7DA8FD13FF7DFD4FFFC3BCFD06FFA9FFFFA9FF89FD0DFF7DFD14FF7D
%FD4DFFC3BCC3FD05FFA9A9FFFFA9FF64AEFD0DFF7DA8FD13FF7DFD4BFFCA
%BCC3FD0AFFA9FFAEAEFD0EFF7DFD14FF7DFD49FFC3C3BCFD07FFA9A9FFFF
%A9FFAE89FD0FFFA8A8FD13FF7DFD46FFCAC3BCC3CAFD07FFA9A9FFFFA9FF
%FF89AEFD0FFF7DFD0CFFA8FFFFFFA8FFA8FF7DFD43FFCAC3BCC3C3FD09FF
%A9A9FFFFA9FFFF8989FD10FF7DA8FD0BFFA8527DA87D5252A87DA8FD3FFF
%CACABCC3C3FD0BFFA9FFFFFFA9FFFFAE89FD11FF7DFD0CFF7D52F8525252
%27FF52A8FD3CFFCAC3BCC3C3FD0BFFA9A9A9FFFFFFA9FFFFAE64FD12FF7D
%A8FD0CFFA8FFFFFFA8FFFF7DFD3AFFCAC3BCC3C3FD0DFFA9FD05FFA9FFFF
%AE89FD13FF7DFD14FF7DFD36FFCAC3C3BCC3C3FD0DFFA9A9A9FD04FFA9A9
%FFFFAE64FD14FF7DA8FD13FF7DFD32FFCACAC3C3BCCACAFD0DFFA9FFA9FD
%07FFA9FFFFAE64FD15FF7DFD14FF7DFD2DFFCACAC3C3BCC3C3CACAFD0BFF
%A9FFA9A9A9FD07FFA9FFFFFFAE8989FD16FFA8A8FD13FFA1FD20CAC3CAC3
%CAC3CAFD04C3BCFD04C3CACAFD0DFFA9FFA9FFA9FD07FFA9FFA9FFFFFFAE
%89AEFD17FF7DFD14FF76FD20C3CAC3CAC3CAC3CAC3FD04CAFD0BFFA9FFFD
%07A9FD07FFA9A9A9FFCBFFFFAE6489AEFD18FF7DA8FD13FF84FD34FFA9FF
%A9FFA9FFA9FD09FFA9FFA9FD05FFAE8989FD1BFF7DFD14FF7DFD17FFA9FF
%FFFFA9FFA9FFA9FFA9FFA9FFFFFFA9FFFFFFA9FFA9FFA9FFA9A9A9FD07FF
%A9FFA9FFA9FFA9A9A9FD05FFAEAE8989AEFD1CFF7DA8FD13FF7DA9FFA9FF
%A9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FF
%A9FFA9FFA9FFA9FFA9FD0DFFA9FFA9FFA9FD09FFAEAE898989FD1FFF7DFD
%14FF7DFFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FF
%FFFFA9FFFFFFA9FFFFFFA9FFFFFFA9FFA9FFA9FFA9A9A9FFA9A9A9FFA9FF
%A9FD07FFAEAEFD0589AEFD21FF7DA8FD13FF7EA9FFA9FFA9FFA9FFA9FFA9
%FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFFFFFA9FFA9FFA9
%FD13FFAEAE898989AE89AEAEFD25FF7DFD11FFA827FF52A8A8FFA8CFA8FF
%A8CFA8FFA8A8A7FFA8CFA8FFA8CFA8FFA8CFA8A8A8CFA8FFA8AEA8FFA8AE
%A8FF83A8A7AEA8AE83AE838983895E835E895E835E89838383AEA8AEA8A8
%A8FFA8FFA8A8A8FFA8A8A8FF7DA8A8FFA8A8A8FFA8A8A8FFA8A87DFFA8A8
%A8FFA8A8A8FFA8FFA87DA8FD10FFA852A883588358835E83588383835883
%588358835E8358835E8358835E83588383837D8383837DFD07837D838383
%7D837D8358837D837D837DA87DA87DA87DA87DA87DA87DA87DA87DA87DA8
%7DA87D7D7DA87DA87DA87DA87DA87DA87D7D7DA87DA87DA87DA87DA87D7D
%7DFD12FFA8FD11FFAEFD0BFFA8FD0BFFCBFD43FFA8FD12FFA87D52FD0AFF
%7D7DA87D7DFD09FFA8527DFD09FFA8527DA8527DFD09FF7D7D52FD09FF7D
%5252FF27A8FD09FF7D527DFD09FF7D7D527D52FD09FFA85252A8FD11FFA8
%7D7DA8FD09FF52A87D7D52FD09FFA85227FD09FFA87D27A8527DFD09FF7D
%5252FD09FFA852527D527DFD09FF525252FD09FF7D7D277D27FD09FFA87D
%27A8FD3BFFA8FD1BFFA8FD6BFFA8A8FFA8FFFFFF7D527DFD76FF52275252
%A8A87D7D527DFD76FFA87D52527D277D7DA87DFD78FF7DA8FFFFA8FFFFA8
%FDB2FFFF
%%EndData
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright (C) 2000-2003 Adobe Systems, Inc.  All Rights Reserved.
systemdict /setpacking known
{
	currentpacking
	true setpacking
} if
userdict /Adobe_AGM_Utils 70 dict dup begin put
/bdf
{
	bind def
} bind def
/nd{
	null def
}bdf
/xdf
{
	exch def
}bdf
/ldf 
{
	load def
}bdf
/ddf
{
	put
}bdf	
/xddf
{
	3 -1 roll put
}bdf	
/xpt
{
	exch put
}bdf
/ndf
{ 
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/ps_level
	/languagelevel where{
		pop systemdict /languagelevel get exec
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr} stopped {
		-1
	}if
def
/set_gvm
{
	currentglobal exch setglobal
}bdf
/reset_gvm
{
	setglobal
}bdf
/makereadonlyarray
{
	/packedarray where{
		pop packedarray
	}{
		array astore readonly
	}ifelse
}bdf
/map_reserved_ink_name
{
	dup type /stringtype eq{
		dup /Red eq{
			pop (_Red_)
		}{
			dup /Green eq{
				pop (_Green_)
			}{
				dup /Blue eq{
					pop (_Blue_)
				}{
					dup () cvn eq{
						pop (Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def} repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash /AGMUTIL_GSTATE_do xdf /AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit /AGMUTIL_GSTATE_gy_xfer xdf cvlit /AGMUTIL_GSTATE_b_xfer xdf
		cvlit /AGMUTIL_GSTATE_g_xfer xdf cvlit /AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx {AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def} repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht /HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone /HalftoneType get AGMUTIL_GSTATE_ht /HalftoneType get ne
			{
			  mark AGMUTIL_GSTATE_ht {sethalftone} stopped cleartomark
			} if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		} ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/thold_halftone
{ 
	level3
		{sethalftone currenthalftone}
		{
			dup /HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}
			{
				begin
				Width Height mul {
					Thresholds read {pop} if
				} repeat
				end
				currenthalftone
			} ifelse
		}ifelse
} def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%) anchorsearch {pop} if
} bdf
/filter_cmyk
{	
	dup type /filetype ne{
		exch () /SubFileDecode filter
	}
	{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length /AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	] cvx
} bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
} bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type /filetype ne{
		0 () /SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict /AGMCORE_gget cvx /begin cvx
			currentdict /srcStr get /readstring cvx /pop cvx
			/dup cvx /length cvx 0 /gt cvx [
				Adobe_AGM_Utils /AGMUTIL_ndx 0 /ddf cvx
				names_index Names length currentdict /srcStr get length 1 sub {
					1 /index cvx /exch cvx /get cvx
					currentdict /dstStr get /AGMUTIL_ndx /load cvx 3 -1 /roll cvx /put cvx
					Adobe_AGM_Utils /AGMUTIL_ndx /AGMUTIL_ndx /load cvx 1 /add cvx /ddf cvx
				} for
				currentdict /dstStr get 0 /AGMUTIL_ndx /load cvx /getinterval cvx
			] cvx /if cvx
			/end cvx
		] cvx
		bind
		/exec cvx
	] cvx
	end
} bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict /DataSource get def
	/origMultipleDataSources imageDict /MultipleDataSources get def
	/origDecode imageDict /Decode get def
	/dstDataStr imageDict /Width get colorSpaceElemCnt mul string def
	imageDict /MultipleDataSources known {MultipleDataSources}{false} ifelse
	{
		/imbufCnt imageDict /DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub {
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict /DataSource get imbufIdx [ AGMUTIL_imagefile imbufs imbufIdx get /readstring cvx /pop cvx ] cvx put
		} for
		DeviceN_PS2 {
			imageDict begin
		 	/DataSource [ DataSource /devn_sep_datasource cvx ] cvx def
			/MultipleDataSources false def
			/Decode [0 1] def
			end
		} if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or {
			/srcDataStrs [ imageDict begin
				currentdict /MultipleDataSources known {MultipleDataSources {DataSource length}{1}ifelse}{1} ifelse
				{
					Width Decode length 2 div mul cvi string
				} repeat
				end ] def		
			imageDict begin
		 	/DataSource [AGMUTIL_imagefile Decode BitsPerComponent false 1 /filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource /exec cvx] cvx def
			/Decode [0 1] def
			end
		}{
			imageDict /DataSource [1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx /pop cvx names_index /get cvx /put cvx] cvx put
			imageDict /Decode [0 1] put
		} ifelse
	} ifelse
	imageDict exch
	load exec
	imageDict /DataSource origDataSource put
	imageDict /MultipleDataSources origMultipleDataSources put
	imageDict /Decode origDecode put	
	end
} bdf
/write_image_file
{
	begin
	{ (AGMUTIL_imagefile) (w+) file } stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources {DataSource 0 get}{DataSource}ifelse type /filetype eq {
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{ 
			pop
			MultipleDataSources {
			 	0 1 DataSource length 1 sub {
					DataSource type dup
					/arraytype eq {
						pop DataSource exch get exec
					}{
						/filetype eq {
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						} ifelse
					} ifelse
					AGMUTIL_imagefile exch writestring
				} for
			}{
				DataSource type dup
				/arraytype eq {
					pop DataSource exec
				}{
					/filetype eq {
						DataSource imbuf readstring pop
					}{
						DataSource
					} ifelse
				} ifelse
				AGMUTIL_imagefile exch writestring
			} ifelse
		}for
		end
		true
	}ifelse
	end
} bdf
/close_image_file
{
	AGMUTIL_imagefile closefile (AGMUTIL_imagefile) deletefile
}def
statusdict /product known userdict /AGMP_current_show known not and{
	/pstr statusdict /product get def
	pstr (HP LaserJet 2200) eq 	
	pstr (HP LaserJet 4000 Series) eq or
	pstr (HP LaserJet 4050 Series ) eq or
	pstr (HP LaserJet 8000 Series) eq or
	pstr (HP LaserJet 8100 Series) eq or
	pstr (HP LaserJet 8150 Series) eq or
	pstr (HP LaserJet 5000 Series) eq or
	pstr (HP LaserJet 5100 Series) eq or
	pstr (HP Color LaserJet 4500) eq or
	pstr (HP Color LaserJet 4600) eq or
	pstr (HP LaserJet 5Si) eq or
	pstr (HP LaserJet 1200 Series) eq or
	pstr (HP LaserJet 1300 Series) eq or
	pstr (HP LaserJet 4100 Series) eq or 
	{
 		userdict /AGMP_current_show /show load put
		userdict /show {
		  currentcolorspace 0 get
		  /Pattern eq
		  {false charpath f}
		  {AGMP_current_show} ifelse
		} put
	}if
	currentdict /pstr undef
} if
/consumeimagedata
{
	begin
	currentdict /MultipleDataSources known not
		{/MultipleDataSources false def} if
	MultipleDataSources
		{
		DataSource 0 get type
		dup /filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup /arraytype eq exch /packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch get exec length exch 0 ne {pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup /filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height { pop DataSource flushbuffer readstring pop pop} for
			end
			}if
		dup /arraytype eq exch /packedarraytype eq or /DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	  2{/exec load}repeat
	  3 1 roll
	  [ 5 1 roll ] bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs /TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{ 
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs /TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type /dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		} if
	dup type /arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		} if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch {cvx} if
}bdf
/clonedict
{
	dup length dict
	begin
		{
		dup type /dicttype eq
			{
				clonedict
			} if
		dup type /arraytype eq
			{
				clonearray
			} if
		def
		}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get /DeviceN eq level3 not and
} bdf
/Indexed_DeviceN
{ 
	/indexed_colorspace_dict AGMCORE_gget dup null ne {
		dup /CSDBase known {
			/CSDBase get /CSD get_res /Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	} ifelse
} bdf
/DeviceN_NoneName
{	
	/Names where {
		pop
		false Names
		{
			(None) eq or
		} forall
	}{
		false
	}ifelse
} bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup /arraytype eq exch /packedarraytype eq or
		{
			dup 0 get /DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}
			{
				true
			}ifelse
		}
		{
			true
		} ifelse
	}
	{
		true
	} ifelse
} bdf
/base_colorspace_type
{
	dup type /arraytype eq {0 get} if
} bdf
/currentdistillerparams where { pop currentdistillerparams /CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5 {cleartomark} bind def
}{
	/pdfmark_5 {pdfmark} bind def
}ifelse
/ReadBypdfmark_5
{
	2 dict begin
	/makerString exch def string /tmpString exch def
	{
		currentfile tmpString readline pop
		makerString anchorsearch
		{
		pop pop cleartomark exit
		}{
			3 copy /PUT pdfmark_5 pop 2 copy (\n) /PUT pdfmark_5
		} ifelse
	}loop
	end
} bdf
/doc_setup{
	Adobe_AGM_Utils begin
}bdf
/doc_trailer{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict /setpacking known
{
	setpacking
} if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright (C) 1997-2005 Adobe Systems, Inc.  All Rights Reserved.
%% Note: This procset assumes Adobe_AGM_Utils is opened on the stack below it, for
%% definitions of some fundamental procedures.
systemdict /setpacking known
{
	currentpacking
	true setpacking
} if
userdict /Adobe_AGM_Core 201 dict dup begin put
/Adobe_AGM_Core_Id /Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen [currentscreen] cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_in_pattern false def
/AGMCORE_currentpagedevice nd
/knockout_unitsq nd
currentglobal true setglobal
[/CSA /Gradient /Procedure]
{
	/Generic /Category findresource dup length dict copy /Category defineresource pop
} forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer {readline} stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type /dicttype eq{
		dup /HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup /HalftoneType get 2 eq{
				/GraySpotFunction get
			}{ 
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
} def
/clp_npth
{
	clip newpath
} def
/eoclp_npth
{
	eoclip newpath
} def
/npth_clp
{
	newpath clip
} def
/graphic_setup
{
	/AGMCORE_graphicsave save def
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[] 0 setdash
	10 setmiterlimit
	newpath
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias get exec
	/Adobe_AGM_Image where {
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			get exec
		}{
			pop pop
		}ifelse
	} if
	100 dict begin
	/dictstackcount countdictstack def
	/showpage {} def
	mark
} def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub {end}for
	end
	AGMCORE_graphicsave restore
} def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox newpath pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				} if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show ( ) show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}
			{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			} ifelse
		} forall
} bdf
/doc_setup{
	Adobe_AGM_Core begin
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict /AGM_handleerror known not{
		errordict /AGM_handleerror errordict /handleerror get put
		errordict /handleerror {
			Adobe_AGM_Core begin
			$error /newerror get AGMCORE_cur_err null ne and{
				$error /newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error /newerror true put
			end
			errordict /AGM_handleerror get exec
			} bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err /AGMCORE_bad_environ def} if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product (Adobe PostScript Parser) ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 10 def
		/AGMCORE_&gsave /gsave ldf
		/AGMCORE_&grestore /grestore ldf
		/AGMCORE_&grestoreall /grestoreall ldf
		/AGMCORE_&save /save ldf
		/AGMCORE_&setoverprint /setoverprint ldf
		/AGMCORE_gdictcopy {
			begin
			{ def } forall
			end
		}def
		/AGMCORE_gput {
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget {
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave {
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge {limitcheck} if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore {
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt {1 add} if
			dup AGMCORE_gstack exch get dup /AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall {
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save {
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge {limitcheck} if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup /AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub {
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		} for
	}if
	level3 /AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern /makepattern load def
	}if
	/currentcmykcolor [0 0 0 0] AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace [/DeviceGray] AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent () AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	<<
	/MaxPatternItem currentsystemparams /MaxPatternCache get
	>>
	setuserparams
	end
}def
/page_setup
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor /setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore /currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3 {
			3 index add neg dup 0 lt {
				pop 0
			} if
			3 1 roll
		} repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{
		pop
	}ndf
	/currentoverprint
	{
		false
	}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{ 
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.) ==
			Adobe_AGM_Core /AGMCORE_have_reported_unsupported_color_space true ddf
		} if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where {pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias {
				/Name get exch pop
			} if
			dup dup (None) eq exch (All) eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{ 
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_in_pattern known {//Adobe_AGM_Core/AGMCORE_in_pattern get}{false} ifelse
						not AGMCORE_currentpagedevice/OverrideSeparations known and
						{
							AGMCORE_currentpagedevice/OverrideSeparations get
							{
								/HqnSpots /ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name /HqnSpots /ProcSet findresource /TestSpot get exec not
						}{
							gsave
							[/Separation AGMCORE_name /DeviceGray {}]AGMCORE_&setcolorspace
							false
							AGMCORE_currentpagedevice/SeparationColorNames 2 copy known
							{
								get
								{ AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where {pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{ 
				dup true exch
					{
					dup (Cyan) eq exch
					dup (Magenta) eq 3 -1 roll or exch
					dup (Yellow) eq 3 -1 roll or exch
					dup (Black) eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup (Cyan) eq exch
						dup (Magenta) eq 3 -1 roll or exch
						dup (Yellow) eq 3 -1 roll or exch
						(Black) eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					dup (Cyan) eq exch
					dup (Magenta) eq 3 -1 roll or exch
					dup (Yellow) eq 3 -1 roll or exch
					dup (Black) eq 3 -1 roll or
					{pop}
					{convert_spot_to_process or}ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space  
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup (Cyan) eq exch dup (Magenta) eq exch dup (Yellow) eq exch (Black) eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{ 
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			  	AGMCORE_magenta_plate{
			  		4 3 roll pop pop pop
			  	}{
			  		AGMCORE_yellow_plate{
			  			4 2 roll pop pop pop
			  		}{
			  			4 1 roll pop pop pop
			  		}ifelse
			  	}ifelse
			}ifelse
			settransfer  
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			  	AGMCORE_magenta_plate{
			  		{4 3 roll pop pop pop}
			  	}{
			  		AGMCORE_yellow_plate{
			  			{4 2 roll pop pop pop}
			  		}{
			  			{4 1 roll pop pop pop}
			  		}ifelse
			  	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup /Cyan eq 1 index (Cyan) eq or
					{pop (_cyan_)}if
				dup /Magenta eq 1 index (Magenta) eq or
					{pop (_magenta_)}if
				dup /Yellow eq 1 index (Yellow) eq or
					{pop (_yellow_)}if
				dup /Black eq 1 index (Black) eq or
					{pop (_black_)}if
				}def
			dup type /arraytype eq
				{[exch {filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3 {
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup (Cyan) eq exch /Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup (Magenta) eq exch /Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup (Yellow) eq exch /Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup (Black) eq exch /Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type /stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string /string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in /readstring cvx
						[component /get cvx 255 /exch cvx /sub cvx string_out /exch cvx 0 /exch cvx /put cvx string_out]cvx
						[/pop cvx ()]cvx /ifelse cvx
					]cvx /ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type /dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict /Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode [1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0 [C0 channel get 1 exch sub] def
							/C1 [C1 channel get 1 exch sub] def
							}{
							/C0 [1] def
							/C1 [1] def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions [Functions {channel paint? AGMCORE_separateShadingFunction} forall] def			
						}if
					currentdict /Range known
						{/Range [0 1] def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict /Function known
					{
					currentdict /Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction /Function xdf
					/ColorSpace [/DeviceGray] def
					}{
					ColorSpace dup type /arraytype eq {0 get}if /DeviceCMYK eq
						{
						/ColorSpace [/DeviceN [/_cyan_ /_magenta_ /_yellow_ /_black_] /DeviceCMYK {}] def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get /Separation eq
						{
							{
								[1 /exch cvx /sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub /index cvx 1 /exch cvx /sub cvx ColorSpace 1 get length 1 add 1 /roll cvx ColorSpace 1 get length{/pop cvx} repeat]cvx
							}{
								pop [ColorSpace 1 get length {/pop cvx} repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2 /DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup /ColorSpace get
				dup type /arraytype ne
					{[exch]}if
				dup 0 get /DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get /Separation eq
					{
					exch begin
					ColorSpace 1 get dup /None ne exch /All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type /arraytype eq {0 get}if /DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get /exec cvx
										4 AGMCORE_plate_ndx sub -1 /roll cvx
										4 1 /roll cvx
										3 [/pop cvx]cvx /repeat cvx
										1 /exch cvx /sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get /DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type /arraytype eq {0 get}if /DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get /exec cvx
									4 AGMCORE_plate_ndx sub -1 /roll cvx
									4 1 /roll cvx
									3 [/pop cvx]cvx /repeat cvx
									1 /exch cvx /sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace [/DeviceGray] def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup /DeviceCMYK eq exch dup /Separation eq exch /DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type /arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get /CIEBasedA eq
								{
								/ColorSpace [/Separation /_ciebaseda_ /DeviceGray {}] def
								}if
							ColorSpace 0 get dup /CIEBasedABC eq exch dup /CIEBasedDEF eq exch /DeviceRGB eq or or
								{
								/ColorSpace [/DeviceN [/_red_ /_green_ /_blue_] /DeviceRGB {}] def
								}if
							ColorSpace 0 get /CIEBasedDEFG eq
								{
								/ColorSpace [/DeviceN [/_cyan_ /_magenta_ /_yellow_ /_black_] /DeviceCMYK {}] def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup /AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace [/Separation (None) /DeviceGray {}] def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup /AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup /PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading /AGMCORE_ignoreshade known
					currentdict end exch
					{pop <</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{ 
				4 {4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{ 
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf /AGMCORE_y xdf /AGMCORE_m xdf /AGMCORE_c xdf
				end
				[/Separation 4 -1 roll /DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation (All) /DeviceGray {}] setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4 {4 index mul 4 1 roll} repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval {255 div} forall
	} bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	} bdf
	/n_color_components
	{
		base_colorspace_type
		dup /DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo /moveto ldf
		/li /lineto ldf
		/cv /curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2 /setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace /setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup /arraytype eq exch /packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where {
						begin
						dup 0 get dup /Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[ 
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get [ 
									exch {
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									} forall 
								] 1 xpt
							}if
						}ifelse
						end
					} if
				}if
			}def
			/setcolorspace
			{
				dup type dup /arraytype eq exch /packedarraytype eq or
				{
					dup 0 get /Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps {AGMCORE_&&&setcolorspace} if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1 [8 0 0 8 0 0] {<ffffffffffffffff>} image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		} def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		} def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup /DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup /DeviceGray ne{
				dup /DeviceCMYK ne{
					dup /DeviceRGB ne{
						dup /Separation eq{
							pop
							currentcolorspace 3 get exec
							currentcolorspace 2 get
						}{
							dup /Indexed eq{
								pop
								currentcolorspace 3 get dup type /stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err /AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		} def
	}ifelse
	/sop /setoverprint ldf
	/lw /setlinewidth ldf
	/lc /setlinecap ldf
	/lj /setlinejoin ldf
	/ml /setmiterlimit ldf
	/dsh /setdash ldf
	/sadj /setstrokeadjust ldf
	/gry /setgray ldf
	/rgb /setrgbcolor ldf
	/cmyk /setcmykcolor ldf
	/sep /setsepcolor ldf
	/devn /setdevicencolor ldf
	/idx /setindexedcolor ldf
	/colr /setcolor ldf
	/csacrd /set_csa_crd ldf
	/sepcs /setsepcolorspace ldf
	/devncs /setdevicencolorspace ldf
	/idxcs /setindexedcolorspace ldf
	/cp /closepath ldf
	/clp /clp_npth ldf
	/eclp /eoclp_npth ldf
	/f /fill ldf
	/ef /eofill ldf
	/@ /stroke ldf
	/nclp /npth_clp ldf
	/gset /graphic_setup ldf
	/gcln /graphic_cleanup ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin /clonedict load end def
	/clonearray Adobe_AGM_Utils begin /clonearray load end def
	currentdict{
		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and {
			bind
		}if
		def
	}forall
	/getrampcolor
	{ 
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type /stringtype eq {indx get} if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		} for
		ColorSpaceFamily /Separation eq 
		{sep}
		{
			ColorSpaceFamily /DeviceN eq
			{devn} {setcolor}ifelse
		}ifelse
	} bdf
	/sssetbackground {aload pop setcolor} bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where {pop /setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			newpath
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			newpath
		} if
		c1x c2x eq
		{
			c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse
		}
		{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if
			c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if
		} ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{ pathbbox } stopped
		{ 0 0 0 0 } if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}
		{
			/max { 2 copy gt { pop } {exch pop} ifelse } bdf
			/min { 2 copy lt { pop } {exch pop} ifelse } bdf
			rampdict begin
			40 dict begin
			background length 0 gt { background sssetbackground gsave clippath fill grestore } if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}
				{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}
						{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{ /theta 89.99 def}
							{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}
							{
								/L1maxX 0 def
								/L2maxX 0 def
							} ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						} ifelse
					} ifelse
				} ifelse
			} if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt { exch } if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			} if
		} if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		newpath
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}
		{
			0
			numsteps
			{
				dup
				subsampling { round cvi } if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			} repeat
			pop
		} ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}
			{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}
				{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}
					{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{ /theta 89.99 def}
						{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}
						{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					} ifelse
				} ifelse
			} ifelse
		} if
		grestore
		grestore
		end
		end
		end
		} ifelse
	} bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where {pop /setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			newpath
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			newpath
		} if
		x1 x2 eq
		{
			y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
		}
		{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
			x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{ pathbbox } stopped
		{ 0 0 0 0 } if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}
		{
			rampdict begin
			20 dict begin
			background length 0 gt { background sssetbackground gsave clippath fill grestore } if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt { exch } if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				} if
			} if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				} if
			} if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling { round cvi } if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			} repeat
			pop
			ext1 {
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				} if
			} if
			grestore
			grestore
			end
			end
			end
		} ifelse
	} bdf
}def
/page_trailer
{
	end
}def
/doc_trailer{
}def
/capture_currentpagedevice {
	//Adobe_AGM_Core/AGMCORE_currentpagedevice currentpagedevice ddf
} def
systemdict /findcolorrendering known{
	/findcolorrendering systemdict /findcolorrendering get def
}if
systemdict /setcolorrendering known{
	/setcolorrendering systemdict /setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup //Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name /MappedCSA xdf}ifelse
} def
/setsepcolor
{ 
	/sep_colorspace_dict AGMCORE_gget begin
		dup /sep_tint exch AGMCORE_gput
		TintProc
	end
} def
/setdevicencolor
{ 
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		} for
		TintProc
	end
} def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2 {AGMCORE_tmp mul NComponents 1 roll} repeat
			LMax sub AGMCORE_tmp mul LMax add  NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add  NComponents 1 roll
				} repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
} def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
} def
/sep_proc_name
{
	dup 0 get 
	dup /DeviceRGB eq exch /DeviceCMYK eq or level2 not and has_color not and{
		pop [/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
} def
/setsepcolorspace
{ 
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup /sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup () eq exch (All) eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{ 255 div } /exec cvx 3 -1 roll [ 4 1 roll load /exec cvx ] cvx 
		] setcolorspace_opt
		/TintProc {
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get /DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc [
				Components aload pop Name findcmykcustomcolor 
				/exch cvx /setcustomcolor cvx
			] cvx bdf
		}{
 			AGMCORE_host_sep Name (All) eq and{
 				/TintProc { 
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get /DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name () eq and{
					/TintProc [
						MappedCSA sep_proc_name exch 0 get /DeviceCMYK eq{
							cvx /setcmykcolor cvx
						}{
							cvx /setgray cvx
						}ifelse
					] cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup /DeviceCMYK eq exch /DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc [
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get /DeviceGray eq{
								1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx
							}if
							/Name cvx /findcmykcustomcolor cvx /exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load /exec cvx
								/not cvx /and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							] cvx /if cvx
							/setcustomcolor cvx
						] cvx bdf
 					}{ 
						/TintProc {setcolor} bdf
						[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
} def
/additive_blend
{
  	3 dict begin
  	/numarrays xdf
  	/numcolors xdf
  	0 1 numcolors 1 sub
  		{
  		/c1 xdf
  		1
  		0 1 numarrays 1 sub
  			{
			1 exch add /index cvx
  			c1 /get cvx /mul cvx
  			}for
 		numarrays 1 add 1 /roll cvx 
  		}for
 	numarrays [/pop cvx] cvx /repeat cvx
  	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add /index cvx  
			c1 /get cvx /sub cvx /mul cvx
			}for
		/sub cvx
		numarrays 1 add 1 /roll cvx
		}for
	numarrays [/pop cvx] cvx /repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc [
		/TintTransform cvx /setcolor cvx
	] cvx bdf
	MappedCSA setcolorspace_opt
} bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length {pop} repeat
	end
} bdf
/setdevicencolorspace
{ 
	dup /AliasedColorants known {false}{true}ifelse 
	current_spot_alias and {
		7 dict begin
		/names_index 0 def
		dup /names_len exch /Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup /Names get
		{
			dup map_alias {
				exch pop
				dup /ColorLookup known {
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup /Components known {
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index [null null null null] put
						end
					} ifelse
				} ifelse
				new_names names_index 3 -1 roll /Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup /LookupTables known {
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index [null null null null] put
					end
				} ifelse
			} ifelse
			/names_index names_index 1 add def 
		} forall
		alias_cnt 0 gt {
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge {0 get length}{length}ifelse def
			0 1 names_len 1 sub {
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge {0 get length}{length}ifelse lut_entry_len ne {
					/AliasedColorants false def
					exit
				}
				{
					new_LookupTables names_index get 0 get null eq {
						dup /Names get names_index get /name xdf
						name (Cyan) eq name (Magenta) eq name (Yellow) eq name (Black) eq
						or or or not {
							/AliasedColorants false def
							exit
						} if
					} if
				} ifelse
			} for
			lut_entry_len 1 eq {
				/AliasedColorants false def
			} if
			AliasedColorants {
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq {/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod /Additive eq {/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict /TTTablesIdx known not {
					/TTTablesIdx -1 def
				} if
				end
			} if
		}if
		end
	} if
	dup /devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict /AliasedColorants known {
		AliasedColorants
	}{
		false
	} ifelse
	dup not {
		CSA map_csa
	} if
	/TintTransform load type /nulltype eq or {
		/TintTransform [
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup (Cyan) eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup (Magenta) eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0 /exch cvx 0 0
							}
							{
							(Yellow) eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1 /roll cvx 0
								}
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1 /roll cvx
								} ifelse
							} ifelse
						} ifelse
					5 -1 /roll cvx /astore cvx
					}
					{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx /mul cvx /round cvx /cvi cvx /get cvx
					} ifelse
					Names length TTTablesIdx add 1 add 1 /roll cvx
				} for
			Names length [/pop cvx] cvx /repeat cvx
			NComponents Names length
  			TintMethod /Subtractive eq
  				{
  				subtractive_blend
  				}
  				{
  				additive_blend
  				} ifelse
		] cvx bdf
	} if
	AGMCORE_host_sep {
		Names convert_to_process {
			exec_tint_transform
		}
		{	
			currentdict /AliasedColorants known {
				AliasedColorants not
			}{
				false
			} ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants {
				/currentspotalias current_spot_alias def
				false set_spot_alias
			} if
			Names {
				AGMCORE_is_cmyk_sep {
					dup (Cyan) eq AGMCORE_cyan_plate and exch
					dup (Magenta) eq AGMCORE_magenta_plate and exch
					dup (Yellow) eq AGMCORE_yellow_plate and exch
					(Black) eq AGMCORE_black_plate and or or or {
						/devicen_colorspace_dict AGMCORE_gget /TintProc [
							Names names_index /devn_makecustomcolor cvx
						] cvx ddf
						/painted? true def
					} if
					painted? {exit} if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq {
					/devicen_colorspace_dict AGMCORE_gget /TintProc [
						Names names_index /devn_makecustomcolor cvx
					] cvx ddf
					/painted? true def
					exit
					} if
				} ifelse
				/names_index names_index 1 add def
			} forall
			AvoidAliasedColorants {
				currentspotalias set_spot_alias
			} if
			painted? {
				/devicen_colorspace_dict AGMCORE_gget /names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget /TintProc [
					names_len [/pop cvx] cvx /repeat cvx 1 /setseparationgray cvx
 					0 0 0 0 /setcmykcolor cvx
				] cvx ddf
			} ifelse
			end
		} ifelse
	}
	{
		AGMCORE_in_rip_sep {
			Names convert_to_process not
		}{
			level3
		} ifelse
		{
			[/DeviceN Names MappedCSA /TintTransform load] setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and {
				[
					Names /length cvx [/pop cvx] cvx /repeat cvx
				] cvx bdf
			}{
				{setcolor} bdf
			} ifelse
		}{
			exec_tint_transform
		} ifelse
	} ifelse
	set_crd
	/AliasedColorants false def
	end
} def
/setindexedcolorspace
{
	dup /indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict /CSDBase known {
			CSDBase /CSD get_res begin
			currentdict /Names known {
				currentdict devncs
			}{
				1 currentdict sepcs
			} ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt /Names where {pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal {
					/tableIndex xdf
					Lookup dup type /stringtype eq {
						compCnt tableIndex map_index
					}{
						exec
					} ifelse
					/Names where {
						pop setdevicencolor
					}{
						setsepcolor
					} ifelse
					currentgray
					tableIndex exch
					HiVal mul cvi 
					NewLookup 3 1 roll put
				} for
				[/Indexed currentcolorspace HiVal NewLookup] setcolorspace_opt
				end
			}{
				level3
				{
					currentdict /Names known {
						[/Indexed [/DeviceN Names MappedCSA /TintTransform load] HiVal Lookup] setcolorspace_opt
					}{
						[/Indexed [/Separation Name MappedCSA sep_proc_name load] HiVal Lookup] setcolorspace_opt
					} ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict /Names known {
						Lookup dup type /stringtype eq
							{/exch cvx CSDBase /CSD get_res /Names get length dup /mul cvx exch /getinterval cvx {255 div} /forall cvx}
							{/exec cvx}ifelse
							/TintTransform load /exec cvx
					}{
						Lookup dup type /stringtype eq
							{/exch cvx /get cvx 255 /div cvx}
							{/exec cvx}ifelse
							CSDBase /CSD get_res /MappedCSA get sep_proc_name exch pop /load cvx /exec cvx
					} ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			} ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or{
						pop [/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{ 
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval {} forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						} bind
					}{
						Lookup
					}ifelse
				}ifelse
				] setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep {
		/indexed_colorspace_dict AGMCORE_gget dup /CSDBase known { 
			begin
			CSDBase /CSD get_res begin
			currentdict /Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
			end
		}{
			/Lookup get 4 3 -1 roll map_index setcmykcolor
		} ifelse
	}{
		level3 not AGMCORE_in_rip_sep and /indexed_colorspace_dict AGMCORE_gget /CSDBase known and {
			/indexed_colorspace_dict AGMCORE_gget /CSDBase get /CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		} ifelse
	}ifelse
} def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode [0 1] def
		/DataSource <FF> def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict /image get exec
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup /CSD eq {
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	} ifelse
}def
/del_res
{
	{
		aload pop exch
		dup /CSD eq {
			pop 
			{
				//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef
			}forall
		}{
			exch
			{
				1 index undefineresource
			}forall
			pop
		} ifelse
	} forall
}def
/get_res
{
	dup /CSD eq {
		pop
		dup type dup /nametype eq exch /stringtype eq or {
			AGMCORE_CSD_cache exch get
		} if
	}{
		findresource
	} ifelse
}def
/get_csa_by_name
{
	dup type dup /nametype eq exch /stringtype eq or{
		/CSA get_res
	} if
}def
/pattern_buf_init
{
	/count get 0 0 put
} def
/pattern_buf_next
{
	dup /count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
} def
/cachepattern_compress
{
	5 dict begin
	currentfile exch 0 exch /SubFileDecode filter /ReadFilter exch def
	/patarray 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	patarray 1 array dup 0 1 put /count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq {
			pop
		}{
			patarray dup length 1 sub 3 -1 roll put
		} ifelse
		{string_size}{0}ifelse string
	} /LZWEncode filter def
	{ 		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not {exit} if
	} loop
	LZWFilter closefile
	patarray				
	end
}def
/cachepattern
{
	2 dict begin
	currentfile exch 0 exch /SubFileDecode filter /ReadFilter exch def
	/patarray 20 dict def
	currentglobal true setglobal 
	patarray 1 array dup 0 1 put /count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		patarray dup length 1 sub 3 -1 roll put
		not {exit} if
	} loop
	patarray dup dup length 1 sub () put					
	end	
}def
/wrap_paintproc
{ 
  statusdict /currentfilenameextend known{
	clonedict
	begin
	/OldPaintProc /PaintProc load def
	/PaintProc
	{
		mark exch
		dup /OldPaintProc get stopped
		{closefile restore end} if
		cleartomark
	}  def
	end
  } {pop} ifelse
} def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index /XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index /YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			  1 index begin
		BBox 0 get XStep div cvi XStep mul /xshift exch neg def
		BBox 1 get YStep div cvi YStep mul /yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[ xshift yshift /translate load null /exec load ] dup
		3 /PaintProc load put cvx /PaintProc exch def
		end
	1 index dup /ID get exch /Pattern add_res
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup /PatternType get 1 eq{
		dup /PaintType get 1 eq{
			currentoverprint sop [/DeviceGray] setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{
		pop
	}{
		setcolorspace
	}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}{null}ifelse
	Intent ne {
		Intent /ColorRendering {findresource} stopped
		{
			pop pop systemdict /findcolorrendering known
			{
				Intent findcolorrendering pop
				/ColorRendering findresource 
				true
			}
			{false} ifelse
		}
		{true} ifelse
		{
			dup begin
			currentdict /TransformPQR known {
				currentdict /TransformPQR get aload pop
				3 {{} eq 3 1 roll} repeat or or
			}
			{true} ifelse
			currentdict /MatrixPQR known {
				currentdict /MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true} ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR [
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add} bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add} bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add} bind
				] def
				/MatrixPQR [ 0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296 ] def
				/RangePQR [-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392] def
				currentdict end
			} if
			setcolorrendering_opt
		} if		
	}if
} def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict /ColorRendering known{
			ColorRendering /ColorRendering {findresource} stopped not {setcolorrendering_opt} if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type /arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		clonedict
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process //Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp) flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep) flushinput
	}if
}def
/cpaint_gend
{
	newpath
}def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add} if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0} ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup /Name get map_alias {/CSD put}{pop} ifelse} forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get /CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not {
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor /setcustomcolor load put
	} if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		currentdict/TintProc known currentdict/CSA known and 3 1 roll
		//Adobe_AGM_Core begin
		dup /customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			4 -1 roll{
				exch pop /sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
			pop
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd /setpagedevice load def
	/setpagedevice { get_gstate spd set_gstate } def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known{
			currentpagedevice/NegativePrint get //Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<< /NegativePrint //Adobe_AGM_Core/AGMCORE_inverting get >> setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
		gsave newpath clippath 1 /setseparationgray where{pop setseparationgray}{setgray}ifelse 
		/AGMIRS_&fill where {pop AGMIRS_&fill}{fill} ifelse grestore
	}if
	end
}def
/lw_save_restore_override {
	/md where {
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{} def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage /showpage load def}
		ifelse
		/showpage {orig_showpage gR} def
		end
	}if
}def
/pscript_showpage_override {
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage /restore load def
		/restore {exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where {
		pop
		md /initializepage known {
			md /initializepage {} put
		} if
		md /rC known {
			md /rC {4{pop}repeat} put
		} if
	}if
	/mysetup where {
		/mysetup [1 0 0 1 0 0] put
	}if
	Adobe_AGM_Core /AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core /AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/driver_check_media_override
{
	/PrepsDict where
		{pop}
		{
		Adobe_AGM_Core /AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core /AGMCORE_Default_PageSize get type /arraytype eq
			{
			Adobe_AGM_Core /AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core /AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core /AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ (Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. ) def
	/AGMCORE_color_space_onhost_seps (This job contains colors that will not separate with on-host methods. ) def
	/AGMCORE_invalid_color_space (This job contains an invalid color space. ) def
end
/set_def_ht
{
	AGMCORE_def_ht sethalftone
} def
end
systemdict /setpacking known
{
	setpacking
} if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.25 0
%%Copyright: Copyright 1997-2005 Adobe Systems Incorporated.  All Rights Reserved.
%%Version: 2.25 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict /Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{ /Adobe_CoolType_Core userdict /Adobe_CoolType_Core get def }
if
userdict /Adobe_CoolType_Core 60 dict dup begin put
/Adobe_CoolType_Version 2.25 def
/Level2?
	systemdict /languagelevel known dup
		{ pop systemdict /languagelevel get 2 ge }
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal /pop load def
	/gcheck { pop false } bind def
	/currentpacking false def
	/setpacking /pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict /Adobe_CoolType_Data 2 copy known not
	 { 2 copy 10 dict put }
if
get
	 begin
	 /@opStackCountByLevel 32 dict def
	 /@opStackLevel 0 def
	 /@dictStackCountByLevel 32 dict def
	 /@dictStackLevel 0 def
	 end
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup /args
			7 index
			5 add array put
			put get
			}
			{
			get dup /args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch /args exch put
				}
				{ pop }
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{ pop count }
			if
			dup /argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{ pop }
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	} bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{ { pop } repeat }
				{ pop }
			ifelse
			args 0 argCount getinterval {} forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{ { end } repeat }
		{ pop }
	ifelse
	} bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	} bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	} bind def
/@ReRaise
	{
	cvx $error /errorname get errordict exch get exec
	stop
	} bind def
/@Stopped
	{
	0 @#Stopped
	} bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{ @_RestoreStackLevels true }
		{ @_PopStackLevels false }
	ifelse
	} bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	} bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch /@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					 { (*) { pop stop } 128 string /Category resourceforall }
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data /@shouldNotDisappearDict get ne dup
					 {
						  /@shouldNotDisappearDictValue known
								{
										  {
												end
												currentdict 1 index eq
													 { pop exit }
												if
										  }
									 loop
								}
						  if
					 }
				if
				end
		}
		{ false }
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{ /steveamerige /Category resourcestatus }
		stopped
			{ cleartomark true }
			{ cleartomark currentglobal not }
		ifelse
		}
		{ false }
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec
				{ cleartomark false }
				{ { 3 2 roll pop true } { cleartomark false } ifelse }
			ifelse
			end
		} bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad /ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup /CMap CTHasResourceStatusBug
						{ CTResourceStatus }
						{ resourcestatus }
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup /CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{ exit }
								{ stop }
							ifelse
							}
						ifelse
						}
						{ pop }
					ifelse
					}
				128 string /CMap resourceforall
				}
			stopped
				{ cleartomark }
			stopped pop
			setglobal
			}
		if
		}
	if
	} bind def
/doc_setup
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mov /moveto load def
		/nfnt /newencodedfont load def
		/mfnt /makefont load def
		/sfnt /setfont load def
		/ufnt /undefinefont load def
		/chp /charpath load def
		/awsh /awidthshow load def
		/wsh /widthshow load def
		/ash /ashow load def
		/sh /show load def
		end
		currentglobal false setglobal
	  userdict /Adobe_CoolType_Data 2 copy known not
		  { 2 copy 10 dict put }
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	} bind def
/doc_trailer
	{
	currentdict Adobe_CoolType_Core eq
		{ end }
	if
	} bind def
/page_setup
	{
	Adobe_CoolType_Core begin
	} bind def
/page_trailer
	{
	end
	} bind def
/unload
	{
	systemdict /languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{ undef }
				{ pop pop }
			ifelse
			}
		if
		}
	if
	} bind def
/ndf
	{
	1 index where
		{ pop pop pop }
		{ dup xcheck { bind } if def }
	ifelse
	} def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where { /globaldict get begin } if
			dup where pop exch get
		/globaldict where { pop end } if
		end
	end
Adobe_CoolType_Core_Defined
	{ /systemfindfont exch def }
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{ pop } ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq { 0 } { dup length } ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index /FID eq
				{ pop pop }
				{ def }
			ifelse
			}
		forall
		dup null eq
			{ pop }
			{ { def } forall }
		ifelse
		currentdict
		end
	exch setglobal
	} bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	} bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index  known
			{ SharedFontDirectory 3 index get /FontReferenced known }
			{ false }
		ifelse
		}
		{
		FontDirectory 3 index known
			{ FontDirectory 3 index get /FontReferenced known }
			{
			SharedFontDirectory 3 index known
				{ SharedFontDirectory 3 index get /FontReferenced known }
				{ false }
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont /FontReferenced get
		2 index dup type /nametype eq
			{findfont}
		if ne
			{ pop false }
		if
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{ 2 copy get 3 index 3 1 roll put }
		for
		pop pop pop
		}
		{
		dup type /nametype eq
		  { findfont }
	  if
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index /FID ne
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type /stringtype eq { cvn } if def dup
			currentdict
			end
		definefont def
		}
	ifelse
	} bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type /dicttype ne
			{ 0 dict }
		if
		currentdict /$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{ def } forall
					{ def } forall
					currentdict
					dup /$Init known
						{ dup /$Init get exec }
					if
					end
				/$Strategy exch def
				}
				{ pop pop pop }
			ifelse
			}
			{ pop pop }
		ifelse
		end
	} bind def
/scff
	{
	$SubstituteFont
		begin
		dup type /stringtype eq
			{ dup length exch }
			{ null }
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{ $sname }
			ifelse def
		end
		{ findfont }
	@Stopped
		{
		dup length 8 add string exch
		1 index 0 (BadFont:) putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{ findfont }
		@Stopped
			{ pop /Courier findfont }
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	} bind def
/isWidthsOnlyFont
	{
	dup /WidthsOnly known
		{ pop pop true }
		{
		dup /FDepVector known
			{ /FDepVector get { isWidthsOnlyFont dup { exit } if } forall }
			{
			dup /FDArray known
				{ /FDArray get { isWidthsOnlyFont dup { exit } if } forall }
				{ pop }
			ifelse
			}
		ifelse
		}
	ifelse
	} bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 4 index def
		/$doSmartSub false def
		end
	3 index
	currentglobal false setglobal exch
	/CompatibleFonts /ProcSet resourcestatus
		{
		pop pop
		/CompatibleFonts /ProcSet findresource
			begin
			dup /CompatibleFont currentexception
			1 index /CompatibleFont true setexception
			1 index /Font resourcestatus
				{
				pop pop
				3 2 roll setglobal
				end
				exch
				dup findfont
				/CompatibleFonts /ProcSet findresource
					begin
					3 1 roll exch /CompatibleFont exch setexception
					end
				}
				{
				3 2 roll setglobal
				1 index exch /CompatibleFont exch setexception
				end
				findfont
				$SubstituteFont /$substituteFound true put
				}
			ifelse
		}
		{ exch setglobal findfont }
	ifelse
	$SubstituteFont
		begin
		$substituteFound
			{
		 false
		 (%%[Using embedded font ) print
		 5 index ?str1 cvs print
		 ( to avoid the font substitution problem noted earlier.]%%\n) print
		 }
			{
			dup /FontName known
				{
				dup /FontName get $fontname eq
				1 index /DistillerFauxFont known not and
				/currentdistillerparams where
					{ pop false 2 index isWidthsOnlyFont not and }
				if
				}
				{ false }
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		exch pop exch pop exch
		2 dict dup /Found 3 index put
		exch findfont exch
		}
		{
		exch exec
		exch dup findfont
		dup /FontType get 3 eq
	  {
		  exch ?str1 cvs
		  dup length 1 sub
		  -1 0
		{
			  exch dup 2 index get 42 eq
			{
				 exch 0 exch getinterval cvn 4 1 roll 3 2 roll pop
				 exit
			  }
			  {exch pop} ifelse
		  }for
		}
		{
		 exch pop
	  } ifelse
		2 dict dup /Downloaded 6 5 roll put
		}
	ifelse
	dup /FontName 4 index put copyfont definefont pop
	} bind def
/?str2 256 string def
/?add
	{
	1 index type /integertype eq
		{ exch true 4 2 }
		{ false 3 1 }
	ifelse
	roll
	1 index findfont
	dup /Widths known
		{
		Adobe_CoolType_Data /AddWidths? true put
		gsave dup 1000 scalefont setfont
		}
	if
	/Downloaded known
		{
		exec
		exch
			{
			exch ?str2 cvs exch
			findfont /Downloaded get 1 dict begin /Downloaded 1 index def ?str1 cvs length
			?str1 1 index 1 add 3 index putinterval
			exch length 1 add 1 index add
			?str1 2 index (*) putinterval
			?str1 0 2 index getinterval cvn findfont 
			?str1 3 index (+) putinterval
			2 dict dup /FontName ?str1 0 6 index getinterval cvn put
			dup /Downloaded Downloaded put end copyfont
			dup /FontName get exch definefont pop pop pop
			}
			{
			pop
			}
		ifelse
		}
		{
		pop
		exch
			{
			findfont
			dup /Found get
			dup length exch ?str1 cvs pop
			?str1 1 index (+) putinterval
			?str1 1 index 1 add 4 index ?str2 cvs putinterval
			?str1 exch 0 exch 5 4 roll ?str2 cvs length 1 add add getinterval cvn
			1 dict exch 1 index exch /FontName exch put copyfont
			dup /FontName get exch definefont pop
			}
			{
			pop
			}
		ifelse
		}
	ifelse
	Adobe_CoolType_Data /AddWidths? get
		{ grestore Adobe_CoolType_Data /AddWidths? false put }
	if
	} bind def
/?sh
	{
	currentfont /Downloaded known { exch } if pop
	} bind def
/?chp
	{
	currentfont /Downloaded known { pop } { false chp } ifelse
	} bind def
/?mv 
	{
	currentfont /Downloaded known { moveto pop pop } { pop pop moveto } ifelse
	} bind def
setpacking
userdict /$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{ get }
			{ pop pop { pop /Courier } bind }
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams /CannotEmbedFontPolicy 2 copy known
			{ get /Error eq }
			{ pop pop false }
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup /WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type /stringtype eq { cvn } if def
								/FontType 3 def
								/FontMatrix [ .001 0 0 .001 0 0 ] def
								/Encoding 256 array dup 0 1 255 { /.notdef put dup } for pop def
								/FontBBox [ 0 0 0 0 ] def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth /y exch def /x exch def
											x y setcharwidth
											$SubstituteFont /$Strategy get /$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									} bind def
								currentdict
								end
							exch setglobal
							} bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup /WMode known
										{ dup /WMode get }
										{ 0 }
									ifelse
									/$WMode exch def
									$fontname exch
									dup /FontName known
										{
										dup /FontName get
										dup type /stringtype eq { cvn } if
										}
										{ /unnamedfont }
									ifelse
									exch
									Adobe_CoolType_Data /InVMDeepCopiedFonts get
									1 index /FontName get known
										{
										pop
										Adobe_CoolType_Data /InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{ $deepcopyfont }
									ifelse
									exch 1 index exch /FontBasedOn exch put
									dup /FontName $fontname dup type /stringtype eq { cvn } if put
									definefont
									Adobe_CoolType_Data /InVMDeepCopiedFonts get
										begin
										dup /FontBasedOn get 1 index def
										end
									} bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{ /y 1000 def }
										{ /x -1000 def 500 120 translate }
									ifelse
									Level2?
										{
										[ /Separation (All) /DeviceCMYK { 0 0 0 1 pop } ]
										setcolorspace
										}
										{ 0 setgray }
									ifelse
									10 setlinewidth
									x .8 mul
									[ 7 3 ]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{ .2 setcolor }
											{ .8 setgray }
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									} bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict /FontName known
											{
											FontName
											dup type /stringtype eq { cvn } if
											}
											{ /unnamedfont }
										ifelse
										def
										/FontName $fontname dup type /stringtype eq { cvn } if def
										/currentdistillerparams where
											{ pop }
											{
											/FontInfo currentdict /FontInfo known
												{ FontInfo null copyfont }
												{ 2 dict }
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[ 1 0 ItalicAngle dup sin exch cos div 1 0 0 ]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									} bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont {} bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type /stringtype eq { cvn } if
						dup /$fontname exch def
						$sname null eq
							{ $str cvs dup length $slen sub $slen getinterval }
							{ pop $sname }
						ifelse
						$fontpat dup 0 (fonts/*) putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont /$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{ /$match exch def exit }
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont /$dstack get
								{
								exch
									{
									1 index eq
										{ pop false }
										{ true }
									ifelse
									}
									{ begin false }
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{ $match (fonts/) anchorsearch pop pop cvn }
							{ /Courier }
						ifelse
						} bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1  [ /Ryumin-Light /HeiseiMin-W3
										  /GothicBBB-Medium /HeiseiKakuGo-W5
										  /HeiseiMaruGo-W4 /Jun101-Light ] def
							/Korea1  [ /HYSMyeongJo-Medium /HYGoThic-Medium ] def
							/GB1	  [ /STSong-Light /STHeiti-Regular ] def
							/CNS1	 [ /MKai-Medium /MHei-Medium ] def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup /FontType get 0 eq
							{
							1 dict dup /FontName /copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup /FontName /copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{ $Strategies /$Type3Underprint get exec }
						ifelse
						} bind def
					/$buildfontname
						{
						dup /CIDFont findresource /CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index (-) putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy (-) putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{ pop pop 3 2 roll putinterval cvn /$cmapname exch def }
							{ pop pop pop pop pop }
						ifelse
						length
						$str 1 index (-) putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						} bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{ get }
								{ pop pop [] }
							ifelse
							}
							{ pop pop [] }
						ifelse
						false exch
							{
							dup /CIDFont resourcestatus
								{
								pop pop
								save
								1 index /CIDFont findresource
								dup /WidthsOnly known
									{ dup /WidthsOnly get }
									{ false }
								ifelse
								exch pop
								exch restore
									{ pop }
									{ exch pop true exit }
								ifelse
								}
								{ pop }
							ifelse
							}
						forall
							{ $str cvs $buildfontname }
							{
							false (*)
								{
								save exch
								dup /CIDFont findresource
								dup /WidthsOnly known
									{ dup /WidthsOnly get not }
									{ true }
								ifelse
								exch /CIDSystemInfo get
								dup /Registry get Registry eq
								exch /Ordering get Ordering eq and and
									{ exch restore exch pop true exit }
									{ pop restore }
								ifelse
								}
							$str /CIDFont resourceforall
								{ $buildfontname }
								{ $fontname $findfontByEnum }
							ifelse
							}
						ifelse
						} bind def
					end
				end
				currentdict /$error known currentdict /languagelevel known and dup
					{ pop $error /SubstituteFont known }
				if
				dup
					{ $error }
					{ Adobe_CoolType_Core }
				ifelse
				begin
					{
					/SubstituteFont
					/CMap /Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{ dup $str cvs dup length $slen sub $slen getinterval cvn }
									{ $sname }
								ifelse
								Adobe_CoolType_Data /InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{ exch pop true exit }
												{ pop }
											ifelse
											}
											{
											FontDirectory 1 index known
												{ exch pop true exit }
												{
												GlobalFontDirectory 1 index known
													{ exch pop true exit }
													{ pop }
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{ pop pop false }
								ifelse
									{
									exch pop exch pop
									}
									{
									dup /CMap resourcestatus
										{
										pop pop
										dup /$cmapname exch def
										/CMap findresource /CIDSystemInfo get { def } forall
										$findfontByROS
										}
										{
										128 string cvs
										dup (-) search
											{
											3 1 roll search
												{
												3 1 roll pop
													{ dup cvi }
												stopped
													{ pop pop pop pop pop $findfontByEnum }
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup /CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup /$cmapname exch def
															/CMap findresource /CIDSystemInfo get { def } forall
															$findfontByROS
															true exit
															}
															{ pop }
														ifelse
														}
													for
													dup type /booleantype eq
														{ pop }
														{ pop pop pop $findfontByEnum }
													ifelse
													}
												ifelse
												}
												{ pop pop pop $findfontByEnum }
											ifelse
											}
											{ pop pop $findfontByEnum }
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{ //SubstituteFont exec }
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{ $findfontByEnum }
								{ //SubstituteFont exec }
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core /scfindfont /systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup /FontName known
								{ dup /FontName get dup 3 index ne }
								{ /noname true }
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def /$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{ 1 index /FID eq { pop pop } { def } ifelse }
										forall
										currentdict
										end
									definefont
									dup /FontName known { dup /FontName get } { null } ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using ) print
										dup /FontName known
											{ dup /FontName get } { (unspecified font) }
										ifelse
										$str cvs print (.\n) print
										}
									if
									}
									{ exch pop }
								ifelse
								}
								{ exch pop }
							ifelse
							end
						} bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core /findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type /stringtype ne { $str cvs } if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{ dup $inVMIndex $AddInVMFont }
						if
						$doSmartSub
							{
							currentdict /$Strategy known
								{ $Strategy /$BuildFont get exec }
							if
							}
						if
						}
					if
					end
				} bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch /FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data /InVMFontsByCMap get exch
		$DictAdd
		}
		{ pop pop pop }
	ifelse
	} bind def
/$DictAdd
	{
	2 copy known not
		{ 2 copy 4 index length dict put }
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get { forall } def
				2 copy currentdict put
				end
			}
			{ pop }
		ifelse
		}
	if
	get
		begin
			{ def }
		forall
		end
	} bind def
end
end
%%EndResource
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.21 0
%%Copyright: Copyright 1987-2005 Adobe Systems Incorporated.
%%Version: 1.21 0
systemdict /languagelevel known dup
	{ currentglobal false setglobal }
	{ false }
ifelse
exch
userdict /Adobe_CoolType_Utility 2 copy known
	{ 2 copy get dup maxlength 27 add dict copy }
	{ 27 dict }
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		  <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A> def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch /eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{ globaldict begin currentglobal true setglobal }
if
	/ct_AddStdCIDMap
		ct_Level2?
			{ {
				mark
				Adobe_CoolType_Utility /@recognizeCIDFont currentdict put
					 {
					 ((Hex) 57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77) 0 () /SubFileDecode filter cvx exec
					 }
				stopped
					 {
					 cleartomark
					 Adobe_CoolType_Utility /@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						  {
						  2 copy get 3 index eq
								{ 1 index length exch sub 1 sub { end } repeat exit }
								{ pop }
						  ifelse
						  }
					 for
					 pop pop
					 Adobe_CoolType_Utility /@eexecStartData get eexec
					 }
					 { cleartomark }
				ifelse
			} }
			{ {
				Adobe_CoolType_Utility /@eexecStartData get eexec
			} }
		ifelse bind def
userdict /cid_extensions known
dup { cid_extensions /cid_UpdateDB known and } if
	 {
	 cid_extensions
	 begin
	 /cid_GetCIDSystemInfo
		 {
		 1 index type /stringtype eq
			 { exch cvn exch }
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				 {
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					 {
					 1 index load
					 3 index get
					 dup null eq
						  { pop pop cid_UpdateDB }
						  {
						  exch
						  1 index /Created get eq
							  { exch pop exch pop }
							  { pop cid_UpdateDB }
						  ifelse
						  }
					 ifelse
					 }
					 { pop cid_UpdateDB }
				 ifelse
				 }
				 { cid_UpdateDB }
			 ifelse
			 end
		 } bind def
	 end
	 }
if
ct_Level2?
	{ end setglobal }
if
	/ct_UseNativeCapability?  systemdict /composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring () def
		/usewidths? true def
		end def
	ct_Level2? { setglobal } { pop } ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict /languagelevel known
				{ pop /CIDFont findresource /GlyphDirectory get }
				{
				1 index /CIDFont findresource /GlyphDirectory
				get dup type /dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			} def
		/+
			{
			systemdict /languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{ 1 dict begin }
			ifelse
			/$ exch def
			systemdict /languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			? { $ begin } if
			} def
		/? { $ type /dicttype eq } def
		/| {
			userdict /Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data /AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					  begin
						AddWidths?
								{
								Adobe_CoolType_Data /CC 3 index put
								? { def } { $ 3 1 roll put } ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont /Widths get exch CC exch put
								}
								{ ? { def } { $ 3 1 roll put } ifelse }
							ifelse
					end
				end
				}
				{ ? { def } { $ 3 1 roll put } ifelse }	ifelse
				}
				{ ? { def } { $ 3 1 roll put } ifelse }
			ifelse
			} def
		/!
			{
			? { end } if
			systemdict /languagelevel known
				{ gvm setglobal }
			if
			end
			} def
		/: { string currentfile exch readstring pop } executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		 /c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		 /c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		 /c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		 /c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		 /c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		 /c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		 /c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		 /c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		 /cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		 /cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		 /cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		 /cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		 /cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx [.001 0 0 .001 0 0] def
		/ct_1000Mtx [1000 0 0 1000 0 0] def
		/ct_raise {exch cvx exch errordict exch get exec stop} bind def
		/ct_reraise
			{ cvx $error /errorname get (Error: ) print dup (						  ) cvs print
					errordict exch get exec stop
			} bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			} bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility /ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{ dup string /dst_string exch def }
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex  get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string  dst_index 2 index putinterval
						length dst_index add /dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string  dst_index 2 index putinterval
						pop dup dst_index add /dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							  { arrayIndex get }
							  {
							  pop
							  exit
							  }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			} bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{ /unknowninstancename /Category resourcestatus }
			stopped
				{ cleartomark setglobal true }
				{ cleartomark currentglobal not exch setglobal }
			ifelse
				{
					{
					mark 3 1 roll /Category findresource
						begin
						ct_Vars /vm currentglobal put
						({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec
							{ cleartomark false }
							{ { 3 2 roll pop true } { cleartomark false } ifelse }
						ifelse
						ct_Vars /vm get setglobal
						end
					}
				}
				{ { resourcestatus } }
			ifelse bind def
			/CIDFont /Category ct_resourcestatus
				{ pop pop }
				{
				currentglobal  true setglobal
				/Generic /Category findresource
				dup length dict copy
				dup /InstanceType /dicttype put
				/CIDFont exch /Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit /ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				  /Registry (Adobe) def
				  /Ordering (Identity) def
				  /Supplement 0 def
				end def
				/CMapName /Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000> <FFFF>
				endcodespacerange
				1 begincidrange
				<0000> <FFFF> 0
				endcidrange
				endcmap
				CMapName currentdict /CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont  10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{ pop pop /defineresource /undefined ct_raise }
				ifelse
				} bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{ get 3 1 roll pop pop}
						{ pop pop /findresource /undefinedresource ct_raise }
					ifelse
					}
					{ pop pop /findresource /undefined ct_raise }
				ifelse
				} bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{ pop pop /findresource /undefined ct_raise }
				ifelse
				} bind def
			/ct_resourcestatus /resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup (Binary) eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{ cid_BYTE_COUNT () /SubFileDecode filter }
							stopped
								{ pop pop pop }
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup (Hex) eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{ null exch /ASCIIHexDecode filter /readstring }
							stopped
								{ pop exch pop (>) exch /readhexstring }
							if
							}
							{ (>) exch /readhexstring }
						ifelse
						load
						exit
						}
					if
					/StartData /typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch /GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop /readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				} bind def
			/StartData
				{
				mark
					{
					currentdict
					dup /FDArray get 0 get /FontMatrix get
					0 get 0.001 eq
						{
						dup /CDevProc known not
							{
							/CDevProc 1183615869 internaldict /stdCDevProc 2 copy known
								{ get }
								{
								pop pop
								{ pop pop pop pop pop 0 -1000 7 index 2 div 880 }
								}
							ifelse
							def
							}
						if
						}
						{
						 /CDevProc
							 {
							 pop pop pop pop pop
							 0
							 1 cid_temp /cid_CIDFONT get
							 /FDArray get 0 get
							 /FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							 } def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup /cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup /SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup /SubrMapOffset undef
										dup /SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{ pop }
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict /CIDFont defineresource pop
					end end
					}
				stopped
					{ cleartomark /StartData ct_reraise }
				if
				} bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit /ProcSet ct_resourcestatus
				{ true }
				{ /CIDInitC /ProcSet ct_resourcestatus }
			ifelse
				{
				pop pop
				/CIDInit /ProcSet findresource
				ct_UseNativeCapability?
					{ pop null }
					{ /CIDInit ct_CIDInit /ProcSet defineresource pop }
				ifelse
				}
				{ /CIDInit ct_CIDInit /ProcSet defineresource pop null }
			ifelse
			ct_Vars exch /ct_oldCIDInit exch put
			} bind def
		/ct_restoreCIDInit
			{
			ct_Vars /ct_oldCIDInit get dup null ne
				{ /CIDInit exch /ProcSet defineresource pop }
				{ pop }
			ifelse
			} bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility /ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{ pop 0 }
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{ get }
								{ pop pop nullstring }
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{ 0 FDBytes ct_cvnsi }
									{ pop 0 }
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{ /charstring nullstring def exit }
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			} def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			} def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont /Widths get cid
					2 copy known
						{ get exch pop aload pop }
						{ pop pop stringwidth }
					ifelse
					}
					{ stringwidth }
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			} def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{ get }
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup /FontMatrix 2 copy known
						{ get }
						{ pop pop ct_defaultFontMtx }
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont /Widths get def
					/CharStrings 1 dict dup /.notdef
						<d841272cf18f54fc13> dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup /CharStrings get 1 index /Encoding get
			ct_dfCharCode get charstring put
			rootfont /WMode 2 copy known
				{ get }
				{ pop pop 0 }
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ ct_str1 show }
			ifelse
			} def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup /FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ ct_1000Mtx matrix concatmatrix concat }
				{ pop }
			ifelse
			/Private get
			Adobe_CoolType_Utility /ct_Level2? get not
				{
				ct_dfDict /Private
				3 -1 roll
					{ put }
				1183615869 internaldict /superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility /ct_Level2? get
				{ 1 index }
				{ 3 index /Private get mark 6 1 roll }
			ifelse
			dup /RunInt known
				{ /RunInt get }
				{ pop /CCRun }
			ifelse
			get exec
			Adobe_CoolType_Utility /ct_Level2? get not
				{ cleartomark }
			if
			} bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility /ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{ stop }
			if
			end
			end
			end
			end
			} bind def
		/BaseFontNameStr (BF00) def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix  [0.001 0 0 0.001 0 0] def
			/FontBBox  [-250 -250 1250 1250] def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix  [0.001 0 0 0.001 0 0] def
			/FontBBox  [-250 -250 1250 1250] def
			/Encoding ct_cHexEncoding def
			/BuildChar /ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString /ct_Type3ShowCharString load def
				/ct_dfSetCacheProc /ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup /lenIV 4 put def
				/CharStrings 1 dict dup /.notdef <d841272cf18f54fc13> put def
				/PaintType 0 def
				/ct_ShowCharString /ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{ exit }
				if
				}
			for
			exch pop exch pop
			} bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch /WMode exch def
				exch /FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup /FontMatrix known
				{ dup /FontMatrix get /FontMatrix exch def }
				{ /FontMatrix matrix def }
			ifelse
				/bfCount 1 index /CIDCount get 256 idiv 1 add
					dup 256 gt { pop 256} if def
				/Encoding
					256 array 0 1 bfCount 1 sub { 2 copy dup put pop } for
					bfCount 1 255 { 2 copy bfCount put pop } for
					def
				/FDepVector bfCount dup 256 lt { 1 add } if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont /FontBBox known
						{ CIDFont /FontBBox get /FontBBox exch def }
					if
					CIDFont /CDevProc known
						{ CIDFont /CDevProc get /CDevProc exch def }
					if
					currentdict
					end
				BaseFontNameStr 3 (0) putinterval
				0 1 bfCount dup 256 eq { 1 sub } if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup /CIDFirstByte exch 256 mul def
						FontType 3 eq
							{ /ct_FDDict 2 dict def }
						if
						currentdict
						end
					1 index  16
					BaseFontNameStr  2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{ /Widths 1 index /CIDFont get /GlyphDirectory get length dict def }
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont /Widths get
						begin
						exch /CIDFont get /GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{ exch pop }
			ifelse
			} bind def
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{
				2 index /CMap ct_resourcestatus
					{ pop pop exch pop }
					{
					/CIDInit /ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch /WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry (Adobe) def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-) search
									{
									pop pop
									(-) search
										{
										dup length string copy
										exch pop exch pop
										}
										{ pop (Identity)}
									ifelse
									}
									{ pop  (Identity)  }
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000> <FFFF>
							endcodespacerange
							1 begincidrange
							<0000> <FFFF> 0
							endcidrange
							endcmap
							CMapName currentdict /CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get /CIDFont findresource
				ct_makeocf
				}
			ifelse
			} bind def
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index /CMap ct_resourcestatus
					{ pop pop }
					{
					/CIDInit /ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry (Adobe) def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-) search
							{
							pop pop
							(-) search
								{ dup length string copy exch pop exch pop }
								{ pop (Identity) }
							ifelse
							}
							{ pop (Identity) }
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000> <FFFF>
					endcodespacerange
					1 begincidrange
					<0000> <FFFF> 0
					endcidrange
					endcmap
					CMapName currentdict /CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get /CIDFont findresource
				ct_makeocf
				}
			ifelse
			} bind def
		currentdict readonly pop
		end
	end
%%EndResource
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict /ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
  version
  cvi
  2015
  ge
} bind def
/AllocGlyphStorage
{
  Is2015?
  {	
		pop
  } 
  { 
		{string} forall
  } ifelse
} bind def
/Type42DictBegin
{
	25 dict begin
  /FontName exch def
  /CharStrings 256 dict 
	begin
		  /.notdef 0 def
		  currentdict 
	end def
  /Encoding exch def
  /PaintType 0 def
  /FontType 42 def
  /FontMatrix [1 0 0 1 0 0] def
  4 array  astore cvx /FontBBox exch def
  /sfnts
} bind def
/Type42DictEnd  
{
	 currentdict dup /FontName get exch definefont end
	ct_T42Dict exch
	dup /FontName get exch put
} bind def
/RD {string currentfile exch readstring pop} executeonly def
/PrepFor2015
{
	Is2015?
	{		  
		 /GlyphDirectory 
		 16
		 dict def
		 sfnts 0 get
		 dup
		 2 index
		 (glyx)
		 putinterval
		 2 index  
		 (locx)
		 putinterval
		 pop
		 pop
	}
	{
		 pop
		 pop
	} ifelse			
} bind def
/AddT42Char
{
	Is2015?
	{
		/GlyphDirectory get 
		begin
		def
		end
		pop
		pop
	}
	{
		/sfnts get
		4 index
		get
		3 index
	  2 index
		putinterval
		pop
		pop
		pop
		pop
	} ifelse
} bind def
/T0AddT42Mtx2
{
	/CIDFont findresource /Metrics2 get begin def end
}bind def
end
%%EndResource
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright (C) 2000-2003 Adobe Systems, Inc.  All Rights Reserved.
systemdict /setpacking known
{
	currentpacking
	true setpacking
} if
userdict /Adobe_AGM_Image 75 dict dup begin put
/Adobe_AGM_Image_Id /Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf () def
/AGMIMG_ybuf () def
/AGMIMG_kbuf () def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/doc_setup
{ 
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage /colorimage ldf
	}if
	end
	end
}def
/page_setup
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists {/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				 }ifelse
			 }ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode [ Decode 1 get Decode 0 get] def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode [1 1] def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub} currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{ pop 1 } currenttransfer addprocs settransfer
		}def
	}ifelse
	/img /imageormask ldf
	/sepimg /sep_imageormask ldf
	/devnimg /devn_imageormask ldf
	/idximg /indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/page_trailer
{
	end
}def
/doc_trailer
{
}def
/AGMIMG_flushfilters
{
	dup type /arraytype ne
		{1 array astore}if
	aload length
		{
		dup type /filetype eq
			{
			dup status 1 index currentfile ne and
				{dup flushfile closefile}
				{pop}
			ifelse
			}{pop}ifelse
		} repeat
}def
/imageormask_sys
{
	begin
		save mark
		level2{
			currentdict
			Operator /imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask {
					level3 {process_mask_L3 AGMIMG_&image}{masked_image_simulation}ifelse
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator /imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix /DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix /DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict /_Filters known {_Filters AGMIMG_flushfilters} if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint {
		0 get dup type /nametype eq {
			dup /DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			} forall
			not
		} ifelse
	}{
		pop false
	}ifelse
}def
/process_mask_L3
{
	dup begin
	/ImageType 1 def
	end
	4 dict begin
		/DataDict exch def
		/ImageType 3 def
		/InterleaveType 3 def
		/MaskDict 9 dict begin
			/ImageType 1 def
			/Width DataDict dup /MaskWidth known {/MaskWidth}{/Width} ifelse get def
			/Height DataDict dup /MaskHeight known {/MaskHeight}{/Height} ifelse get def
			/ImageMatrix [Width 0 0 Height neg 0 Height] def
			/NComponents 1 def
			/BitsPerComponent 1 def
			/Decode [0 1] def
			/DataSource AGMIMG_maskSource def
		currentdict end def
	currentdict end
}def
/use_mask
{
	dup type /dicttype eq
	{
		dup /Mask known	{
			dup /Mask get {
				level3
				{true}
				{
					dup /MaskWidth known {dup /MaskWidth get 1 index /Width get eq}{true}ifelse exch
					dup /MaskHeight known {dup /MaskHeight get 1 index /Height get eq}{true}ifelse
					3 -1 roll and
				} ifelse
			}
			{false} ifelse
		}
		{false} ifelse
	}
	{false} ifelse
}def
/make_line_source
{
	begin
	MultipleDataSources {
		[
		Decode length 2 div cvi {Width string} repeat
		]
	}{
		Width Decode length 2 div mul cvi string
	}ifelse
	end
}def
/datasource_to_str
{
	exch dup type
	dup /filetype eq {
		pop exch readstring
	}{
		/arraytype eq {
			exec exch copy
		}{
			pop
		}ifelse
	}ifelse
	pop
}def
/masked_image_simulation
{
	3 dict begin
	dup make_line_source /line_source xdf
	/mask_source AGMIMG_maskSource /LZWDecode filter def
	dup /Width get 8 div ceiling cvi string /mask_str xdf
	begin
	gsave
	0 1 translate 1 -1 Height div scale
	1 1 Height {
		pop
		gsave
		MultipleDataSources {
			0 1 DataSource length 1 sub {
				dup DataSource exch get
				exch line_source exch get
				datasource_to_str
			} for
		}{
			DataSource line_source datasource_to_str
		} ifelse
		<<
			/PatternType 1
			/PaintProc [
				/pop cvx
				<<
					/ImageType 1
					/Width Width
					/Height 1
					/ImageMatrix Width 1.0 sub 1 matrix scale 0.5 0 matrix translate matrix concatmatrix
					/MultipleDataSources MultipleDataSources
					/DataSource line_source
					/BitsPerComponent BitsPerComponent
					/Decode Decode
				>>
				/image cvx
			] cvx
			/BBox [0 0 Width 1]
			/XStep Width
			/YStep 1
			/PaintType 1
			/TilingType 2
		>>
		matrix makepattern set_pattern
		<<
			/ImageType 1
			/Width Width
			/Height 1
			/ImageMatrix Width 1 matrix scale
			/MultipleDataSources false
			/DataSource mask_source mask_str readstring pop
			/BitsPerComponent 1
			/Decode [0 1]
		>>
		imagemask
		grestore
		0 1 translate
	} for
	grestore
	end
	end
}def
/imageormask
{
	begin
		SkipImageProc {
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator /imagemask eq DeviceN_PS2 not and {
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get /DeviceGray eq and{
						[/Separation /Black /DeviceGray {}] setcolorspace
						/Decode [ Decode 1 get Decode 0 get ] def
					}if
					use_mask {
						level3 {process_mask_L3 image}{masked_image_simulation}ifelse
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not {
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file {
									Names {
										dup (None) ne {
											[/Separation 3 -1 roll /DeviceGray {1 exch sub}] setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq {true setoverprint} if
											/names_index names_index 1 add def
										}{
											pop
										} ifelse
									} forall
									close_image_file
								} if
								grestore
								end
							}{
								Operator /imagemask eq {
									imagemask
								}{
									image
								} ifelse
							} ifelse
						}{
							Operator /imagemask eq {
								imagemask
							}{
								image
							} ifelse
						} ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator /imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix /DataSource load
					/Adobe_AGM_OnHost_Seps where {
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator /colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource [
											DataSource 0 get /exec cvx
											DataSource 1 get /exec cvx
											DataSource 2 get /exec cvx
											DataSource 3 get /exec cvx
											/AGMCORE_get_ink_data cvx
										] cvx def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0 () /SubFileDecode filter def
									}ifelse
									/Decode [ Decode 0 get Decode 1 get ] def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator /image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
  			 							1 AGMCORE_&setgray
  			 							currentdict imageormask_sys
  			 						}{
  			 							currentdict ignoreimagedata
  			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator /image eq{
							AGMCORE_host_sep{
								/DoImage true def
								HostSepColorImage{
									invert_image_samples
								}{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}ifelse
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys} if
							}{
								use_mask {
									level3 {process_mask_L3 image}{masked_image_simulation}ifelse
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict /_Filters known {_Filters AGMIMG_flushfilters} if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	SkipImageProc {
		currentdict consumeimagedata
	}
	{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get /DeviceCMYK eq and
		currentdict/Components known and 
		Name () ne and 
		Name (All) ne and 
		Operator /image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load /exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			} /exec cvx
			] cvx bind
			MappedCSA 0 get /DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
					AGMCORE_avoid_L2_sep_space not currentcolorspace 0 get /Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{ 
					currentdict
					Operator /imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name (All) ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator /imagemask eq{
 											/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									[ /Separation Name [/DeviceGray]
	 									{ 
	 										sep_colorspace_proc AGMCORE_get_ink_data
											1 exch sub
	 									} bind
										] AGMCORE_&setcolorspace
										/sep_tint AGMCORE_gget AGMCORE_&setcolor
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator /imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name (All) eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					currentcolorspace 0 get /Separation ne{
						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentoverprint 
					MappedCSA 0 get /DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					Name inRip_spot_has_ink not and 
					Name (All) ne and {
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict /_Filters known {_Filters AGMIMG_flushfilters} if
	end
	end
}def
/decode_image_sample
{
	4 1 roll exch dup 5 1 roll
	sub 2 4 -1 roll exp 1 sub div mul add
} bdf
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
} bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub {
			dup currentdict /dataSource get /exch cvx /get cvx /exec cvx
			/exch cvx names_index /ne cvx [ /pop cvx ] cvx /if cvx
		} for
	] cvx bind
	end
} bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources {origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0 () /SubFileDecode filter
				BitsPerComponent 8 idiv string /readstring cvx /pop cvx /putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0 () /SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv {DataSource /read cvx /not cvx{0}/if cvx /mul cvx}repeat /mul cvx /add cvx
			}for
		/convProc load /exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2 /add cvx /index cvx
			3 1 /roll cvx /exch cvx 255 /mul cvx /cvi cvx /put cvx
			}for
	]bind cvx 0 () /SubFileDecode filter
	end
} bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs [ 3 -1 roll begin
		currentdict /MultipleDataSources known {MultipleDataSources {DataSource length}{1}ifelse}{1} ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt {1 add 2 div cvi}{exit}ifelse
			} loop
			string
		} repeat
		end ] def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	SkipImageProc {
		currentdict consumeimagedata
	}
	{
		save mark 
		AGMCORE_producing_seps not {
			level3 not {
				Operator /imagemask ne {
					/DataSource [ [
						DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse
						colorSpaceElemCnt /devicen_colorspace_dict AGMCORE_gget /TintTransform get 
						devn_alt_datasource 1 /string cvx /readstring cvx /pop cvx] cvx colorSpaceElemCnt 1 sub{dup}repeat] def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt [ exch {0 1} repeat ] def
				} if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process {
					CSA get_csa_by_name 0 get /DeviceCMYK eq {
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse
							4 /devicen_colorspace_dict AGMCORE_gget /TintTransform get 
							devn_alt_datasource
						filter_cmyk 0 () /SubFileDecode filter def
						/MultipleDataSources false def
						/Decode [1 0] def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate {
							/DataSource
								DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse
								CSA get_csa_by_name 0 get /DeviceRGB eq{3}{1}ifelse /devicen_colorspace_dict AGMCORE_gget /TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt [ exch {0 1} repeat ] def
				 			currentdict imageormask_sys
				 		}
						{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						} ifelse
 					} ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget /names_index known {
	 					Operator/imagemask ne{
	 						MultipleDataSources {
		 						/DataSource [ DataSource devn_sep_datasource /exec cvx ] cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource /DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						} ifelse
							invert_image_samples
	 					} if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict /_Filters known {_Filters AGMIMG_flushfilters} if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{ 			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN [
				AGMIMG_c 0 ne {/Cyan} if
				AGMIMG_m 0 ne {/Magenta} if
				AGMIMG_y 0 ne {/Yellow} if
				AGMIMG_k 0 ne {/Black} if
				] /DeviceCMYK {}] setcolorspace
				AGMIMG_c 0 ne {AGMIMG_c} if
				AGMIMG_m 0 ne {AGMIMG_m} if
				AGMIMG_y 0 ne {AGMIMG_y} if
				AGMIMG_k 0 ne {AGMIMG_k} if
				setcolor			
			}{	
				/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def
				[/Indexed 				
					[
						/DeviceN [
							AGMIMG_c 0 ne {/Cyan} if
							AGMIMG_m 0 ne {/Magenta} if
							AGMIMG_y 0 ne {/Yellow} if
							AGMIMG_k 0 ne {/Black} if
						] 
						/DeviceCMYK {
							AGMIMG_k 0 eq {0} if
							AGMIMG_y 0 eq {0 exch} if
							AGMIMG_m 0 eq {0 3 1 roll} if
							AGMIMG_c 0 eq {0 4 1 roll} if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				] setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation /Black /DeviceGray {}] setcolorspace
			gsave
			/Black
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 1 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Yellow /DeviceGray {}] setcolorspace
			gsave
			/Yellow
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 2 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Magenta /DeviceGray {}] setcolorspace
			gsave
			/Magenta
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 3 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Cyan /DeviceGray {}] setcolorspace
			gsave
			/Cyan 
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		} if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
} def
/indexed_imageormask
{
	begin
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup /CSA known {
					/CSA get get_csa_by_name
				}{
					/Names get
				} ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN {
					/devicen_colorspace_dict AGMCORE_gget /names_index known {
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					} ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator /imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN {
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget begin
					CSA get_csa_by_name 0 get /DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and {
						[/Indexed [/DeviceN [/Cyan /Magenta /Yellow /Black] /DeviceCMYK {}] HiVal Lookup]
						setcolorspace
					} if
					end
				} ifelse
				imageormask
				Indexed_DeviceN {
					end
				} if
			}{ 
				Operator /imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict /_Filters known {_Filters AGMIMG_flushfilters} if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not {
			currentcolorspace 
			dup 1 /DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		} if
		currentdict 
		Operator /imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask {
				level3 {process_mask_L3 AGMIMG_&image}{masked_image_simulation}ifelse
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
  /OPIimage
  {
  	dup type /dicttype ne{
  		10 dict begin
  			/DataSource xdf
  			/ImageMatrix xdf
  			/BitsPerComponent xdf
  			/Height xdf
  			/Width xdf
  			/ImageType 1 def
  			/Decode [0 1 def]
  			currentdict
  		end
  	}if
  	dup begin
  		/NComponents 1 cdndf
  		/MultipleDataSources false cdndf
  		/SkipImageProc {false} cdndf
  		/HostSepColorImage false cdndf
  		/Decode [
  				0 
  				currentcolorspace 0 get /Indexed eq{
  					2 BitsPerComponent exp 1 sub
  				}{
  					1
  				}ifelse
  		] cdndf
  		/Operator /image cdndf
  	end
  	/sep_colorspace_dict AGMCORE_gget null eq{
  		imageormask
  	}{
  		gsave
  		dup begin invert_image_samples end
  		sep_imageormask
  		grestore
  	}ifelse
  }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter /WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0 (%EndMask) /SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not {exit} if
	}loop
	WriteFilter closefile
	end
}def
/cachemask_level3
{
	currentfile
	<<
		/Filter [ /SubFileDecode /ASCII85Decode /RunLengthDecode ]
		/DecodeParms [ << /EODCount 0 /EODString (%EndMask) >> null null ]
		/Intent 1
	>>
	/ReusableStreamDecode filter
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type /dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode [/customcolor_tint AGMCORE_gget 0] def
				/Operator /image def
				/HostSepColorImage false def
				/SkipImageProc {false} def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA [ /DeviceCMYK ] 
			/TintMethod /Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components [ AGMIMG_colorAry aload pop pop ] 
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage /customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			AGMIMG_&customcolorimage
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt /AGMIMG_xSign? exch def /AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign? {floor 0.1 sub}{ceiling 0.1 add} ifelse exch
		AGMIMG_xSign? {floor 0.1 sub}{ceiling 0.1 add} ifelse exch
		itransform /AGMIMG_llY exch def /AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign? {ceiling 0.1 add}{floor 0.1 sub} ifelse exch
		AGMIMG_xSign? {ceiling 0.1 add}{floor 0.1 sub} ifelse exch
		itransform /AGMIMG_urY exch def /AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub  AGMIMG_llX AGMIMG_llY] concat
	}{
	}ifelse
	end
} def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					} if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf} true 4 colorimage	
		end
	} def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				} currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get /DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub} currenttransfer addprocs settransfer
						currentdict imageormask
					}{ 
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub} exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub} exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub} exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub} exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get /DeviceGray eq {
						{255 mul round cvi ColorLookup exch get 0 get} currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get /DeviceCMYK eq {
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub} exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{ 
							currentcolortransfer
							{pop 1} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get} exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{ 
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div} currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get /DeviceGray eq {
					{HiVal mul round cvi Lookup exch get HiVal div} currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get /DeviceCMYK eq {
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{ 
						currentcolortransfer
						{pop 1} exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div} exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div} exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div} exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict /setpacking known
{
	setpacking
} if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/doc_setup get exec
Adobe_CoolType_Core/doc_setup get exec
Adobe_AGM_Image/doc_setup get exec
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: (Page 1) 1
%%EndPageComments
%%BeginPageSetup
/currentdistillerparams where
{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse
{ userdict /AI11_PDFMark5 /cleartomark load put
userdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}
{ userdict /AI11_PDFMark5 /pdfmark load put
userdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse
[/NamespacePush AI11_PDFMark5
[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5
[{ai_metadata_stream_123}
currentfile 0 (%  &&end XMP packet marker&&)
/SubFileDecode filter AI11_ReadMetadata_PDFMark5
<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="3.1.1-111">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">genesis.dvi</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/"
            xmlns:xapGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xap:CreatorTool>Adobe Illustrator CS2</xap:CreatorTool>
         <xap:CreateDate>2006-11-23T17:48:35+05:30</xap:CreateDate>
         <xap:ModifyDate>2006-11-23T17:48:35+05:30</xap:ModifyDate>
         <xap:MetadataDate>2006-11-23T17:48:35+05:30</xap:MetadataDate>
         <xap:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xapGImg:width>256</xapGImg:width>
                  <xapGImg:height>184</xapGImg:height>
                  <xapGImg:format>JPEG</xapGImg:format>
                  <xapGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAuAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXnXmDyf+YdytzD&#xA;p+rl4rjXRqUdxJqFzaTQWH1eNPqsYtoGRgJBIVR6p9ln9RuWKpNP5K/Pq/0XT4dT812P6Tt5pHmm&#xA;sPrFls0qujs8KhJwsatEIXhVfi5lmZRiqa6JH+ZGgaV5W8s3WoWM+tXsmotqWpXAvNSjVEd54Y4j&#xA;NPbXD0R1TlI5Ip3xVlP1Lz//ANXnSv8AuFXP/eRxV31Lz/8A9XnSv+4Vc/8AeRxVbLZ/mGsTtHq+&#xA;kvIFJRDpdwKsBsK/pHauKuis/wAw2iRpNX0lJCoLoNLuDRiNxX9I70xVd9S8/wD/AFedK/7hVz/3&#xA;kcVd9S8//wDV50r/ALhVz/3kcVUobX8x2knEuq6TGiOFgYaZcHmnBSWI/SHw/GWWntXviqr9S8//&#xA;APV50r/uFXP/AHkcVd9S8/8A/V50r/uFXP8A3kcVUprX8x1kgEWq6TIjuVnY6ZcDgnBiGA/SHxfG&#xA;FWnvXtiqr9S8/wD/AFedK/7hVz/3kcVd9S8//wDV50r/ALhVz/3kcVd9S8//APV50r/uFXP/AHkc&#xA;VUrS1/MeS1he51XSYbh0VpoRplw4RyAWUMNQ3odq4qq/UvP/AP1edK/7hVz/AN5HFXfUvP8A/wBX&#xA;nSv+4Vc/95HFVKO1/MczzK+q6SsK8fRk/RlwS9R8VR+kNqHFVX6l5/8A+rzpX/cKuf8AvI4q76l5&#xA;/wD+rzpX/cKuf+8jiqlNa/mOskAi1XSZEdys7HTLgcE4MQwH6Q+L4wq0969sVVfqXn//AKvOlf8A&#xA;cKuf+8jirvqXn/8A6vOlf9wq5/7yOKoPWLvzbo2nS6lqev6TbWMHH17htJuysau4Tm/HUDxRS1Xc&#xA;/Cq1ZiFBOKqeh3fnfVdBsdXTWdJSC9t47kE6VdKAJEDbc79DTfYkbjfFIBPJE8vOH/UxaL/3Dp/+&#xA;8jkeId7Z4M/5p+S6NPOsrcY9f0Z2/lXTZyfw1HCCGMschuQV2gX/AJl/xHqmkazcWd2lraWV3a3F&#xA;nbS2h/0qW6jdHWS4u+XH6qpDAjqdsLBkeKuxV2KuxVjWvf8AKaeVv+j/AP5MDFWS4q7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqgtYm1KKwk/RkHrX0n7u3JCNHG7/Cs0qtLblo&#xA;oyeTqj8yv2d8VeReYfzh8pW3k2a4/MfR66tE4gutCtERry1g1O2Yqy+vLBMo+rymKWUCM8+SgbYq&#xA;yT8vfN1j5lvPNlpbma90+2mh9DSruCNTCjRGBrcP9ZuEZWa25cGjjaMsVccqhYZPpO1+S+LLH6oX&#xA;xDlWx+BZH/h3QuVP8KWlK05ejZ/zEV+7fMT/AJJf7n9bL+W9dfPL/wArP+PfFFaXpOmWt2sttoMG&#xA;ny8SPrEcdurAEA8ax/FvWn0ZZi5/3fD5+n9CD2nqs3pyeJw/0p2PlxFQsv8AlP8AWf8AtlaV/wBR&#xA;Oo5lIZBirsVdirsVY1r3/KaeVv8Ao/8A+TAxVkuKuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Ku&#xA;xV2KuxV2KuxV2KuxVTlt7eV4pJYkkeBzJAzKCUco0ZZCfsng7LUdiR3xVTg07T7e6uLuC1ihurvj&#xA;9buI0VZJfTBCeo4HJ+IJpXpiqIxV2Ksfsv8AlP8AWf8AtlaV/wBROo4qyDFXYqlHmnzAdB0yO+Fo&#xA;94Hu7O0ZEZV4C8uo7b1GJ7J6taAEn8Qq84n/AOcj9An0XT9W0bSL26gvZpIWS8R7L+7lWLhDJwmh&#xA;mmbnzESyA+mrM3GlCqmGhee7fzUfJHmb6s1vFfSarGkUAmuh+5LW4dT6MUnB/S5VaJaA74q9OxV2&#xA;KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KsB8h+a4fM3nbzRe&#xA;20LR2Nva6ba2krVrOkct8TMNqcWZzxoeg8dsANgee/w6fMb+4ht1GLwsssRNyhXF5SqzH/N5Hzv3&#xA;s+wtTsVdirsVY1r3/KaeVv8Ao/8A+TAxVkuKuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2K&#xA;uxV2KuxV2KuxV2KuxV2Ksd8/ahNa+W5oLZit5qTpYWxFeQM5o7rQMapEHcUB6ZXkBNRHORr5/qG7&#xA;suyoA5uOQuOIGZ/zeQ/zpVH4se/LLT47HWtTjReCvpmmNxpSlLnUE8P8jbtTp8NMmSJZJyHLjIHu&#xA;j6B0HSP7S6LSylPjyS+qeSRPw9PcP5v7aeh4XLdirsVdirGte/5TTyt/0f8A/JgYqyXFXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FWC+dZhd6/BbMaW2mQerI5+yL&#xA;i8LJFU7jaGGUGqsPjHJSu2HTzAymZ5YoGX4+F93kQXPnkGDQTmf8pKv82Hql85GP+lR3lmEw+ar6&#xA;NgA40XSC4AAHNrjUGbZQB9onMbSxIxRvnW/v6/a6bQwMcMAefCL953P2sszIcp2KobUNU0zTYFn1&#xA;G7hsoHkSFJbiRIkMkjcUQM5A5Mxoo7nFVmo6zo+meh+kr63svrUghtvrEqRepIRUInMryag6DfFW&#xA;O3upadqfmfylfabdQ3tlONQMN1bSLLE4EIUlXQspoQRscVZdirsVdirsVdirsVdirsVdirsVdirs&#xA;VdirsVdirsVdirsVdirsVdirsVdirsVdirzizpqcsl/Wr6zdPLxJG9q7ra2xB5Iw/dwJKArftH4T&#xA;sVpJrSzl/qshEfE8P+5JPf3HobvaU8MY6cfwRjD/ADpm593IyI76iyey/wCU/wBZ/wC2VpX/AFE6&#xA;jlzSyDFXYqxzz15E0rzpplrp2p3Fzb29rdx3oNo6xs7Rq6em5ZJKxushDAUr44qxKz/5x38lWmj2&#xA;ulJf6tJb2ryNWa7EwdJZkuHiaKSNoFVpYkYskauaULEVGKo2Dybp2gal5O0KC6vbqC3k1Oc3dzcy&#xA;G6lkmBndpZo/TL1eQ17Hvir0PFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYqkvnK7uLfy9cx2jcb694WNkw6ia6cQo4/1OfM+wyrPIiJrmdvm7DsvFGWeJl9ELnL3RHE&#xA;R8ar4pZpVnEutW9rACttYB0ijNT6a26C3CeK8lEUlPsnrxr8Rt1Y4fBxjl9XwAofbM8+7n0Gk1mW&#xA;WbUxMuZlKZ+775X8ERpVrFb+f9eKNIfW03TJH9SSSSjNc6hULzZuC+CrQDwxctkuKuxV2KuxVjWv&#xA;f8pp5W/6P/8AkwMVZLirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirs&#xA;VYtrk5ufNFrCtGj0S3a/dGpxa8ug1tZx7kfER6u3iVyuEPEzRj0jufx5Cy7TEfC0k5/xZTwD+rGp&#xA;S+3gHzRflu1VLi5lUMEiVLeEsCvwKKqVUgBKxenULQVH2QcOWRnqJyP8IEfj9Ut+u8u88vJ53COL&#xA;POX80CP++PTzHXotsv8AlP8AWf8AtlaV/wBROo5NzmQVH39MVdirsVdirGte/wCU08rf9H//ACYG&#xA;KslxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVp3SNGd2CogLMx2AA&#xA;3JOKQCTQYVpc0zaW+rMTDc+YLhr5C5KcYPggsE5n4Fb4oG4EipLbNvk+zoAgzPXf4e7+oD7j3Ox7&#xA;XkITGEfThjw/53OZ/wBOT8AGSeXbeKHSojEgjjmrKiKAoCMf3YoFSnGPiOmYelkZR4zzmTL/AExv&#xA;7q57ug7PF4uP+eTL58ug6UgbL/lP9Z/7ZWlf9ROo5kuakWkadrWp+ep7nzHYqo0h5Z9Enjvr6L9y&#xA;7ywwPLpsbS6ezlGmHrer6nHjyjStFVZ7irE/zF/x79Q0z/Bn+9X6QiOpbW9TZiOQstbk8VVpRGrs&#xA;oLhSSqk7Yqw+XUv+cjL7R9Olk0ey0jUhO/1uOzuLaeq+qvD1Y7gugh9HnUxTmQycdlWuKpho8nnj&#xA;1fJLeZLdP8RGTVPrcM88JKxHl6XKW0hELuIeFeEagnwxV6ZirsVdirsVdirsVdirsVdirsVdirsV&#xA;dirsVdirsVdirsVdirsVdirsVdirHfOUjXcNp5dhJE2tyGGcrUFLKMBrt6jpVCIwf5nGUZ96h/O+&#xA;7q7XssCBlqDywix/XP0D5+r3RKnqtJpTHBRFdvqluyDiAq/uSux47SSseJK19PYGlcyNYeDTmI5z&#xA;qPxn16co79efMcnne0Jk4yL9U/T8Zbfpv4MlRFRFRRRVACjwA2yIAAoOZGIAocmN6U123n/XvrEc&#xA;cYGm6YIfTkaTlH9Z1DizVSPix7qK08ThSyXFXYq7FXYqxrXv+U08rf8AR/8A8mBirJcVdirsVdir&#xA;sVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirum5xViekXRu5dQ82mkkdwostCiZgga3&#xA;R+KMC1BW6nNR4rwyvSw8SfF0P+5HM/p9zte0D4GOOnH1R9U/656f5g2/rGSL022VtWVAeQtgS7EK&#xA;rN6ZaFGcIVWrytO/2aeAFMlrMnHmhH+aOM++W0fs775c3m5+vPGP8wcR/wBzHr/W6dPJkOSc9j9l&#xA;/wAp/rP/AGytK/6idRxVkGKuxV2KuxVjWvf8pp5W/wCj/wD5MDFWS4q7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FWOeabia/nh8r2TlJ79S+pTIaNBYA8ZGBH2Xm/u4/pb9nK&#xA;Mx4jwDrz937XbdnQGKJ1Mx6YfSP50+nwj9UvgP4kVeyLC8VtZFIktFWGCNXVFE8q8IY+JFKJGS5W&#xA;tQKHi22bHBjAjuNj5fwjn9uw+8OpyTMpEk2T96r5fiQWjTxkmKYhbfoB6EQEcdAp4gMF5fDQb9M1&#xA;mnmchllP8cr+HTqefP4uDoTxiWT+edv6o2HU8/q+KaZkucx+y/5T/Wf+2VpX/UTqOKsgxV2KpF5w&#xA;866B5SsbS81mYxRX17b6dagUq090/Fd2KqFReTuSdlU9TQFVjE/5+flsbO1u9Nv21iK5ZgyWKhpY&#xA;Y0mS3M0sMrQyhPWlRF4qS1aqCASFW7fzpovmDUfJuv2haKyupNThQOY5CJIgYGHK3eeJhzjNGRyp&#xA;HfFXoeKuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kpdr2t2+j2BuZEaaeRhD&#xA;Z2kf95PO/wBiJB4tTr0AqTsMryZBEW5ej0ks8+EGgN5SPKMepP43Ow3QWi2D6PYXOo6pIsur3zCb&#xA;UJUqVMh+GK3hFORSOojjFKsd6cmOS02Ek/0pc/x3AfrZ6/VxyERgKxQFRH3yP9KR3Py5AKNwbhv9&#xA;GEv+kMxhbg5YfWrheUhFQjcYIa8d++67DJ9o5Kx8MfqyemP9Xv5+RJ93Pm6PWzPBwD6pnhHx5n4R&#xA;ssiijSKJIkFERQqjwAFBkIxEQAOQcyEBEADkF2SZMa0q7t7jz/rwhfl6Om6ZFJsRR1udQqNwMVZL&#xA;irsVUrm1tbqL0rmFJ4uSSenIodecbiRGowIqjqGU9iK4qli+TPJ62cFkuhaetlaym4trYWsAijmI&#xA;oZEThxVyP2gK4qlN7punab5o8pWOnWsNlZQ/pAQ2tvGsUSAwhjxRAqipJOwxVl2KuxV2KuxV2Kux&#xA;V2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVAa1rdho9n9Zu2YlmEcFvEpeaaRvsxxRjd3PgPmds&#xA;hkyCIsuTpdJPPPhj7yTsIjvJ6BL9G0e9n1Aa/rigamUMdlZKeUdlC+5RT0aZ/wDdkn+xX4RvXCBJ&#xA;4pc/u/b3uVqtVCMPAw/3d3KXWZ7/ACiP4Y/E78hF3eNJMZ0AeO2cw2URk4rPdmqHlxVyEi3U9aHk&#xA;SvwKc2WPHQo8zuduUf1n4dBfqLqiXaVbh7ySXmZIrTnCkhJpJO7criSlSPtfCB+z8QG2asT8bMZ/&#xA;wx9Mf0/LaN874u9wcP73MZ/ww9I9/wDEf975VJN8yXYOxVj9l/yn+s/9srSv+onUcVZBirsVdirs&#xA;VY1r3/KaeVv+j/8A5MDFWS4q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqkF95qV7&#xA;mTTtBg/S2pxnhNwbja27f8vNxRlUj+ReT/5PfKZZt6jufsHvP4Ls8PZ1RGTOfDxnl/Ol/Vj1/rGo&#xA;+appHlw293+ldVuP0jrbKU+sleMUKHrFbR1Ppp4mpZv2icYYqPFLeX45MdVruKPhYhwYe7rLzmep&#xA;+wdAjbmeS5mksrSTgyUF1cKK+lyAPAdvUKmo/lqGIoRXNhERAlIe4d/7Pv3DrUA0pEURsgIw4+q6&#xA;PCpHphQPin4gqCqqtQK/ZG1OWY+vzShHgH97M/b/AMd5nz27nE1WUxiIw+ue0f19NgN04tbaO2to&#xA;4I6lY1CgsSWNOpJO5J6nIYsYhERHRyMOIY4CI5BVyxsdirH7L/lP9Z/7ZWlf9ROo4qyDFXYq7FXY&#xA;qxrXv+U08rf9H/8AyYGKslxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KqV3eWlnbvcXc8dv&#xA;bxisk0rKiKPdmIAwGQAss8eKWSXDEGUj0G5SL/GK3vw+XrCfWK9Lsf6PZD3+sygBx/xiV8p8e/pH&#xA;F93z/Vbsv5L8PfPOOLy+qf8ApRy/zjFafLmsarv5i1D/AEc9dK04vBbkeEs1RPL96Ke64+FKX1n4&#xA;D8Wka7Fh/wAXh6v586lL4R+mP+yI6ST6ysbKxtY7SygjtrWIcYoIVCIo8AqgAZdGIAocnW5c08kj&#xA;KZMpHqdyhmu57wmLTyBECokvjulDuwhFfjbjty+yCf2qFcyRjEN58/5v6+4eXM+VgtVqMi2rwPbo&#xA;EXS4mc3kjVIchyZIwOhDPX1K17rTfYTy+GOOR9VbeW2x+XL4H3wnMRBJ2iFXTo5Z5W1K4Uo8q8La&#xA;JtjHDWoqCBRn+0wPTp2zW6eJkfElsTyHdH9Z5nu5OLpYSnI5pCidojuj+s8z3cuiYZluc7FXYqx+&#xA;y/5T/Wf+2VpX/UTqOKsgxV2KsX/MHyU3m7TtPshcw2y2V9DfO09ubnmIlccEpLA0TnntIrcl/Zod&#xA;wqwuX8jNfvNH06x1nzze6xPYTvMtxeW6vTnKsvKIiRZ45hw9MSGZgI2ZVUcq4qmGj+S5PLUvkny9&#xA;JqL3T2kmqSteQRR2YYzcp+CwRVjjRfU4hF2oMVemYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqhNS1&#xA;jSdMh9bUryCziPR55FjBPgORFcjKcY8zTfg0uXMaxxlM+QJSkeb/AK3tomlXupg9Lgx/VLf5+rc+&#xA;lzX3jV8q8e/pBP2fe5v8mcH99khj8r4pfKF1/nGLvqXnS/obq/t9GhJ3hsE+sz08PrFyoj/5IfTj&#xA;w5Jczw+7f7T+pfF0mL6YSynvmeGP+lib/wBmrWvk3QYp1ubiFtRvU3W71B2upFPinqllj/55qowj&#xA;BEbnc+e7DJ2pnI4Ynw4d0Bwj41uf84lO8udchJdThDtHbo93MteSQgEA8eXFnYrGpII2LV3B6ZcM&#xA;J5n0jz/VzRalcQepE82qSrHbR8maBWpDw40/euQpfuey70INK5KEqNYx6u/r8O77/PovvWmZ7teX&#xA;xWmmxFvUkf8AdtKiinw9Ckdf2jQmm3wmuCRjiBMiDL7B7/P8c2MpACzsAp28I1AxMI/R0m3oLa34&#xA;lPVKABWK7UjX9lSN9m8M1dnUS4pfRfX+I958u4Hnz7nBiDqJCR2xDkP5x7z/AER0BG/1dybZmuxd&#xA;irsVdirGtKt/R8/68fVkk9XTdMk/eNy48rnUPhXwUdhirJcVdirsVdirEfN1/HY+a/K9xJFNMoN8&#xA;OFvE80m8A/YjDNTIylwi27BgOWXCDEf1iIj5lMP8YWf/AFbtU/7h91/zRlfjjul8i5n8lz/n4v8A&#xA;lZD9bv8AGFn/ANW7VP8AuH3X/NGPjjul8iv8lz/n4v8AlZD9bv8AGFn/ANW7VP8AuH3X/NGPjjul&#xA;8iv8lz/n4v8AlZD9bv8AGFn/ANW7VP8AuH3X/NGPjjul8iv8lz/n4v8AlZD9bv8AGFn/ANW7VP8A&#xA;uH3X/NGPjjul8iv8lz/n4v8AlZD9bv8AGFn/ANW7VP8AuH3X/NGPjjul8iv8lz/n4v8AlZD9bv8A&#xA;GFn/ANW7VP8AuH3X/NGPjjul8iv8lz/n4v8AlZD9bv8AF8J/u9K1STx/0KVKf8jAlfox8byl8l/k&#xA;w9cmIf54P3W7/Fn/AGptU/6Rv+bsfG8pfJf5N/2zF/pv2O/xTdkVi8vapJXZfgto69v92zx0/wBl&#xA;THxj/Nl9n60/ydHrmxD4yP3QP2O/TnmST+48tzx+Bu7q0j+/0JLnHxJ9I/Mj9q/k9OPqzRP9WMz/&#xA;ALoQWk+fritF0vTAaUJa4v2A71FLEV+nB+9P80fM/qTWhh/quT/Sw/6qO/wxqVyP9ymv3s6nrDaF&#xA;LGP6GgHr/wDJbHwifqkfht+37V/lDHD+7xQHnK5n/Zen/YovTfKvl3TZjcWenwpdH7V2y+pcH/Wm&#xA;k5SH6WyccMI7gbtGftHUZRwzmeH+byj/AKUUPsRsuo2EUnpyXEay1A9PkOdWIUDiN9ywH05kRxTI&#xA;sA04Nqf6RLCsFrcTePwelT4S3+7zF4Abdz86S8GuZiPt+61td/uUc0PowL4jlMSKr0qIgu3Id+x9&#xA;sHoHefs/X5Luh7iGwgUNqN0ZuQICTuAr8Q70EKBUeik/sk7DwyyEpy+gV7vh15j59fNfeqCe5ZBD&#xA;p9r6aKCqSzD0414lRtGKSHYkgUUHj1AIOR4Y3czfu3Pz5ffz5dFUrkWVs6SX8rXNwWLW8JXk1eQY&#xA;elCg34bfFQkUqT1zHzayOMVyvoNyf0+/p8GjNqIY64jueQ5k+4Dc/o6tpaXN+Vl1BfStxRo7AEEd&#xA;BvMV+0Rv8NePzOYYxSy75No/zf8Aiu/3fT73HGCeb1Zdo9If8X3/ANX6feUyzNdg7FXYq7FXYqx+&#xA;y/5T/Wf+2VpX/UTqOKsgxV2KuxV2KsW8yPKnnHyuYo/Vb/T/AIahf+Pcdz75KIB5mlT/AOsX1R/o&#xA;m21T6i9yAfuBJyfBH+d9iGjc6gFJFnU0qB6i9eNaf8FtjwQ/nfYq43F7zI+q/Dypy9RenIitP9Xf&#xA;Hhj3/YrQuL/vZ0/56L4A/rJH0Y8EP532K76xf7/6H22/eL1+Lb8B9/tjwQ/nfYrvX1Emi2qAdy8t&#xA;P2l/lR/2Sx+YA71Dww7/ALP2+78BWvV1bgT9Wg502HrvStDtX0eladv1ULWPvPyH/FLuu9TU6/3E&#xA;NOXX1nrxr1/uutO2NQ7z8v2rut9XVuAP1aDnTceu9K0G1fR6Vr2/XQNY+8/If8Uu7Zk1Su1vBT/j&#xA;M/i3/FX8oU/SR2qzUO8/L/j3v/B2d1B766A+J7SEBaszTF6H4O3GPb4j38PHJjFH+kfh7/f+LW1j&#xA;6gNg2q2aA1qQoB+y52rKR+zXodlb6JDF/Ql+K/o/ix8RbXrQkgG+uZxyHIQx8lrzQU5QxVAr/ldC&#xA;1dhs8J/mxHvPv7z+ju+KtaCwdQy2NzegKaJNzbbgwpS7dRVlcr9O/ehEpj+KMfd7/wCiPiqLja5T&#xA;4beySGPkSwd1StW3YCMSVr13plRETzlf486S2E1WRfikhgJHxKitKVJX9l2MYNG8U+jG8Y6E/Z9m&#xA;/wB67qc8dvEed7fuFryVXkWFR8RIFUEZI3C0YnYCu9a1z1MIDfhj7/2teTLCG8pAe80h7e90qIf7&#xA;jLRrh2VQXt46BgFULymfgh+GnVsxZ9o8f08WT3cvmaj173F/PwP92JZP6o2/0xqP2q/p6zcj95Il&#xA;hGeoipLL3/bccF/4Fshw5p8yIDy3PzOw+RTw6jJzIxjy9UvmRQ+RV7TTrS0LPEn72T+8ncl5H/1n&#xA;arGnbwy3Fp4Y9wNzzPMn4827DpceOzEeo8ydyfeTuicuch2KuxV2KuxV2Ksfsv8AlP8AWf8AtlaV&#xA;/wBROo4qyDFXYq7FULq36S/RV5+jOH6S9CX6j6v936/A+lz/AMnnSuKsCttF/MK8sfLWo6na219q&#xA;mmyaiL+01SWGCR4bgvHbFnsobm39QQ8efBafjj4k47x5++mEyQNhad+n5sqD/hbRqihB/SD9mDD/&#xA;AKV/ZlB+jB+az+f+m/Hm1cU/5n2tGHzSVKnyropUjiQdQelOPCn/ABz/AOX4f7MfzWfz/wBN8fvR&#xA;x5P5n2/sdLH5wYOyeWdGWZqsspv5Go5Yvy/3gFfjPL5nH8zm5b/6b4fqTxT/AJv2rYYPNyRoH8r6&#xA;K0gADuL91BIVVJp9Q22UfQMfzWfz/wBN+O8rxT/mfb+xd6Xmvf8A51XRtxQ/7kH3Hxbf8c//AIsb&#xA;7z44/ms/n/pvx3fYjjyfzPt/Y36fmwGo8raNXrX9ISdirf8AVv8A5o1P0DwxOpzef+m9/wCv7Sni&#xA;n/N+1SitvOAM6y+WdEeGRgIo/rzgLH6YQof9APLcufk1PmfzWe+v+mXin/M+39iJWHzUaMfLeiq1&#xA;ee+oS15VrXbT+td8H5jPX/Hj+pN5P5sf9N/x1oWnmbgE/wANaHwA4hfr8tAKBaU/R3SigfRkvzOf&#xA;v/2R/Uvr/mx+f/HVK4tPOLPC0Pl/QkCuWmDXszclIkNAf0eKH1JS1fn44PzGfv8A9kfLy7gPkFPi&#xA;d0fmf1K6/wCOU48dD0VeFAtL+4FKUpT/AEDb7IyByZj1HzP470fvf6P2tm6/Myhppmi17H6/dUrv&#xA;/wAufyyusvfH5H9aKzd8fkf1+5Sa4/NWo4afoQFdwb28Pw16f7yDemRMc386P+lP/FMTDUfzof6U&#xA;/wDFqUT/AJsemoltdGLhQGZL64FWFKnexPWh7d8Hh5usx8I/tLHws555B8IfrkfNd6f5lMDzgsjX&#xA;supsoGxHbSq9/Ht88fy8zzyS/wBj/wASv5WZ55Z/7Af738V73fVPOzGsul2M3s+t3vHqT9lbBV70&#xA;6Y/lInmZH/OP9i/kYH6jOXvlL7gQHWlt51t7iWRdA0QIePpU1GcOKKAeTnTiWrxH3ZOGmxx5RF+7&#xA;8dzZj0eGG8YxB92/z+AR313z/wD9WbSv+4rc/wDeOy9yXfXfP/8A1ZtK/wC4rc/947FVOW7/ADGa&#xA;SExaTpCIrkzqdTuSXTgwCg/o/wCE8ypr7UxVU+u+f/8AqzaV/wBxW5/7x2Ku+u+f/wDqzaV/3Fbn&#xA;/vHYq7675/8A+rNpX/cVuf8AvHYqp2t3+YyW0SXGk6RLcKiiaRdTuVVnA+Jgv6PNAT2xVU+u+f8A&#xA;/qzaV/3Fbn/vHYq7675//wCrNpX/AHFbn/vHYqs0Cw8zf4j1TV9at7O0jurSytLWCzuZbs/6LLdS&#xA;O8jSW9px5fWlAADdDvirI8VdirsVdirD/Pn5dw+bSxfUJrLlpt7ptIzLSt3JBIktEliH7trb4l/b&#xA;U8WPHYqswxV2Ksf8z+T7fX77Sbqa5mg/RjXdUiklT1EvLOW0cVjkj4OvqhlkHxLQhSvInFUh8u/l&#xA;bNpHmPQtbk1OO4l0XRYdCIW1aN5orcyemxd55VQH1AWCpyLL9oLVcVZ9irsVee2n5TG1/MUebk1N&#xA;JLcXlzf/AFGa3kluFlurVbZgl49wWSNeLH0xHw3pT4I+Cr0LFXYq881X8qJ7rzjH5lt9UiR4r99S&#xA;S3urWS5ZZGtLa2VI5hcxPGga15kLQNXh9kEMqnP5d+Rj5O03UbL64t4t9qE2oKUhMIQzqgdTyknZ&#xA;2Z0Z2Yt1aiqqgKFWS3V1a2ltLdXcyW9tApkmnlYJGiKKszMxAUAdScVQHmnQ11/y1quiGd7UanaT&#xA;Wv1mMtyjM0ZQOOLITxrWnIV6YqxTQtJ8ufl1fa5qOueYtPs4fMN0bq3juPR09ECElvillb15C03x&#xA;yHfoNlCgKs6tLu1vLWG8s5o7m0uY1mt7iFg8ckbgMjo6kqyspqCOuKrb+zjvbC5spWdY7mJ4XaN3&#xA;jcLIpUlXjKOp32ZWBHY4q8ltv+cfpINA1jRv01byxaxBpNtK0lhJTjpDtKrScLuN5HlkYVJccUAQ&#xA;ClKKvWdOtXtNPtbR5TO9vEkTTFVQuUUKWKoAq8qVoopiqIxVinnzyDH5uGnhtUu9KexN0PXsn4yN&#xA;HeWsltIq8uUatSSokKMy7hePInFU58saMdD8t6TopnN0dLs7ez+ssoQyfV4lj5lQTx5ca0riqZYq&#xA;knmXyydauNJnS+msZNKuZLlHh3LepaTW1ArEx8lM4dWdGoVpTc4qwzyr+S82gaz5dv8A9Otfx+XP&#xA;r8du1zblrqWC/eaRkkn9bhy5zgvIIeTcABxBbkq9OxV2KvP778p1uPPlr5sTU+L21/LfrbyQvM6i&#xA;a2tLd4o5Hm4IG+pdTG1A5CBSA2KvQMVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdiqA8waLaa&#xA;7od/o14zpa6jbyWs7RECQJKpRipYMAaHaoxV5no35GSaL5pgvNL1JrXS7OzS3t7hSi3rsL62unjk&#xA;+rw237t0tmRv3pD8yzJyMjSqpxof5W6ja2tpZ65rk2uenbwLc6jKZFuTNY6n+kbbj6z3bFG5cJeU&#xA;hNEWnX4VWW+VNHn0fQbexuGRp1aWaURV9JHuJnnaOKoU+nGZOCVA+EDYdMVTbFXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq//2Q==</xapGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xap:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xapMM:DocumentID>uuid:BA9822BCEB7ADB1188C7FE7CDF27E46F</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:DAC4C9BDEC7ADB1188C7FE7CDF27E46F</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:B99822BCEB7ADB1188C7FE7CDF27E46F</stRef:instanceID>
            <stRef:documentID>uuid:B89822BCEB7ADB1188C7FE7CDF27E46F</stRef:documentID>
         </xapMM:DerivedFrom>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>
%  &&end XMP packet marker&&
[{ai_metadata_stream_123}
<</Type /Metadata /Subtype /XML>>
/PUT AI11_PDFMark5
[/Document
1 dict begin /Metadata {ai_metadata_stream_123} def
currentdict end /BDC AI11_PDFMark5
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
Adobe_AGM_Utils begin
Adobe_AGM_Core/page_setup get exec
Adobe_AGM_Core/capture_currentpagedevice get exec
Adobe_CoolType_Core/page_setup get exec
Adobe_AGM_Image/page_setup get exec
%%EndPageSetup
Adobe_AGM_Core/AGMCORE_save save ddf
1 -1 scale 0 -173.687 translate
[1 0 0 1 0 0 ]  concat
% page clip
gsave
newpath
gsave % PSGState
0 0 mo
0 173.687 li
245.08 173.687 li
245.08 0 li
cp
clp
[1 0 0 1 0 0 ] concat
gsave % PSGState
245.08 173.687 mo
0 173.687 li
0 0 li
245.08 0 li
245.08 173.687 li
cp
clp
.4 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
35.5283 157.777 mo
37.7148 157.777 li
240.664 157.777 mo
238.479 157.777 li
false sop
/0 
[/DeviceRGB] /CSA add_res
0 0 0 rgb
@
35.5283 132.031 mo
37.7148 132.031 li
240.664 132.031 mo
238.479 132.031 li
@
35.5283 106.284 mo
37.7148 106.284 li
240.664 106.284 mo
238.479 106.284 li
@
35.5283 80.5376 mo
37.7148 80.5376 li
240.664 80.5376 mo
238.479 80.5376 li
@
35.5283 54.792 mo
37.7148 54.792 li
240.664 54.792 mo
238.479 54.792 li
@
35.5283 29.0464 mo
37.7148 29.0464 li
240.664 29.0464 mo
238.479 29.0464 li
@
35.5283 3.2998 mo
37.7148 3.2998 li
240.664 3.2998 mo
238.479 3.2998 li
@
35.5283 157.777 mo
35.5283 155.59 li
35.5283 3.2998 mo
35.5283 5.48584 li
@
61.1709 157.777 mo
61.1709 155.59 li
61.1709 3.2998 mo
61.1709 5.48584 li
@
86.8125 157.777 mo
86.8125 155.59 li
86.8125 3.2998 mo
86.8125 5.48584 li
@
112.455 157.777 mo
112.455 155.59 li
112.455 3.2998 mo
112.455 5.48584 li
@
138.096 157.777 mo
138.096 155.59 li
138.096 3.2998 mo
138.096 5.48584 li
@
163.739 157.777 mo
163.739 155.59 li
163.739 3.2998 mo
163.739 5.48584 li
@
189.38 157.777 mo
189.38 155.59 li
189.38 3.2998 mo
189.38 5.48584 li
@
215.023 157.777 mo
215.023 155.59 li
215.023 3.2998 mo
215.023 5.48584 li
@
240.664 157.777 mo
240.664 155.59 li
240.664 3.2998 mo
240.664 5.48584 li
@
35.5283 157.777 mo
240.664 157.777 li
240.664 3.2998 li
35.5283 3.2998 li
35.5283 157.777 li
@
0 0 0 rgb
%ADOBeginSubsetFont: Helvetica Initial
%ADOt1write: (1.0.24)
13 dict dup begin
/FontType 1 def
/FontName /Helvetica def
/FontInfo 6 dict dup begin
/Notice (Copyright (c) 1985, 1987, 1989, 1990, 1997 Adobe Systems Incorporated.  All Rights Reserved.Helvetica is a trademark of Linotype-Hell AG and/or its subsidiaries.) def
/Weight (Medium) def
/ItalicAngle 0 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 40 /parenleft put
dup 41 /parenright put
dup 45 /hyphen put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 56 /eight put
dup 57 /nine put
dup 76 /L put
dup 84 /T put
dup 89 /Y put
dup 101 /e put
dup 103 /g put
dup 108 /l put
dup 111 /o put
def
/UniqueID 43142 def
/FontBBox {-166 -225 1000 931} def
end
systemdict begin
dup /Private
13 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-19 0 718 737 523 538 688 703] def
/OtherBlues [270 281 -220 -207] def
/FamilyBlues [-19 0 718 737 523 538 688 703] def
/FamilyOtherBlues [270 281 -220 -207] def
/BlueScale 0.0437917 def
/StdHW [76] def
/StdVW [88] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
22 dict dup begin
/space <1C60D8A8C9B854D00D> |-
/parenleft <1C60D8A8C9B81F2C027D90222AF37AF8158DABD8A6A3309F2136
FACBE1848A44C17EBCB6720936CA51DBF738C2EEE54BA4F168ED7CF54A35C3CA
C2EC5792742EF714EF05> |-
/parenright <1C60D8A8C9B81F2C3A8416F95B41DEC1B2BC8682121EE1FC7A7
6516A86A96EAF9A7B20C852F99192A17B1BC2E1C3BBEEF7820FA171548238E9D
502CFB76D8CAB7DA316A1> |-
/hyphen <1C60D8A8C9B81F2C7AA0A4886749083959B4683A19B1432D49D2312
3C29302> |-
/period <1C60D8A8C9B854D0E112FCA896665672EF12164189457C7632C9> |-
/zero <1C60D8A8C9B7EF326C968E306016D52B972317960D8F5FD9CF1940741
2ACDAB79CA610AF5680AA7B72207450A6242E2E0D68A5786F14263E889E5C8F2
E3B1F3B57C131555AFBBA2F2574AAA6D70E3BCBA1C3BCCEEE066DF7> |-
/one <1C60D8A8C9B7EF322B88E7B3B83FEFDBAEDBDBF34DA8137760E7130B21
E4AD345C85AC723F334BEB61938BD65CFC89B4FB9FF8> |-
/two <1C60D8A8C9B7EF326B521ECF54C8B5A1823FE69FA06387976EF15912CA
2CDA2533C9465BA7A26890CB14E00D5302DA30754A8D882285488F566A848DB1
47F35FB324475F64975761151E92421F0A87A071DBDCE313F43B7ED0EE45382A
201B4EE4186F1FFE753A5DFF15AB1D98FE235181891E842EE4EC730EB3A21CE3
8A847AF33F417CDE> |-
/three <1C60D8A8C9B7EF32628E1261785C20D980324E75073C191110FF1DF4
F419F448F462DDCBF01F49514B54CF7F0EB797563420F11FA9B2A870CA2FAFCA
7BF082E8CA0E2FF35D921F9F1AC34584712B0A0077B0C704E6D603F8AD41559F
54EB34B872207887B41FB66A1203507BC16DAB327994FA639B9001AE05899646
700CF8E1B6168C5B7CF545795406B8E1F23BB3C2F5D73EC7968D39A5B597FC2B
C81D1DC416629EB76E1C99970D381D679CD5A57691EAF8> |-
/four <1C60D8A8C9B7EF322BF511E331CA00D363470942D767E1013D8E7F4F5
9F447A73A07F5975B5A79C571CD13B4D3557C550D5B9A82EC34D373E687DACA8
586AE16B88F81251D9B> |-
/five <1C60D8A8C9B7EF322448D34FC69162D5B3FA33847725A6C54ED91995E
45D690B7D0E476479D9EDB4F61F0B8E7F37F7415ECCEF12BD0BB3A993663B38C
8EEAA49F314551016ECC1F8DE4119690672560B970B6156CCA876B5A96262978
DF14B4FCFDE401A9555> |-
/six <1C60D8A8C9B7EF326DA8A82F3E3A701BDBF87B0445B24BB4A9441F8832
C322D1BC33CF817D969D30356F5A9C7B6A3BC04BCB60307EEA3C8DBDCAEDF63B
B0D16D5E88C603BCDDAF740BE4D413C23FF83ABB568EDD80EC21C6080EFCCE97
BC5B698D120BBDD3ACB1C21306A55CFC0AF870A681C2F910A278AFB09345386F
B78FE3E94B4F156D6934F4> |-
/eight <1C60D8A8C9B7EF3215BE57159D4F4BFA3C872F39ADA92BFE9288487A
97C6EFD98F578BBC2816F32D04509AD26EEA95F04BA1945FA81AF290563239CF
0739378BE51FE126D55A1BC75807D245336424C9214BC46BA6D4CEC05163B30F
75014D6052F2FC7397D286353B5ED17ABCA76ED3D83B8303060D3490C1FF5CCC
7BE6E338C40F50110AC16AF7E8E791FB357412BEC619138DE3107B599DC60AB8
D303142F26A30837419BF59F47881153A58F64FE59AE91D9C7C833E81BE56AAE
FBE2F7B6282D006375F76B8AD9A83CFA32DAD6A43E42C103A582803691A9856C
CFF6D9043F2C28AC> |-
/nine <1C60D8A8C9B7EF3269F2EE00CCC54AA901B58E3342A8ACDDA83E02894
7800007DD8FAB47CB83597A69284A9AD52682034EDE1FD4EE773D7A4C1499B5E
2843E7D4A9122F019423C7E9087E19CD704000BDD77D92B19B782B5E4EC4F94C
9D98FE9DEF57DE87BFD071B41B0BCB95F52B431132FC483CDBB2300794D70> |-
/L <1C60D8A8C9B7EF320BA4569ADA1A62F9417302633EE9BCE157C90BCFD40E
F6F5B683D99DCB96> |-
/T <1C60D8A8C9B7D8BE16B1D70AB2BD181F58DE40F0E3CD1A1D5C3F8A429EC8
AA52E3367E11FCDA163FA6821185> |-
/Y <1C60D8A8C9B64EDFF4647483CBEF782D0E8F5BD8B6A07FFF5A1B91EC4818
8F848372EF7CF2BD8B08FDFBE28F89A4D57E09E041D229E902063B> |-
/e <1C60D8A8C9B7EF326F03D0F4E599F9BA01540FB0E0E85D7F225CDC294805
3BFC3EBD8940FD214D65182E7E2A6BF280C1D3E71E32DCA4B45882394B8537B4
55EEE6231FF45D6BCFA8256009524D08C8BF5B282ED3F5CE087BE2CCF3F7D8A7
3D66E823FC9A9819C98A55> |-
/g <1C60D8A8C9B7EF326F0C168637D7A49AFFC209EC4BD7378EE8A777DA14ED
0433ABB575BAA4A098791F7EC46D250F5BCBA737E6ADD6E1EA28A72C69A1D253
4789ED43F588B444BB33EF91B59EF2C4FE743D22BB1490B1C3D985CEC86DB4CA
EC82645FBE79A010F5150407B5C45EDC871B2352EC6CDA69E6218B8BDC142A04
2A82C9883A9AD58050E49048D70FE68B76C0D9A131CC220EC7E7E2F97A2B0A63
67D497A8C9EC9D8ECB2B25078AAF1A> |-
/l <1C60D8A8C9B88C084B70B34E18F97D5BE3EC751C999BBCABC0C091C0A8BE
BF64> |-
/o <1C60D8A8C9B7EF3272B02106A74C8947A7F8FA1419E5E472F49BCDB7E37D
B09471BBF80EE42CCA6FD4E21D2814D7572265E2E4A9069CEBA0E56B55BD82CF
9D974E2C43A3987976A98AAD8BA603247E89D1475E7FEE31FC957BAD71> |-
/.notdef <1C60D8A8C9B854D00D> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/OJOKAM+Helvetica /Helvetica findfont def
/OJOKAM+Helvetica*1 
[
32{/.notdef}repeat /space 7{/.notdef}repeat /parenleft /parenright 3{/.notdef}repeat /hyphen /period 
/.notdef /zero /one /two /three /four /five /six 
/.notdef /eight /nine 18{/.notdef}repeat /L 7{/.notdef}repeat /T 4{/.notdef}repeat 
/Y 11{/.notdef}repeat /e /.notdef /g 4{/.notdef}repeat /l 2{/.notdef}repeat 
/o 144{/.notdef}repeat
] OJOKAM+Helvetica nfnt
OJOKAM+Helvetica*1  [4.85775 0 0 -4.85775 0 0 ]mfnt sfnt
28.5625 159.397 mov
( 0) sh
18.8428 133.651 mov
( 2e-09) sh
18.8428 107.905 mov
( 4e-09) sh
18.8428 82.1587 mov
( 6e-09) sh
18.8428 56.4121 mov
( 8e-09) sh
18.8428 30.6665 mov
( 1e-08) sh
14.791 4.9209 mov
0.000213623 0 45 ( 1.2e-0) wsh
29.9131 4.9209 mov
(8) sh
32.1523 164.254 mov
( 11) sh
55.7686 164.254 mov
( 11.5) sh
83.436 164.254 mov
( 12) sh
107.053 164.254 mov
( 12.5) sh
134.72 164.254 mov
( 13) sh
158.336 164.254 mov
0.000411987 0 49 ( 13) wsh
165.088 164.254 mov
(.5) sh
186.004 164.254 mov
0.000411987 0 49 ( 14) wsh
209.621 164.254 mov
0.000411987 0 49 ( 14) wsh
216.373 164.254 mov
(.5) sh
237.289 164.254 mov
0.000411987 0 49 ( 15) wsh
OJOKAM+Helvetica*1  [-2.97441e-016 -4.85775 -4.85775 2.97441e-016 0 0 ]mfnt sfnt
5.0874 84.0478 mov
(-Y) sh
OJOKAM+Helvetica*1  [-2.44921e-016 -4 -4 2.44921e-016 0 0 ]mfnt sfnt
6.54492 79.189 mov
(L) sh
OJOKAM+Helvetica*1  [4.85775 0 0 -4.85775 0 0 ]mfnt sfnt
128.919 171.055 mov
0.000488281 0 111 -0.000213623 0 (log) awsh
OJOKAM+Helvetica*1  [4 0 0 -4 0 0 ]mfnt sfnt
135.399 172.513 mov
(10) sh
OJOKAM+Helvetica*1  [4.85775 0 0 -4.85775 0 0 ]mfnt sfnt
139.721 171.055 mov
0.000930786 0 40 -0.000350952 0 ( \(T\)) awsh
211.057 9.73535 mov
-0.000396729 0 (-Y) ash
OJOKAM+Helvetica*1  [4 0 0 -4 0 0 ]mfnt sfnt
215.916 11.1924 mov
(L) sh
.867457 lw
220.991 7.91455 mo
234.835 7.91455 li
35.5283 143.863 mo
60.4072 143.863 li
62.4541 143.828 li
76.958 143.828 li
79.04 143.792 li
85.2515 143.792 li
87.3325 143.758 li
91.4624 143.758 li
93.5444 143.723 li
95.6255 143.723 li
97.7075 143.689 li
99.7554 143.689 li
101.836 143.654 li
103.919 143.619 li
105.966 143.585 li
108.048 143.515 li
110.13 143.446 li
112.211 143.342 li
114.259 143.203 li
116.341 143.064 li
118.423 142.856 li
120.47 142.648 li
122.552 142.371 li
124.634 142.058 li
126.715 141.711 li
128.763 141.33 li
130.845 140.913 li
132.926 140.427 li
134.974 139.941 li
137.056 139.421 li
139.138 138.866 li
141.22 138.31 li
143.266 137.72 li
145.348 137.131 li
147.43 136.506 li
149.478 135.881 li
151.56 135.257 li
153.642 134.632 li
155.724 133.974 li
157.77 133.314 li
159.852 132.655 li
161.934 131.996 li
163.982 131.302 li
166.064 130.608 li
168.145 129.878 li
170.227 129.15 li
172.274 128.352 li
174.356 127.554 li
176.438 126.721 li
178.485 125.819 li
180.567 124.881 li
182.649 123.876 li
184.731 122.8 li
186.778 121.622 li
188.86 120.407 li
190.942 119.053 li
193.024 117.595 li
195.071 116.034 li
197.153 114.333 li
199.235 112.46 li
201.282 110.448 li
203.364 108.227 li
205.446 105.833 li
207.528 103.197 li
209.575 100.317 li
211.657 97.1929 li
213.739 93.7925 li
215.786 90.0454 li
217.868 85.9858 li
219.95 81.5444 li
222.032 76.7559 li
224.08 71.5166 li
226.16 65.8955 li
228.242 59.8579 li
230.29 53.4731 li
232.372 46.8462 li
234.454 40.1841 li
236.536 33.8691 li
238.583 28.7681 li
240.664 26.478 li
1 0 0 rgb
@
0 0 0 rgb
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
OJOKAM+Helvetica dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/q <1C60D8A8C9B7EF3272B02106CF08D5008F2C7B5C8A9E114B257E751D0EE2
E0E889E013C54302409DAD4E6D23B15FB78D5F060BEB9C423829DC7C805B4072
3AE1214611FA3E3BE7E73C9A4AC39A13D58C83078721D53EED13089D735BBC4E
DDCEBC620368A1BF783774342A4B535057A642890CD57B3AEB75C87B92DEA681
35> |-
systemdict /gcheck known {setglobal} if end {end} if
end
OJOKAM+Helvetica /Encoding get
dup 113 /q put
pop
%ADOEndSubsetFont
/OJOKAM+Helvetica*1 
[
32{/.notdef}repeat /space 7{/.notdef}repeat /parenleft /parenright 3{/.notdef}repeat /hyphen /period 
/.notdef /zero /one /two /three /four /five /six 
/.notdef /eight /nine 18{/.notdef}repeat /L 7{/.notdef}repeat /T 4{/.notdef}repeat 
/Y 11{/.notdef}repeat /e /.notdef /g 4{/.notdef}repeat /l 2{/.notdef}repeat 
/o /.notdef /q 142{/.notdef}repeat
] OJOKAM+Helvetica nfnt
OJOKAM+Helvetica*1  [4.85775 0 0 -4.85775 0 0 ]mfnt sfnt
204.149 13.9072 mov
-0.000396729 0 (-Y) ash
OJOKAM+Helvetica*1  [4 0 0 -4 0 0 ]mfnt sfnt
209.007 15.3643 mov
0.000427246 0 40 -0.000366211 0 (L\(e) awsh
214.788 15.3643 mov
-0.000366211 0 (q\)) ash
[1.38793 .693963 ] 0 dsh
220.991 12.7725 mo
234.835 12.7725 li
35.5283 157.777 mo
39.6572 157.777 li
41.7397 157.742 li
64.5361 157.742 li
66.6182 157.707 li
76.958 157.707 li
79.04 157.672 li
83.1694 157.672 li
85.2515 157.637 li
89.4146 157.637 li
91.4624 157.602 li
93.5444 157.602 li
95.6255 157.568 li
97.7075 157.568 li
99.7554 157.533 li
101.836 157.533 li
103.919 157.5 li
105.966 157.464 li
108.048 157.429 li
110.13 157.395 li
112.211 157.36 li
114.259 157.326 li
116.341 157.291 li
118.423 157.221 li
120.47 157.186 li
122.552 157.117 li
124.634 157.048 li
126.715 156.978 li
128.763 156.909 li
130.845 156.839 li
132.926 156.736 li
134.974 156.631 li
137.056 156.527 li
139.138 156.388 li
141.22 156.25 li
143.266 156.111 li
145.348 155.972 li
147.43 155.764 li
149.478 155.59 li
151.56 155.382 li
153.642 155.139 li
155.724 154.896 li
157.77 154.584 li
159.852 154.271 li
161.934 153.959 li
163.982 153.578 li
166.064 153.162 li
168.145 152.71 li
170.227 152.225 li
172.274 151.669 li
174.356 151.08 li
176.438 150.42 li
178.485 149.727 li
180.567 148.929 li
182.649 148.061 li
184.731 147.124 li
186.778 146.083 li
188.86 144.938 li
190.942 143.689 li
193.024 142.336 li
195.071 140.809 li
197.153 139.178 li
199.235 137.339 li
201.282 135.362 li
203.364 133.175 li
205.446 130.781 li
207.528 128.144 li
209.575 125.264 li
211.657 122.072 li
213.739 118.602 li
215.786 114.785 li
217.868 110.586 li
219.95 105.972 li
222.032 100.94 li
224.08 95.3892 li
226.16 89.3169 li
228.242 82.6548 li
230.29 75.2983 li
232.372 67.2832 li
234.454 58.4355 li
236.536 48.7549 li
238.583 38.1372 li
240.664 26.478 li
0 1 0 rgb
@
.4 lw
[.693963 1.04094 ] 0 dsh
35.5283 153.821 mo
50.0327 153.821 li
52.1143 153.787 li
70.7476 153.787 li
72.8291 153.751 li
81.1221 153.751 li
83.1694 153.716 li
89.4146 153.716 li
91.4624 153.682 li
93.5444 153.682 li
95.6255 153.647 li
97.7075 153.647 li
99.7554 153.613 li
101.836 153.613 li
103.919 153.578 li
105.966 153.543 li
108.048 153.508 li
110.13 153.473 li
112.211 153.404 li
114.259 153.335 li
116.341 153.266 li
118.423 153.196 li
120.47 153.091 li
122.552 152.987 li
124.634 152.849 li
126.715 152.71 li
128.763 152.572 li
130.845 152.398 li
132.926 152.189 li
134.974 152.016 li
137.056 151.809 li
139.138 151.565 li
141.22 151.322 li
143.266 151.08 li
145.348 150.802 li
147.43 150.525 li
149.478 150.247 li
151.56 149.934 li
153.642 149.623 li
155.724 149.276 li
157.77 148.929 li
159.852 148.546 li
161.934 148.129 li
163.982 147.678 li
166.064 147.228 li
168.145 146.708 li
170.227 146.187 li
172.274 145.597 li
174.356 144.973 li
176.438 144.279 li
178.485 143.515 li
180.567 142.717 li
182.649 141.815 li
184.731 140.843 li
186.778 139.802 li
188.86 138.624 li
190.942 137.374 li
193.024 135.986 li
195.071 134.459 li
197.153 132.793 li
199.235 130.99 li
201.282 128.977 li
203.364 126.792 li
205.446 124.397 li
207.528 121.759 li
209.575 118.844 li
211.657 115.687 li
213.739 112.183 li
215.786 108.366 li
217.868 104.167 li
219.95 99.5874 li
222.032 94.522 li
224.08 88.9702 li
226.16 82.8975 li
228.242 76.2354 li
230.29 68.8799 li
232.372 60.8647 li
234.454 52.0508 li
236.536 42.5435 li
238.583 32.7583 li
240.664 26.478 li
0 0 1 rgb
@
35.5283 150.247 mo
64.5361 150.247 li
66.6182 150.211 li
79.04 150.211 li
81.1221 150.177 li
87.3325 150.177 li
89.4146 150.143 li
93.5444 150.143 li
95.6255 150.109 li
97.7075 150.109 li
99.7554 150.074 li
101.836 150.039 li
103.919 150.004 li
105.966 149.969 li
108.048 149.934 li
110.13 149.9 li
112.211 149.831 li
114.259 149.727 li
116.341 149.623 li
118.423 149.518 li
120.47 149.344 li
122.552 149.206 li
124.634 148.998 li
126.715 148.79 li
128.763 148.546 li
130.845 148.303 li
132.926 147.992 li
134.974 147.713 li
137.056 147.367 li
139.138 147.054 li
141.22 146.672 li
143.266 146.326 li
145.348 145.945 li
147.43 145.528 li
149.478 145.146 li
151.56 144.73 li
153.642 144.279 li
155.724 143.828 li
157.77 143.376 li
159.852 142.891 li
161.934 142.405 li
163.982 141.884 li
166.064 141.33 li
168.145 140.74 li
170.227 140.15 li
172.274 139.49 li
174.356 138.796 li
176.438 138.068 li
178.485 137.269 li
180.567 136.403 li
182.649 135.465 li
184.731 134.459 li
186.778 133.383 li
188.86 132.169 li
190.942 130.885 li
193.024 129.462 li
195.071 127.936 li
197.153 126.27 li
199.235 124.431 li
201.282 122.384 li
203.364 120.198 li
205.446 117.769 li
207.528 115.133 li
209.575 112.217 li
211.657 109.06 li
213.739 105.556 li
215.786 101.739 li
217.868 97.5405 li
219.95 92.9253 li
222.032 87.894 li
224.08 82.377 li
226.16 76.3394 li
228.242 69.7119 li
230.29 62.5298 li
232.372 54.7573 li
234.454 46.499 li
236.536 38.0674 li
238.583 30.3989 li
240.664 26.478 li
@
[] 0 dsh
35.5283 157.777 mo
240.664 157.777 li
240.664 3.2998 li
35.5283 3.2998 li
35.5283 157.777 li
0 0 0 rgb
@
grestore % PSGState
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
% page clip
grestore
grestore % PSGState
Adobe_AGM_Core/AGMCORE_save get restore
%%PageTrailer
[/EMC AI11_PDFMark5
[/NamespacePop AI11_PDFMark5
[
[/CSA [/0 ]]
] del_res
/OJOKAM+Helvetica*1 ufnt
Adobe_AGM_Image/page_trailer get exec
Adobe_CoolType_Core/page_trailer get exec
Adobe_AGM_Core/page_trailer get exec
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/doc_trailer get exec
Adobe_CoolType_Core/doc_trailer get exec
Adobe_AGM_Core/doc_trailer get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 12.0
%%AI8_CreatorVersion: 12.0.0
%%For: (Your User Name) (Your Organization Name)
%%Title: (3.eps)
%%CreationDate: 11/23/2006 5:48 PM
%AI9_DataStream
%Gb!R&B3-i[[fC_=cW^5ObS#S(F>/nU1$:(p.Oma$]^M@$pUB%nX/[E#9fMRs1[@.ZU/Y2qfX5ef?+%&(lO;P@B)<h)q<rWoQ^+Mj
%B;-"l7O=%Pr3`n2Bq@3Yc:TOGj"a^mV9#A4eV+^8EdUha[?Qp7'R[14GoO11mD2Ato@E."o:;LKYJ2.'s&3]'%r39VU_^X\r;:[9
%'@$L*hS-,\PWJ14e?(QVrb`.5D`-jeo3o-*dqmN>l=BWEc_]c"UX\P9C4iIRi^b4G4QhIDTDHs>p"JWG">lC.MpGp1Q[K\[$k3._
%ji[1$$]<4KK)s16qB1;J/*HK@rh.^a'qp`e[sEPTph9@+^"T.4Bg9U>_\\;5pSTo_&:fV-S-!A<)>l>keuQZ<8Mr@OC)elqf7Zgs
%k/<M."%6-q@J*<=2Z@SPrj*Y/aj]cem$12jo-SS3?nf[q#3X82JN:ib&61Q<'qYqb)SO=;F24Z;h:$$FLRibO#N0(*?M^X`M3Isa
%o97_7W:`=m"$hgjcOf7KKBMl>!9It_T*DI+^cFLD2VJt<.l(jGP#A=$o?dueV)2$Q@&+K:NUj^bA'G9V?7"E!;+5*qnt^2PFP%Eg
%V0AXFCcd1O474sjRdG54+:*CoR`ng=ghYKc`DhMh8jCCU;QAhKdsp#c!=XTHUTK.Q&1N*B5mo<AGB*-Z\CI`>&W2/YeY%1-<=WuC
%?)S3IYS8"Z!4)S_RepaEkefb1+\iaA;jQrPe*o/cf1SOEIu>L7'h*L"MY(V^6scdpaYHn\Ac*mu=A>*dROjdtHD?p`FYjQnB^h(q
%Y%_!4e$'biKqDI!T>t^B4MI91j-+j3l]b$:ZrE3"np79g'hTeK&fieL1*$toP<Qrep#i%TYN%:;L@`8XXG6>pB1nlUV!o&`i2#k+
%bZtGYI2V4%TD/jCKqI!3"Vtqn-\\1'me@#&j1MTt$<&teXG0Zk:TRJE@@=i%AFL;]'UBG4pdnhhZ_nJ0_l'9)rKG(`9;P^`s0*Ee
%&O3NL\r_$roGLjmqua"Y*;,SoTV4%!*:X]Wi<1SNi$TI+(?$WA_`?^(>tg,.'Y&5ffVa`;AFMW,kt=O%87@S0..D?2d+QkSOMTD>
%d@P(,qQeKuqEM'6'@_"9-V.RA1T-:RNqeI].'DSM.9u)[pka-4K(-@3jZ4\bnBjEJVX*HI,E7_-AFL:E-rT7sU9?/&4rk`!4meX=
%Nso?%(k$jTpfL8ZT/KIaT[2je2L%im'XR&X;ZP2l9&q'_AWuuT47KgV]dB<7^bY/)@_,;:-74o-9l/6,hct"=f&g`*Qum;1f1h@j
%_psODpIlO'YOXeGro%e8.XC_`&EkA12uP*qoXjpgre&fY)-USMVZ.?aIQ)c*J#Z,UX/aRZb5PtYoTAs=rlaEeGOmcl#HnpN[)i/>
%rtUIa]D7rqj,AJHcf5r'-XC*U?2mBDiuA4O04d`Z%Nq-=Z`6p=#P^B]Q3rLI.ObQ!:JaYu7M$:3Xd>^i;sBq7ImY$0]c:>hp8WI<
%Tm@gZD=e=?8MKH3Qd[+.V>>+.UGVg7O;"\*5Giu'H=jhXp"952fqcgWhQMo$/(n7T#c.SUOk'mX!eZFsYlH1Eb\-Mk67AJFmhB*t
%3\RcTo!ArI_Q*53qO>3,Bj@Kj7=(k6L4(<%BtHj0A?LMN8&mktbSF1fs2/u75I8=kp(\TA8c]i2&R!4$Mq0!$];*CdI?f8V,;L4(
%ZP83tT=h<C3\/l&2/7)Vj+QFYPrT%gMD?'#c53+o"Jep:lJrha<'mha+-7WH%BZLH6IF@?^+*^u;6l-V-,&IK)(dXB=j*etN,#>n
%ciu86.H0'A8(jVRp;j&9)N5;07^+a''/YkOM(Dn4E4c<JW=kLY?ckZ]Wb;H:#@3(k-Xom6ZEVs%1FOd41U<6jMK>U,><)Q,XA&JP
%&2DDZJ7jBn'Zc(q#0tC9`Gp,KMm!]Qc0P/%o+ooe`1Wo;b]UB(<PmU$E13de&Xd_dP)^efF+9`]!Am]n;+eX%HK4eM?riQt"O_gd
%2+HM;6=?J9aMO?FS;kmEO??eeiNWto6=;GAS3GGbAk4er&TB;:D61uYX@&O$bPG,]8sHJ,!C9kN29=ad:f#0-,UNESXd81&;(7*T
%LtiIZ_#G61.-[97cnQqPHH`CBZ]GB1m1EXj`1&4(-)?XS#XT<:$pbfOqt()7etE&o8!(p#hAP7mlOL@'e?Qek"'3T710>"$OX68@
%K]S>n$?X'cLQ&B,E1U+;nCReHERkigEO<!`^@#fN,s$Opd9+\I1RY,9f@!*`NBu$]@Ui6"p?ZTLMmY)DLQDa5.radp&@6I&`qZj8
%5uhjMi:@g\#9Eu,5&6obb$uu;PE*!ua6^"(i1dfKcC>.j[qJeVOcdu5qLYs%eVmY3VLk]:+"BIAP$l"ASKTU(l.mMm1)X,V+?7rJ
%TI]5km>N873NM0N!HQKLh.U#7X3@Fq.ea62+mad^M2WSG(bXhO<%Xf*@H^'T)j*&ICfr5*j,a^`kT(@,\;aI\eO^i#]aoOgAFP;8
%/dO5-KVbk,<+SI#Zqj$:ki.a;.:refo(Wh8=NLkr8Z!++])]4D]uh,9J8WKI0e8%,;+)$K9egTCOtdQ'659)/]<Xa<@k5;-l/88S
%XO1KPDoR;eR24,<,GU,7jh:/pWRZfMa7++kVToAXms'C8S=LM!)P*7<1fkeoYf5-9:PU=OQV*Kbc.;kL)2j&s9WM\+P+9T:$D\9I
%R4MLRJjBtOBbe[i1A5\n"^;X>e':k4k\-_%9!LXqa;.X],#ae_#!(+6Q8*-/;3F\W7f2=%9@h,-%Z#F]36,7VYtTHTofi!iAkSND
%60E-o9\27rdilPr[P;_9i$2EnQ">3k^GD2O4*5dTZ&jo]LA';'I[`PKR-hSVO#!TO6AFse8:(5sf>IQs^HT5>>015<_&,d>7QkJS
%:(WBcRH:nAGe306F.pA^GT3lEmenrd.eo'Q9SR_!!esmDA-=s\nKjpq;6E=?B:c=B_JSk@H**Hpm(`'TUL$gt9pla]mdM\A6f0*e
%^c:7""+S.JnJfV=Hqp.RWmRbb:Oh]M\?jt48Q]<.q?7_SM62ZAKq@t0,5mN$iG[3u*06W)nNWkCs2IJc^D!H.I`8>`hn$.*g^c2p
%9Lk,tO4Q2Mp7X6obSO?jW(T&F)gDl*O6!i:@7+kE/CUQj[WJ\jnX!AW[[&U["T+\An"gZ'+#GGKm?Pp4W**Sg;mlJ'1u1*"Y7AXr
%rh^_NCZBa0QF<p/1D@hHM4bEhT@"VjcpTiL@.ETmbWKMaM[`%C"Y!9Bjq3aE\m*F,W9Y&&2[WZ3U2tZKLbj)p-SS]:<,C0+IuO>o
%n$I%lZZ#3$Sb+s-SIbGDr'I!G2[70;jKJI%?_Wkc*HhXHI^B"CdthaZqP.-h]7F1+l/Jr!M=Mj'WUX0X2q%.ZSR/Ws9C&dgXRYo2
%m.QpqIC`b^ph9<P06j(;C\HV>XnSI-J(*4CDt)Etp1s&AqY[JHla5+__r_JDqkrsJ808YC]Tf+,@f`r,rpDX.4pOQDUoOEJ5'e59
%koeeqf5(?2FJD9R%@TNS7XEF^eJkVomi*224$'2kG8f^lBCOC6pR>#DUSVnpbsi4UglJ?0h:`fu6^H/=_d9OoIesAaaQ_;_kI],j
%Xn<lfnZnV7l_iW$h1&Or^&!)NeSI2!n@Bg>!WL?Qg/#=:8:UWfrG8ji4gP"q0@nUSg)CM0^^?!amf!XlnE-sI*rMqb*s0fXSR-X3
%fkWF'Dmd(5TTO+$UV&(R8Ql!$et9>Ceu1NWIK21PS[S=u%&d1l^C>\6Lf>*2rXN^,GR+9HXSof\5$25Xb%j=)9CMtNb0h?;QIX2W
%ph#N=B5n";Cb_Jn6V&$8lffU=)-SIm?8!5cmEo*a[#7(?SNW`CEU]A[+rs!+a7P'qqSKN!Kk!0@A)k8Rn7U,7rqqsDmf+D)>j<!6
%Ub?(Y?G88Q\tooj5!(pCQ:A%])#O0Y:Y0:#217YGbM+o.Fj4Tq7_hl:Uu-952!F67g3UYa)4G:Wmkng]-EYh*FO;r11]SM4g0ob;
%n*"9H=C13q.`Qi.k2/laTYMDm=,4/\TkunZj.1\`irK2#5C.>1YDXS6/BI0B?hB,U`d77_&1Kqu/dS4$[bj+_rN[Jm2PNpIE@:Kp
%ZTN*UTYV!PG7i79n1VJGBXZcCD-["fe`/MX0@/#4$,CjPaQKKpSuL$`5=9ZtmWF9?^%Qe#o%,@:4*jdDHq&0A^af2c-nD'"U\#9L
%XZ$41$WFHF2`@PTM]NuB%.EuaX78)upK<(CfD2X2BEW&7"QLhTmGg)FAoH?%N*^Te5K6N&"np"SEOIg!n,-r^0e0eX!"]+CNTY("
%c@@a_T?T=(p0F7/*I5::Ug&q:#^*Ttm>m4O7c3uboRh[CDmo!$$:0%QEh-5I,N>H\T=$9eA'L15AruO!)Xj5'bHeRP[+PAin^H_\
%b]9H]R!826f'<MAc9JG_c;1e(11=W@1&_[2<9^=3ZODV:L#;@o3tR\VeCq<:PWUWh6TEOd%Chs]>EL\IfaRFG.q`*k)p:#pq@&#7
%#64U/XB#+ih>'j9I#G/f^tKgm0RZo9253Ze9S;Mek?RWr5KqJ5/p^I6''%_2ph_,PqLZ$Q7&B*Uo_su2eg'\NN7PY@6c4##)j.n0
%Bio9N_egf!JbtdmjrVZ\TP?Rn)il&18&o[/1<aR%@Ii9m,`<"c?s1qJ\8bCK<>njDm/5qp3B1[0-@'_)56qC)7-DZ2r8c'cNL%I*
%@MKfh_0C'2[*"&HcZA_%V/C,7s3]#`0k[Ie%rBU=ZmdfVT$qudU&]XZ^*.`9]mj\r(JXA7_c>o\NuE.tM&*5Eg)n5d#7u*WM``,=
%08LU\En72fi&b-7GW=ms#LTjrg(M[1+g@#r!N,305%As(YQ9-!gaen+BO(2#7W\^,mZI7prWZB#du1rkJ5*^7oTtM<Zm_:RYFSk#
%*dtq&=]PRWb^o\b27an5HI70TPk:E@k7JP&XArq)DatCA=hWQ`R@Vg8qq]Q5fj>3@[^-ANU2M'PZ4<LEX^5Xo)`Z&TFu\\&^sXUA
%H@H2=qljX_)q+`]!0r$-eLVRL495o&0o.$KE":\)lSl&K!Ii*[rYn:aZ.&-%H)6FYpHTpErbhA>Lnjecl'oTU;5`9D5[@ZoZgh2<
%rSJBXW:e.KI^IAY\QAR<p+t36BP]]1cNjJlouCGZp1eD$*Q)PJ#.6K'b:H-!:HXNL_-3nQra>)=s'IRFJ&ahRs+\RK=mPGgm+5R]
%P;-1>!rDY[Y@+=&%H;LtqS1YZ25DR0ci4Ag*F`oHJ`CMH7_?7emQ\IKFGgThg=Dr*rsR#E:W70raJ8FC"3qQ6[/]Td,u,a(&5sss
%NM"MNGG?2ZBV7.?riP\<-fI\*[2ol0Q'Yu.q:[)C=8]gUU=RHaH/&\C2u`dJ'HCQl0_F9&o=leMq`i?7s')4^bil\qm(G8IRcD/-
%EfQ9sFp9'2X,ZiSc$UHpE'r=X=-:Gb4P\NPZ[k29j6%h$plm7c\fLFHR]/IU\,$!#=W`$OT:VF4;KCo,3^5M-=-Y06G4Isl<5@Mk
%2brbTmaM"[!(&/U8sTVU?TG6<rb]Lk,i&D7ff`QE27mR)4=2:*(nQ%rd.)/(q!T>/X>^BlfB,kMTOWkLabUg1s&bMHp'gV<Ct4SQ
%_jEk^O9F+GZ=%BjCfP8_@gDO=@b'+c?Ulg^lOA0JG/%7VOVJtOAj+j,I;GD_]K5DSc$fmn#_46@7+(b4rS7[iU,*cSlQ*lub'Ed-
%TH8rN(r-I_XP+b(/;T-.^oQ<Q]m?IAJn!.";.j9dDKF%=\;M`td;fbM#[m#/ECF0@:?S_'$-We)ls@&VUVX'.I#FZUR($aA!FE*n
%O`V@HM"^MWY)XC@/kkL"<pquHj)eI.C65#W.TlSA2+G1q[gIkG8Xj7_mXDOW;]%LDn%?E5W355I@;GPF<XM=HBH#YL5bgK#<jN.W
%qm,%*"6QBME(BNU?K]#tA"aCA0som;?nM*;]md!4DHhPN,;#'Nn&+jghPRpBgS^P@G#K/Rjjj[dk]H..EAdT&gN`$DON(-"^$2VQ
%P&[[7hp-3,WS:4^FkQrW8b&kRg-g&3.F5]Q:ZLo`O&%S#m6Ra:I-j#;`EB,<@p+!#'CUH]2X2O.*2("\:L0lV[GQ;$m^P<R7A!1Z
%SQ>gHTN/m8N"LNuhI[ig!<%_J=&08j&0$eL%>n8es7Y%3qb<8TlMeHpis.WHe`hLXrXMije$$BU?3kR@d#B3U[r/[A+sPW_BNWGm
%OK<%?s/tkq9@p0h\=s\eZIs48/X$f0X'/$O](SsU3kG8-U:q`#)14>g_5b5WrmCHD9ndnH/)!&Ih53K+-W:oZI@neV9i1)*53cX&
%=JlT@E'Vq`Itl%E>*KmKak`tGN0'OMGuX0j<-=aYQd1!&]V/B@0lU+!W%$$'T=$_7+8WJA_rHbkc'Mi^'5uiUpW%6?I]D6!W"#2F
%qZ32Wi,8"sA*P?@`;dV\QiS[He8oSh4g=M:EL#ocHZ41.jBl[c?eAl-Sg=YQ>hs;b!u.VV?#4R2+lbT:HK-$r3ZDQI_j9dL@#K["
%i$TW\V,J[n4\!sG2=2+Dc00]eIqmd>&qO'4-cinu!gQ-\T8(bQfSY!5DJB^5l?<$K0e8"/?jXE:S_jC*WRg=-EA.k+:qdf5$En]=
%h3c>Gn*>-$IV=P#OL/0V;dCS<h/TI&;=TqI\p\AF)u\nhgAq9b;>UYFfPgQ52AO=7le,gMO">2.=abHncsJ!G(EC#Z?e'-iaJ_(Y
%!C=[c%K6](`r3^aUZ-1C:S)#Yf!&:35hf*Q'sf!_%kbY%Ld$fiI9XO39_8M+oWeT;qH8]HT:Z<BGO9a9bXmLCJm#d1'Fj)Q7^<i5
%@t1o&383VJWRL/lYe?XSm'1=*]@d@2d.Z)-#XJO_J3*Sd50NoM.gFL,kGXaX/`q#FJR.Lj)U4Rh7^IBM0[=NAT@%t1N8)L]\?.Pk
%gfBNX0l4][>g,5<iq!F:$_)deHP3..<-'06"H7TSU@!sYXVPc^8]2PT,]d6]dErT`lA2u=&COr[F91V:0o62X=Gma8Zfh.t4Z-/O
%+?>RM'AJql\$U5SZH^pdcZdL_D6:,=ANgZHWi4'aEpIUamA8<0Y!oL2H*-YmaS1#8B?b6]5,si.GH5@&D/oPap\ghEp%DV:%9Ig8
%aX;6q#@_9t+$5cH:Y1<=cIH^!j'mora)e`'r-S6J/pmM<EEV!H8mh4)3`5;=H:#A(\(3`kSP'<dls/Ofj`)pHnug7aYF^Vma]^%1
%V71>DEAi+RVc$mc+,6?(en[1s4kedVd/)L3Ab.qdZ]VDJ]n\\PE*'Wa-uEP)hOkfOSlOLG)fbC)O^F%0\baHsT!e9tg;9an1)q:'
%6mnMjoT(P%Vj!;O9eLkcXZ3?=CpqXMce_%V?:p&SFdUf6cRkXX8u;E"=W$#0]Y`:k%kQUT_:n<Hs/,N-.i`SDl$SbT`1/?jRCJIC
%L%RF.9mrFJ>F(!8qKOG*4F>>CMVgS#?=/#>^Oo0LY65#Ba8&g4XL9Icp=`TOH*:O)P.$VRG40QpI_!5!fYIi+\*<U@0<)q@f>Y'$
%[pB`;6IfkSo"r8oh,22>/*Vd@hX)=bb/q],5b9WWWJbV5j2A'$Y4V]ona(C$OD]u@4C+g7h:B,W\TdAR[&)YQ+b0$>lRI$Heodgs
%c?_WV=WtKD>_"B-fXjb*P$S12?]4WS^$e*"Y"l4QfI0'XO4#.n\`Vaa\$?P#3'&sEQ&iG7"g;7iH;?#?j50*!0u!--%hHokTc:>u
%r^&PFo'3Wg,II8.pKj]KD.;Pgo#Rq7^nr]Bb)c!ta(oSAj[r]rgS7hq@Ia8q\)Ga#m3>\YXIP]libY\%e_aL*:1'R(p0(3$O$%bp
%Bmf7g]D&lsLBu`%G>B!Zj7inA:J:3uATnW8XE:#H<gDGllh,F<e^:FF?N%U4]bV^(98#Z:VL,eq<UYh`f3[Vj^O>3jiDb!foe>6<
%HM.^%m!_1^ZY%7d?LMCZq0Jh)hWr#3_a1tu*4Y]grk,RGp53Wqn+c+?ZCgaR2:#R1go0YS<YpMR+0Th;X]K$k=&lup3Shl!]):U=
%lN)4['mDfeh2,E#?,'oAYL&8M]%9$IER.s`T<j/cO'WnRmd^&rk12&)e"8icrqO&RCrTb3r&@6<HM6&R8M&bDoig@H:Ob;pYIZ>o
%SaQ#cXEU<(k?WEdI]^^5]rI@.lQ`Q)H`bO'b%@hJ2aBSh^#AXtKH2F0M!'"k,PEs14[ZDW4_LrOnZt[8laIY=opY\]jpmg?JSp.+
%mF@)bC/_hFa8Q/6\i)$`Wi<Oa"h=cLme0/HlpF:<^$_s;P@h#>Tb5@eg!]Btku`0MXRFp>ialSoZF,b,VFUIA-,6<VQbT3Fda6Z_
%YIP;k]ood+5>Bh/>Ihs0/T6eY`LY1eeMc$5qgR]#Sk'o?<!I$Zo/D<N4m5n%NN*u3?M:dTR91(\*>R5US@W`f=aeqHI6+ISD/st6
%M1N^r($p[YohQ@Y._n*0P&j:,`<&5G@<&Jf=XbrnpiHX[jt!'0\\02FjJa(b=5#h!pp$"PG^V8Bq<^8_rTW20h!X]Tn^R*Yd*q.O
%"rdeoq[7iHf+5C3C*JcXH9@IbO*8!f.iqIshP$F&FldA_[=W^Ha2_5)mN:t5Eg1?ZMoKLl,(<Nu^9$-,\&hQ-TN*pPYO\17],n0=
%in'+%B$TFN-2F't0-2*/9qWM=94(mX1$8K3dFm\as1+NdG^Au3')QCZj([fq]'6;E2cTMY[uVoJ?L@=U0n+$`q<6;jh^b6R\c]'X
%,AbUPQ'2%1NLQ]k@/d[prq)b.r*9'OS+d!<de.>QC3ArXa6iP+DsR3ugc\qK`M]]_Va>:ipb^U>V^),<Q[M?XZTn2o;D9V;G@R+J
%_bf\4Nal8*e5-=$mL7`H<RJA(iMl@6@.L\8pq[/!QRnY46T8\<T$J^TlPFWCpTYn@FYX2L4[6E!n=6bNGhZGnD`;/fIAjSU^fnAg
%,'RAt?MV<LoX^-%DS=&gm5\P?X!_UC,OEY_.pFB:<9ltOaMND8(W7%tL_I%FG0m_?H`atRYm8^X78ID6dpD31:MZQ8&j+10=3u90
%%XN<j9$A^;na2OpFBPg/\Vta9BEoEgMRHjA$JG[p(-Set@gDS"[9)U?dF,(A\pJ&R[D';d@.m3/"%TQEN+,%AgS!lhX)r^Sh<TIQ
%KCeGpfEPA>9lp@QD1bon?>Da<QFV-.Y=.L!4!oi>B<S7I>^A[qkr75-ALFhKc1=M',01>:?YhHWL@mh)NY`UOor+4p<d"CdCG%l9
%^#ASWP(di4XE?2Brf2V_BfF.6Mk^OVb+j!d7pn.4BIb0s!LOC]lskh*1MqI#@$6[c<iS2`-N5i[\#FP:K;#Gl[_&U5$R_Eqrc@>M
%7UZTf(5s<oDOrU#c@(8)kIsPj75QQ0P6YuD(RHZpeF1A`C$#f0<'FIaeZ5n\Rj7(h1J:C%"1gdoYh9Y459\7EOP#!s.i&t*TO5Dq
%JZm6F:53c70i=PP*EM'I=R"tbHBNYPOAc)eBun4/$ME]2!HeKX2SbN;1TU?=1;b.3TK6tFjJ-ls@#cl.AJB?k/r8ghoNB)m+[[/_
%o8LtVb+"B8J7T.rL?8$8)jVZan:[-(CKKJ6hSVWQi5NC5r8(,"?NtOnLdePX;OJI"#l:nUkRdtb6N=G8SjtJ[1WkMkPAMZ`.R)q*
%efKeGO68hfB*uHPWQ5ktqdlN3d2du'K4Up]\U^mYE'/(JB7rARX&%`q^"(^q!kol4ap/t]gl":)*pE;s'Gi\<W`)[\!JU/jE%b-n
%neqhdW'+Mac\q5K`0SNpgsQ*ZfeirRKMt4K.6\GD2N0TYdDg"4`^spuY/jh6C:jE5lNnDm2aLmD^:npV-+H_[bV99F_@N?NpO)7T
%_U_2TmoAQ_l8'I!L_R8mWqXG!Vua;h;2)0MeKW?V1g*N#&%5elgDr4Z`VCWLb&d[(&r?kJ"mp*sLV.88l-E+6CNNtM^Ri$PX7.Y#
%m^.Cd]M7Nh?*lE&AbfB=-;u13"2f`B071F'2^fIl,@F+R0r=?r"O\VKMd.pi=mW)SZ2rCb;`MA0hs,/=8ej3G?K_7FKelD`6bI>S
%hG8Hd,76+UkjWZ0CJ;>enN,7JWcD4.EK%'p4Br3(L.'F!ng;F5qQ=7fY^"Kk#c<;iXhI[`L*%7@SYN=?"jBrp,`"Z@T_WAM@=`%R
%][Hr,cJ:f^PI\LH\d>p:gGPk.S(;E[8Z"HLc$?O1i?7j8'K8\&SK9sE_,YF#*o+lDi\]:8-I7a1n2SW4pg]cAS>JB[/caU.nn55=
%7Gn]Li0L(KH;u,(;a+n![3`JO]C4&e82k#`'?UZ()[Ya5"uB!i"rW8'la2YiWca=&b;]^a0HOT?Qmo7Ul6$Z)ZP:],Vq[\qDqlN=
%?e3>Zq3bN>g0$!9_Y)jGrn'Rg\Ep?N\8`,l630Hu>OK+_M0_1pL,C2Vn?n%?%<@*c=TQ`c3OE//F+udBVhZGj2]Is=]Kp)t=!0to
%f0de!*rDSB7I-HZ[E>saIicGIe$P(H9_Y_Rm[]ub%1b*I9tM9sn-VbR54H^JOe/?;Z4m,d^a+(]=FPb`0YD5G-B'Tmhb!2&c4oD\
%0Ki5BFQ3lIr=-rCb.Y<pSluWb9F9Xuh01@Cp;p0Eb47NQ$FI'!N?a,@C&9-<H3,HkCS,D7^TZIjKKsT]163mO%juJafe?-*e:+6.
%@&!hd\Mqeqk[4`(DZKV.G".i#j_6WVKO*%BG:j)i?-PQPWnG*L=<kCHf4"W"@9W.@Qu^SV)s<"YMoP19>qW^_KqT!:&WQ+SZ_3ci
%Vc<<M:gPB7ZV*[5TlgQ\Mi'T_9B(V'Z6JqWL_uY4'm'tVim0)m6G^\#@18gkROZ>`J<U$6$Dut*<qW\4F'faGF`SUq!8TM[i5[)1
%LC(WTkdOn,+T?IQQbN[Af$ZjG$pWNh&\BXqX`;gqQoon@G8Q-'qk>WE\WASnA=_##m)J/j'LZ,5FD.\,P;_L.cXF9!P[!%"7V#qP
%5tH,!d[GTZ0iVouLO/d/mEe8#qr,1NNdh1S\RADhilBh!#j%kunbVSjH0l;lBbiWD!MO4-9O5/t8Y.T?\-mMmS.0\;CNJ$oHLDUa
%:2bSl3kBq-pXkr/Y)t)Uo8ko`RP6UC"7tK!IKj'81+7>c`s")._VHgn$;@R8OQ"Dm(RHuNm(*)'b;BKjBnf0RqLLd[K!!c3kNRB!
%m6J7pkSQdnOfX(m]H&*aWop::V6J;Gau$Oi<V>l#)_Pi$Nf14]a)n#_nN+ELa#,k6Zo3%l"U4t;>*\q:DIC=64qnXgfn0[05so-=
%]R[o)KN.0Xm:6Y0;A$/Ki_8lVaI@e$lg'k6=NCb47;ED#5Ns@3Y:38:NV<DAlR<f@(klXWNKInG_U/s:b?>9a@X;bgp80+5kB8%k
%X3ER=B->d.BAim?;.+_GGjR.(K8[/'T\@.b.i*c.1c2Ib**op=_9$MjPE-Q7Sob6.7mN&^HSqmP]^^&4>N<#Nfbi*WSfiQg4ZTWF
%GA*G0l+Me+[_s"g1U%K#9h>?h5nH(a?d/^])><93+/$"DGi-1D:b+li"Jg:WD-3G:2kRQ:e7rg<Scd)^W7=IMqV(^:Wg&F;\d]s_
%.#7M\<3L]l1G1q+SAR"!lO;bHU9bt1QFlsaT2fPX[e:Y*e5//8XGt9o&%4B`$CC-F$fZrMkT(nQNok)f7JclIY^>RSq,H&qdas?l
%BlcsS>7kCJ/e7"$7)n"N2BA4jU:YM\:#0#:>?'aJT3pcKUK=!j;qIVcF?]_04sFoWOj<-^b84S7^eC<EkLuu!b@ete.F\+jF87#+
%lJf28I/^[(<bKQSl$Nfp>eZ"?F`FF'5*'#Q/mlOIFYR\nT78J#`(XI,/tL=nY)\/r!sPPrkO[$],6n#rdeWf^q-9I>PGIgGkOL>\
%LMm1"G;<&TJ7\)']_>/jg@Yqo$T]VdBd_*;EO"M-YH%\E'g71^/?sg.G6(I)a2G0:E"E,M:;XrQHS43ur7DjbTV-<4s3Wg73"8gs
%P*D7<#qB.Xp5B`"/NFb\E+JIc31H%%#+T*Oka3RS&i#rh6'I:bZ;)L^o/KPM9AUU(!u25_Dj*>6bKpMl*0\D(SMhK:^;Qc$4r'u=
%2sZZ3F(R4RKY`Y9>j1qq[fHH_ACiWU,X`uQe]g4]K=Db5gW(4X5FQcYD%Qp+XT6.=aYU/pin^&AQ<8ec/bued&+BY<[[aR;(8Z#J
%HZ0I#S%nLc5R"EOXd4&X<8OZ_jD:sZ@"gMD(>9!io%b.lGZ5X`0L!4j`2H2&?4NFA'O]DU>P11)+D<N6`69[C+8G.=_/frRO&g5p
%"[_:FND3b@m+<NNI>0W3g%Q&J+nH]P,OZ'V0i3If[ck8V@D`^I]Ulsjd)nCdn/@XW'*9E$kA>u,0NDmP.6;e9I>HIo"S7BORSV@,
%fRZ3[AdL;ddi&8gc0d5cHHq=qbV^<.:_lb%rhtcM-.^2pe(6TDFjI6#RV_01H`6SLi9A9!3Zm^5e%,KJalrH`Le$+<*ctE0K\Ytm
%o!j<a`jTmY*8%8G@:IPb)5";Q@$R6$/$AG42i>83mDa,H2fM0Tl#B%7LcE3/L3&C-6(>sedUt&icY$DMor:*:FW^La.D(>F2_J%\
%@>an(oOGWV`k`68;/^Q_fYs`\:<O!52EbABK40a2Zjj62C?TAmK2j;`:'R^5[kZQfPCeB9J1nup#9JmX1JKNq9>W?_DWUW4@=&2G
%:R<em+iTo-YX3VR]L1[!)1!GlAbY'JnGE13;b"\oXZOPh$f\kQi=B1SCC(j_[m-S\`\m>$[6Go)%8:YN#/Nn.6+o2kBKl62;gWF:
%),@F*Zt]*i`d)Kiei>?aE*D]>OZ*90n-MEf!0VsXFKc=mh;Ln>m/#sOJ6;IeMKJT#-5ht.Qi%[jDEp;E^u>94qJ8KDJ@YtOUN@A?
%Hf`.^`MQF@6Q'R(2j:*5"ZZ47`X\##nXDS7omh3AED3#/2SKJK&L2jPI+SbIoCM[GqN8%cFZRA?U$ICIa.=imE+_MZkHJmsjLeW.
%k)Jd@"OC?[OdR"'GCJ7^1@ln$N$RS?%Yc!fR27t&G,ibKC[Bu)W(d]8iJc.BLqt.:Tob[fhA[t$c-2*M/A)RmdVL`27Qe/DDqt/"
%k!^91(g)IE/2Qm:(Y:=9F/$mkd1'UsCCU4p1WUr#B1r2CH#%su01V%!p=),*S@jt+$+uXe$X?H!rK$k)BY\20L-1LR#dmfo%670D
%SoA"jL@6#_'rI[4kGsd5eSub`QbEs:!-o!mBlF8>\nhX]3aGj6oPb8u@SD4&D;OZE@tR.(VoRf7<<*AHn2*pe/3_iM_mDeS^aha1
%e#M[]en9'R0ki$e4hBcI6UNZ&7r6/^ic^3enI5ZC>T_Mm?'u/1Aj6rAgd,(,nIdh!6tGB4""YL?#"B01)j?q,OsKqo43JmPBPiJq
%Z4F]+8<W)t?*euHH3[$9=>E#-Mi9")6:3P:U<ne:aI5'mMDQ%"^5D\3aTaunHCP3Kf*2Q#k:#!Qd83Sa>[L2dLllec^,fj\!n*if
%;BFq6@Io1>-fkpSn,VY\PO]R;!]bb-8BM>.l^TFRcc>aLAQ#,//hkbM49XA_V9uG#:6:]1dhMpQ!M`&Ro^mK3+oU-(a';<,il@ql
%XmPrMBn><c0_*C@ma-&B#&ub8COTnOL=9sFqt;8!-f(15\TFA'&>6;1H,p=$AFL?q-<`CG8,\/W&1q-uL$?6_*huY[Q(BL,lT-3"
%!`XH[Iocu$V5s4DoH73ep7A^a[k8$FHp3nR^Fh&op<O+.M=ZY-c:^KYDW"1`"KJWc9/dBX]!/J'?_HtHG_n#$B_IcEmI"Z.RM"\l
%6>tiJp;A!\CJRCR?I.NdHDTHRGc'<iL+hl*>H\X)m)PC$pn9QChk#"hSAcP_ddDLHrOS_5S&g_8[r?QUg$?f;C[/ef,:quC&Jd+i
%.Ei'`l.T(`qCB^oGpTULm1-<"rUIsXMtnatc'N/ocX+01_<-SEYO]PnFB!MT8bRN)9=nDm]mD?'0&1aEW`GFGRtnD-GI$+ocTQtP
%#?Tcq(5nM*qmnE.=S7k'q-qGR*6,J9NiMO?`&nj/*Wk^T^7Gd126l!U'MW!CZbD]p.]T`Sj:JOp*PBMkQsJb4HQBrunSBOahdS''
%7SeQ&34W_G4)iI0lO7qAg?>6p!QHr7d07G1O1Cu3@)cX4Bh$A>H9F2o<914_^>Z?KlNMIdR0U2q$`X^"E`fnklsT%HomGS=PM`GX
%G_W#`J<@\.AiTd5KttS5Q)%fJBuKr]i)78H@kq:PL<:)R[!)"Eq.pQ#fd-7po%?^/fV_fZB([mObqcQMD0!QCS8D`->Ip4D3&\[m
%5.<!*_+?FVm.1_VT4qc,)doUm1Xj:VnV<OV,dB"qOIeA8cS?ib\fTo"Sg:Sebp=$sLM+jeZ-P#&cTQ#VWl.([NR8=q1lK:9\#d<"
%qq2M/,kee==mPeHN"Z$C`l-r_//.p9ZMI5uC1`<NDJC].#\KLWkI-,-+I?r!9C-_8C6Hj$0o:<r9gsI$4XWkgo*3oB'DlAJZuI#E
%31s!<f]T[Niu32-?"0F1<hG"ec6BO>/ZUPaFlM'7M1&,Ca/m"r\9uWlM1'7Npr,TrR+UT;(Es<jIcqXqp:2V555Uq8-MH-/+bVg5
%`tKX_jdj-G0uLpnc]A_YesIuK`nQ;2X+d._7MHp@*s5#0ho(@dErhBMWcE>s?Nj11p@A,8%R&!>r;9QTRGHlcQ4`8m^&#,qmT.Z=
%T[GVa:KkS[Rd];E"9/aUp"cR7>i=d.-G-o6_jV@AoJ&KjcQJf!<+E,rFYXo.@5Z&p$f]/jmIjFMn&Arp[J&u7P=o^j&6I`f9L>ku
%>lJAJ7JP^=(Fn^tLY7Wss)72GrsYMoTU``QO$:#U.f8$$(Lg#)QiFV$c>iZ?';S6[3$DSrs7;:hn_h+3bQ%JP3`rInJBRt/RSBaJ
%-ZS<)Yn.To]]Dl^?q*-t46rdpQ:T*]_Ok4Vl`8KI'6Ofe`HQQ7WP2)[3IQJH*#`nCU.8OReb0E;dl1."YsWhH^8#m_8FZKbSI)h=
%pET=M#H8_s8nj0m>dib,DsX8WRaQ<+$75Lqp=:p!0f=k>jCT6DF["8NX7HY:T>N;^0V=(,NF^(s@iND3r=H'(!/\F%.hSs!/8Su8
%$)TFDLB.Is`\nMRbs#On(hmimCgUI=40s?@:1/g^/UtSWicmh,/ao,l'2%rHRhC>0Zt'b\T$[CM_ui7\ij]fV05;H5\<o(+!m8O<
%<]+?jHU_jZL:Z!ke&qb9De:Go=.NK#mWd7gPsXHO"o@,?hWSaL)kI:N]uOW_L4\JqN8+1U%8EI&8n/)bArtLCXk5Gm*JZM,b+^#3
%&jD#dDmL:'ZM6s_e&q-H`<bhC[pK"l9n&L%N1N<NJa"o9]mieKk"1W_h>:hq7<i,:(H)lSrSG<:jGWO;9gD/m-Ect*^FA;&S(sqr
%p\p0DWon#9n"4<=G[12+FgeJ2"Y9*8M10/I4s;&2E+c.ZCX3%PF.LI7eLt<Km5;+d_+TKl2WL^4n.+I?Dh)Z]nRlskL8K*B@4MHa
%VU+siiV3US=ff%$%=+R_2_L68'!#m_b&l>2[S?/ARZ7GmHG#XT4lXsO5G%#09BDJ-(*I*6@[n&Q+>[m*&BU'B\XD+gmb!bAh,!2!
%Zi_n1M'(+<`6?[q&X+8m<6Uth8WQs0Cc\*+LgtIuKu<j#54:D%=rYj+o-rjY8,[-&o58K!?A;%Ib?,o>jDI.EO-9ii)5]bsbGWA4
%9n?*jJu5'+Z5uc^5^Bj7Pj93>'59?L5p6p/9LOhD(T5Tk`Oc48A7/pn*BR)pBSahc%@=)Q\1fA"9:)7%gcEs6h&?)qDhh\ofn(#%
%b&-+?FF-lp/,".m(&;<'T1ckkm?u:s%kq>^]W95MV'#R7R4l^&2;Mj<kMA?XDfb@'OdR#Z#LFAje#f6E&^$E-Qe6OEp<!WaI)_L2
%k;lrFJ9[Te?V4]hmFa!k]#^FgoI;MUCc*0/ffOZQl*\1$=aG3s9t-_X)ne:RjH)KB5-#VDM2:c(SiLi)i=#+F&")#)BN_Ls,NNR.
%Y0X5&dd=a*Km53<gdgF>V9[&6a)pEsj_Eh^maZ*j0-B]U`m-W9.=k"`APXH'mWEXFH9/@75bk.T#eOTc_"`&uWqL`XJa,f;<Cad$
%GLb=PD3>4NWpHI?l4dJAr]#T\3gV)J[p\U7*BW3rSXC<X+n&sP'-]Wb:L)cnr'P:*SLNDE8AF,97U>$X?s'*hCqOi'7\dCCh1XMD
%\hB!MS?k5,l.UCXSPE4;`4,tQ53O=ui0I/bS55)g,\25V\C:e^^RR.rEB,TO=rW6lJS3&5^]K9>qTLVnJjsQ8Qhq374ZGRfR*;Z<
%bQ/+h"u^Wu,;ETW9s7h`U/=k1cFQoE&_;)om/!cnOe=YQ4;FdI#1Y:,cbo3<a5n,nCh*dW$#CqQ'kadG"I"2"et;Y81u2QgpsWX0
%KC46d`N%8&,@/gtC"'sHGi%.VWs2e7T6D+6?m:1(N_ksAU#Si.Xj'rGO7s..CgMhSCb09Z+0q0bK\AdHq*sI+*<p+\VhYK]%oMp^
%W%3[bcQH$D?6+'8Ke4LB4T8lI+A*!KV!DS6E>^C&9c^_m.CS'2&:'+.r^S\rbOc\hNGnFIHB5$[mh;`C5ZP:RahduD8Vn&&rLQ=G
%'(,$ME,MYE!qi[T\VqrT)IBNL0Karr2C@`\2[TYqk.Od`5;7LEb21k)S!&C7N1VQG`nWNh&nkcm3XQ0Mag8C;/7rh.d@-,0b+"5c
%&k>O:4Wi&`c4`)^d9Flh1iXm78T\UoU\T_0qk6A_2!CWU##.YtRZFBLc#^EY^_6446.Z+(i$jLKo+<3WdX9'1,R2L`F;"d#;A+EP
%(G,B<JLtT>/Nj&\6oH#0G0k;7CGqLoH6Mp>0.RJ![[ZQf6FuVG5(R1cb6i+1k0I=63,V*(7[Fi&T_Vh$32=Y(?",hn`+=W7f;lf$
%IT`A&/hkgeKoRlfV$G'7W`?I@%$\#5]C8YC"*;6Ed$be-eV/e;'?Xp/Wg37c6dL;+YSS?U(YTi'_F+>+5X!V3Wq7IIn8PHB10ASX
%/5EUA_1d[D[iHCa2q))XkT:XU%I0GJ_F&fihAMh?nV)aa$+nu939#LXoYNuq==KPc1]<#_IZrND:%.CY(EWG!.l-hhPCOGjqG2ra
%HHkHd6f0S\0_q:RhL"7E+ZW7(Piln=&R3]3'GhhE!ddCS4*8E=9n)&p^EXr^F*L`a$P33d.jEPVET*VkD23ZsD;9i#_/C`klG>nm
%.jHgrh0D6$KnoZ0\7_m:E8dMJQsTZ@=D*^'%hl[d*CbDi0gf2jkarl*f*00*a7rnakd@1Rn6)4e/j/d@m8/jsSGL)iYC*GaGP?1q
%*r>=[Z^ntt00Jma/$fP6BeDNT!8L#RGMW+ejMF:a<nn[#'4#kHg59=6:R+O]^$sC`Pqf6`UDFu+8\#ZEm@F6n6T[Fl:J#-R9Rl#p
%O_!XdocFL4*]H[7LXj,,lG>pggCC,_e_,Y3e#M[600BYf:Z2`GdH@sU8EbC--aL6&b,rj@LS:k!F>c!s#gfpp*r=c;W(YHnp<frX
%*_s]'JmWcdYP^f@Of^FOmFhHH6cVs\j;/klcGc@@_F'YjJfZWYk/'Lc<[)&A.@f8/,.AR^rpnpf#aor!GM?OOfI?>cH5sWfd/UOA
%GN\o-(EU.6?Fd]8VRl9Ds0b;Xg.[WRj`fIQiOKDfGi`r(@;oT:<#6VPXQJ_4RM-rQYmV*@d3<Ocij]@,rA@'ae#'nLcsL:imhAN:
%iLsHoRi2"[[]qU8KnoXh4qVGMn"^a@qF;Vh^$68<Gj#>g1IK!.2_)b"LI"jfVnDNGInYUU1$s[M,I4$nV+b$#G#OZR##3(T\<C&s
%`'s&Tm5P]9m"P9iRkaI4p*<8.#L)W,>'=]t^T=lF/i(;@NOr"XIY+/HV-:RnG&%iAdcOU!A&GjboZCT7XD3Y/<P@,Ton7d;0)j6[
%9s6.N08nG;R;>>foKW)uSRHB3dSR@HcMcbYr7p-O2O?"dV<;chjRpL`l\34(GPf%adeN13alh43BB?a3rRh't3VkjOS80$bF7`<)
%]fP>g#OgiJVp1jWEr'a"oj!NZ5!S3DZ*2p+f5^+%Z16[Fh!GSt9BW?+]q2_n2rA=kdS&BTk=4g@qKA.N&r3OB^Pf3D='o\YHG,mB
%PI^Huq/B*M*MZ&bfQ`U'\IuBXc'9oa93cb9F2X?)O$7p(k0@.Kppn)d?V)<Pip>i1k3)GV0sRPrh;bfbOT[eLGbmOsqB,SB>l(th
%j@kS1/!BJ7h&d@!9%drn/%bId?B@`s=BruHT"2c)LR6:N0,K+b]5@@WmeZ,i@EoV"ED1TOP$3et0AW-LWZ+15V3CNArlWF[hNjrh
%+3Fm7>nr[jTt$t!QbNMZ&uGSTBl@jkf6g8%7d1eHRcC!q>,0SVC0`Jc5;nQRl57`<RklF)8g>i3G*J9bjc1GuYB.H[]BMVoOO,7^
%&`eg9AJ^47pNPLJ093=Qq;j#uA[ZbSg>Z6us1#g?+`eB=[tu:TEH3\fG56G!GA("jL#g[dZs)/;j,6_!S,$YJc/Sl5Mf7Lf)OJ26
%`qqoQk=RnZV/*h]./+N4aC5Tc#8+Ptq%e0,k>Pp+7q_K&/&YWNdMXK'^&lZ)47IAU6,!D#TDcXYh)5'%Z/8)M^VBoTM9X;3dW=dS
%J9ue"rRfr)cLkT+#M,Rq\b:sO+DuUh?[=RN,cqS0q)Wdd1$p)pIJ0r=DS3nj*ips]IHh?'@UuWh\N4(RaqC#_jepUtnUOl%C3eB9
%kHHqj,XpjO_ka7I?]hAjIMHPVY>7e\j/32ejgE:lM'Aj5#4G[tHs+GCEDGb4f3%?5c=95>*'#79J#aQQYH6Qh]6g-:0jOR`PXlmf
%IuEgg,"\@50mUI8pNhsrh/KVfPnSVlQ\n?dp&s4<DK&[8<m1^G8Js(a6:XaT-4$9dZs/`3mBNdL!)7L"-Md:#Iku)Td?D$mV5(-_
%=C7n('tZQ"@q^7:04\:XC-R&aIJnc0\-A*&Z!mT8TDc/$AV<B]$WY,\MW@+_DNC^J?[+ZXYePW>"npR;re]"7:lNqr8#'%_J?pNj
%DKV9s%)="3i!^_QD8KYLqm\QKIWpQdJ\nX7EpUpK*#B#>4PXjP9*<ggN(a@6ffgS4KO3d*(Kgs]ZnbJ:G35KZ(".rueP-2JqS5Fq
%1]/`5J<X:Q$=B&XV>]-G\O7?+S*--?#gbb,rC5W&%Ku]0:H-qb\$AU$kPOB;]rUl135Yj9'&s'9nB$sA1m2k&9&J>&*Q/0uC*eU)
%21^F'YXW=Pq4ohU/c]`:=-`^,GIENHb>7P=^0PdM"%5G\I)m""6=K7F_55>e$!b#.>C7@>=R>/S^ucn\kSTfG3X/(O_!&M@\c$QJ
%"H-+]=s!$B\bFYOZG'$90Rq0T.Hm(BN+I",$5t7`k?gFd'%cp(X8JI(*A@Y[?=!GJlr72+mY;f+VSN>qGMr.@!Lh4QVjlfG%^MH?
%5q$gJ2JpY0-arH^jd/SBb\8dO;mDMbI-7u+R/qr5Wk-M9E"FMWmI$"%I5t1P)FX7e6p_s?jb9&3gbGD8XU;>!=9aT"M\MK`8?k&.
%.-d3QE,#BjMXUu&'39'hG!5F[D&i^Z[s!H"gr1E@Xi`u3^6SqY]O-H[[5OX_`kPIceIll81rtD;^KLe*p+b''!UfYYi:^MrEgC%P
%ThhgXE]hKkgY>)$;$g-XbB%HG/Dbe+#/SG.-#r1O[DfnO<AmC3l/qC'Y42?iH8&FG/KWW'5n@5\<RUZbP.ZiM.Y*YXD8)0:'TgXI
%)O0Iq%ds:1V*Hl,ed<Ih:_kC/86e4Xj@sJ7M\/+giSq2KiNal5IQV1q6;*V,+lZ9o5f8r0"bblIAR^H8XLE_XX?Vti2b<KBa64#F
%'d@_i6+V>>07elPS`09\Pmu^JIP)QZUiT]Gk"j8=5aDfl)*I<W8cD3*/e!>Bb;-;WXXmhnr"<t6!2Qe?7K..$\T`SRBbXaDH7(i4
%I21\:<XDi!&[QJf#Qn>jJqK<&h\;E87ALkhG23()Dd/%b/b7lT+:Wk"WGV^h.l"L;gp82DBkpp>ls;eB5.;#OXmGRr]CBVQg-5WU
%hA!O!Roc0el.<7Yi?\s:(o!"<U_^c<dla_tlS6c2Du>.QRuFFaf1J!4&_FV.<6dSOM+PE`I*-shGr@nigj]#+29OOD9HEE]fuu%_
%W<X2D,&PO5<r5?*-R3J!nT%7%A6[8mhWi%]Ld]b$br*'KMA@I'JQ;)<1gr`]bF)SW/Jdt:hNg[caJCJ*n0K1Z;f)Z)Ufn$aeB/9U
%l/q\NOkM`ASTHZu^7E'WTL^e7jRfb4?FkF;:7+YX\8ue7?lH%]el(kN@aj@?6b59"@g=i)$d@K-\NI0$\)_WLC0g:cV@ai`mtn6d
%I\u9HiAdes^UeLdj1NCg3,9oi+1iUuPW4WdY`T_;Q*],*IXKNJB;94UCJ=!73[NbFe/k$`rN16K7rCPn$:s\f5D#l]5;s)AH*E?I
%bud!S^^J]AaJhp=!a.;LD"Vr@liH1X<-B>W<-d.8\<!0Paqj$gYnHa^]Ue_Z_).(dNaAUmXRg$+cqSo^3aU:i8?I0H6'$qqBFqaj
%M!Z^RN[+<Aa@;Oe!tfSF`V;@4.>F$RPA$MRlY4s/?lWG['nB3@%Q$7&U=1@GW/'Hug>jPULJJFX1QLg*4DP7!ep?.7k;C2H3DH't
%\.UMu90DO@>fiC^+fKiAouai&Qp.B#hQ413*>MldZQjo"YV*ack4]j-Pg*_5eCqXL3.I?#>Fm@@\<Zdk@=+j[Eek4sh>Z1S<<oL5
%WqNLYApO\FAfGaGWKh4$`&3R.N_)1i1)@E"RkH.WNI8Vq0JBgY9%E/85\>I_FdJWBhkCdE:.1`IMji:aKd=GZ7H1D8m2@l4Ijl7J
%o5]NH;1'sVZ9'GPhJQZP3,ZI^7[q%gEU)0,ra.]tJB:N8j?`\dM\M!Krd:-;mKeN;4qAml8jZmOgScL$')s?8`B8O?fD+niGHC8C
%gnbE2k15($#2UJVYtC:W0r:\KFZP;nT<2tAp9:m.bi<&1HT*nEQk"/dZV]FjiPs=F*8Ap[XPOT2;>3FMefbje9/eZWZ4O($^tea!
%D=ckM<eW$4n#IbA_/H7]:.-L1h`i%^d+DgJ.d/jY@$L*H*+?#g;!GS<prXU29,^:Ahgh$h\KV^e&6E4%];;Z+@(Ij&Y$`Yq&nd(&
%=2iMdXLfSh"`4cdd16`B-i-6BP3nb_SXoV%TWE)0&rcs4c<R#R4dL_MXk$+]9CZKIF;8#-__/l;he*fo4Ouc/)tE.+oEg>O^78H5
%'+^e+_V3JAR!krEOEber!i5sm^uGi[-UQ-ZNrdV-=jVfQA3rD7I65Ab@@g:^/ITO/m_/Hs+c^R]+*Nb7k*\[!BY6@,TW$=uS3je[
%/QC?hFB2k@P^+-Ie"<3(*T<jaV1A[@["lq$&bPbh/E5G"=a1]]q%Hu:e'/0FioP9'+eL!$VYdOe7AKtkI90hUh]H\Zc9F#G`+:$#
%?Wqg+]`mOL=ONZRb0Ke#pK:@L/^9u)Lp=;R4oM/hO:.nZE2Xu4LtP&dR_hF]@LQ3QqWL6jDT(RPYZ'T@E%ZUD/tgd,9;&O/?<1!u
%cnt:><3mH/-RcK3KI6eELQg5ub.OpC<@/]-oA9tqTd,=B-3hMIoVCD!/14(%\WsbRs1'j-h;Gn:LJ*Ap^g/%`gNrAi\JlnY=2'4B
%m:rXbeFP;mp*i'ET"<C6/!1PLWXGmUdYFAn7<i_;*)^d-/mpD\c/K:>YWB\7BGQ8E1k)J;'"#19;B=nk^Cr,n=Nmb=WdLpJ[Z++N
%Gt,WBCC4R%Rn"AAj8<'.O?=@jHQqKb(5NLW"),LBoBW%nFp5eI/o^\pD37rUHmL)2d_mMN20DF2UWi1E6*E]p#qlf&?<+sUiDS^"
%cYFhHq>,3*m!,W'.X/+G^C)%Xjcm@()deSjmZ3]D3_22j&>X:dUcV"p.:YPt=H3IS36)k8ZrtP@]bk/Xe<b(G(!tl24Z3::enPP0
%h>WL=lf5'Y>f_.IU>LYp*?;V9_*ikIqVBH!Te+p)P.d+i$snt3]A#&q@O=5+`CljQ[F2QaQ#uWY&d8=+J?YSP2fXCh`/]Eg\[/>(
%ZLd7(TN,lb(mC<jY*.J_+m-^?)C,jtZC>XAL:`*^YGl$YBJZMqN$/^P4KKK=5W;I/0R<^_^9muO.gY@Jf'%;1b"fUn^TDA#n.agF
%`I3NN#nVT)")-r583PSNG@+Ra2O3*h,=4.p2D/&&+Qhhf+Y9<(QOfbUBpZ-"eW5(LJF0;Fj04;hc]b-MM2EVol>%+nMElBp7<9bC
%TrXCYoIoM4(\]!D<#*LMctgn;=P:E9]QorLXE_mPLlm;N/ln./`/:ThdI12*N+>EVlc"9SWoG,TmmD760;=k3,[k!&b:uAI8J5/L
%/g#Ou,X@[:$51tTY[pKdWCLAq2G"J6dHb<.H/ID)eT^F%Um5(=\%WjihdB"i@V=I[*cdOMC4/%u=(n08'&2=25,d.U,\ZnCm;>&Z
%G@?<t*-M#llAKr%>ceh8/Nb/D'dUCDLW"A!DO-n)0Fm*iTV-Wd>?i]K8\SB$;WbB5\I0[8%X!oO;mlB0h"BMH;FW'P4ruLM0(<B7
%B%B#2RmKS3ii,[r3k(X#c&-beAi6fEQug:M,R)_q%2USRXi0Rf=/!OPoCmHB_;1MKcD^U`e^6=/EL0JA"%&UMafS"mg%;'a--GW0
%A39"(WZ-L3d&%L-=Y[Cu+qq551*pkoqeY6d.+T^W/&>1;6`-M!!6iZEMqY)q&1]#B&_PuhcUo'VnKNdLas@eDKsar&OS='R0q6qp
%$H$U4p;Lk:qF"sS]##1\6*G-*E*/e+4YPrO_ARPc>QV\E1b_n[5)RuPfqL+WQKrinl^fi#^]qNfFe=0=c^s6-c"tkf#)eG9q)CKF
%So-6%q<7Y`%hdu,i!"'-(-s^UL/Gj@L7:r5M<X.4mW[>4i`JB]/8c-4_$D%darJrT[TGJKXl%;T=PDc^&`)Y%MOStJrqC!CE("AW
%,QQXCGoVe^0<S=bg*)`7_>ErIl)Ri3DHF^a)oBZ@YZVP:0![G=Y.oJ1PZi]ORTS!Z.s\&b6Fmb82X8Z6V4u\GQ$[LbfIq75cRY7m
%OV#PEN+@('KU.uL6!%quij$O@*$@>r_MBZN.$H1Qjj1mYL./'1H>Xi"bi;7p;hYB&KsOgsRjo$9SR+UaQ11Z.KffId8A^ugg^"$_
%F[dV(YFS-J$&\0kK'II_k3Vcr%_"[ta9f+7NeTHFd^p@PKX4^rRjs`3$#Zku2cW]2fWCG2dIplIj@Hb9L,B0cLjPdc0(!%c-e`i-
%JE5IsgDCb5,9M<pq7"jGRDt$oZIiJC>m't0gEY94L+c).ZhWR$!tb<TKCj[hY[%f2mp"EHXA($;im)G?2K-On!RT7LX,pZ`NTne0
%dC+-e=&=Td64XoT'Acn!mfB3K?uTo#fX_B%W^Q'u/1H@^Ju_iRY.[gHT'N\@X)n?1Qr4K^HgsRMcS=78o%A;VNT\q")0'X;cd6_Q
%0f&=ec==e@TTR2U@-cW'_0s8oX:SV6i_7dPVsg)\;@Hsgg<l+VM5asDW$Ckf"P(V:4<skQbGZr*<^r4$:3mJ<hRY#9nU6pJ<QkkS
%9Oh0660tn^19o61o]DHX?JbT/aH9(M;[Q-aK;JRS8aLkUp%j,6$8N##h;1qgf_].>%/12\gqi8R`Xtu_<9Tue1PNLaeC`Bd*<,Xq
%bs?HVpH=K6GsQZeGKQ:P*%-D36:S'MIL@S"Rs2B)J]1kni8a6]m)B=WHZMXD@(i05O<0q-]FsPKPm/@J_1[/"B6<`5pE==j3uD>(
%J>Ch[0i/\i9XtMW^M7WUCJ,RJQe]G<M]=ls'gWBoSqZn^#GiAh`G@&qj^)g?q=NEi/a_[pNnC[p!iouXG:uNa?eF1akO.FAJ$A(M
%$U\Re^(H"6l)E(ds4qPaC\#ba;I:=&ZGSkTpYT6\!O)-[5nX(jO+81:Gg(CVN!po(T>X$#roI+GNL1]rA-aspiil$&.0hG5i+n?K
%npC10>!``cAnqYG;D^]FKPkm0Y_3!Y@\g3inj;;aObReK+Mrs+[?A81H!Cpgopk.tM!1_&].BD%+?I4]aa6\3nBkB"SfNF((>\A>
%72$"P+Ok/V+c(5+0])?DNs[)5MI@Kn\D1?EnJ=S'"_qY0B87TR>7m&\Sq@@o&shH!Md-Ask9(h[U<N"Fqqnf6;<$9ID3p`t\6PtL
%d-,@K=_,hhYR.%7[?VJun'UXQ$.*#jd/a3'pG7F.U,`_8`_.)l:_6(p>4RnHdgI?^p;&Eim@NQ-DJ=?D,is^:;u,u_\*B,a_<rXj
%pU/8md7.V`h0j.6*GnAD7iUu@\g`X#dq*&1ANVn0m6O46.QQ;ddote?D,;sB+kp-S>I`(:,U)[Z\hF0[ju*/2l(d/\9HIH*+BDi"
%_d)NGJL=pf^b2k$ju,g`+OAfG.fX[<q8+ZaLKbp>aB/c)$;#kE:$SpB=EC6nb;u=gM&r9f^,(U"Odl@LC2-<FE`l2uYI7'L'mbbs
%7,+B>dAXF>MH2DBcg>V?G]#n4FV?6IKL:OAlU!(Dj@fqXl6>lEqZ(ru#"jq=7NSBqUXCdZ)&4CNTN?X_R,LKC+rg^se'R'?a%`(_
%K)dIWTZbqI+J[K#bn5dJ0-6fJ\A@l@Sa,.7UMEP;'X=6t1*Vg_qrud)UWMOW6V/Nk\BZVVIF;NOkc3[)7RXRcmfO.2DR+N`W9=d`
%Z]R_9F\]14'1s/t?`1@uRR.oAVDQ`7*)%J8nf=j0NJnf7<?ZNm3V&D(:A>dHaMJQlf&GHPcMAqPc9N:Nj3rTrTMfL2r;.stP"'nG
%"JI_MrM:)lJO#\l.oXBk`Fp*Y,F$G+B6>tDjQ:oYgrnV)NQgSk%tQPVBgg2o&4h^_CL@lJX7q/%98e-,!^MjAj*Q1j/L%)RAkF;^
%goY5bb#5lgKO%dcP$EP=VKRXUT;q1`YGMSiSp6`<GA^R;9?f&rQ1WjZ5!*\V#`Ap]pG3YC1$G&KB.:*&9B5@WH?@-l,7fm:*#&7E
%a-qPKR!(mb=@77f$V:l^@J`!WUNU*mHsEm=<o*_In$0aq,N3JV-@^&c5iR.j0=\Xe"Kd4Bmf$jfnr;;+/mG+<S9c3hChik.[U[KB
%^_$+N`B>rfWC[S,!S@+\JI6P%MNKp)_cIBmQe/"=cERL1M$@/@eg>d7m=]N2R@ZJ!KUfHV:9$E<G)`SXa3:)s[c7g0j/bW7o?KH@
%h=r>aO??9bWkPuJP]NK_XR2";Ic-?65YrS>npt01_+rBP<Zm/-SU<]@H`5-jRX`d<o?$\&[&;4hBuq-'4h#\:UQi4*jc0.[48*<;
%W`I98XBcT9lmLWA<BA1"&QXasXPukVpj0Id8tV$g9BrBu0Y$@g?lRoIZP@0p:UT2>>:\/%U>*u_>>O4dHgOVj[X7D&S//C+OVM3*
%0+M\_9&_q),G#.`B(69BH2P!nFPCm%6llj,^[\+rLulcBX"!aKI4>:MI3#i:a.Y1_',q6V\Rg(3'KMqR*%>Hq06S6@[0XJm0pfVW
%Lq2W6'-n(sTY'+C?b:`KB'qLbO7ROKmnP:VE>:34b[EcYc:PUX:b)(%`Ec1!l0%S1Nri%DgOCN=?9l81ombNjE;TL#Y3bSqK]-!]
%I2Xc1*nNE7h38uap#7\j[&`!s._``-2kaQkjq,tdK5%iD=O>P5AnsQS`f#VrB#YELDI,Fm<Spq2-:@1Gnn%g+`4b@"S>VakXAK-Q
%&ot/Op;q*rVY)rX=Mjif%?,Jb+jrn0J5/YpZ2(fHINE+m;6fQ8l6d#)`s\FMkPbDS0aTt-dGY=FhV"?NN<B,+q(/nr5>:Hs?oiCC
%R?_&'iX03r4;0t\l-U$J%X0U_J]]I3o0.i;qAb61l7kHH&6GJkhZK$P+h$uB651i&Ep?fW_$P:QMY'0$nP6b'4mL[LQYA%Q;su=C
%$X'IGYW#V=UP@L,5S*2#D''a+>o(2.*JXLH4gudk2rDn4@d7f+_\3V=Ee`%$dc_Xh1gO#4:<Sgi[&cXUg)Hu&*hmJo&Y]tKB6-mX
%:HT+:VMJ<%[bJ7-NjAXM`0@dR<AtOAJp93N:&\ToGG^%[<1[Q6]'+ndU0u^Dr%unb:A,%Mrpdn&6VKMXXs`(EneY4-e#(c9$7Mcj
%,<rE.3dKqXOp\o]qL2mgV[=\G+t'gogWgtA0XILpm@S3+]d;3U[1=VPDS/Nb1TQn;rmu!MK9(j<kiU4Yh3t\_Tk=h.UlpJ+,ZQ6I
%`>lf08?,Kqb0Xt5:TiCbDa2(Mroa%gQ,>]lE+[-8334U<)`>W,0p,JDhD_PdSTXcj.Ib9G?/`=HQ9D=LA1XuKbUaD1"Xr?<M`&*0
%Nju\Q;C76U>"eMY&*hAPQD''MiG!p?Y$Q">PW?$<(YOY.k-=&mnQ7?q0W=]DWh/:*_V/'W.#N4Q'8DA@dup[?qDeELF,@B6Vn(nW
%4qk_amcH^2;6!Q@cmf"e96u;0`d6!q@l!lXdeJuFS_:ND(.pP3T?Q3N_WNkThTob<@&co7!;j;2H-T1XF6r(IMkK`3oXjV4WdXrc
%Nt7<sT6'*+ePAS809gKjC";&35"7IThA3=I]Zb(-]BTV6p$uotbT:%`'d2JCM]4K^YIJQr"Ro%qqe!8CZ,V4C;^VCD)Oki"r=V(/
%o4Sb%fi>Z$LY+*DnnUl[)t]Zik%h)N8,,6&nk0Pg_]O[QGA)>@S&Nig/qI$/5qZn+AYAJWA/eDA<6FVk0,)iIRGaDRJFgaT.NWUV
%idO95k'BB]o4/8Dh'KTH2U=BFPaC$ojBQ$%Nks].*a''h5:']MV)YU`#%"BC0eqg.6:\uH?!L=G1X?g`p&tI8T%g(S?-'NIiQ6,]
%IVl@_5_LBTFl'DC'(g%;24Zl%b6.BBVA8EG':p-NZ8KoE!"p1-99Q8.j=;haI&0>/Z8X@:&V0$!c*:JH[\Zu6W/i(7=4d*MlZ)NI
%p"ko"h5'iH[#unZ!W?.MAU3u/I+m*m<&sQ$[K#eY\OdrVmCKs"0YqCF9b=m@=u2cO$nls(<_YAn;Ej6)DA+:k!5;bHfQ\D2f0Ei*
%"0]Nj8bc+Is#et=ds9h)DJnF(<)]S.UX>8]gg5EjiM2E?DeQaJ/aX6X_q8EJVV`H#7og;7an$IQfA#>M7CG+G@daT0:UtS;qb\//
%Mdf$!"\(LA>'"#:BAV`lH^8h3l.-nAJ\XudEb:O+jjn`AHb$fZP5eJk]%N!XqjOGk6LI&:`9meS]4kGdN4BK/,^ZdKnnZcDR2S/K
%q=T^!-:o+U62mn/?]hs<&F/FuqA3lm6n87Rg>%VM\P[T(Y^N-eKjN"9c`6'9c^9af-QRp\2r=q4gn%m_^ZSP[k5<=V72=29qRVn;
%nqK-)8E)Xl]CaAYj+8<nq"ltG3.n6hN@U$N*P%CBgAO_XQAi<0gee]k?TLk3BmT5eKcCPb2_HgeefWg],(o8ikA<ET2@fUQ5.'[>
%*3<qh]8&eRIVbhgqjSUdO<U$:4[:HF^g$9bao0BSE:N>>&bL%s+U]!**a@LsIt?Mm<R!q^N2f:pB>^?2n$q!IBXX\XaBomK^XCdu
%T"f*n4/H8YERFRMT[7s'[MnO!F?Q)<T',kAe4cS+eu:Ut"`#$Fb=8uF+n+LCh<*EaWM<^V>^]"Yfrha+5?D3q\X14_Cc9u/+#eB<
%/%)TX+(AnQ+^]M>,ZJ]eKPa`jOaajX]2np6/=^S-$Lcd;[aX)8l!F;5,sT-o@!&31k*"'`qmiM!3hKWYoPlckE_B3%[YG'G\_SUV
%oi;[;c:5S-C4bcRW.?buH7S4!]]&/%?#QS.rT[#!+1g;Y6LW;YDK5M?f3@4f(cP^u\a-AR#,0pnp#iKe,.af3F]>]XhTDSN#B"R6
%l`JOeBA@J!kH;;2[4uR/qK(7m+mUt&\GC9u>=JOsgi2rLY.#V2kVlcF\a-@A[QE[Of_&8RTe0?ok\a;%l`D-J+igI;5o01@d0R9k
%K&+g/\")]I/5`:?N;CHE"W^YsQ[H`Q%4%E37g"VGi_E>]1a+L<d0hujQ217CS[.E)+8u"5ajL1@R*VQK%G]a/ABQ5!KsoB6[7/Gn
%AORjZ=f(,q`Yo%knTab$&t(Ac]9SVS(7(\+O8W^RTW0'\Mp</4ju]C@j,sf1Jr3'_hXg*6LpuD3P_J`**>4[-.oqTXZ'u3T[2%aT
%JAX9dq3*''+$FME8@8&Z.rOh"Rk)"s_<-Sc*QVr<?5F7,!_q$cT,<(@7`&Zrlb%(V8C74H)ALXi/d9XHNXEI6DOmH0hQjaelm%"c
%0#l6!Ok4'<r>3AV'%"ne@`78l2Xi2ZYkO6tS8aITGF>t%_ki?'pd++=$_n0oSLU<\P&c1%"^9i@E#pM2K<Wp"q>eckO3(qJ-B7!]
%giu2oc6Vl7A>!W`"g]k>m^01g6!j:4kZ-)ObHT^[`ecm\Q=/t_+D#c]VNH>L>p+Qd3%\r*df'i,STJAROnOk"laT`"^QJ5Nkj'Md
%giaq0+48[b1_"<l&*rOnf$5AffBie>+4JgJctkYhrXjS78D162lU"TkCp5]!H0]X=.`fSa/0W!BNZ7.e<X$PrJTln.T'Ijq3M_Jf
%&[@l!]0[Ju\?COT&$q2p):0O$^*X9/$W,XHg`rSo4OJ.DP/I`oDVbe"e4\:bXsXM4+TD)U?V;X#4a`!H'"VDo5)As%anT^!Ao[KA
%^ZbAl_GXF(hZI_E4&6-3Q+4m&/pDEpmU"Ud-ug$!g$[s5l7`2Spl%h3KeHf9Wn%RFZKPN03&C1L4VujqX7lmWQ_<QT0c5(*Q-=<P
%n^2/SC]?5;Oh^Z>rJuU2n5I`/]V%`J9Er4AYd=bCAX1c*o!)jC272Og[PoTkhZh>#]@Qj,\k^Cc%]bqCL$3iIep`A-)pqY&'DDpc
%iDGOnY+BX/c]PuPBGNgMrY,+.RU[RpJWb6/f#A2b-Y%hg_Z-AU'gdmZ#Wu#CjmaLC3Pu@JB_^HoWFL>Q#J]ZD?XHY_,t7hIjgjS`
%o_su2eg'Z$?C*Vt--HoC'h(;4/#!r!@::K/.9a_BX@E1MO8L;C67O4YWi`SB8L]A>LsF059BJr:4MWCed53m!dCG&H,@>5g`a6:6
%pb*Bg;D`eckk+j/8mpcenGbnQk[B-<W#kb-NipBr2qS$O0I@_n-^[b/'!H$C$0m5i$!JgJ'=:gN5=+hc:/D[(]WBcKa3'q$1TQtN
%ZW.H!3T6#o:?'cf`f%KHG"/08HIg6Yr#D!>:QYU_',7:-N)"ZQ"SG+E">,n`$/-nbT-3l@-R_>2-].O'l@mLi=t6!TZr[`#6!jGp
%'3+'-TAf,F`[Gq(cr/PeTY5C@$*&JaJf\D[$H85V94LAC;(/;@R?JthT^kT".&\S$i?e@(bsM:1olAdic,(nW.0#D9AmeTNBV1no
%AtL+p[a!)GRrWP;5;G5f91bP1Sc10op?Ci'[eZ>F;blhCBJ:Y"&l&PNCn75qco+1bgc@_oiKP#R,8uLhE[aH,m.b9DZqjLO[nY4#
%S8s427#MX5E_9;>?FC0/L%Yi<jgGJaKi:b9O(^8B.\o$iZu]&:Tm_N=\SZq1iKP#R_ci!na;]iA$$t6'7cAG&%&q0uORF7.26FGe
%-rf#%R];hq5\D$NVBN@8:i3fp'%=8Q0"\#sdp6KZf;?0ER]]A/^,]Jgm_Zu/K)'(G8+dS:o89&pE^5eXU.Y1c0.K<.TE'lLWiS`/
%AX!Ir9F?_,V?;FdcRF`SLo;nu[NN\f:_njE,"TKL12=g8-Dri-")(h,'hDb&8AU@^9M,=aTOjQ7d5!R*ab"+X"T'Pk8[M;+PRK,X
%TL[[4"pP6$kG$&16HeGSP0%Bt68bTs1+Ujb3^EomVU7_1Ugm@,!2iM[<94N="LUR*0[mrKm9<Fc]SM^XkKc`$8M)7X4>#VSPtjj2
%!>_+r$3eR8"lQ2N`7$J=V="UT"_1.I&<]s09k&g\2@?@D6Br3dTpEi3"GEtAi`(pTqgo#'8<cM?-u&`4;CJ9aV340>3flZ2NJMG'
%4q@amKh=s+9YnT)W3S`A"YJ^!)O4N,<3u@aVBF3<6=>Hr/X0.<7YW't!&Xr6OiRP?5ie%o`#DUOV??oIPi5QR`0"Jc4I:YbP=_GL
%H5nLN!(\RT_B1mUP*](087%(JOsF'V"-='I6&!Y+H;0c^N/.dr#B/(r$X?;i&<EJ\j],>0!)=];B@*06l&Z$5/qpruPFtPo$EsdR
%JJNjnX3j6Kd"8p5:^+I'<AdJSKGFU-H&6YH16Ics$n5.%JO3,U5_TU^!]Uoe<MHDlPQ8rs+9mtg=A;%67=mF/*Y_nFN`4q90H+,n
%C,,r5&?7!"5\-CR`X6-tC'JI2J13Tt'C[1J/-6/)'6LI_ZD:nP0EafgA3cIcNB\O?3C>)S!aJT%5WTe0#>gKtAuOnuOori=.?jfl
%RY1YA\e?qn_)OMO^_nRTpe6DWJrZY"+f<%+-jAYpp^GRT&0ikm3[,Ds+QA%g3MgF0.g5cJOZ%_,3P\$\LjdE:)b>p>80J5V/kIg@
%$-IR`MM)BN$_d)!)`tF!;37CNiUJ*,o:hr\(uR!=25mM$6<2Xa23[X*d\j$!&.FX6YY#74'bF2r$5*TMA6K^kWb".@"DDd1WsKF?
%*0!QU&@0;j!jr]a#65q@;8?u2gVh\ITS!Ya?T8Za_Uj@6B/G?b5j\Oi$#i[=fNQ)K!$opc"Pn#pL8mR&8c^Km.#!gNBH>GO$<R[H
%c*Nl62t^LnZt-cm"\YjEK'ou*:lL7Hfea-h&II$A1tSK#WB^`$iM?>?+&o8q<U[0o>6>21):FpsQdF-,+D28%,04hu7L`1ECh%]L
%S<+?u`MS(k^gIl`O8oY'VPf:SR^0U8Z!O7["'=IK'&HZfMg-d@C+#aF"'j;37j4)n:o<e-Q'B'6,sL?;e)`b/8sGO-Eo0p=j?Am/
%'R:.uD_';u4qqbEC)?c51.1>:=b_-VI4S>HfpQ;V7%90[Lj^huA/)Z.a$Pbam:%.EGp-Z6qcG1DL1Q6j-kmN%2T7iqb*$QWqbS\=
%JS%N&."bM9m8>#6);U]Y*ssfgVjg!pb%.([m6Vm%'qXq76g-n2WXE<(kX2$j0YV3+I3S%]LX_)GJYQU3V*5TFE)Z.%*t!j$[n2!9
%>*TCS6g@lL9iL>80K*'V8:;m#H+K6;e;(n77T/SN?UXT=$[/M1U0>qY]@;U&8RjP3UcoKmMJ*h&,"NE5M+C"t6Qr.(S'WO4A7W=!
%LI+Gk7D$n_<FFN[K/84qL]W2Bm6Vm%'j^AJ6=0eWA#O5OI;Bl[$+nOhTca[LD\r8sUF7oAB*`nl^r]NF1PNP3)`NI7%"m`2$>0Wm
%:d76VaEFNnbXPDG.N),+QjqA\es-$(f5[hUOSZbE!3VJjl2qQ[APKL(I8HX<JRuICa'n1&B1RGIGi4KlQho((cFHWJ%uiBeBaB-'
%7[;ZVFeOkBLk5*-ckf\IBV&.=6=84R\_4P36D*:3jhq`,S4-:d6D$cH1-O(tq>t[_`?Fl)*HF8BBMG0RTk)<E2PCXp+u8!r;!8"#
%AHa2b'Dd$K.J/1_1,<l\Pb/k-5g6ck!n;>]g`++n7nEkTlkGn%YHiRo:ma4M=Cr`I4C1BS<+quLj;q3hUcQXTe8m(l"85PL9'dtB
%;.p;-^jVj_].gUX)8ZrAA4.8<$[#k`[)Rr[>o6bg$t4sh/MlTbBkSqP`M(,P/CG*:6V_V<_,r*?9APheVB0H6L8[!aA)!6&+<>]=
%=I\:]$<:BQ)<)2BE+W4AiXkHfY`0[_&:c6/<S\i0!LGe&@0KlFX[O94HY8RZ&Vtr`)-q8$!YG]/k@1;RKX$AUn.pSRQs@iLLsWZ#
%;&fWLEJO&r;]o8r\g\2Q1GXf!$:GUD9@Y0s@0no*':8h5^r>WZXW\5fSZ/l4$:LP+?=@m3&;X@a@0f7LeC[g0.1f@*#`LDU!`;99
%O`>>-,"eg(0Mu7L6mu"[d30)fdKm.WfHh^UWYmO$Q\Zc5,i,7N,bfsDS(I!>dGiHV84:6)VH[1K,-7Z_(=&/#YT01m0S@ItClJj[
%#b4.;A>_$l1FV`pTck"((0f.IL`k,&?,83@U.j[1>p:I?U$B<?&M]e@d7mqQ+sJDVBS'M6K!c-?WT'"q0R&MClk0oaO^SR`&eW?1
%7:.9<+sP,W%Z.-Y*6Zt\,1+$=gi+$c#j<^qFu'th+.0<VM29#E;E:XCK^iYBLDe;<.e1^gB+bft+ep_=M^]6<oN>l<M28l'9liin
%g#/'k7$J.9VO']XLaPZq/Xr_O'!]DVK0nCRB:<D_6:2G1PqXFKGJ2_QF@cW,jV4W>YnlUk8#+kn-?Q>#L<r3l3ZP>"#/ZjRa;g0`
%SmCPFTup"<Tk!XGMpOchc`A]skPtVjbTgj0*E2^?#T]-%=bI9hHBJ"u:"Lob6\atDf.6?*.H>N`!Z#B9hC`nH@?PadX5S@^3N'jh
%MCqaQ7SVJbigsbK3QOo``F4E#j((>d;rmk+[@4d(`%VaUqac!f2!O$KNpW!]X,m;fM1R3GFGC!c;\Hq41J?<2NYP1?4o$)tmH9lp
%?/),'.*/(jbDKSfK3ZMR<Jc?qD7FL-%TrodqeAG;A6jS=gCjfXfCIHlLm+]F-'$Ig'&[/E8+0<+6RS>1M#mp`N`2ahTo@i@^2%2&
%-c#7S.*e7gS8dDu+rFd<(#U4HpQc[F^nD,j>8%>`&hMmM&e$32',UAX5qmO!/-;?+!s0G^j/.#\E%m.t'br^8/Gu+I*/qu99S,P5
%=jpppXN1>0]U/a?,)0NQ=b24eLbl6M$02MK4`DCd9q2aqN['POEo:=n&^(4q:JNZH&-OsPh`c-?!tK5>L,YY7-]fk.AAef<Z/o+$
%it^b&>/!$HEA1),\.dj%/ttq&3(Q9\EBE0Q^Qs),&;ORMEhO[3?<d!"gn$L?gM>iD&dMcZ9if*U2-=0-J,@u+r288YWU=Zh`0.%3
%8Qs$"nWTQ"@;6b(!AXA2"?TDEa_`Cto>=tir)+<6AT9;[B6mdt(@CWrq"e\aO"^+or]r3rccbf8<l=SkXi!3Vn5FJ$a(:h(Z!&d/
%2as[-1oTa;a&?.=!.Ai)fD~>
%AI9_PrivateDataEnd
%%EndDocument

ENDEPSFILE
0 0 10795 13970 C
0 0 0 SH
-1 SOB
/f12 f
75 45 SS1
sv 1813 Y -35(FIG.)D 365(3)D 126(\(color)D 442(online\).)D 683(Lepton)D 518(asymmetry)D
786(\(solid)D 424(line\))D 350(and)D 284(equi-)D 193 Y -3978(librium)D 534(lepton)D
459(asymmetry)D 784(\(dashed)D 561(line\))D 348(dri)D 182(ven)D 281(by)D
r
/f13 f
sv 207(CPT)D r
/f12 f
sv 370(violation)D 193 Y -3726(in)D 185(the)D 260(lepton)D 474(sector)D 454(for)D
r
/f13 f
sv 250(m)D r
/f15 f
sv -58 Y 129(eff)D r
/f14 f
sv 92 Y 0(\027)D r
/f16 /BG-Maths-Symbol 166.945 0 0 -166.945 0 0 MF
sv -34 Y 191(\210)D r
/f17 /BG-Maths-Roman 166.945 0 0 -166.945 0 0 MF
sv 185(0)D r
/f13 f
sv 84(:)D r
/f17 f
sv 42(05)D 222(eV)D r
/f12 f
sv 250(as)D 194(function)D 612(of)D 194(tempera-)D 194 Y -3726(ture.)D 443(The)D
402(amount)D 644(of)D r
/f13 f
sv 280(CPT)D r
/f12 f
sv 472(violation)D 737(is)D 253(\256xe)D 248(d)D 225(to)D r
/f13 f
sv 272(\021)D r
/f14 f
sv 33 Y 115(l)D r
/f16 f
sv -33 Y 93(\210)D r
/f17 f
sv 193 Y -4184(9)D r
/f16 f
sv 120(\002)D r
/f17 f
sv 176(10)D r
/f18 /BG-Maths-Symbol 116.86 0 0 -116.86 0 0 MF
sv -58 Y 167(\377)D r
/f15 f
sv 98(25)D r
/f17 f
sv 58 Y 181(GeV)D r
/f18 f
sv -58 Y 314(\377)D r
/f15 f
sv 98(1)D r
/f12 f
sv 58 Y 124(to)D 188(yield)D 392(the)D 263(observ)D 443(ed)D 215(v)D 80(alue)D
338(of)D 196(baryon)D 521(asym-)D 193 Y -3914(metry)D 380(.)D 105(The)D 324(\256nal)D
361(lo)D 127(w-temperature)D 1040(plateau)D 548(of)D r
/f16 f
sv 202(\377)D r
/f13 f
sv 139(Y)D r
/f14 f
sv 34 Y 97(l)D r
/f12 f
sv -34 Y 110(equals)D 491(to)D 194(the)D 194 Y -4118(baryon)D 536(asymmetry)D
r
/f13 f
sv 815(Y)D r
/f14 f
sv 33 Y 98(b)D r
/f12 f
sv -33 Y 73(.)D 114(The)D 332(dotted)D 491(lines)D 388(correspond)D 814(to)D
r
/f13 f
sv 203(m)D r
/f15 f
sv -59 Y 128(eff)D r
/f14 f
sv 92 Y 0(\027)D r
/f16 f
sv -33 Y 192(\210)D r
/f17 f
sv 193 Y -4184(0)D r
/f13 f
sv 83(:)D r
/f17 f
sv 42(07)D 222(eV)D r
/f12 f
sv 287(and)D 333(0)D 75(.10)D 300(eV)D 174(,)D 133(and)D 334(demonstrate)D
910(the)D 297(approach)D 705(to)D 222(the)D 193 Y -4117(equilibrium)D 835(curve)D
421(with)D 351(the)D 258(increase)D 603(of)D 193(mass)D r
/f13 f
sv 387(m)D r
/f15 f
sv -58 Y 129(eff)D r
/f14 f
sv 92 Y 0(\027)D r
/f12 f
sv -34 Y 145(.)D r
0 0 0 SH
/f13 f
sv -11914 Y -7962(CPT)D r
/f12 f
sv 330(-ODD)D 469(LEPTOGENE)D 963(SIS)D 5287(PHYSICAL)D 867(REVIEW)D 704(D)D
r
/f19 /Times-Bold 166.945 0 0 -166.945 0 0 MF
sv 174(00)D r
0 0 0 SH
/f20 /Times-Roman 158.155 0 0 -158.155 0 0 MF
sv 12671 Y -4353(5)D r

[/Dest /temp:intralink-f2 /View [/XYZ 315 746 0] /DEST pdfmark
[/Dest /temp:intralink-f3 /View [/XYZ 315 356 0] /DEST pdfmark
pagesave restore
showpage
%%Page: 6 7
%%BeginPageSetup
0 0 0 SH
% End of font info
/pagesave save def
/XX 0 def /YY 0 def /OH 0 def /OS 0 def /OB -1 def /IN true def
/OT 0 def /OO false def false SO
/ET 0 def
/pagemx matrix currentmatrix def
0.0566929 -0.0566929 scale 0 -13970 translate gsave
%%EndPageSetup
0 0 10795 13970 C
0 0 0 SH
0 0 0 SH
75 45 SS1
0 0 0 SH
0 0 1 SH
-1 SOB
/f0 /Times-Roman 0.184515 0 0 -0.184515 0 0 MF
sv 5396 Y 916 ( )D r
[/Dest /temp:intralink-d22 /View [/XYZ 52 492 0] /DEST pdfmark
0 0 0 SH
/f1 /BG-Maths-Italic 184.515 0 0 -184.515 0 0 MF
sv 157 Y 4(\021)D r
/f2 /BG-Maths-Italic 129.16 0 0 -129.16 0 0 MF
sv 37 Y 126(l)D r
/f3 /BG-Maths-Symbol 184.515 0 0 -184.515 0 0 MF
sv -37 Y 102(\210)D r
/f4 /BG-Maths-Roman 184.515 0 0 -184.515 0 0 MF
sv 205(9)D r
/f3 f
sv 133(\002)D r
/f4 f
sv 195(10)D r
/f5 /BG-Maths-Symbol 129.16 0 0 -129.16 0 0 MF
sv -65 Y 184(\377)D r
/f6 /BG-Maths-Roman 129.16 0 0 -129.16 0 0 MF
sv 107(25)D r
/f4 f
sv 65 Y 200(GeV)D r
/f5 f
sv -65 Y 347(\377)D r
/f6 f
sv 108(1)D r
/f1 f
sv 65 Y 73(;)D 446(\021)D r
/f2 f
sv 37 Y 127(b)D r
/f3 f
sv -37 Y 131(\210)D r
/f4 f
sv 205(0)D r
/f7 /Times-Roman 184.515 0 0 -184.515 0 0 MF
sv 276(or)D r
/f1 f
sv 339(\021)D r
/f2 f
sv 37 Y 126(l)D r
/f3 f
sv -37 Y 102(\210)D r
/f4 f
sv 205(0)D r
/f1 f
sv 92(;)D 312 Y -2780(\021)D r
/f2 f
sv 37 Y 126(b)D r
/f3 f
sv -37 Y 132(\210)D 205(\377)D r
/f4 f
sv 153(1)D r
/f1 f
sv 92(:)D r
/f4 f
sv 46(5)D r
/f3 f
sv 134(\002)D r
/f4 f
sv 194(10)D r
/f5 f
sv -65 Y 184(\377)D r
/f6 f
sv 108(23)D r
/f4 f
sv 65 Y 199(GeV)D r
/f5 f
sv -65 Y 348(\377)D r
/f6 f
sv 107(1)D r
/f1 f
sv 65 Y 74(:)D r
/f7 f
sv 864(\(22\))D 366 Y -4019(This)D 382(is)D 177(the)D 280(main)D 424(prediction)D
804(of)D 208(our)D 299(work.)D 211 Y -2389(Figs.)D r
0.6666 1 1 SH

[/Dest /temp:intralink-f3 /Rect [1539 6488 1631 6303] /Border [0 0 0] /LNK pdfmark
sv 438(3)D r
0 0 0 SH
sv 168(and)D r
0.6666 1 1 SH

[/Dest /temp:intralink-f4 /Rect [2049 6488 2141 6303] /Border [0 0 0] /LNK pdfmark
sv 342(4)D r
0 0 0 SH
sv 167(illustrate)D 725(the)D 301(case)D 394(of)D r
/f1 f
sv 229(m)D r
/f6 f
sv -65 Y 142(eff)D r
/f2 f
sv 102 Y 0(\027)D r
/f3 f
sv -37 Y 211(\210)D r
/f4 f
sv 205(0)D r
/f1 f
sv 92(:)D r
/f4 f
sv 46(05)D 246(eV)D r
/f7 f
sv 288(in)D 211 Y -4179(more)D 425(detail,)D 503(by)D 228(sho)D 251(wing)D
413(the)D 271(e)D 78(volution)D 659(of)D 198(the)D 270(baryon/lepton)D
210 Y -3296(asymmetry)D 880(as)D 212(a)D 141(function)D 674(of)D 212(temperature.)D
990(When)D r
/f1 f
sv 499(CPT)D r
/f7 f
sv 418(vio-)D 211 Y -4026(lation)D 485(is)D 185(concentrated)D 1009(in)D 206(the)D
289(lepton)D 525(sector)D 436(,)D 109(see)D 298(Fig.)D r
0.6666 1 1 SH

[/Dest /temp:intralink-f3 /Rect [4812 7120 4904 6936] /Border [0 0 0] /LNK pdfmark
sv 354(3)D r
0 0 0 SH
sv 92(,)D 109(the)D 211 Y -4097(lepton)D 552(asymmetry)D 910(follo)D 346(ws)D
292(the)D 316(equilibrium)D 952(v)D 89(alue)D 397(of)D 243(the)D 211 Y -4097(\(lepton\))D
686(asymmetry)D 922(at)D 235(high)D 429(temperatures)D 1056(to)D 245(freeze-out)D
211 Y -3573(belo)D 315(w)D r
/f4 f
sv 217(10)D r
/f6 f
sv -65 Y 184(14)D r
/f4 f
sv 65 Y 200(GeV)D r
/f7 f
sv 347(.)D 130(When)D r
/f1 f
sv 526(CPT)D r
/f7 f
sv 444(violation)D 742(is)D 207(gi)D 141(v)D 90(en)D 259(by)D r
/f1 f
sv 268(\021)D r
/f2 f
sv 37 Y 127(b)D r
/f7 f
sv -37 Y 80(,)D 211 Y -4277(the)D 274(asymmetry)D r
/f1 f
sv 869(Y)D r
/f2 f
sv 37 Y 107(b)D r
/f7 f
sv -37 Y 127(starts)D 437(from)D 406(zero,)D 412(o)D 90(v)D 90(ershoots)D
662(the)D 273(equilib-)D 211 Y -3747(rium)D 429(curve)D 489(just)D 347(abo)D
265(v)D 90(e)D r
/f4 f
sv 162(10)D r
/f6 f
sv -65 Y 184(13)D r
/f4 f
sv 65 Y 200(GeV)D r
/f7 f
sv 347(,)D 126(to)D 223(freeze-out)D 831(at)D 214(lo)D 140(wer)D 211 Y -4047(temperatures.)D
r
/f8 /Times-Bold 184.515 0 0 -184.515 0 0 MF
sv 527 Y 331(IV)D 179(.)D 100(COMP)D 551(ARISON)D 768(WITH)D 575(EXPERIMENT)D
1233(AL)D 211 Y -3170(CONSTRAINTS)D 1380(ON)D r
/f9 /BG-Maths-Italic-Bold 184.515 0 0 -184.515 0 0 MF
sv 330(CP)D 250(T)D r
/f8 f
sv 174(VIOLA)D 586(TION)D r
/f7 f
sv 316 Y -3102(No)D 221(w)D 242(we)D 325(are)D 337(ready)D 521(to)D 254(confront)D
736(our)D 355(predictions)D 932(for)D r
/f1 f
sv 211 Y -4108(CPT)D r
/f7 f
sv 365(-violation)D 791(\()D r
0.6666 1 1 SH

[/Dest /temp:intralink-d22 /Rect [2134 9651 2318 9466] /Border [0 0 0] /LNK pdfmark
sv 62(22)D r
0 0 0 SH
sv 184(\))D 132(with)D 399(the)D 298(e)D 80(xperimental)D 956(constraints)D
872(on)D 211 Y -4139(it.)D 224(The)D 362(modi\256cation)D 1009(of)D 228(dispersion)D
832(relation)D 640(by)D 258(dimension)D 211 Y -3553(\256v)D 192(e)D 125(operators)D
729(has)D 287(been)D 391(discussed)D 749(at)D 176(length)D 504(in)D 186(the)D
268(literature.)D 210 Y -3607(Belo)D 346(w)D 201(we)D 284(list)D 295(a)D 151(set)D
274(of)D 222(rele)D 275(v)D 88(ant)D 295(constraints)D 870(on)D 252(dimension)D
211 Y -3553(\256v)D 192(e)D 137(operators)D 741(in)D 197(the)D 281(fermionic)D
773(sector)D 496(of)D 207(the)D 280(SM)D 319(and)D 320(com-)D 211 Y -3943(ment)D
425(on)D 238(their)D 393(applicability:)D r
0 0 1 SH
/f0 f
sv 196 Y -1056 ( )D r
[/Dest /temp:intralink-s4 /View [/XYZ 52 195 0] /DEST pdfmark
0 0 0 SH
/f3 f
sv 157 Y 3(j)D r
/f1 f
sv 54(\021)D r
/f2 f
sv 37 Y 127(d)D r
/f3 f
sv -37 Y 113(\377)D r
/f1 f
sv 186(\021)D r
/f2 f
sv 37 Y 127(Q)D r
/f3 f
sv -37 Y 141(\377)D r
/f4 f
sv 186(0)D r
/f1 f
sv 92(:)D r
/f4 f
sv 47(5)D r
/f3 f
sv 92(\205)D r
/f1 f
sv 61(\021)D r
/f2 f
sv 37 Y 127(u)D r
/f3 f
sv -37 Y 113(\377)D r
/f1 f
sv 186(\021)D r
/f2 f
sv 37 Y 127(Q)D r
/f3 f
sv -37 Y 108(\206j)D r
/f1 f
sv 148(<)D r
/f4 f
sv 186(10)D r
/f5 f
sv -65 Y 185(\377)D r
/f6 f
sv 107(27)D r
/f4 f
sv 65 Y 187(GeV)D r
/f5 f
sv -65 Y 348(\377)D r
/f6 f
sv 107(1)D r
/f1 f
sv 65 Y 74(;)D r
/f3 f
sv 365(\211)D r
/f4 f
sv 62(12)D r
/f1 f
sv 184(;)D r
/f4 f
sv 71(24)D r
/f3 f
sv 184(\212)D 312 Y -2818(j)D r
/f1 f
sv 54(\021)D r
/f2 f
sv 37 Y 127(L)D r
/f3 f
sv -37 Y 92(j)D r
/f1 f
sv 54(;)D r
/f3 f
sv 71(j)D r
/f1 f
sv 53(\021)D r
/f2 f
sv 37 Y 127(E)D r
/f3 f
sv -37 Y 93(j)D r
/f1 f
sv 87(<)D r
/f4 f
sv 186(10)D r
/f5 f
sv -65 Y 185(\377)D r
/f6 f
sv 107(20)D r
/f4 f
sv 65 Y 187(GeV)D r
/f5 f
sv -65 Y 348(\377)D r
/f6 f
sv 107(1)D r
/f1 f
sv 65 Y 74(;)D r
/f3 f
sv 365(\211)D r
/f4 f
sv 62(25)D r
/f3 f
sv 184(\212)D 312 Y -2563(j)D r
/f1 f
sv 54(\021)D r
/f2 f
sv 37 Y 127(L)D r
/f3 f
sv -37 Y 92(j)D r
/f1 f
sv 54(;)D r
/f3 f
sv 71(j)D r
/f1 f
sv 53(\021)D r
/f2 f
sv 37 Y 127(E)D r
/f3 f
sv -37 Y 93(j)D r
/f1 f
sv 87(<)D r
/f4 f
sv 186(10)D r
/f5 f
sv -65 Y 185(\377)D r
/f6 f
sv 107(33)D r
/f4 f
sv 65 Y 187(GeV)D r
/f5 f
sv -65 Y 348(\377)D r
/f6 f
sv 107(1)D r
/f1 f
sv 65 Y 74(:)D r
/f3 f
sv 341(\211)D r
/f4 f
sv 61(13)D r
/f3 f
sv 185(\212)D r
/f7 f
sv 366 Y -3819(The)D 383(\256rst)D 380(constraint)D 824(arises)D 514(because)D
680(the)D 321(axial-v)D 513(ector)D 368(-like)D 211 Y -3983(combinations)D
1041(of)D r
/f1 f
sv 197(\021)D r
/f2 f
sv 36 Y 127(i)D r
/f7 f
sv -36 Y 92(in)D 188(the)D 270(quark)D 465(sector)D 485(lead)D 353(to)D
188(the)D 270(coupling)D 210 Y -3676(of)D 238(the)D 310(nucleon)D 669(spin)D
391(to)D 228(a)D 166(preferred)D 762(direction.)D 788(In)D 237(models)D
211 Y -3789(where)D 496(the)D 271(preferred)D 722(frame)D 476(is)D 167(associated)D
805(with)D 372(the)D 271(rest)D 311(frame)D -11597 Y 749(of)D 206(the)D 280(cosmic)D
577(micro)D 429(wa)D 213(v)D 90(e)D 136(background,)D 971(the)D 279(net)D
280(spin)D 360(ener)D 317(gy)D 211 Y -4138(shift)D 393(is)D 188(proportional)D
980(to)D 209(the)D 288(v)D 90(elocity)D 571(of)D 218(the)D 292(lab)D 292(frame)D
r
/f1 f
sv 498(v)D r
/f3 f
sv 150(\030)D r
/f1 f
sv 211 Y -4169(O)D r
/f3 f
sv 142(\205)D r
/f4 f
sv 61(10)D r
/f5 f
sv -65 Y 184(\377)D r
/f6 f
sv 108(3)D r
/f3 f
sv 65 Y 73(\206)D r
/f7 f
sv 62(,)D r
/f4 f
sv 92(\003)D r
/f6 f
sv -65 Y 142(2)D 116 Y 0(QCD)D r
/f1 f
sv -51 Y 280(\021)D r
/f2 f
sv 36 Y 127(i)D r
/f3 f
sv -36 Y 50(\205)D r
/f1 f
sv 62(v)D r
/f3 f
sv 150(\001)D r
/f1 f
sv 103(s)D r
/f3 f
sv 80(\206)D r
/f7 f
sv 62(,)D 92(which)D 497(is)D 169(to)D 190(be)D 220(compared)D 776(with)D
374(the)D 237 Y -4096(e)D 80(xperimental)D 997(sensiti)D 468(vity)D r
/f4 f
sv 399(10)D r
/f5 f
sv -65 Y 185(\377)D r
/f6 f
sv 107(31)D r
/f4 f
sv 65 Y 200(GeV)D r
/f7 f
sv 458([)D r
0.6666 1 1 SH

[/Dest /temp:intralink-c24 /Rect [8512 1742 8696 1557] /Border [0 0 0] /LNK pdfmark
sv 62(24)D r
0 0 0 SH
sv 184(,)D r
0.6666 1 1 SH

[/Dest /temp:intralink-c25 /Rect [8742 1742 8926 1557] /Border [0 0 0] /LNK pdfmark
sv 46(25)D r
0 0 0 SH
sv 184(].)D 219(The)D 399(lo)D 141(w-)D 211 Y -4129(ener)D 316(gy)D 271(constraints)D
886(on)D 270(lepton)D 549(operators)D 773(are)D 313(considerably)D 211 Y -3378(weaker)D
598([)D r
0.6666 1 1 SH

[/Dest /temp:intralink-c12 /Rect [6215 2164 6400 1979] /Border [0 0 0] /LNK pdfmark
sv 61(12)D r
0 0 0 SH
sv 185(].)D 172(The)D 352(strongest)D 731(constraints)D 866(on)D 248(dimension)D
835(\256v)D 192(e)D r
/f1 f
sv 210 Y -4240(CPT)D r
/f7 f
sv 364(-odd)D 383(operators)D 731(in)D 189(the)D 270(lepton)D 507(sector)D
486(come)D 446(from)D 403(consid-)D 211 Y -3779(erations)D 659(of)D r
/f1 f
sv 226(p)D r
/f3 f
sv 167(!)D r
/f1 f
sv 226(pl)D r
/f4 f
sv -45 Y 191(\026)D r
/f1 f
sv 45 Y -16(l)D r
/f7 f
sv 132(processes)D 780(that)D 352(become)D 649(ener)D 317(getically)D 211 Y -3683(allo)D
274(wed)D 359(and)D 318(pre)D 232(v)D 90(ent)D 278(acceleration)D 948(of)D
205(protons)D 604(to)D 195(ener)D 317(gies)D 349(of)D r
/f3 f
sv 211 Y -4169(\030)D r
/f4 f
sv 153(10)D r
/f6 f
sv -65 Y 185(21)D r
/f4 f
sv 65 Y 199(eV)D r
/f7 f
sv 215(.)D 95(It)D 162(is)D 172(important)D 769(that)D 327(constraints)D
850([)D r
0.6666 1 1 SH

[/Dest /temp:intralink-c13 /Rect [8744 3007 8928 2823] /Border [0 0 0] /LNK pdfmark
sv 61(13)D r
0 0 0 SH
sv 184(])D 111(are)D 275(double-)D 211 Y -3758(sided,)D 495(which)D 510(is)D
183(the)D 286(consequence)D 1004(of)D 213(asymmetric)D 923(modi\256ca-)D
211 Y -3614(tion)D 341(of)D 207(dispersion)D 812(relation)D 620(for)D 269(leptons)D
587(and)D 321(antileptons)D 866(\()D r
0.6666 1 1 SH

[/Dest /temp:intralink-d6 /Rect [9640 3429 9732 3244] /Border [0 0 0] /LNK pdfmark
sv 61(6)D r
0 0 0 SH
sv 92(\).)D 211 Y -3992(The)D 389(strength)D 695(of)D r
/f1 f
sv 254(CPT)D r
/f7 f
sv 465(violation)D 759(in)D 245(the)D 327(lepton)D 563(sector)D 211 Y -3881(deri)D
284(v)D 90(ed)D 273(from)D 456(the)D 325(baryon)D 610(asymmetry)D 920(\()D
r
0.6666 1 1 SH

[/Dest /temp:intralink-d22 /Rect [8575 3851 8759 3666] /Border [0 0 0] /LNK pdfmark
sv 61(22)D r
0 0 0 SH
sv 184(\))D 160(is)D 220(consistent)D 210 Y -3583(with)D 430(the)D 329(astrophysical)D
1078(bounds)D 634(on)D r
/f1 f
sv 286(CPT)D r
/f7 f
sv 365(-violating)D 822(QED)D 211 Y -3944([)D r
0.6666 1 1 SH

[/Dest /temp:intralink-c26 /Rect [5617 4272 5801 4088] /Border [0 0 0] /LNK pdfmark
sv 61(26)D r
0 0 0 SH
sv 184(],)D 175(b)D 90(ut)D 211(appears)D 632(to)D 211(be)D 240(grossly)D
599(inconsistent)D 950(with)D 396([)D r
0.6666 1 1 SH

[/Dest /temp:intralink-c13 /Rect [9366 4272 9550 4088] /Border [0 0 0] /LNK pdfmark
sv 61(13)D r
0 0 0 SH
sv 184(].)D 175(In)D 211 Y -4169(fact,)D 391(typical)D 572(constraints)D 868(on)D
251(dimension)D 837(\256v)D 192(e)D 150(operators)D 754([)D r
0.6666 1 1 SH

[/Dest /temp:intralink-c13 /Rect [9633 4483 9817 4299] /Border [0 0 0] /LNK pdfmark
sv 62(13)D r
0 0 0 SH
sv 184(])D 211 Y -4261(deri)D 284(v)D 90(ed)D 225(from)D 408(the)D 277(e)D
80(xistence)D 657(of)D 203(the)D 277(high-ener)D 706(gy)D 234(cosmic)D
574(rays)D 211 Y -4015(appear)D 530(to)D 180(destroy)D 580(any)D 302(hopes)D
467(for)D 251(the)D r
/f1 f
sv 263(CPT)D r
/f7 f
sv 365(-odd)D 375(baryogenesis,)D 211 Y -3313(e)D 78(ven)D 342(if)D 190(the)D
304(scale)D 447(of)D r
/f1 f
sv 231(T)D r
/f2 f
sv 37 Y 107(R)D r
/f7 f
sv -37 Y 169(is)D 200(pushed)D 599(all)D 263(the)D 300(way)D 384(up)D 261(to)D
221(the)D 211 Y -4096(Planck)D 554(scale.)D 468(It)D 164(is)D 175(easy)D 379(to)D
196(see,)D 333(ho)D 181(we)D 211(v)D 90(er)D 138(,)D 98(that)D 329(this)D
318(is)D 175(not)D 287(the)D 211 Y -4096(case.)D 401(If)D r
/f1 f
sv 160(CPT)D r
/f7 f
sv 365(-odd)D 375(sources)D 590(in)D 181(the)D 264(quark)D 457(sector)D
479(dominate)D 726(o)D 90(ver)D 210 Y -4088(the)D 273(lepton)D 510(sources)D
600(by)D 231(a)D 130(factor)D 479(of)D 201(20)D 203(\261)D 110(30,)D 277(strong)D
508(constraints)D 211 Y -3522(on)D r
/f1 f
sv 220(CPT)D r
/f7 f
sv 396(violation)D 695(might)D 468(be)D 211(av)D 171(oided.)D 493(If,)D
206(for)D 251(example)D 626(,)D 83(among)D 211 Y -3820(the)D r
/f1 f
sv 300(CPT)D r
/f7 f
sv 365(-odd)D 412(sources)D 627(the)D 301(right-handed)D 1018(up)D 259(quark)D
494(has)D 320(the)D 211 Y -4096(lar)D 194(gest)D 342(modi\256cation)D 980(of)D
197(its)D 220(dispersion)D 804(relation,)D 657(the)D 272(ener)D 317(geti-)D
211 Y -3983(cally)D 420(fa)D 142(v)D 90(ored)D 387(process)D r
/f1 f
sv 612(p)D r
/f3 f
sv 167(!)D r
/f4 f
sv 226(\001)D r
/f5 f
sv -65 Y 136(\207\207)D r
/f1 f
sv 65 Y 224(\031)D r
/f5 f
sv -65 Y 132(\377)D r
/f7 f
sv 65 Y 175(allo)D 275(ws)D 262(the)D 286(ultra)D 399(high-)D 211 Y -3933(ener)D
316(gy)D 236(cosmic)D 575(rays)D 359(to)D 195(e)D 80(xist)D 318(in)D 195(the)D
278(form)D 410(of)D r
/f4 f
sv 205(\001)D r
/f5 f
sv -65 Y 136(\207\207)D r
/f7 f
sv 65 Y 224(,)D 97(an)D 226(option)D 211 Y -3850(which)D 510(cannot)D 553(be)D
234(observ)D 488(ationally)D 708(ruled)D 440(out)D 295([)D r
0.6666 1 1 SH

[/Dest /temp:intralink-c13 /Rect [8846 7014 9030 6829] /Border [0 0 0] /LNK pdfmark
sv 62(13)D r
0 0 0 SH
sv 184(].)D 167(It)D 173(is)D 182(v)D 90(ery)D 211 Y -4086(important)D 757(to)D
181(observ)D 490(e)D 120(that)D 316(the)D r
/f10 /Times-Italic 184.515 0 0 -184.515 0 0 MF
sv 264(ne)D 169(gative)D r
/f7 f
sv 490(sign)D 345(of)D r
/f1 f
sv 191(\021)D r
/f2 f
sv 36 Y 126(U)D r
/f7 f
sv -36 Y 146(suggested)D 210 Y -3595(by)D 257(B)D 117(A)D 123(U)D 205(\()D r
0.6666 1 1 SH

[/Dest /temp:intralink-d22 /Rect [6319 7436 6504 7251] /Border [0 0 0] /LNK pdfmark
sv 61(22)D r
0 0 0 SH
sv 185(\))D 134(is)D 195(exac)D 338(tly)D 269(the)D 299(sign)D 380(of)D
r
/f1 f
sv 226(\021)D r
/f2 f
sv 37 Y 127(U)D r
/f7 f
sv -37 Y 181(needed)D 597(for)D r
/f1 f
sv 287(p)D r
/f3 f
sv 167(!)D r
/f4 f
sv 211 Y -4148(\001)D r
/f5 f
sv -64 Y 136(\207\207)D r
/f1 f
sv 64 Y 224(\031)D r
/f5 f
sv -64 Y 132(\377)D r
/f7 f
sv 64 Y 215(to)D 243(happen)D 633(at)D 233(high)D 427(ener)D 317(gies.)D
442(Ne)D 212(v)D 90(ertheless,)D 792(the)D 211 Y -4096(required)D 708(size)D
380(of)D r
/f1 f
sv 245(\021)D r
/f2 f
sv 37 Y 127(U)D r
/f7 f
sv -37 Y 108(,)D r
/f1 f
sv 138(\021)D r
/f2 f
sv 37 Y 127(U)D r
/f3 f
sv -37 Y 149(\030)D 195(\377\205)D r
/f4 f
sv 215(10)D r
/f5 f
sv -64 Y 184(\377)D r
/f6 f
sv 108(23)D r
/f7 f
sv 64 Y 137(\261)D r
/f4 f
sv 93(10)D r
/f5 f
sv -64 Y 184(\377)D r
/f6 f
sv 107(22)D r
/f3 f
sv 64 Y 138(\206)D r
/f4 f
sv 123(GeV)D r
/f5 f
sv -64 Y 348(\377)D r
/f6 f
sv 107(1)D r
/f7 f
sv 64 Y 165(ap-)D 211 Y -4086(pears)D 426(to)D 180(be)D 211(in)D 180(sharp)D
435(con\257ict)D 591(with)D 365(the)D 263(lo)D 140(w-ener)D 510(gy)D 221(constraints)D
211 Y -3522([)D r
0.6666 1 1 SH

[/Dest /temp:intralink-c12 /Rect [5617 8279 5801 8095] /Border [0 0 0] /LNK pdfmark
sv 61(12)D r
0 0 0 SH
sv 184(,)D r
0.6666 1 1 SH

[/Dest /temp:intralink-c27 /Rect [5847 8279 6032 8095] /Border [0 0 0] /LNK pdfmark
sv 46(27)D r
0 0 0 SH
sv 185(],)D 199(and)D 358(at)D 226(least)D 431(4)D 184(orders)D 552(of)D
245(magnitude)D 873(tuning)D 563(for)D 211 Y -4107(dimension)D 806(\256v)D
192(e)D 118(sources)D 589(is)D 159(needed.)D 607(This)D 364(consideration)D
1033(sho)D 251(ws)D 211 Y -4119(an)D 245(important)D 791(complementarity)D
1327(between)D 687(the)D 297(astrophysical)D 211 Y -3347(bounds)D 602(on)D
254(Lorentz)D 646(violation)D 729(and)D 337(lo)D 140(w-ener)D 511(gy)D
254(searches)D 696(of)D 210 Y -4169(the)D 280(breakdo)D 591(wn)D 278(of)D
208(rotational)D 764(in)D 138(v)D 88(ariance.)D 211 Y -2163(W)D 161(e)D 178(can)D
352(exte)D 307(nd)D 279(our)D 341(analysis)D 690(to)D 239(theories)D 680(where)D
r
/f1 f
sv 547(CPT)D r
/f7 f
sv 211 Y -3958(violation)D 715(comes)D 529(from)D 415(operators)D 744(of)D
211(dimension)D 826(se)D 150(v)D 90(en,)D 278(nine,)D 211 Y -3958(etc.,)D
357(should)D 540(for)D 264(some)D 438(contri)D 428(v)D 90(ed)D 224(reasons)D
601(lo)D 140(wer-)D 336(dimensional)D 211 Y -3418(operators)D 726(be)D 214(absent.)D
558(W)D 161(e)D 122(note)D 357(that)D 318(to)D 183(suf\256cient)D 727(accurac)D
564(y)D 81(,)D 85(the)D 211 Y -4096(resulting)D 702(B)D 117(A)D 123(U)D
188(will)D 344(be)D 230(determined)D 889(by)D 240(the)D 282(equilibrium)D
920(lep-)D 228 Y -4035(ton)D 337(asymmetry)D 924(at)D 236(the)D 328(freeze-out)D
852(time,)D r
/f1 f
sv 478(\021)D r
/f5 f
sv -64 Y 126(\205)D r
/f6 f
sv 43(7)D r
/f5 f
sv 65(\206)D r
/f1 f
sv 64 Y 52(T)D r
/f6 f
sv -65 Y 117(3)D r
/f2 f
sv 114 Y -10(R)D r
/f7 f
sv -49 Y 94(,)D r
/f1 f
sv 147(\021)D r
/f5 f
sv -64 Y 127(\205)D r
/f6 f
sv 43(9)D r
/f5 f
sv 65(\206)D r
/f1 f
sv 64 Y 51(T)D r
/f6 f
sv -65 Y 117(3)D r
/f2 f
sv 114 Y -9(R)D r
/f7 f
sv -49 Y 93(,)D 232 Y -4276(where)D r
/f1 f
sv 579(\021)D r
/f5 f
sv -65 Y 127(\205)D r
/f2 f
sv 43(n)D r
/f5 f
sv 71(\206)D r
/f7 f
sv 65 Y 180(parametrize)D 1004(the)D 355(strengths)D 795(of)D 282(the)D 355(higher)D
470(-)D 211 Y -4261(dimensional)D 958(operators:)D r
0 0 1 SH
/f0 f
sv 442 Y -50 ( )D r
[/Dest /temp:intralink-s4 /View [/XYZ 316 180 0] /DEST pdfmark
0 0 0 SH
/f11 /BG-Maths-Calligraphic 184.515 0 0 -184.515 0 0 MF
sv 34(L)D r
/f3 f
sv 233(\210)D r
/f12 /BG-Maths-Extension 184.515 0 0 -184.515 0 0 MF
sv -159 Y 205(X)D r
/f1 f
sv 159 Y 238(\021)D r
/f5 f
sv -87 Y 127(\205)D r
/f2 f
sv 43(n)D r
/f5 f
sv 71(\206)D r
/f2 f
sv 108 Y -114(\024\026)D r
/f6 f
sv 177(...)D r
/f2 f
sv 97(\027)D r
/f4 f
sv -64 Y 132(\026)D r
/f1 f
sv 43 Y -49( )D 125(\015)D r
/f2 f
sv -65 Y 117(\024)D r
/f11 f
sv 65 Y 86(D)D r
/f2 f
sv -65 Y 181(\026)D r
/f4 f
sv 65 Y 139(.)D 77(.)D 77(.)D r
/f11 f
sv 76(D)D r
/f2 f
sv -65 Y 181(\027)D r
/f1 f
sv 65 Y 83( )D 124(:)D r
/f7 f
sv 529 Y -3368(As)D 263(before,)D 579(the)D 286(transmutation)D 1078(to)D 204(lo)D
140(wer)D 274(-dimensional)D 1026(opera-)D 229 Y -3850(tors)D 330(can)D 311(be)D
228(forbidden)D 772(by)D 238(the)D 280(irreducibility)D 1021(of)D r
/f1 f
sv 207(\021)D r
/f5 f
sv -65 Y 127(\205)D r
/f2 f
sv 43(n)D r
/f5 f
sv 71(\206)D r
/f7 f
sv 65 Y 106(tensors.)D 211 Y -3550(The)D 385(lo)D 140(w-ener)D 510(gy)D 281(constraints)D
897(on)D 281(dimension)D 866(se)D 150(v)D 90(en)D 272(and)D 210 Y -4056(higher)D
r
/f1 f
sv 562(CPT)D r
/f7 f
sv 365(-odd)D 428(operators)D 777(are)D 317(totally)D 564(irrele)D 388(v)D
88(ant,)D 363(as)D 244(the)D 211 Y -4096(possible)D 682(in\257uence)D 755(on)D
262(the)D 305(nucleon)D 663(spin)D 385(is)D 200(suppressed)D 886(by)D r
0 0 1 SH
/f13 /Times-Roman 0.210875 0 0 -0.210875 0 0 MF
sv -10226 Y -8742 ( )D r
[/Dest /temp:intralink-s4 /View [/XYZ 52 747 0] /DEST pdfmark
955 826 5277 3884 C
0 0 0 SH
-1 SOB
/f13 f
75 45 SS1
0 -173.4546 17.6388 -17.6388 -2161 -1529 [1 0 0 1 0 0] 2161 1529 0 955 826 BEGINEPSFILE
%%BeginDocument: S:\aps\prd\pool\DX10072\4.eps
%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: 4.eps
%%Creator: Adobe Illustrator(R) 12
%%AI8_CreatorVersion: 12.0.0%AI9_PrintingDataBegin%%For: Your User Name
%%CreationDate: 11/23/2006
%%BoundingBox: 0 0 246 174
%%HiResBoundingBox: 0 0 245.0806 173.4546
%%CropBox: 0 0 245.0806 173.4546
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.19 0
%%+ procset Adobe_CoolType_Core 2.23 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%ADO_BuildNumber: Adobe Illustrator(R) 12.0.0 x198 R agm 4.3861 ct 5.530
%ADO_ContainsXMP: MainFirst
%AI7_Thumbnail: 128 92 8
%%BeginData: 6490 Hex Bytes
%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD08FF7DA8FFA8A87DFD7AFFF8F8525227F87DFF7DA8A8A87DA8A8
%A87DFD07A87DA8A8A87DA8A8A87DFD07A87DA8A8A87DA8A8A87DA8A8A87D
%A8A8A87DA8A8A87DA87DA87DA8A8A87DA8A8A87DA8A8A87DA8A8A883A8A8
%A87DA8A8A87DA87DA87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87D
%A8A8A87DA8FD0AFF7D7DA8A8A852FF7DA8A8FFFFFFA8FFFFFFA8FFFFFF7D
%FFFFFFA8FFFFFFA8FFFFFFA8FF7DFFA8FFFFFFA8FFFFFFA8FFFFA8A8FFFF
%FFA8FFFFFFA8FD04FFA8A8FFA8FFFFFFA8FFFFFFA8FFA8A8A8FFAE89A8FF
%FFFFA8FFFFFFA8A8FFFFA8FFFFFFA8FFFFFFA8FF7DCAA8FFFFFFAFFFFFFF
%AFFFFFFF7DFD11FFA8A8FD47FF89FD15FFCABCCAFFFFFFFD07CAFFFFA8A8
%FD10FFA8FD47FFAEAEFD16FFC3CAC3FFCAFD05C3BCCAFFFFA8FD11FFA8A8
%FD46FFAEAEFD12FFAE89FFFFFFBDB5FD0BFFA8A8FD10FFA8FD47FF89FD13
%FF896489AE64AE89FFAEAE898989AE89AEFFFFA8FD11FFA8A8FD46FF89AE
%FD13FF893F3FFA3F3FAEFFAEFFAEAEAEFFAEFFFFA8A8FD10FFA8FD47FF89
%FD16FFAEAEFF89FD0BFFA8FD11FFA8A8FD45FFAE89FD25FFA8A8FD09FF7D
%A8FFA87D7DFFA8FD46FFAE89FD25FFA8FD0AFF52F8525227F87DA87DFD45
%FF89AEFD24FFA87DA8FD09FFA87DA8A8A87DFFA8FD46FFAEAEFD25FF7DFD
%11FFA8A8FD45FF89FD26FFA8A8FD10FFA8FD46FF89FD26FFA8FD11FFA8A8
%FD45FF89FD26FFA8A8FD10FFA8FD45FFAEAEFD26FFA8FD11FFA8A8FD44FF
%AEAEFD26FFA8A8FD10FFA8FD45FF89FD27FFA8FD11FFA8A8FD44FF89AEFD
%26FFA8A8FD09FF7DA8FFA8A87DFFA8FD45FF89FD27FFA8FD0AFF2727527D
%27F87DA87DFD43FFAE89FD26FFA87DA8FD09FFA87DA8A8A87DFFA8FD44FF
%AEAEFD27FFA8FD11FFA8A8FD43FF89AEFD27FFA8A8FD10FFA8FD44FF89FD
%28FFA8FD11FFA8A8FD43FF89FD28FFA8A8FD10FFA8FD43FFAEAEFD28FFA8
%FD11FFA8A8FD42FFAEAEFD28FFA8A8FD10FFA8FD43FF89FD29FFA8FD11FF
%A8A8FD41FFAE89FD29FFA8A8FD10FFA8FD43FF89FD29FFA8FD0AFF277DA8
%7D2752A8A87DFD41FF89AEFD28FFA87DA8FD09FF7D27527D5227A8A8FD42
%FFAEAEFD29FFA8FD0AFFA8FFFFFFA8FFFFA8A8FD41FF89FD2AFFA8A8FD10
%FFA8FD41FFAE89FD2AFFA8FD11FFA8A8FD40FFAE89FD2AFFA8A8FD10FFA8
%FD41FF89FD2BFFA8FD11FFA8A8FD40FF89AEFD2AFFA8A8FD10FFA8FD41FF
%89FD2BFFA8FD06FFA8FD0AFFA8A8FD3FFF89AEFD2BFFA8A8FFFFFF527DFD
%0BFFA8FD40FFAEAEFD2BFFA8FFFFFFA8527DFD04FF277DA87D2752A8A87D
%FD3FFF89FD2BFFA8A8A8FFFF27A8FD05FF52F87D7D52F8A8A8A8FD3EFFAE
%AEFD2CFF7DFFFFA8A8A8FD09FFA8FFFFA8A8FD3EFF89AEFD2CFFA8A8FD10
%FFA8FD3FFF89FD2DFFA8FD11FFA8A8FD3DFFAE89FD2DFFA8A8FD10FFA8FD
%3EFF8AAEFD2DFFA8FD11FFA8A8FD3DFF5EC3BCC3BCC3BCCACAFD26FFA8A8
%FD10FFA8FD3CFFCAA0A6C3CFCAFFCACAC3C3BCCAFD24FFA8FD11FFA8A8FD
%39FFCABCBC83AEFD08FFCABCBCC3FD22FFA8A8FD10FFA8FD39FFC3BCCAFF
%89FD0BFFCAC3BCCAFD20FFA8FD0AFF5252A87D2727A8A8A8FD37FFBCBCCA
%FF89AEFD0DFFCABCC3FD1EFFA87DA8FD09FF52F87D7D5227A8A8A8FD36FF
%BCC3FFFFFF89AEFD0FFFC3C3CAFD1DFF7DFD0AFFA8FFFFFFA8FFFFA8A8FD
%35FFBCC3FFFFFFAE89FD11FFCABCC3FD1CFFA8A8FD10FFA8FD35FFBCCAFD
%04FF89FD14FFC3BCFD1BFFA8FD11FFA8A8FD33FFBCC3FD04FFAE89FD15FF
%C3BCFD1AFFA8A8FD10FFA8FD33FFBCC3FD05FFAEAEFD16FFCABCFD19FFA8
%FD11FFA8A8FD31FFBCC3FD06FF64FD19FFB5CAFD17FFA8A8FD10FFA8FD31
%FFC3C3FD06FF89AEFD1AFFBCCAFD16FFA8FD11FFA8A8FD2FFFC3BCFD06FF
%AE89FD1CFFBCC3FD15FFA8A8FD10FFA8FD2FFFC3C3FD07FF89AEFD1DFFBC
%C3FD14FFA8FD0AFF5252A87D5252A8A8A8FD2DFFC3BCFD08FF64FD1FFFBC
%C3FD13FFA8A8FD09FF52F852525227A8A8A8FD2CFFC3C3FD08FF89FD21FF
%C3C3FD12FF7DFD0AFFA8FFFFFFA8FFFFA8A8FD2BFFC3BCFD08FF8989FD22
%FFC3BCFD11FFA8A8FD10FFA8FD2BFFBCC3FD09FF89FD24FFC3C3FD10FFA8
%FD11FFA8A8FD28FFCABCC3FD09FF89AEFD25FFC3BCFD0FFFA8A8FD10FFA8
%FD28FFC3BCFD0AFFAE89FD27FFC3C3FD0EFFA8FD11FFA8A8FD24FFCABCBC
%C3FD0AFFAE64FD29FFC3BCFD0DFFA8A8FD10FFA8FD21FFCACAC3C3C3CAFD
%0CFF89FD2BFFC3C3FD0CFFA8FD11FFA8AFFD15FFCAFFFD04CAC3C3BCC3BC
%C3C3CACAFD0DFF64FD2DFFC3BCFD0BFFA8A8FD10FFA1CACACAC3CAC3CAC3
%CAC3CAFD08C3BCC3C3C3BCFD04C3FD04CAFD11FF64FD2FFFC3C3FD0AFFA8
%FD0AFF527DA87D2752A8A89AC3C3CAC3CAC3CAC3CAC3CAC3CAC3FD06CAFF
%CAFD18FFAE64FD31FFC3BCFD08FFA8A8A8FD09FF7DF8527D5227A8A8A8FD
%2DFFAE64FD33FFC3C3FD08FF7DFD0EFFA8FFFFA8A8FD2BFFAE8989FD35FF
%C3BCFD07FFA8A8FD10FFA8FD2BFFAE89AEFD37FFC3BCFD06FFA8FD11FFA8
%A8FD28FFAE6489AEFD39FFBCBCFD05FFA8A8FD10FFA8FD27FFAE8989FD3D
%FFC3C3FD04FFA8FD11FFA8A8FD23FFAE896489AEFD3FFFC3C3FFFFFFA8A8
%FD10FFA8FD21FFAEAE89AEAEFD43FFC3C3FFFFA8FD11FFA8A8FD19FFAEFF
%AEAEFD0489AEFD47FFC3C3FFA8A8FD10FFA8FD13FFAEFFAEAE89AE89AE89
%AEAEFD4DFFBCC3A8FD0EFFA852A8835EAE838983AE838983895E89835E5E
%895E898389838983AEA8FFA8A8CBFFA8FFA8FFA8FFA8FFA8FF7DA8A8FFA8
%FFA8FFA8FFA8FFA8FF7DA8A8FFA8FFA8FFA8FFA8FFA8FF7DFFA8FFA8FFA8
%FFA8FFA8FFA8A87DFFA8FFA8FFA8FFA8FFA8FFFFA8A8FFA8FFA8FFA8FFA8
%FFA8FF9A6FA8FD0EFF27A8AE8383AE838383A883A883A883A883FD0EA8FF
%FD0DA8FFFD1BA8FFFD17A8FFFD0EA8A1FD10FFFD04A8FD0AFFA8A8A87DA8
%FD09FFA8A87DFD0AFFA8A8A87DA8FD0AFFA8A8A8FD09FFA8A87DFF7DFD0A
%FFA8A8A8FD0AFF7DFD04A8FD0AFFA852FD10FF527D52FD09FFA85252A827
%A8FD09FFA82752A8FD09FF527D527D27FD09FFA87D5252FD09FFA827277D
%27A8FD09FF525227FD0AFF522752527DFD09FFA85227A8FD0FFFA8A8A8FD
%0AFFA8A8A87DA8FD09FFA87D7DFD0BFF7D7D7DA8FD0AFFA8A87DFD09FFA8
%A87DA87DFD0AFFA8A8A8FD0AFFA8A87D7D7DFD0AFFA87DFD4AFFA8FD78FF
%277D52A8FFFF7D5227A8FD76FF275227527DA8A87DA87DFD78FF527DF87D
%7DFF7DA8FDFCFFFD37FFFF
%%EndData
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright (C) 2000-2003 Adobe Systems, Inc.  All Rights Reserved.
systemdict /setpacking known
{
	currentpacking
	true setpacking
} if
userdict /Adobe_AGM_Utils 70 dict dup begin put
/bdf
{
	bind def
} bind def
/nd{
	null def
}bdf
/xdf
{
	exch def
}bdf
/ldf 
{
	load def
}bdf
/ddf
{
	put
}bdf	
/xddf
{
	3 -1 roll put
}bdf	
/xpt
{
	exch put
}bdf
/ndf
{ 
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/ps_level
	/languagelevel where{
		pop systemdict /languagelevel get exec
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr} stopped {
		-1
	}if
def
/set_gvm
{
	currentglobal exch setglobal
}bdf
/reset_gvm
{
	setglobal
}bdf
/makereadonlyarray
{
	/packedarray where{
		pop packedarray
	}{
		array astore readonly
	}ifelse
}bdf
/map_reserved_ink_name
{
	dup type /stringtype eq{
		dup /Red eq{
			pop (_Red_)
		}{
			dup /Green eq{
				pop (_Green_)
			}{
				dup /Blue eq{
					pop (_Blue_)
				}{
					dup () cvn eq{
						pop (Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def} repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash /AGMUTIL_GSTATE_do xdf /AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit /AGMUTIL_GSTATE_gy_xfer xdf cvlit /AGMUTIL_GSTATE_b_xfer xdf
		cvlit /AGMUTIL_GSTATE_g_xfer xdf cvlit /AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx {AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def} repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht /HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone /HalftoneType get AGMUTIL_GSTATE_ht /HalftoneType get ne
			{
			  mark AGMUTIL_GSTATE_ht {sethalftone} stopped cleartomark
			} if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		} ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/thold_halftone
{ 
	level3
		{sethalftone currenthalftone}
		{
			dup /HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}
			{
				begin
				Width Height mul {
					Thresholds read {pop} if
				} repeat
				end
				currenthalftone
			} ifelse
		}ifelse
} def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%) anchorsearch {pop} if
} bdf
/filter_cmyk
{	
	dup type /filetype ne{
		exch () /SubFileDecode filter
	}
	{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length /AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	] cvx
} bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
} bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type /filetype ne{
		0 () /SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict /AGMCORE_gget cvx /begin cvx
			currentdict /srcStr get /readstring cvx /pop cvx
			/dup cvx /length cvx 0 /gt cvx [
				Adobe_AGM_Utils /AGMUTIL_ndx 0 /ddf cvx
				names_index Names length currentdict /srcStr get length 1 sub {
					1 /index cvx /exch cvx /get cvx
					currentdict /dstStr get /AGMUTIL_ndx /load cvx 3 -1 /roll cvx /put cvx
					Adobe_AGM_Utils /AGMUTIL_ndx /AGMUTIL_ndx /load cvx 1 /add cvx /ddf cvx
				} for
				currentdict /dstStr get 0 /AGMUTIL_ndx /load cvx /getinterval cvx
			] cvx /if cvx
			/end cvx
		] cvx
		bind
		/exec cvx
	] cvx
	end
} bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict /DataSource get def
	/origMultipleDataSources imageDict /MultipleDataSources get def
	/origDecode imageDict /Decode get def
	/dstDataStr imageDict /Width get colorSpaceElemCnt mul string def
	imageDict /MultipleDataSources known {MultipleDataSources}{false} ifelse
	{
		/imbufCnt imageDict /DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub {
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict /DataSource get imbufIdx [ AGMUTIL_imagefile imbufs imbufIdx get /readstring cvx /pop cvx ] cvx put
		} for
		DeviceN_PS2 {
			imageDict begin
		 	/DataSource [ DataSource /devn_sep_datasource cvx ] cvx def
			/MultipleDataSources false def
			/Decode [0 1] def
			end
		} if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or {
			/srcDataStrs [ imageDict begin
				currentdict /MultipleDataSources known {MultipleDataSources {DataSource length}{1}ifelse}{1} ifelse
				{
					Width Decode length 2 div mul cvi string
				} repeat
				end ] def		
			imageDict begin
		 	/DataSource [AGMUTIL_imagefile Decode BitsPerComponent false 1 /filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource /exec cvx] cvx def
			/Decode [0 1] def
			end
		}{
			imageDict /DataSource [1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx /pop cvx names_index /get cvx /put cvx] cvx put
			imageDict /Decode [0 1] put
		} ifelse
	} ifelse
	imageDict exch
	load exec
	imageDict /DataSource origDataSource put
	imageDict /MultipleDataSources origMultipleDataSources put
	imageDict /Decode origDecode put	
	end
} bdf
/write_image_file
{
	begin
	{ (AGMUTIL_imagefile) (w+) file } stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources {DataSource 0 get}{DataSource}ifelse type /filetype eq {
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{ 
			pop
			MultipleDataSources {
			 	0 1 DataSource length 1 sub {
					DataSource type dup
					/arraytype eq {
						pop DataSource exch get exec
					}{
						/filetype eq {
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						} ifelse
					} ifelse
					AGMUTIL_imagefile exch writestring
				} for
			}{
				DataSource type dup
				/arraytype eq {
					pop DataSource exec
				}{
					/filetype eq {
						DataSource imbuf readstring pop
					}{
						DataSource
					} ifelse
				} ifelse
				AGMUTIL_imagefile exch writestring
			} ifelse
		}for
		end
		true
	}ifelse
	end
} bdf
/close_image_file
{
	AGMUTIL_imagefile closefile (AGMUTIL_imagefile) deletefile
}def
statusdict /product known userdict /AGMP_current_show known not and{
	/pstr statusdict /product get def
	pstr (HP LaserJet 2200) eq 	
	pstr (HP LaserJet 4000 Series) eq or
	pstr (HP LaserJet 4050 Series ) eq or
	pstr (HP LaserJet 8000 Series) eq or
	pstr (HP LaserJet 8100 Series) eq or
	pstr (HP LaserJet 8150 Series) eq or
	pstr (HP LaserJet 5000 Series) eq or
	pstr (HP LaserJet 5100 Series) eq or
	pstr (HP Color LaserJet 4500) eq or
	pstr (HP Color LaserJet 4600) eq or
	pstr (HP LaserJet 5Si) eq or
	pstr (HP LaserJet 1200 Series) eq or
	pstr (HP LaserJet 1300 Series) eq or
	pstr (HP LaserJet 4100 Series) eq or 
	{
 		userdict /AGMP_current_show /show load put
		userdict /show {
		  currentcolorspace 0 get
		  /Pattern eq
		  {false charpath f}
		  {AGMP_current_show} ifelse
		} put
	}if
	currentdict /pstr undef
} if
/consumeimagedata
{
	begin
	currentdict /MultipleDataSources known not
		{/MultipleDataSources false def} if
	MultipleDataSources
		{
		DataSource 0 get type
		dup /filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup /arraytype eq exch /packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch get exec length exch 0 ne {pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup /filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height { pop DataSource flushbuffer readstring pop pop} for
			end
			}if
		dup /arraytype eq exch /packedarraytype eq or /DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	  2{/exec load}repeat
	  3 1 roll
	  [ 5 1 roll ] bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs /TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{ 
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs /TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type /dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		} if
	dup type /arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		} if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch {cvx} if
}bdf
/clonedict
{
	dup length dict
	begin
		{
		dup type /dicttype eq
			{
				clonedict
			} if
		dup type /arraytype eq
			{
				clonearray
			} if
		def
		}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get /DeviceN eq level3 not and
} bdf
/Indexed_DeviceN
{ 
	/indexed_colorspace_dict AGMCORE_gget dup null ne {
		dup /CSDBase known {
			/CSDBase get /CSD get_res /Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	} ifelse
} bdf
/DeviceN_NoneName
{	
	/Names where {
		pop
		false Names
		{
			(None) eq or
		} forall
	}{
		false
	}ifelse
} bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup /arraytype eq exch /packedarraytype eq or
		{
			dup 0 get /DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}
			{
				true
			}ifelse
		}
		{
			true
		} ifelse
	}
	{
		true
	} ifelse
} bdf
/base_colorspace_type
{
	dup type /arraytype eq {0 get} if
} bdf
/currentdistillerparams where { pop currentdistillerparams /CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5 {cleartomark} bind def
}{
	/pdfmark_5 {pdfmark} bind def
}ifelse
/ReadBypdfmark_5
{
	2 dict begin
	/makerString exch def string /tmpString exch def
	{
		currentfile tmpString readline pop
		makerString anchorsearch
		{
		pop pop cleartomark exit
		}{
			3 copy /PUT pdfmark_5 pop 2 copy (\n) /PUT pdfmark_5
		} ifelse
	}loop
	end
} bdf
/doc_setup{
	Adobe_AGM_Utils begin
}bdf
/doc_trailer{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict /setpacking known
{
	setpacking
} if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright (C) 1997-2005 Adobe Systems, Inc.  All Rights Reserved.
%% Note: This procset assumes Adobe_AGM_Utils is opened on the stack below it, for
%% definitions of some fundamental procedures.
systemdict /setpacking known
{
	currentpacking
	true setpacking
} if
userdict /Adobe_AGM_Core 201 dict dup begin put
/Adobe_AGM_Core_Id /Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen [currentscreen] cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_in_pattern false def
/AGMCORE_currentpagedevice nd
/knockout_unitsq nd
currentglobal true setglobal
[/CSA /Gradient /Procedure]
{
	/Generic /Category findresource dup length dict copy /Category defineresource pop
} forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer {readline} stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type /dicttype eq{
		dup /HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup /HalftoneType get 2 eq{
				/GraySpotFunction get
			}{ 
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
} def
/clp_npth
{
	clip newpath
} def
/eoclp_npth
{
	eoclip newpath
} def
/npth_clp
{
	newpath clip
} def
/graphic_setup
{
	/AGMCORE_graphicsave save def
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[] 0 setdash
	10 setmiterlimit
	newpath
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias get exec
	/Adobe_AGM_Image where {
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			get exec
		}{
			pop pop
		}ifelse
	} if
	100 dict begin
	/dictstackcount countdictstack def
	/showpage {} def
	mark
} def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub {end}for
	end
	AGMCORE_graphicsave restore
} def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox newpath pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				} if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show ( ) show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}
			{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			} ifelse
		} forall
} bdf
/doc_setup{
	Adobe_AGM_Core begin
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict /AGM_handleerror known not{
		errordict /AGM_handleerror errordict /handleerror get put
		errordict /handleerror {
			Adobe_AGM_Core begin
			$error /newerror get AGMCORE_cur_err null ne and{
				$error /newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error /newerror true put
			end
			errordict /AGM_handleerror get exec
			} bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err /AGMCORE_bad_environ def} if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product (Adobe PostScript Parser) ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 10 def
		/AGMCORE_&gsave /gsave ldf
		/AGMCORE_&grestore /grestore ldf
		/AGMCORE_&grestoreall /grestoreall ldf
		/AGMCORE_&save /save ldf
		/AGMCORE_&setoverprint /setoverprint ldf
		/AGMCORE_gdictcopy {
			begin
			{ def } forall
			end
		}def
		/AGMCORE_gput {
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget {
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave {
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge {limitcheck} if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore {
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt {1 add} if
			dup AGMCORE_gstack exch get dup /AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall {
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save {
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge {limitcheck} if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup /AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub {
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		} for
	}if
	level3 /AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern /makepattern load def
	}if
	/currentcmykcolor [0 0 0 0] AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace [/DeviceGray] AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent () AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	<<
	/MaxPatternItem currentsystemparams /MaxPatternCache get
	>>
	setuserparams
	end
}def
/page_setup
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor /setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore /currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3 {
			3 index add neg dup 0 lt {
				pop 0
			} if
			3 1 roll
		} repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{
		pop
	}ndf
	/currentoverprint
	{
		false
	}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{ 
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.) ==
			Adobe_AGM_Core /AGMCORE_have_reported_unsupported_color_space true ddf
		} if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where {pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias {
				/Name get exch pop
			} if
			dup dup (None) eq exch (All) eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{ 
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_in_pattern known {//Adobe_AGM_Core/AGMCORE_in_pattern get}{false} ifelse
						not AGMCORE_currentpagedevice/OverrideSeparations known and
						{
							AGMCORE_currentpagedevice/OverrideSeparations get
							{
								/HqnSpots /ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name /HqnSpots /ProcSet findresource /TestSpot get exec not
						}{
							gsave
							[/Separation AGMCORE_name /DeviceGray {}]AGMCORE_&setcolorspace
							false
							AGMCORE_currentpagedevice/SeparationColorNames 2 copy known
							{
								get
								{ AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where {pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{ 
				dup true exch
					{
					dup (Cyan) eq exch
					dup (Magenta) eq 3 -1 roll or exch
					dup (Yellow) eq 3 -1 roll or exch
					dup (Black) eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup (Cyan) eq exch
						dup (Magenta) eq 3 -1 roll or exch
						dup (Yellow) eq 3 -1 roll or exch
						(Black) eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					dup (Cyan) eq exch
					dup (Magenta) eq 3 -1 roll or exch
					dup (Yellow) eq 3 -1 roll or exch
					dup (Black) eq 3 -1 roll or
					{pop}
					{convert_spot_to_process or}ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space  
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup (Cyan) eq exch dup (Magenta) eq exch dup (Yellow) eq exch (Black) eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{ 
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			  	AGMCORE_magenta_plate{
			  		4 3 roll pop pop pop
			  	}{
			  		AGMCORE_yellow_plate{
			  			4 2 roll pop pop pop
			  		}{
			  			4 1 roll pop pop pop
			  		}ifelse
			  	}ifelse
			}ifelse
			settransfer  
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			  	AGMCORE_magenta_plate{
			  		{4 3 roll pop pop pop}
			  	}{
			  		AGMCORE_yellow_plate{
			  			{4 2 roll pop pop pop}
			  		}{
			  			{4 1 roll pop pop pop}
			  		}ifelse
			  	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup /Cyan eq 1 index (Cyan) eq or
					{pop (_cyan_)}if
				dup /Magenta eq 1 index (Magenta) eq or
					{pop (_magenta_)}if
				dup /Yellow eq 1 index (Yellow) eq or
					{pop (_yellow_)}if
				dup /Black eq 1 index (Black) eq or
					{pop (_black_)}if
				}def
			dup type /arraytype eq
				{[exch {filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3 {
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup (Cyan) eq exch /Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup (Magenta) eq exch /Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup (Yellow) eq exch /Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup (Black) eq exch /Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type /stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string /string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in /readstring cvx
						[component /get cvx 255 /exch cvx /sub cvx string_out /exch cvx 0 /exch cvx /put cvx string_out]cvx
						[/pop cvx ()]cvx /ifelse cvx
					]cvx /ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type /dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict /Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode [1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0 [C0 channel get 1 exch sub] def
							/C1 [C1 channel get 1 exch sub] def
							}{
							/C0 [1] def
							/C1 [1] def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions [Functions {channel paint? AGMCORE_separateShadingFunction} forall] def			
						}if
					currentdict /Range known
						{/Range [0 1] def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict /Function known
					{
					currentdict /Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction /Function xdf
					/ColorSpace [/DeviceGray] def
					}{
					ColorSpace dup type /arraytype eq {0 get}if /DeviceCMYK eq
						{
						/ColorSpace [/DeviceN [/_cyan_ /_magenta_ /_yellow_ /_black_] /DeviceCMYK {}] def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get /Separation eq
						{
							{
								[1 /exch cvx /sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub /index cvx 1 /exch cvx /sub cvx ColorSpace 1 get length 1 add 1 /roll cvx ColorSpace 1 get length{/pop cvx} repeat]cvx
							}{
								pop [ColorSpace 1 get length {/pop cvx} repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2 /DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup /ColorSpace get
				dup type /arraytype ne
					{[exch]}if
				dup 0 get /DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get /Separation eq
					{
					exch begin
					ColorSpace 1 get dup /None ne exch /All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type /arraytype eq {0 get}if /DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get /exec cvx
										4 AGMCORE_plate_ndx sub -1 /roll cvx
										4 1 /roll cvx
										3 [/pop cvx]cvx /repeat cvx
										1 /exch cvx /sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get /DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type /arraytype eq {0 get}if /DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get /exec cvx
									4 AGMCORE_plate_ndx sub -1 /roll cvx
									4 1 /roll cvx
									3 [/pop cvx]cvx /repeat cvx
									1 /exch cvx /sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace [/DeviceGray] def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup /DeviceCMYK eq exch dup /Separation eq exch /DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type /arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get /CIEBasedA eq
								{
								/ColorSpace [/Separation /_ciebaseda_ /DeviceGray {}] def
								}if
							ColorSpace 0 get dup /CIEBasedABC eq exch dup /CIEBasedDEF eq exch /DeviceRGB eq or or
								{
								/ColorSpace [/DeviceN [/_red_ /_green_ /_blue_] /DeviceRGB {}] def
								}if
							ColorSpace 0 get /CIEBasedDEFG eq
								{
								/ColorSpace [/DeviceN [/_cyan_ /_magenta_ /_yellow_ /_black_] /DeviceCMYK {}] def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup /AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace [/Separation (None) /DeviceGray {}] def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup /AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup /PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading /AGMCORE_ignoreshade known
					currentdict end exch
					{pop <</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{ 
				4 {4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{ 
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf /AGMCORE_y xdf /AGMCORE_m xdf /AGMCORE_c xdf
				end
				[/Separation 4 -1 roll /DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation (All) /DeviceGray {}] setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4 {4 index mul 4 1 roll} repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval {255 div} forall
	} bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	} bdf
	/n_color_components
	{
		base_colorspace_type
		dup /DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo /moveto ldf
		/li /lineto ldf
		/cv /curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2 /setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace /setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup /arraytype eq exch /packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where {
						begin
						dup 0 get dup /Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[ 
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get [ 
									exch {
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									} forall 
								] 1 xpt
							}if
						}ifelse
						end
					} if
				}if
			}def
			/setcolorspace
			{
				dup type dup /arraytype eq exch /packedarraytype eq or
				{
					dup 0 get /Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps {AGMCORE_&&&setcolorspace} if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1 [8 0 0 8 0 0] {<ffffffffffffffff>} image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		} def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		} def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup /DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup /DeviceGray ne{
				dup /DeviceCMYK ne{
					dup /DeviceRGB ne{
						dup /Separation eq{
							pop
							currentcolorspace 3 get exec
							currentcolorspace 2 get
						}{
							dup /Indexed eq{
								pop
								currentcolorspace 3 get dup type /stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err /AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		} def
	}ifelse
	/sop /setoverprint ldf
	/lw /setlinewidth ldf
	/lc /setlinecap ldf
	/lj /setlinejoin ldf
	/ml /setmiterlimit ldf
	/dsh /setdash ldf
	/sadj /setstrokeadjust ldf
	/gry /setgray ldf
	/rgb /setrgbcolor ldf
	/cmyk /setcmykcolor ldf
	/sep /setsepcolor ldf
	/devn /setdevicencolor ldf
	/idx /setindexedcolor ldf
	/colr /setcolor ldf
	/csacrd /set_csa_crd ldf
	/sepcs /setsepcolorspace ldf
	/devncs /setdevicencolorspace ldf
	/idxcs /setindexedcolorspace ldf
	/cp /closepath ldf
	/clp /clp_npth ldf
	/eclp /eoclp_npth ldf
	/f /fill ldf
	/ef /eofill ldf
	/@ /stroke ldf
	/nclp /npth_clp ldf
	/gset /graphic_setup ldf
	/gcln /graphic_cleanup ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin /clonedict load end def
	/clonearray Adobe_AGM_Utils begin /clonearray load end def
	currentdict{
		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and {
			bind
		}if
		def
	}forall
	/getrampcolor
	{ 
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type /stringtype eq {indx get} if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		} for
		ColorSpaceFamily /Separation eq 
		{sep}
		{
			ColorSpaceFamily /DeviceN eq
			{devn} {setcolor}ifelse
		}ifelse
	} bdf
	/sssetbackground {aload pop setcolor} bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where {pop /setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			newpath
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			newpath
		} if
		c1x c2x eq
		{
			c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse
		}
		{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if
			c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if
		} ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{ pathbbox } stopped
		{ 0 0 0 0 } if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}
		{
			/max { 2 copy gt { pop } {exch pop} ifelse } bdf
			/min { 2 copy lt { pop } {exch pop} ifelse } bdf
			rampdict begin
			40 dict begin
			background length 0 gt { background sssetbackground gsave clippath fill grestore } if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}
				{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}
						{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{ /theta 89.99 def}
							{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}
							{
								/L1maxX 0 def
								/L2maxX 0 def
							} ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						} ifelse
					} ifelse
				} ifelse
			} if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt { exch } if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			} if
		} if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		newpath
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}
		{
			0
			numsteps
			{
				dup
				subsampling { round cvi } if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			} repeat
			pop
		} ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}
			{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}
				{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}
					{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{ /theta 89.99 def}
						{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}
						{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					} ifelse
				} ifelse
			} ifelse
		} if
		grestore
		grestore
		end
		end
		end
		} ifelse
	} bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where {pop /setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			newpath
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			newpath
		} if
		x1 x2 eq
		{
			y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
		}
		{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
			x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{ pathbbox } stopped
		{ 0 0 0 0 } if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}
		{
			rampdict begin
			20 dict begin
			background length 0 gt { background sssetbackground gsave clippath fill grestore } if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt { exch } if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				} if
			} if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				} if
			} if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling { round cvi } if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			} repeat
			pop
			ext1 {
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				} if
			} if
			grestore
			grestore
			end
			end
			end
		} ifelse
	} bdf
}def
/page_trailer
{
	end
}def
/doc_trailer{
}def
/capture_currentpagedevice {
	//Adobe_AGM_Core/AGMCORE_currentpagedevice currentpagedevice ddf
} def
systemdict /findcolorrendering known{
	/findcolorrendering systemdict /findcolorrendering get def
}if
systemdict /setcolorrendering known{
	/setcolorrendering systemdict /setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup //Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name /MappedCSA xdf}ifelse
} def
/setsepcolor
{ 
	/sep_colorspace_dict AGMCORE_gget begin
		dup /sep_tint exch AGMCORE_gput
		TintProc
	end
} def
/setdevicencolor
{ 
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		} for
		TintProc
	end
} def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2 {AGMCORE_tmp mul NComponents 1 roll} repeat
			LMax sub AGMCORE_tmp mul LMax add  NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add  NComponents 1 roll
				} repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
} def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
} def
/sep_proc_name
{
	dup 0 get 
	dup /DeviceRGB eq exch /DeviceCMYK eq or level2 not and has_color not and{
		pop [/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
} def
/setsepcolorspace
{ 
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup /sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup () eq exch (All) eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{ 255 div } /exec cvx 3 -1 roll [ 4 1 roll load /exec cvx ] cvx 
		] setcolorspace_opt
		/TintProc {
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get /DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc [
				Components aload pop Name findcmykcustomcolor 
				/exch cvx /setcustomcolor cvx
			] cvx bdf
		}{
 			AGMCORE_host_sep Name (All) eq and{
 				/TintProc { 
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get /DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name () eq and{
					/TintProc [
						MappedCSA sep_proc_name exch 0 get /DeviceCMYK eq{
							cvx /setcmykcolor cvx
						}{
							cvx /setgray cvx
						}ifelse
					] cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup /DeviceCMYK eq exch /DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc [
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get /DeviceGray eq{
								1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx
							}if
							/Name cvx /findcmykcustomcolor cvx /exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load /exec cvx
								/not cvx /and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							] cvx /if cvx
							/setcustomcolor cvx
						] cvx bdf
 					}{ 
						/TintProc {setcolor} bdf
						[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
} def
/additive_blend
{
  	3 dict begin
  	/numarrays xdf
  	/numcolors xdf
  	0 1 numcolors 1 sub
  		{
  		/c1 xdf
  		1
  		0 1 numarrays 1 sub
  			{
			1 exch add /index cvx
  			c1 /get cvx /mul cvx
  			}for
 		numarrays 1 add 1 /roll cvx 
  		}for
 	numarrays [/pop cvx] cvx /repeat cvx
  	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add /index cvx  
			c1 /get cvx /sub cvx /mul cvx
			}for
		/sub cvx
		numarrays 1 add 1 /roll cvx
		}for
	numarrays [/pop cvx] cvx /repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc [
		/TintTransform cvx /setcolor cvx
	] cvx bdf
	MappedCSA setcolorspace_opt
} bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length {pop} repeat
	end
} bdf
/setdevicencolorspace
{ 
	dup /AliasedColorants known {false}{true}ifelse 
	current_spot_alias and {
		7 dict begin
		/names_index 0 def
		dup /names_len exch /Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup /Names get
		{
			dup map_alias {
				exch pop
				dup /ColorLookup known {
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup /Components known {
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index [null null null null] put
						end
					} ifelse
				} ifelse
				new_names names_index 3 -1 roll /Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup /LookupTables known {
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index [null null null null] put
					end
				} ifelse
			} ifelse
			/names_index names_index 1 add def 
		} forall
		alias_cnt 0 gt {
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge {0 get length}{length}ifelse def
			0 1 names_len 1 sub {
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge {0 get length}{length}ifelse lut_entry_len ne {
					/AliasedColorants false def
					exit
				}
				{
					new_LookupTables names_index get 0 get null eq {
						dup /Names get names_index get /name xdf
						name (Cyan) eq name (Magenta) eq name (Yellow) eq name (Black) eq
						or or or not {
							/AliasedColorants false def
							exit
						} if
					} if
				} ifelse
			} for
			lut_entry_len 1 eq {
				/AliasedColorants false def
			} if
			AliasedColorants {
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq {/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod /Additive eq {/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict /TTTablesIdx known not {
					/TTTablesIdx -1 def
				} if
				end
			} if
		}if
		end
	} if
	dup /devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict /AliasedColorants known {
		AliasedColorants
	}{
		false
	} ifelse
	dup not {
		CSA map_csa
	} if
	/TintTransform load type /nulltype eq or {
		/TintTransform [
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup (Cyan) eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup (Magenta) eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0 /exch cvx 0 0
							}
							{
							(Yellow) eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1 /roll cvx 0
								}
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1 /roll cvx
								} ifelse
							} ifelse
						} ifelse
					5 -1 /roll cvx /astore cvx
					}
					{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx /mul cvx /round cvx /cvi cvx /get cvx
					} ifelse
					Names length TTTablesIdx add 1 add 1 /roll cvx
				} for
			Names length [/pop cvx] cvx /repeat cvx
			NComponents Names length
  			TintMethod /Subtractive eq
  				{
  				subtractive_blend
  				}
  				{
  				additive_blend
  				} ifelse
		] cvx bdf
	} if
	AGMCORE_host_sep {
		Names convert_to_process {
			exec_tint_transform
		}
		{	
			currentdict /AliasedColorants known {
				AliasedColorants not
			}{
				false
			} ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants {
				/currentspotalias current_spot_alias def
				false set_spot_alias
			} if
			Names {
				AGMCORE_is_cmyk_sep {
					dup (Cyan) eq AGMCORE_cyan_plate and exch
					dup (Magenta) eq AGMCORE_magenta_plate and exch
					dup (Yellow) eq AGMCORE_yellow_plate and exch
					(Black) eq AGMCORE_black_plate and or or or {
						/devicen_colorspace_dict AGMCORE_gget /TintProc [
							Names names_index /devn_makecustomcolor cvx
						] cvx ddf
						/painted? true def
					} if
					painted? {exit} if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq {
					/devicen_colorspace_dict AGMCORE_gget /TintProc [
						Names names_index /devn_makecustomcolor cvx
					] cvx ddf
					/painted? true def
					exit
					} if
				} ifelse
				/names_index names_index 1 add def
			} forall
			AvoidAliasedColorants {
				currentspotalias set_spot_alias
			} if
			painted? {
				/devicen_colorspace_dict AGMCORE_gget /names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget /TintProc [
					names_len [/pop cvx] cvx /repeat cvx 1 /setseparationgray cvx
 					0 0 0 0 /setcmykcolor cvx
				] cvx ddf
			} ifelse
			end
		} ifelse
	}
	{
		AGMCORE_in_rip_sep {
			Names convert_to_process not
		}{
			level3
		} ifelse
		{
			[/DeviceN Names MappedCSA /TintTransform load] setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and {
				[
					Names /length cvx [/pop cvx] cvx /repeat cvx
				] cvx bdf
			}{
				{setcolor} bdf
			} ifelse
		}{
			exec_tint_transform
		} ifelse
	} ifelse
	set_crd
	/AliasedColorants false def
	end
} def
/setindexedcolorspace
{
	dup /indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict /CSDBase known {
			CSDBase /CSD get_res begin
			currentdict /Names known {
				currentdict devncs
			}{
				1 currentdict sepcs
			} ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt /Names where {pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal {
					/tableIndex xdf
					Lookup dup type /stringtype eq {
						compCnt tableIndex map_index
					}{
						exec
					} ifelse
					/Names where {
						pop setdevicencolor
					}{
						setsepcolor
					} ifelse
					currentgray
					tableIndex exch
					HiVal mul cvi 
					NewLookup 3 1 roll put
				} for
				[/Indexed currentcolorspace HiVal NewLookup] setcolorspace_opt
				end
			}{
				level3
				{
					currentdict /Names known {
						[/Indexed [/DeviceN Names MappedCSA /TintTransform load] HiVal Lookup] setcolorspace_opt
					}{
						[/Indexed [/Separation Name MappedCSA sep_proc_name load] HiVal Lookup] setcolorspace_opt
					} ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict /Names known {
						Lookup dup type /stringtype eq
							{/exch cvx CSDBase /CSD get_res /Names get length dup /mul cvx exch /getinterval cvx {255 div} /forall cvx}
							{/exec cvx}ifelse
							/TintTransform load /exec cvx
					}{
						Lookup dup type /stringtype eq
							{/exch cvx /get cvx 255 /div cvx}
							{/exec cvx}ifelse
							CSDBase /CSD get_res /MappedCSA get sep_proc_name exch pop /load cvx /exec cvx
					} ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			} ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or{
						pop [/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{ 
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval {} forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						} bind
					}{
						Lookup
					}ifelse
				}ifelse
				] setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep {
		/indexed_colorspace_dict AGMCORE_gget dup /CSDBase known { 
			begin
			CSDBase /CSD get_res begin
			currentdict /Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
			end
		}{
			/Lookup get 4 3 -1 roll map_index setcmykcolor
		} ifelse
	}{
		level3 not AGMCORE_in_rip_sep and /indexed_colorspace_dict AGMCORE_gget /CSDBase known and {
			/indexed_colorspace_dict AGMCORE_gget /CSDBase get /CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		} ifelse
	}ifelse
} def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode [0 1] def
		/DataSource <FF> def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict /image get exec
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup /CSD eq {
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	} ifelse
}def
/del_res
{
	{
		aload pop exch
		dup /CSD eq {
			pop 
			{
				//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef
			}forall
		}{
			exch
			{
				1 index undefineresource
			}forall
			pop
		} ifelse
	} forall
}def
/get_res
{
	dup /CSD eq {
		pop
		dup type dup /nametype eq exch /stringtype eq or {
			AGMCORE_CSD_cache exch get
		} if
	}{
		findresource
	} ifelse
}def
/get_csa_by_name
{
	dup type dup /nametype eq exch /stringtype eq or{
		/CSA get_res
	} if
}def
/pattern_buf_init
{
	/count get 0 0 put
} def
/pattern_buf_next
{
	dup /count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
} def
/cachepattern_compress
{
	5 dict begin
	currentfile exch 0 exch /SubFileDecode filter /ReadFilter exch def
	/patarray 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	patarray 1 array dup 0 1 put /count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq {
			pop
		}{
			patarray dup length 1 sub 3 -1 roll put
		} ifelse
		{string_size}{0}ifelse string
	} /LZWEncode filter def
	{ 		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not {exit} if
	} loop
	LZWFilter closefile
	patarray				
	end
}def
/cachepattern
{
	2 dict begin
	currentfile exch 0 exch /SubFileDecode filter /ReadFilter exch def
	/patarray 20 dict def
	currentglobal true setglobal 
	patarray 1 array dup 0 1 put /count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		patarray dup length 1 sub 3 -1 roll put
		not {exit} if
	} loop
	patarray dup dup length 1 sub () put					
	end	
}def
/wrap_paintproc
{ 
  statusdict /currentfilenameextend known{
	clonedict
	begin
	/OldPaintProc /PaintProc load def
	/PaintProc
	{
		mark exch
		dup /OldPaintProc get stopped
		{closefile restore end} if
		cleartomark
	}  def
	end
  } {pop} ifelse
} def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index /XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index /YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			  1 index begin
		BBox 0 get XStep div cvi XStep mul /xshift exch neg def
		BBox 1 get YStep div cvi YStep mul /yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[ xshift yshift /translate load null /exec load ] dup
		3 /PaintProc load put cvx /PaintProc exch def
		end
	1 index dup /ID get exch /Pattern add_res
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup /PatternType get 1 eq{
		dup /PaintType get 1 eq{
			currentoverprint sop [/DeviceGray] setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{
		pop
	}{
		setcolorspace
	}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}{null}ifelse
	Intent ne {
		Intent /ColorRendering {findresource} stopped
		{
			pop pop systemdict /findcolorrendering known
			{
				Intent findcolorrendering pop
				/ColorRendering findresource 
				true
			}
			{false} ifelse
		}
		{true} ifelse
		{
			dup begin
			currentdict /TransformPQR known {
				currentdict /TransformPQR get aload pop
				3 {{} eq 3 1 roll} repeat or or
			}
			{true} ifelse
			currentdict /MatrixPQR known {
				currentdict /MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true} ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR [
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add} bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add} bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add} bind
				] def
				/MatrixPQR [ 0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296 ] def
				/RangePQR [-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392] def
				currentdict end
			} if
			setcolorrendering_opt
		} if		
	}if
} def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict /ColorRendering known{
			ColorRendering /ColorRendering {findresource} stopped not {setcolorrendering_opt} if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type /arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		clonedict
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process //Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp) flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep) flushinput
	}if
}def
/cpaint_gend
{
	newpath
}def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add} if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0} ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup /Name get map_alias {/CSD put}{pop} ifelse} forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get /CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not {
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor /setcustomcolor load put
	} if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		currentdict/TintProc known currentdict/CSA known and 3 1 roll
		//Adobe_AGM_Core begin
		dup /customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			4 -1 roll{
				exch pop /sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
			pop
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd /setpagedevice load def
	/setpagedevice { get_gstate spd set_gstate } def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known{
			currentpagedevice/NegativePrint get //Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<< /NegativePrint //Adobe_AGM_Core/AGMCORE_inverting get >> setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
		gsave newpath clippath 1 /setseparationgray where{pop setseparationgray}{setgray}ifelse 
		/AGMIRS_&fill where {pop AGMIRS_&fill}{fill} ifelse grestore
	}if
	end
}def
/lw_save_restore_override {
	/md where {
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{} def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage /showpage load def}
		ifelse
		/showpage {orig_showpage gR} def
		end
	}if
}def
/pscript_showpage_override {
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage /restore load def
		/restore {exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where {
		pop
		md /initializepage known {
			md /initializepage {} put
		} if
		md /rC known {
			md /rC {4{pop}repeat} put
		} if
	}if
	/mysetup where {
		/mysetup [1 0 0 1 0 0] put
	}if
	Adobe_AGM_Core /AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core /AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/driver_check_media_override
{
	/PrepsDict where
		{pop}
		{
		Adobe_AGM_Core /AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core /AGMCORE_Default_PageSize get type /arraytype eq
			{
			Adobe_AGM_Core /AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core /AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core /AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ (Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. ) def
	/AGMCORE_color_space_onhost_seps (This job contains colors that will not separate with on-host methods. ) def
	/AGMCORE_invalid_color_space (This job contains an invalid color space. ) def
end
/set_def_ht
{
	AGMCORE_def_ht sethalftone
} def
end
systemdict /setpacking known
{
	setpacking
} if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.25 0
%%Copyright: Copyright 1997-2005 Adobe Systems Incorporated.  All Rights Reserved.
%%Version: 2.25 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict /Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{ /Adobe_CoolType_Core userdict /Adobe_CoolType_Core get def }
if
userdict /Adobe_CoolType_Core 60 dict dup begin put
/Adobe_CoolType_Version 2.25 def
/Level2?
	systemdict /languagelevel known dup
		{ pop systemdict /languagelevel get 2 ge }
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal /pop load def
	/gcheck { pop false } bind def
	/currentpacking false def
	/setpacking /pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict /Adobe_CoolType_Data 2 copy known not
	 { 2 copy 10 dict put }
if
get
	 begin
	 /@opStackCountByLevel 32 dict def
	 /@opStackLevel 0 def
	 /@dictStackCountByLevel 32 dict def
	 /@dictStackLevel 0 def
	 end
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup /args
			7 index
			5 add array put
			put get
			}
			{
			get dup /args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch /args exch put
				}
				{ pop }
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{ pop count }
			if
			dup /argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{ pop }
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	} bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{ { pop } repeat }
				{ pop }
			ifelse
			args 0 argCount getinterval {} forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{ { end } repeat }
		{ pop }
	ifelse
	} bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	} bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	} bind def
/@ReRaise
	{
	cvx $error /errorname get errordict exch get exec
	stop
	} bind def
/@Stopped
	{
	0 @#Stopped
	} bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{ @_RestoreStackLevels true }
		{ @_PopStackLevels false }
	ifelse
	} bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	} bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch /@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					 { (*) { pop stop } 128 string /Category resourceforall }
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data /@shouldNotDisappearDict get ne dup
					 {
						  /@shouldNotDisappearDictValue known
								{
										  {
												end
												currentdict 1 index eq
													 { pop exit }
												if
										  }
									 loop
								}
						  if
					 }
				if
				end
		}
		{ false }
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{ /steveamerige /Category resourcestatus }
		stopped
			{ cleartomark true }
			{ cleartomark currentglobal not }
		ifelse
		}
		{ false }
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec
				{ cleartomark false }
				{ { 3 2 roll pop true } { cleartomark false } ifelse }
			ifelse
			end
		} bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad /ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup /CMap CTHasResourceStatusBug
						{ CTResourceStatus }
						{ resourcestatus }
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup /CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{ exit }
								{ stop }
							ifelse
							}
						ifelse
						}
						{ pop }
					ifelse
					}
				128 string /CMap resourceforall
				}
			stopped
				{ cleartomark }
			stopped pop
			setglobal
			}
		if
		}
	if
	} bind def
/doc_setup
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mov /moveto load def
		/nfnt /newencodedfont load def
		/mfnt /makefont load def
		/sfnt /setfont load def
		/ufnt /undefinefont load def
		/chp /charpath load def
		/awsh /awidthshow load def
		/wsh /widthshow load def
		/ash /ashow load def
		/sh /show load def
		end
		currentglobal false setglobal
	  userdict /Adobe_CoolType_Data 2 copy known not
		  { 2 copy 10 dict put }
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	} bind def
/doc_trailer
	{
	currentdict Adobe_CoolType_Core eq
		{ end }
	if
	} bind def
/page_setup
	{
	Adobe_CoolType_Core begin
	} bind def
/page_trailer
	{
	end
	} bind def
/unload
	{
	systemdict /languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{ undef }
				{ pop pop }
			ifelse
			}
		if
		}
	if
	} bind def
/ndf
	{
	1 index where
		{ pop pop pop }
		{ dup xcheck { bind } if def }
	ifelse
	} def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where { /globaldict get begin } if
			dup where pop exch get
		/globaldict where { pop end } if
		end
	end
Adobe_CoolType_Core_Defined
	{ /systemfindfont exch def }
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{ pop } ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq { 0 } { dup length } ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index /FID eq
				{ pop pop }
				{ def }
			ifelse
			}
		forall
		dup null eq
			{ pop }
			{ { def } forall }
		ifelse
		currentdict
		end
	exch setglobal
	} bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	} bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index  known
			{ SharedFontDirectory 3 index get /FontReferenced known }
			{ false }
		ifelse
		}
		{
		FontDirectory 3 index known
			{ FontDirectory 3 index get /FontReferenced known }
			{
			SharedFontDirectory 3 index known
				{ SharedFontDirectory 3 index get /FontReferenced known }
				{ false }
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont /FontReferenced get
		2 index dup type /nametype eq
			{findfont}
		if ne
			{ pop false }
		if
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{ 2 copy get 3 index 3 1 roll put }
		for
		pop pop pop
		}
		{
		dup type /nametype eq
		  { findfont }
	  if
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index /FID ne
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type /stringtype eq { cvn } if def dup
			currentdict
			end
		definefont def
		}
	ifelse
	} bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type /dicttype ne
			{ 0 dict }
		if
		currentdict /$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{ def } forall
					{ def } forall
					currentdict
					dup /$Init known
						{ dup /$Init get exec }
					if
					end
				/$Strategy exch def
				}
				{ pop pop pop }
			ifelse
			}
			{ pop pop }
		ifelse
		end
	} bind def
/scff
	{
	$SubstituteFont
		begin
		dup type /stringtype eq
			{ dup length exch }
			{ null }
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{ $sname }
			ifelse def
		end
		{ findfont }
	@Stopped
		{
		dup length 8 add string exch
		1 index 0 (BadFont:) putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{ findfont }
		@Stopped
			{ pop /Courier findfont }
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	} bind def
/isWidthsOnlyFont
	{
	dup /WidthsOnly known
		{ pop pop true }
		{
		dup /FDepVector known
			{ /FDepVector get { isWidthsOnlyFont dup { exit } if } forall }
			{
			dup /FDArray known
				{ /FDArray get { isWidthsOnlyFont dup { exit } if } forall }
				{ pop }
			ifelse
			}
		ifelse
		}
	ifelse
	} bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 4 index def
		/$doSmartSub false def
		end
	3 index
	currentglobal false setglobal exch
	/CompatibleFonts /ProcSet resourcestatus
		{
		pop pop
		/CompatibleFonts /ProcSet findresource
			begin
			dup /CompatibleFont currentexception
			1 index /CompatibleFont true setexception
			1 index /Font resourcestatus
				{
				pop pop
				3 2 roll setglobal
				end
				exch
				dup findfont
				/CompatibleFonts /ProcSet findresource
					begin
					3 1 roll exch /CompatibleFont exch setexception
					end
				}
				{
				3 2 roll setglobal
				1 index exch /CompatibleFont exch setexception
				end
				findfont
				$SubstituteFont /$substituteFound true put
				}
			ifelse
		}
		{ exch setglobal findfont }
	ifelse
	$SubstituteFont
		begin
		$substituteFound
			{
		 false
		 (%%[Using embedded font ) print
		 5 index ?str1 cvs print
		 ( to avoid the font substitution problem noted earlier.]%%\n) print
		 }
			{
			dup /FontName known
				{
				dup /FontName get $fontname eq
				1 index /DistillerFauxFont known not and
				/currentdistillerparams where
					{ pop false 2 index isWidthsOnlyFont not and }
				if
				}
				{ false }
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		exch pop exch pop exch
		2 dict dup /Found 3 index put
		exch findfont exch
		}
		{
		exch exec
		exch dup findfont
		dup /FontType get 3 eq
	  {
		  exch ?str1 cvs
		  dup length 1 sub
		  -1 0
		{
			  exch dup 2 index get 42 eq
			{
				 exch 0 exch getinterval cvn 4 1 roll 3 2 roll pop
				 exit
			  }
			  {exch pop} ifelse
		  }for
		}
		{
		 exch pop
	  } ifelse
		2 dict dup /Downloaded 6 5 roll put
		}
	ifelse
	dup /FontName 4 index put copyfont definefont pop
	} bind def
/?str2 256 string def
/?add
	{
	1 index type /integertype eq
		{ exch true 4 2 }
		{ false 3 1 }
	ifelse
	roll
	1 index findfont
	dup /Widths known
		{
		Adobe_CoolType_Data /AddWidths? true put
		gsave dup 1000 scalefont setfont
		}
	if
	/Downloaded known
		{
		exec
		exch
			{
			exch ?str2 cvs exch
			findfont /Downloaded get 1 dict begin /Downloaded 1 index def ?str1 cvs length
			?str1 1 index 1 add 3 index putinterval
			exch length 1 add 1 index add
			?str1 2 index (*) putinterval
			?str1 0 2 index getinterval cvn findfont 
			?str1 3 index (+) putinterval
			2 dict dup /FontName ?str1 0 6 index getinterval cvn put
			dup /Downloaded Downloaded put end copyfont
			dup /FontName get exch definefont pop pop pop
			}
			{
			pop
			}
		ifelse
		}
		{
		pop
		exch
			{
			findfont
			dup /Found get
			dup length exch ?str1 cvs pop
			?str1 1 index (+) putinterval
			?str1 1 index 1 add 4 index ?str2 cvs putinterval
			?str1 exch 0 exch 5 4 roll ?str2 cvs length 1 add add getinterval cvn
			1 dict exch 1 index exch /FontName exch put copyfont
			dup /FontName get exch definefont pop
			}
			{
			pop
			}
		ifelse
		}
	ifelse
	Adobe_CoolType_Data /AddWidths? get
		{ grestore Adobe_CoolType_Data /AddWidths? false put }
	if
	} bind def
/?sh
	{
	currentfont /Downloaded known { exch } if pop
	} bind def
/?chp
	{
	currentfont /Downloaded known { pop } { false chp } ifelse
	} bind def
/?mv 
	{
	currentfont /Downloaded known { moveto pop pop } { pop pop moveto } ifelse
	} bind def
setpacking
userdict /$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{ get }
			{ pop pop { pop /Courier } bind }
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams /CannotEmbedFontPolicy 2 copy known
			{ get /Error eq }
			{ pop pop false }
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup /WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type /stringtype eq { cvn } if def
								/FontType 3 def
								/FontMatrix [ .001 0 0 .001 0 0 ] def
								/Encoding 256 array dup 0 1 255 { /.notdef put dup } for pop def
								/FontBBox [ 0 0 0 0 ] def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth /y exch def /x exch def
											x y setcharwidth
											$SubstituteFont /$Strategy get /$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									} bind def
								currentdict
								end
							exch setglobal
							} bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup /WMode known
										{ dup /WMode get }
										{ 0 }
									ifelse
									/$WMode exch def
									$fontname exch
									dup /FontName known
										{
										dup /FontName get
										dup type /stringtype eq { cvn } if
										}
										{ /unnamedfont }
									ifelse
									exch
									Adobe_CoolType_Data /InVMDeepCopiedFonts get
									1 index /FontName get known
										{
										pop
										Adobe_CoolType_Data /InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{ $deepcopyfont }
									ifelse
									exch 1 index exch /FontBasedOn exch put
									dup /FontName $fontname dup type /stringtype eq { cvn } if put
									definefont
									Adobe_CoolType_Data /InVMDeepCopiedFonts get
										begin
										dup /FontBasedOn get 1 index def
										end
									} bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{ /y 1000 def }
										{ /x -1000 def 500 120 translate }
									ifelse
									Level2?
										{
										[ /Separation (All) /DeviceCMYK { 0 0 0 1 pop } ]
										setcolorspace
										}
										{ 0 setgray }
									ifelse
									10 setlinewidth
									x .8 mul
									[ 7 3 ]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{ .2 setcolor }
											{ .8 setgray }
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									} bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict /FontName known
											{
											FontName
											dup type /stringtype eq { cvn } if
											}
											{ /unnamedfont }
										ifelse
										def
										/FontName $fontname dup type /stringtype eq { cvn } if def
										/currentdistillerparams where
											{ pop }
											{
											/FontInfo currentdict /FontInfo known
												{ FontInfo null copyfont }
												{ 2 dict }
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[ 1 0 ItalicAngle dup sin exch cos div 1 0 0 ]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									} bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont {} bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type /stringtype eq { cvn } if
						dup /$fontname exch def
						$sname null eq
							{ $str cvs dup length $slen sub $slen getinterval }
							{ pop $sname }
						ifelse
						$fontpat dup 0 (fonts/*) putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont /$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{ /$match exch def exit }
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont /$dstack get
								{
								exch
									{
									1 index eq
										{ pop false }
										{ true }
									ifelse
									}
									{ begin false }
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{ $match (fonts/) anchorsearch pop pop cvn }
							{ /Courier }
						ifelse
						} bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1  [ /Ryumin-Light /HeiseiMin-W3
										  /GothicBBB-Medium /HeiseiKakuGo-W5
										  /HeiseiMaruGo-W4 /Jun101-Light ] def
							/Korea1  [ /HYSMyeongJo-Medium /HYGoThic-Medium ] def
							/GB1	  [ /STSong-Light /STHeiti-Regular ] def
							/CNS1	 [ /MKai-Medium /MHei-Medium ] def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup /FontType get 0 eq
							{
							1 dict dup /FontName /copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup /FontName /copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{ $Strategies /$Type3Underprint get exec }
						ifelse
						} bind def
					/$buildfontname
						{
						dup /CIDFont findresource /CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index (-) putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy (-) putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{ pop pop 3 2 roll putinterval cvn /$cmapname exch def }
							{ pop pop pop pop pop }
						ifelse
						length
						$str 1 index (-) putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						} bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{ get }
								{ pop pop [] }
							ifelse
							}
							{ pop pop [] }
						ifelse
						false exch
							{
							dup /CIDFont resourcestatus
								{
								pop pop
								save
								1 index /CIDFont findresource
								dup /WidthsOnly known
									{ dup /WidthsOnly get }
									{ false }
								ifelse
								exch pop
								exch restore
									{ pop }
									{ exch pop true exit }
								ifelse
								}
								{ pop }
							ifelse
							}
						forall
							{ $str cvs $buildfontname }
							{
							false (*)
								{
								save exch
								dup /CIDFont findresource
								dup /WidthsOnly known
									{ dup /WidthsOnly get not }
									{ true }
								ifelse
								exch /CIDSystemInfo get
								dup /Registry get Registry eq
								exch /Ordering get Ordering eq and and
									{ exch restore exch pop true exit }
									{ pop restore }
								ifelse
								}
							$str /CIDFont resourceforall
								{ $buildfontname }
								{ $fontname $findfontByEnum }
							ifelse
							}
						ifelse
						} bind def
					end
				end
				currentdict /$error known currentdict /languagelevel known and dup
					{ pop $error /SubstituteFont known }
				if
				dup
					{ $error }
					{ Adobe_CoolType_Core }
				ifelse
				begin
					{
					/SubstituteFont
					/CMap /Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{ dup $str cvs dup length $slen sub $slen getinterval cvn }
									{ $sname }
								ifelse
								Adobe_CoolType_Data /InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{ exch pop true exit }
												{ pop }
											ifelse
											}
											{
											FontDirectory 1 index known
												{ exch pop true exit }
												{
												GlobalFontDirectory 1 index known
													{ exch pop true exit }
													{ pop }
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{ pop pop false }
								ifelse
									{
									exch pop exch pop
									}
									{
									dup /CMap resourcestatus
										{
										pop pop
										dup /$cmapname exch def
										/CMap findresource /CIDSystemInfo get { def } forall
										$findfontByROS
										}
										{
										128 string cvs
										dup (-) search
											{
											3 1 roll search
												{
												3 1 roll pop
													{ dup cvi }
												stopped
													{ pop pop pop pop pop $findfontByEnum }
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup /CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup /$cmapname exch def
															/CMap findresource /CIDSystemInfo get { def } forall
															$findfontByROS
															true exit
															}
															{ pop }
														ifelse
														}
													for
													dup type /booleantype eq
														{ pop }
														{ pop pop pop $findfontByEnum }
													ifelse
													}
												ifelse
												}
												{ pop pop pop $findfontByEnum }
											ifelse
											}
											{ pop pop $findfontByEnum }
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{ //SubstituteFont exec }
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{ $findfontByEnum }
								{ //SubstituteFont exec }
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core /scfindfont /systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup /FontName known
								{ dup /FontName get dup 3 index ne }
								{ /noname true }
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def /$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{ 1 index /FID eq { pop pop } { def } ifelse }
										forall
										currentdict
										end
									definefont
									dup /FontName known { dup /FontName get } { null } ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using ) print
										dup /FontName known
											{ dup /FontName get } { (unspecified font) }
										ifelse
										$str cvs print (.\n) print
										}
									if
									}
									{ exch pop }
								ifelse
								}
								{ exch pop }
							ifelse
							end
						} bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core /findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type /stringtype ne { $str cvs } if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{ dup $inVMIndex $AddInVMFont }
						if
						$doSmartSub
							{
							currentdict /$Strategy known
								{ $Strategy /$BuildFont get exec }
							if
							}
						if
						}
					if
					end
				} bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch /FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data /InVMFontsByCMap get exch
		$DictAdd
		}
		{ pop pop pop }
	ifelse
	} bind def
/$DictAdd
	{
	2 copy known not
		{ 2 copy 4 index length dict put }
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get { forall } def
				2 copy currentdict put
				end
			}
			{ pop }
		ifelse
		}
	if
	get
		begin
			{ def }
		forall
		end
	} bind def
end
end
%%EndResource
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.21 0
%%Copyright: Copyright 1987-2005 Adobe Systems Incorporated.
%%Version: 1.21 0
systemdict /languagelevel known dup
	{ currentglobal false setglobal }
	{ false }
ifelse
exch
userdict /Adobe_CoolType_Utility 2 copy known
	{ 2 copy get dup maxlength 27 add dict copy }
	{ 27 dict }
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		  <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A> def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch /eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{ globaldict begin currentglobal true setglobal }
if
	/ct_AddStdCIDMap
		ct_Level2?
			{ {
				mark
				Adobe_CoolType_Utility /@recognizeCIDFont currentdict put
					 {
					 ((Hex) 57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77) 0 () /SubFileDecode filter cvx exec
					 }
				stopped
					 {
					 cleartomark
					 Adobe_CoolType_Utility /@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						  {
						  2 copy get 3 index eq
								{ 1 index length exch sub 1 sub { end } repeat exit }
								{ pop }
						  ifelse
						  }
					 for
					 pop pop
					 Adobe_CoolType_Utility /@eexecStartData get eexec
					 }
					 { cleartomark }
				ifelse
			} }
			{ {
				Adobe_CoolType_Utility /@eexecStartData get eexec
			} }
		ifelse bind def
userdict /cid_extensions known
dup { cid_extensions /cid_UpdateDB known and } if
	 {
	 cid_extensions
	 begin
	 /cid_GetCIDSystemInfo
		 {
		 1 index type /stringtype eq
			 { exch cvn exch }
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				 {
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					 {
					 1 index load
					 3 index get
					 dup null eq
						  { pop pop cid_UpdateDB }
						  {
						  exch
						  1 index /Created get eq
							  { exch pop exch pop }
							  { pop cid_UpdateDB }
						  ifelse
						  }
					 ifelse
					 }
					 { pop cid_UpdateDB }
				 ifelse
				 }
				 { cid_UpdateDB }
			 ifelse
			 end
		 } bind def
	 end
	 }
if
ct_Level2?
	{ end setglobal }
if
	/ct_UseNativeCapability?  systemdict /composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring () def
		/usewidths? true def
		end def
	ct_Level2? { setglobal } { pop } ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict /languagelevel known
				{ pop /CIDFont findresource /GlyphDirectory get }
				{
				1 index /CIDFont findresource /GlyphDirectory
				get dup type /dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			} def
		/+
			{
			systemdict /languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{ 1 dict begin }
			ifelse
			/$ exch def
			systemdict /languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			? { $ begin } if
			} def
		/? { $ type /dicttype eq } def
		/| {
			userdict /Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data /AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					  begin
						AddWidths?
								{
								Adobe_CoolType_Data /CC 3 index put
								? { def } { $ 3 1 roll put } ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont /Widths get exch CC exch put
								}
								{ ? { def } { $ 3 1 roll put } ifelse }
							ifelse
					end
				end
				}
				{ ? { def } { $ 3 1 roll put } ifelse }	ifelse
				}
				{ ? { def } { $ 3 1 roll put } ifelse }
			ifelse
			} def
		/!
			{
			? { end } if
			systemdict /languagelevel known
				{ gvm setglobal }
			if
			end
			} def
		/: { string currentfile exch readstring pop } executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		 /c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		 /c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		 /c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		 /c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		 /c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		 /c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		 /c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		 /c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		 /cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		 /cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		 /cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		 /cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		 /cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx [.001 0 0 .001 0 0] def
		/ct_1000Mtx [1000 0 0 1000 0 0] def
		/ct_raise {exch cvx exch errordict exch get exec stop} bind def
		/ct_reraise
			{ cvx $error /errorname get (Error: ) print dup (						  ) cvs print
					errordict exch get exec stop
			} bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			} bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility /ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{ dup string /dst_string exch def }
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex  get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string  dst_index 2 index putinterval
						length dst_index add /dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string  dst_index 2 index putinterval
						pop dup dst_index add /dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							  { arrayIndex get }
							  {
							  pop
							  exit
							  }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			} bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{ /unknowninstancename /Category resourcestatus }
			stopped
				{ cleartomark setglobal true }
				{ cleartomark currentglobal not exch setglobal }
			ifelse
				{
					{
					mark 3 1 roll /Category findresource
						begin
						ct_Vars /vm currentglobal put
						({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec
							{ cleartomark false }
							{ { 3 2 roll pop true } { cleartomark false } ifelse }
						ifelse
						ct_Vars /vm get setglobal
						end
					}
				}
				{ { resourcestatus } }
			ifelse bind def
			/CIDFont /Category ct_resourcestatus
				{ pop pop }
				{
				currentglobal  true setglobal
				/Generic /Category findresource
				dup length dict copy
				dup /InstanceType /dicttype put
				/CIDFont exch /Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit /ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				  /Registry (Adobe) def
				  /Ordering (Identity) def
				  /Supplement 0 def
				end def
				/CMapName /Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000> <FFFF>
				endcodespacerange
				1 begincidrange
				<0000> <FFFF> 0
				endcidrange
				endcmap
				CMapName currentdict /CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont  10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{ pop pop /defineresource /undefined ct_raise }
				ifelse
				} bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{ get 3 1 roll pop pop}
						{ pop pop /findresource /undefinedresource ct_raise }
					ifelse
					}
					{ pop pop /findresource /undefined ct_raise }
				ifelse
				} bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{ pop pop /findresource /undefined ct_raise }
				ifelse
				} bind def
			/ct_resourcestatus /resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup (Binary) eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{ cid_BYTE_COUNT () /SubFileDecode filter }
							stopped
								{ pop pop pop }
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup (Hex) eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{ null exch /ASCIIHexDecode filter /readstring }
							stopped
								{ pop exch pop (>) exch /readhexstring }
							if
							}
							{ (>) exch /readhexstring }
						ifelse
						load
						exit
						}
					if
					/StartData /typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch /GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop /readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				} bind def
			/StartData
				{
				mark
					{
					currentdict
					dup /FDArray get 0 get /FontMatrix get
					0 get 0.001 eq
						{
						dup /CDevProc known not
							{
							/CDevProc 1183615869 internaldict /stdCDevProc 2 copy known
								{ get }
								{
								pop pop
								{ pop pop pop pop pop 0 -1000 7 index 2 div 880 }
								}
							ifelse
							def
							}
						if
						}
						{
						 /CDevProc
							 {
							 pop pop pop pop pop
							 0
							 1 cid_temp /cid_CIDFONT get
							 /FDArray get 0 get
							 /FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							 } def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup /cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup /SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup /SubrMapOffset undef
										dup /SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{ pop }
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict /CIDFont defineresource pop
					end end
					}
				stopped
					{ cleartomark /StartData ct_reraise }
				if
				} bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit /ProcSet ct_resourcestatus
				{ true }
				{ /CIDInitC /ProcSet ct_resourcestatus }
			ifelse
				{
				pop pop
				/CIDInit /ProcSet findresource
				ct_UseNativeCapability?
					{ pop null }
					{ /CIDInit ct_CIDInit /ProcSet defineresource pop }
				ifelse
				}
				{ /CIDInit ct_CIDInit /ProcSet defineresource pop null }
			ifelse
			ct_Vars exch /ct_oldCIDInit exch put
			} bind def
		/ct_restoreCIDInit
			{
			ct_Vars /ct_oldCIDInit get dup null ne
				{ /CIDInit exch /ProcSet defineresource pop }
				{ pop }
			ifelse
			} bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility /ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{ pop 0 }
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{ get }
								{ pop pop nullstring }
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{ 0 FDBytes ct_cvnsi }
									{ pop 0 }
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{ /charstring nullstring def exit }
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			} def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			} def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont /Widths get cid
					2 copy known
						{ get exch pop aload pop }
						{ pop pop stringwidth }
					ifelse
					}
					{ stringwidth }
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			} def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{ get }
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup /FontMatrix 2 copy known
						{ get }
						{ pop pop ct_defaultFontMtx }
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont /Widths get def
					/CharStrings 1 dict dup /.notdef
						<d841272cf18f54fc13> dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup /CharStrings get 1 index /Encoding get
			ct_dfCharCode get charstring put
			rootfont /WMode 2 copy known
				{ get }
				{ pop pop 0 }
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ ct_str1 show }
			ifelse
			} def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup /FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ ct_1000Mtx matrix concatmatrix concat }
				{ pop }
			ifelse
			/Private get
			Adobe_CoolType_Utility /ct_Level2? get not
				{
				ct_dfDict /Private
				3 -1 roll
					{ put }
				1183615869 internaldict /superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility /ct_Level2? get
				{ 1 index }
				{ 3 index /Private get mark 6 1 roll }
			ifelse
			dup /RunInt known
				{ /RunInt get }
				{ pop /CCRun }
			ifelse
			get exec
			Adobe_CoolType_Utility /ct_Level2? get not
				{ cleartomark }
			if
			} bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility /ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{ stop }
			if
			end
			end
			end
			end
			} bind def
		/BaseFontNameStr (BF00) def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix  [0.001 0 0 0.001 0 0] def
			/FontBBox  [-250 -250 1250 1250] def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix  [0.001 0 0 0.001 0 0] def
			/FontBBox  [-250 -250 1250 1250] def
			/Encoding ct_cHexEncoding def
			/BuildChar /ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString /ct_Type3ShowCharString load def
				/ct_dfSetCacheProc /ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup /lenIV 4 put def
				/CharStrings 1 dict dup /.notdef <d841272cf18f54fc13> put def
				/PaintType 0 def
				/ct_ShowCharString /ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{ exit }
				if
				}
			for
			exch pop exch pop
			} bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch /WMode exch def
				exch /FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup /FontMatrix known
				{ dup /FontMatrix get /FontMatrix exch def }
				{ /FontMatrix matrix def }
			ifelse
				/bfCount 1 index /CIDCount get 256 idiv 1 add
					dup 256 gt { pop 256} if def
				/Encoding
					256 array 0 1 bfCount 1 sub { 2 copy dup put pop } for
					bfCount 1 255 { 2 copy bfCount put pop } for
					def
				/FDepVector bfCount dup 256 lt { 1 add } if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont /FontBBox known
						{ CIDFont /FontBBox get /FontBBox exch def }
					if
					CIDFont /CDevProc known
						{ CIDFont /CDevProc get /CDevProc exch def }
					if
					currentdict
					end
				BaseFontNameStr 3 (0) putinterval
				0 1 bfCount dup 256 eq { 1 sub } if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup /CIDFirstByte exch 256 mul def
						FontType 3 eq
							{ /ct_FDDict 2 dict def }
						if
						currentdict
						end
					1 index  16
					BaseFontNameStr  2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{ /Widths 1 index /CIDFont get /GlyphDirectory get length dict def }
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont /Widths get
						begin
						exch /CIDFont get /GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{ exch pop }
			ifelse
			} bind def
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{
				2 index /CMap ct_resourcestatus
					{ pop pop exch pop }
					{
					/CIDInit /ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch /WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry (Adobe) def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-) search
									{
									pop pop
									(-) search
										{
										dup length string copy
										exch pop exch pop
										}
										{ pop (Identity)}
									ifelse
									}
									{ pop  (Identity)  }
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000> <FFFF>
							endcodespacerange
							1 begincidrange
							<0000> <FFFF> 0
							endcidrange
							endcmap
							CMapName currentdict /CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get /CIDFont findresource
				ct_makeocf
				}
			ifelse
			} bind def
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index /CMap ct_resourcestatus
					{ pop pop }
					{
					/CIDInit /ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry (Adobe) def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-) search
							{
							pop pop
							(-) search
								{ dup length string copy exch pop exch pop }
								{ pop (Identity) }
							ifelse
							}
							{ pop (Identity) }
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000> <FFFF>
					endcodespacerange
					1 begincidrange
					<0000> <FFFF> 0
					endcidrange
					endcmap
					CMapName currentdict /CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get /CIDFont findresource
				ct_makeocf
				}
			ifelse
			} bind def
		currentdict readonly pop
		end
	end
%%EndResource
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict /ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
  version
  cvi
  2015
  ge
} bind def
/AllocGlyphStorage
{
  Is2015?
  {	
		pop
  } 
  { 
		{string} forall
  } ifelse
} bind def
/Type42DictBegin
{
	25 dict begin
  /FontName exch def
  /CharStrings 256 dict 
	begin
		  /.notdef 0 def
		  currentdict 
	end def
  /Encoding exch def
  /PaintType 0 def
  /FontType 42 def
  /FontMatrix [1 0 0 1 0 0] def
  4 array  astore cvx /FontBBox exch def
  /sfnts
} bind def
/Type42DictEnd  
{
	 currentdict dup /FontName get exch definefont end
	ct_T42Dict exch
	dup /FontName get exch put
} bind def
/RD {string currentfile exch readstring pop} executeonly def
/PrepFor2015
{
	Is2015?
	{		  
		 /GlyphDirectory 
		 16
		 dict def
		 sfnts 0 get
		 dup
		 2 index
		 (glyx)
		 putinterval
		 2 index  
		 (locx)
		 putinterval
		 pop
		 pop
	}
	{
		 pop
		 pop
	} ifelse			
} bind def
/AddT42Char
{
	Is2015?
	{
		/GlyphDirectory get 
		begin
		def
		end
		pop
		pop
	}
	{
		/sfnts get
		4 index
		get
		3 index
	  2 index
		putinterval
		pop
		pop
		pop
		pop
	} ifelse
} bind def
/T0AddT42Mtx2
{
	/CIDFont findresource /Metrics2 get begin def end
}bind def
end
%%EndResource
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright (C) 2000-2003 Adobe Systems, Inc.  All Rights Reserved.
systemdict /setpacking known
{
	currentpacking
	true setpacking
} if
userdict /Adobe_AGM_Image 75 dict dup begin put
/Adobe_AGM_Image_Id /Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf () def
/AGMIMG_ybuf () def
/AGMIMG_kbuf () def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/doc_setup
{ 
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage /colorimage ldf
	}if
	end
	end
}def
/page_setup
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists {/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				 }ifelse
			 }ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode [ Decode 1 get Decode 0 get] def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode [1 1] def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub} currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{ pop 1 } currenttransfer addprocs settransfer
		}def
	}ifelse
	/img /imageormask ldf
	/sepimg /sep_imageormask ldf
	/devnimg /devn_imageormask ldf
	/idximg /indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/page_trailer
{
	end
}def
/doc_trailer
{
}def
/AGMIMG_flushfilters
{
	dup type /arraytype ne
		{1 array astore}if
	aload length
		{
		dup type /filetype eq
			{
			dup status 1 index currentfile ne and
				{dup flushfile closefile}
				{pop}
			ifelse
			}{pop}ifelse
		} repeat
}def
/imageormask_sys
{
	begin
		save mark
		level2{
			currentdict
			Operator /imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask {
					level3 {process_mask_L3 AGMIMG_&image}{masked_image_simulation}ifelse
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator /imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix /DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix /DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict /_Filters known {_Filters AGMIMG_flushfilters} if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint {
		0 get dup type /nametype eq {
			dup /DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			} forall
			not
		} ifelse
	}{
		pop false
	}ifelse
}def
/process_mask_L3
{
	dup begin
	/ImageType 1 def
	end
	4 dict begin
		/DataDict exch def
		/ImageType 3 def
		/InterleaveType 3 def
		/MaskDict 9 dict begin
			/ImageType 1 def
			/Width DataDict dup /MaskWidth known {/MaskWidth}{/Width} ifelse get def
			/Height DataDict dup /MaskHeight known {/MaskHeight}{/Height} ifelse get def
			/ImageMatrix [Width 0 0 Height neg 0 Height] def
			/NComponents 1 def
			/BitsPerComponent 1 def
			/Decode [0 1] def
			/DataSource AGMIMG_maskSource def
		currentdict end def
	currentdict end
}def
/use_mask
{
	dup type /dicttype eq
	{
		dup /Mask known	{
			dup /Mask get {
				level3
				{true}
				{
					dup /MaskWidth known {dup /MaskWidth get 1 index /Width get eq}{true}ifelse exch
					dup /MaskHeight known {dup /MaskHeight get 1 index /Height get eq}{true}ifelse
					3 -1 roll and
				} ifelse
			}
			{false} ifelse
		}
		{false} ifelse
	}
	{false} ifelse
}def
/make_line_source
{
	begin
	MultipleDataSources {
		[
		Decode length 2 div cvi {Width string} repeat
		]
	}{
		Width Decode length 2 div mul cvi string
	}ifelse
	end
}def
/datasource_to_str
{
	exch dup type
	dup /filetype eq {
		pop exch readstring
	}{
		/arraytype eq {
			exec exch copy
		}{
			pop
		}ifelse
	}ifelse
	pop
}def
/masked_image_simulation
{
	3 dict begin
	dup make_line_source /line_source xdf
	/mask_source AGMIMG_maskSource /LZWDecode filter def
	dup /Width get 8 div ceiling cvi string /mask_str xdf
	begin
	gsave
	0 1 translate 1 -1 Height div scale
	1 1 Height {
		pop
		gsave
		MultipleDataSources {
			0 1 DataSource length 1 sub {
				dup DataSource exch get
				exch line_source exch get
				datasource_to_str
			} for
		}{
			DataSource line_source datasource_to_str
		} ifelse
		<<
			/PatternType 1
			/PaintProc [
				/pop cvx
				<<
					/ImageType 1
					/Width Width
					/Height 1
					/ImageMatrix Width 1.0 sub 1 matrix scale 0.5 0 matrix translate matrix concatmatrix
					/MultipleDataSources MultipleDataSources
					/DataSource line_source
					/BitsPerComponent BitsPerComponent
					/Decode Decode
				>>
				/image cvx
			] cvx
			/BBox [0 0 Width 1]
			/XStep Width
			/YStep 1
			/PaintType 1
			/TilingType 2
		>>
		matrix makepattern set_pattern
		<<
			/ImageType 1
			/Width Width
			/Height 1
			/ImageMatrix Width 1 matrix scale
			/MultipleDataSources false
			/DataSource mask_source mask_str readstring pop
			/BitsPerComponent 1
			/Decode [0 1]
		>>
		imagemask
		grestore
		0 1 translate
	} for
	grestore
	end
	end
}def
/imageormask
{
	begin
		SkipImageProc {
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator /imagemask eq DeviceN_PS2 not and {
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get /DeviceGray eq and{
						[/Separation /Black /DeviceGray {}] setcolorspace
						/Decode [ Decode 1 get Decode 0 get ] def
					}if
					use_mask {
						level3 {process_mask_L3 image}{masked_image_simulation}ifelse
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not {
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file {
									Names {
										dup (None) ne {
											[/Separation 3 -1 roll /DeviceGray {1 exch sub}] setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq {true setoverprint} if
											/names_index names_index 1 add def
										}{
											pop
										} ifelse
									} forall
									close_image_file
								} if
								grestore
								end
							}{
								Operator /imagemask eq {
									imagemask
								}{
									image
								} ifelse
							} ifelse
						}{
							Operator /imagemask eq {
								imagemask
							}{
								image
							} ifelse
						} ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator /imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix /DataSource load
					/Adobe_AGM_OnHost_Seps where {
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator /colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource [
											DataSource 0 get /exec cvx
											DataSource 1 get /exec cvx
											DataSource 2 get /exec cvx
											DataSource 3 get /exec cvx
											/AGMCORE_get_ink_data cvx
										] cvx def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0 () /SubFileDecode filter def
									}ifelse
									/Decode [ Decode 0 get Decode 1 get ] def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator /image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
  			 							1 AGMCORE_&setgray
  			 							currentdict imageormask_sys
  			 						}{
  			 							currentdict ignoreimagedata
  			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator /image eq{
							AGMCORE_host_sep{
								/DoImage true def
								HostSepColorImage{
									invert_image_samples
								}{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}ifelse
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys} if
							}{
								use_mask {
									level3 {process_mask_L3 image}{masked_image_simulation}ifelse
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict /_Filters known {_Filters AGMIMG_flushfilters} if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	SkipImageProc {
		currentdict consumeimagedata
	}
	{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get /DeviceCMYK eq and
		currentdict/Components known and 
		Name () ne and 
		Name (All) ne and 
		Operator /image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load /exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			} /exec cvx
			] cvx bind
			MappedCSA 0 get /DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
					AGMCORE_avoid_L2_sep_space not currentcolorspace 0 get /Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{ 
					currentdict
					Operator /imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name (All) ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator /imagemask eq{
 											/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									[ /Separation Name [/DeviceGray]
	 									{ 
	 										sep_colorspace_proc AGMCORE_get_ink_data
											1 exch sub
	 									} bind
										] AGMCORE_&setcolorspace
										/sep_tint AGMCORE_gget AGMCORE_&setcolor
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator /imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name (All) eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					currentcolorspace 0 get /Separation ne{
						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentoverprint 
					MappedCSA 0 get /DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					Name inRip_spot_has_ink not and 
					Name (All) ne and {
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict /_Filters known {_Filters AGMIMG_flushfilters} if
	end
	end
}def
/decode_image_sample
{
	4 1 roll exch dup 5 1 roll
	sub 2 4 -1 roll exp 1 sub div mul add
} bdf
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
} bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub {
			dup currentdict /dataSource get /exch cvx /get cvx /exec cvx
			/exch cvx names_index /ne cvx [ /pop cvx ] cvx /if cvx
		} for
	] cvx bind
	end
} bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources {origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0 () /SubFileDecode filter
				BitsPerComponent 8 idiv string /readstring cvx /pop cvx /putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0 () /SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv {DataSource /read cvx /not cvx{0}/if cvx /mul cvx}repeat /mul cvx /add cvx
			}for
		/convProc load /exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2 /add cvx /index cvx
			3 1 /roll cvx /exch cvx 255 /mul cvx /cvi cvx /put cvx
			}for
	]bind cvx 0 () /SubFileDecode filter
	end
} bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs [ 3 -1 roll begin
		currentdict /MultipleDataSources known {MultipleDataSources {DataSource length}{1}ifelse}{1} ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt {1 add 2 div cvi}{exit}ifelse
			} loop
			string
		} repeat
		end ] def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	SkipImageProc {
		currentdict consumeimagedata
	}
	{
		save mark 
		AGMCORE_producing_seps not {
			level3 not {
				Operator /imagemask ne {
					/DataSource [ [
						DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse
						colorSpaceElemCnt /devicen_colorspace_dict AGMCORE_gget /TintTransform get 
						devn_alt_datasource 1 /string cvx /readstring cvx /pop cvx] cvx colorSpaceElemCnt 1 sub{dup}repeat] def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt [ exch {0 1} repeat ] def
				} if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process {
					CSA get_csa_by_name 0 get /DeviceCMYK eq {
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse
							4 /devicen_colorspace_dict AGMCORE_gget /TintTransform get 
							devn_alt_datasource
						filter_cmyk 0 () /SubFileDecode filter def
						/MultipleDataSources false def
						/Decode [1 0] def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate {
							/DataSource
								DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse
								CSA get_csa_by_name 0 get /DeviceRGB eq{3}{1}ifelse /devicen_colorspace_dict AGMCORE_gget /TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt [ exch {0 1} repeat ] def
				 			currentdict imageormask_sys
				 		}
						{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						} ifelse
 					} ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget /names_index known {
	 					Operator/imagemask ne{
	 						MultipleDataSources {
		 						/DataSource [ DataSource devn_sep_datasource /exec cvx ] cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource /DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						} ifelse
							invert_image_samples
	 					} if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict /_Filters known {_Filters AGMIMG_flushfilters} if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{ 			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN [
				AGMIMG_c 0 ne {/Cyan} if
				AGMIMG_m 0 ne {/Magenta} if
				AGMIMG_y 0 ne {/Yellow} if
				AGMIMG_k 0 ne {/Black} if
				] /DeviceCMYK {}] setcolorspace
				AGMIMG_c 0 ne {AGMIMG_c} if
				AGMIMG_m 0 ne {AGMIMG_m} if
				AGMIMG_y 0 ne {AGMIMG_y} if
				AGMIMG_k 0 ne {AGMIMG_k} if
				setcolor			
			}{	
				/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def
				[/Indexed 				
					[
						/DeviceN [
							AGMIMG_c 0 ne {/Cyan} if
							AGMIMG_m 0 ne {/Magenta} if
							AGMIMG_y 0 ne {/Yellow} if
							AGMIMG_k 0 ne {/Black} if
						] 
						/DeviceCMYK {
							AGMIMG_k 0 eq {0} if
							AGMIMG_y 0 eq {0 exch} if
							AGMIMG_m 0 eq {0 3 1 roll} if
							AGMIMG_c 0 eq {0 4 1 roll} if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				] setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation /Black /DeviceGray {}] setcolorspace
			gsave
			/Black
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 1 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Yellow /DeviceGray {}] setcolorspace
			gsave
			/Yellow
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 2 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Magenta /DeviceGray {}] setcolorspace
			gsave
			/Magenta
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 3 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Cyan /DeviceGray {}] setcolorspace
			gsave
			/Cyan 
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		} if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
} def
/indexed_imageormask
{
	begin
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup /CSA known {
					/CSA get get_csa_by_name
				}{
					/Names get
				} ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN {
					/devicen_colorspace_dict AGMCORE_gget /names_index known {
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					} ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator /imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN {
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget begin
					CSA get_csa_by_name 0 get /DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and {
						[/Indexed [/DeviceN [/Cyan /Magenta /Yellow /Black] /DeviceCMYK {}] HiVal Lookup]
						setcolorspace
					} if
					end
				} ifelse
				imageormask
				Indexed_DeviceN {
					end
				} if
			}{ 
				Operator /imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict /_Filters known {_Filters AGMIMG_flushfilters} if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not {
			currentcolorspace 
			dup 1 /DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		} if
		currentdict 
		Operator /imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask {
				level3 {process_mask_L3 AGMIMG_&image}{masked_image_simulation}ifelse
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
  /OPIimage
  {
  	dup type /dicttype ne{
  		10 dict begin
  			/DataSource xdf
  			/ImageMatrix xdf
  			/BitsPerComponent xdf
  			/Height xdf
  			/Width xdf
  			/ImageType 1 def
  			/Decode [0 1 def]
  			currentdict
  		end
  	}if
  	dup begin
  		/NComponents 1 cdndf
  		/MultipleDataSources false cdndf
  		/SkipImageProc {false} cdndf
  		/HostSepColorImage false cdndf
  		/Decode [
  				0 
  				currentcolorspace 0 get /Indexed eq{
  					2 BitsPerComponent exp 1 sub
  				}{
  					1
  				}ifelse
  		] cdndf
  		/Operator /image cdndf
  	end
  	/sep_colorspace_dict AGMCORE_gget null eq{
  		imageormask
  	}{
  		gsave
  		dup begin invert_image_samples end
  		sep_imageormask
  		grestore
  	}ifelse
  }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter /WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0 (%EndMask) /SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not {exit} if
	}loop
	WriteFilter closefile
	end
}def
/cachemask_level3
{
	currentfile
	<<
		/Filter [ /SubFileDecode /ASCII85Decode /RunLengthDecode ]
		/DecodeParms [ << /EODCount 0 /EODString (%EndMask) >> null null ]
		/Intent 1
	>>
	/ReusableStreamDecode filter
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type /dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode [/customcolor_tint AGMCORE_gget 0] def
				/Operator /image def
				/HostSepColorImage false def
				/SkipImageProc {false} def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA [ /DeviceCMYK ] 
			/TintMethod /Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components [ AGMIMG_colorAry aload pop pop ] 
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage /customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			AGMIMG_&customcolorimage
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt /AGMIMG_xSign? exch def /AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign? {floor 0.1 sub}{ceiling 0.1 add} ifelse exch
		AGMIMG_xSign? {floor 0.1 sub}{ceiling 0.1 add} ifelse exch
		itransform /AGMIMG_llY exch def /AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign? {ceiling 0.1 add}{floor 0.1 sub} ifelse exch
		AGMIMG_xSign? {ceiling 0.1 add}{floor 0.1 sub} ifelse exch
		itransform /AGMIMG_urY exch def /AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub  AGMIMG_llX AGMIMG_llY] concat
	}{
	}ifelse
	end
} def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					} if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf} true 4 colorimage	
		end
	} def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				} currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get /DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub} currenttransfer addprocs settransfer
						currentdict imageormask
					}{ 
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub} exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub} exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub} exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub} exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get /DeviceGray eq {
						{255 mul round cvi ColorLookup exch get 0 get} currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get /DeviceCMYK eq {
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub} exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{ 
							currentcolortransfer
							{pop 1} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get} exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{ 
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div} currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get /DeviceGray eq {
					{HiVal mul round cvi Lookup exch get HiVal div} currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get /DeviceCMYK eq {
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{ 
						currentcolortransfer
						{pop 1} exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div} exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div} exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div} exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict /setpacking known
{
	setpacking
} if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/doc_setup get exec
Adobe_CoolType_Core/doc_setup get exec
Adobe_AGM_Image/doc_setup get exec
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: (Page 1) 1
%%EndPageComments
%%BeginPageSetup
/currentdistillerparams where
{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse
{ userdict /AI11_PDFMark5 /cleartomark load put
userdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}
{ userdict /AI11_PDFMark5 /pdfmark load put
userdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse
[/NamespacePush AI11_PDFMark5
[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5
[{ai_metadata_stream_123}
currentfile 0 (%  &&end XMP packet marker&&)
/SubFileDecode filter AI11_ReadMetadata_PDFMark5
<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="3.1.1-111">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">genesis.dvi</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/"
            xmlns:xapGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xap:CreatorTool>Adobe Illustrator CS2</xap:CreatorTool>
         <xap:CreateDate>2006-11-23T17:50:23+05:30</xap:CreateDate>
         <xap:ModifyDate>2006-11-23T17:50:23+05:30</xap:ModifyDate>
         <xap:MetadataDate>2006-11-23T17:50:23+05:30</xap:MetadataDate>
         <xap:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xapGImg:width>256</xapGImg:width>
                  <xapGImg:height>184</xapGImg:height>
                  <xapGImg:format>JPEG</xapGImg:format>
                  <xapGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAuAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q49PD3xV4z5X8hf8A&#xA;OQGn6dqWn6j5vsZre602WG0LG6upYb92VRKlxKI7lVMQJ5GVuDt8MfEAYqmXl3y/+aHlT/Eut6xq&#xA;sOp2cWmvLpGntdXl2yzxQhljka4MacIzGUEigPLyLSGtAqrPIrXzeIwJdT095P2mSwmUHfsDeN+v&#xA;FV/1bzV/1cbH/pBm/wCyvFXfVvNX/Vxsf+kGb/srxVRWLzmbyWNruwFsscbRT/U5SWdmcOnH63Uc&#xA;QqGvfl7YqrfVvNX/AFcbH/pBm/7K8Vd9W81f9XGx/wCkGb/srxVRu4vOccStb3dhNIZIlZDZyrRG&#xA;kVZHqbv9hCWp3pTFVb6t5q/6uNj/ANIM3/ZXirvq3mr/AKuNj/0gzf8AZXirvq3mr/q42P8A0gzf&#xA;9leKqNtF5zf1fXu7CLjIyxf6HK3JB9l9rvavhiqt9W81f9XGx/6QZv8AsrxV31bzV/1cbH/pBm/7&#xA;K8VUZ4vOay26xXdhJHJIVuH+pyj009N2D0N38Xxqq0HjXtiqt9W81f8AVxsf+kGb/srxV31bzV/1&#xA;cbH/AKQZv+yvFXfVvNX/AFcbH/pBm/7K8VUbSLzlJbI9zeWEExrzi+pytShNNxd06b4q1YnzTd2U&#xA;F0L+xQTxrIF+pytQMKj4hd0OVYMnHAS/nC2jTZfExxn/ADhfzV/q3mr/AKuNj/0gzf8AZXlreotF&#xA;5zF5FGt3YG2aORpZ/qcoKurIETj9bqeQZzXtx98VVvq3mr/q42P/AEgzf9leKu+reav+rjY/9IM3&#xA;/ZXiqXeYdR8xaLo9zqM+paeqwr8HqWUyRmRvhjV5PrfGNWcgF22HfIzmIizyb9PpsmafBjHFLu67&#xA;d3f7uaNth5lubaK5i1Gy9KZFkj56fcI3FxUVR7pWU0PQiowg2La8kDCRieYNd/2jZU+reav+rjY/&#xA;9IM3/ZXhYO+reav+rjY/9IM3/ZXiqjo13r41rUNO1WW2uI4Le2uba4tYHt/96JLhHjdHnualfQU8&#xA;gRXl02xVO8VdirsVSrzZ/wAorrP/ADA3P/JlsVTXFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FULqs/oaZdzd44XYfMKad17+4yjVT4cUpd0S42sycGGcu6J+74feFa2h9G3ihrX00VK7/sin&#xA;fLMcOGIHcG3FDggI9wpUybY7FXYqpXRuBbSm24m4CkxBwSpYDYGlDTIZeLhPD9XS2vMZ8B4K4q2v&#xA;lbEtS846RJpt3Ya7ZTNVES+t41AULcrzCAmRHqqmjHbfpTNHPtvHGJGWMuIVYA/nb1ub2HPlu6LF&#xA;7VR0p4pxlHLj4SaA2MvUB6jvQ2lYG/To35bjS5k8yLdXFxrVtdzmRdNukQpFE4ZfqyLJLIhX4dw3&#xA;DwIrXMvS6qOXxK4pV0NfIb18683oY+0WPUiP5fGceTTxomPCJTlv6r2qW38RsdaKsfKPk+tP8FWh&#xA;Hj9U06nUj+f2rltR/wBRP+w/4pv/ANEXaH87Uf8AKwf9VEdoug6BYXnr2HluDSpyhU3UUFpE3E8S&#xA;ULQMz7n6NvlluEC9sfB5+n9BP4HuYT7X1eoHBlOUx5+uYkL93HLffu7/ACsRbf8AKVaj/wAwNj/y&#xA;eu8ymtNcVcenj7Yq88tfz38gvFqi3k0mmalpEE91c6VdmATtFby+hWN4pZbdjJL8Ma+ryaoNOJBK&#xA;qkn5reW/NOn+Z9Gso57bUNO026kuobkwArwi4yqVillYem8gUsQEY14M4UkKvQ7W7tbuBbi0mjuL&#xA;d68JomDo1CQaMpINCKYqq4q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FUDrFWto4R1nnhTv9&#xA;n1Az9A37CnMXV7xEf50oj7d/scLXbwEf50oj/ZAn7AUdmU5rsVdirsVdirTIjFSyglDyQkVINCKj&#xA;w2JGAxB+CDEGr6LUggSR5UjVZJaeo4ADNx6ciOtMAhEEkDc82MccQSQBZ5+fvX5Jm7FUk029s7rz&#xA;TqptZ45xFaWUUpidX4Os13VG4k0YeBxVO8VdiqVReVPK0MkksWjWMcs1sbGV0toVZ7U9bdiFqYj/&#xA;ACH4fbFUt1jy15c0ny3rs2laVZ6fNNpssU0lrbxQs8cNuyRIxjVSVjUUUHoOmKsnxV2KuxV2KuxV&#xA;2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVAXv7zUtPh6hTLcEU/32nDuD3mHcZi5t8sB75fIV/vnC1G+&#xA;bHH+tL5Cv995I/MpzXYq7FXYq7FXYq7FXYq7FUqtv+Uq1H/mBsf+T13iqa4q7FXYqlXmz/lFdZ/5&#xA;gbn/AJMtiqa4q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqgI6Sa5O3a3t40HT7UrMzDr4&#xA;IvbMSO+c/wBGIHzJ/UHCh6tTI/zYAf6Ykn7gj8y3NdirsVdirsVdirsVdirsVSq2/wCUq1H/AJgb&#xA;H/k9d4qmuKuIJBAND2OKvH/L/kX8+LHTb3TbvzZZy202lTQQSzPcXlyupyy1Nx9YZLaWNShYJxYi&#xA;LaiPx5Mqr6R5Q/MfRrTzXdeYtZjvdKn0mZLC0FzeXkkbiAfC7XPBOMPBlDqoeXkWkNaBVXqlqt0s&#xA;CrdyRy3ArzkiQxIdzSiM8pG3+UcVVcVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdiqA0pvUa8&#xA;uK1Ety6qa1FIQIaDdh1jPh8q5i6U3xS75H7PT+hwtGeIzn3zP+x9Pee7y91o/MpzXYq7FXYq7FXY&#xA;q7FXYq7FUk01LxfNOq/WpY5SbSyMXpRtHxT1ruityeTk3+UKfLFU7xV2KuxVKvNn/KK6z/zA3P8A&#xA;yZbFU1xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KrJ5VhgkmYVWNS5A60UVyM5cMSe5hkmI&#xA;RMj0FofSIni0u1STeX01aU7/AG2HJ+oB+0T1ynSQMcUQedb+/q0aKBjhiDzrf3nc/ai8yHKdirsV&#xA;dirsVdirsVdirsVSq2/5SrUf+YGx/wCT13iqa4q7FWL6P+Z/kHWNJm1XTtZgntILWS/mUh0nW0hJ&#xA;Dz/V3VZ/TBFA3ChOwxVB3vnzyr5g8v8AmC10q8aae2065edJIJ4ONIKutZo4xzj9RPUQfEhYBwCc&#xA;VZfa3drdwLcWk0dxbvXhNEwdGoSDRlJBoRTFVXFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FUB&#xA;rYL6e1uASbpktyKV+GVgr12YU4E9RmLrN8fD/OqPzO/f0twu0BeIw/nkR+EjR6HpaPzKc12KuxV2&#xA;KuxV2KuxV2KuxV2KpJpt7Z3XmnVTazxziK0sopTE6vwdZruqNxJow8Diqd4q7FWD2/5J/lfDLcTf&#xA;oJJ5bq0OnzyXM1xcs1uXEgWs8khDKyrwcfEtBxIAGKrbj8uPJflvS/Mmr6NpottTv9Mmgu7tpZpp&#xA;JEjhNKtM8m5I5O3V2+JqnfFWdYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FUBdUm1eyg6iB&#xA;ZLphtsaekn3+o33ZiZfVmhH+bcv96PvPycHN6s8I/wA25f70f7o/JH5luc7FXYq7FXYq7FXYq7FX&#xA;Yq7FUqtv+Uq1H/mBsf8Ak9d4qmuKuxV2KpV5s/5RXWf+YG5/5Mtiqa4q7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FUBYH1r6+ua1UOtshBrtCKt3I/vHYdAdsxcB4pzl58P+l/aS4WmPFkyT8xEf&#xA;5vx/nE9yPzKc12KuxV2KuxV2KuxV2KuxV2KpVbf8pVqP/MDY/wDJ67xViWtWWueYfzAtLd18waXp&#xA;mgzpLDqOk3cVtp11zSOdotQhuFjlnUNHwH1cSpRyCynkFVehGtNuvbFXkumaj/zkeI9Ys9S0jSmc&#xA;WV7JpmpQ3KL/AKa104to4wQ1US3IMYlhXlQeo4JairekP+bxtPNaeboiuirpMx02aaSxMjSGAUDR&#xA;2agrIvx+uxcoWI9IBRVlXqlr9a9Bfrfp/WN+fpV4dTSnLfpiqrirsVdirsVdirsVdirsVdirsVdi&#xA;rsVdirsVU7q4jtraW4kNI4UZ3NQNlFT1oMhkyCETI8gLa82UY4GZ5RF/JQ0qCSHToEl/vivOatf7&#xA;x/ifqW/aJ75XpYGOMA8+vvO5atHjMMURL6qs+87nv6ovL3JdirsVdirsVdirsVdirsVdiqSab9c/&#xA;xTqv1r06/VLL0vS5fY9a7py5ftfLFU7xV2KuxVKvNn/KK6z/AMwNz/yZbFU1xV2KuxV2KuxV2Kux&#xA;V2KuxV2KuxV2KuxV2KuxVLNdureOOC3nlWGKeQGeR2CKsMXxvyYkUBoE/wBlmHq5A8MP5x39w3P6&#xA;vi4mphLKYYYgkzlyH82O55d+0f8AOQreffJCsQdf0+i7MwuYiqnpRmDcV+k5d+Yx/wA4fN3o7G1n&#xA;+pZP9Kf1JpYappmoRerYXcN5F/vyCRJV+9CRlkZiXI24ebT5MRqcZRPmCPvROSaXYq7FXYq7FXYq&#xA;7FXYq7FUqtv+Uq1H/mBsf+T13iqa4q4kAVOwHU4qxjTPzN8ianZXt3Z6xE66dA93fW7rJFdQ28ah&#xA;2le1kVLgJxYFW9OjVFK1GKoK889+VfMPl/zBaaTeNPcW2nXLzI8E8HH9xVlrNHGC8fqJ6iD4kLAO&#xA;ATirMopopoxJE6yRt9l0IYGhpsRiq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FWNz+YNQ1W5lsPLS&#xA;oyRMY7vW5gXtoWGzJCoI+sSr3AIVT9o1+HKDkMjUPn0/a7aGihhiJ6i9944x9R85fzI/aegrdS0n&#xA;ynp0moXF1qJk1iWBhHHc6hSX96BWR4oyoijA5cB6ajocxsOESyykfVw+kX85V9g27nVjtHJkzynC&#xA;sUIDw4iG3cZ7/VKzwg3I7w8gyhVVVCqAqqKADYADNggm0p1Dyl5cv5fXmsY0u/2b2CsFyv8Aqzwl&#xA;JR/wWVSwwO9b/a5uHtLUYxwiZ4f5p9Uf9LKx9iBNv5s0X47aY+YNNXc2s/CO/Rf+Kphwim/1ZAp/&#xA;yzkKnDl6h9v7fxu5InpdRtIeDk7xZgffHcx98bH9FNdG17TNYheSykJkhbhdW0imOeCSleE0TUZG&#xA;+Y37bZbDIJcnC1WjyYCBMbHkRvGQ74nkQmGTcV2KuxV2KuxV2KuxVJ7GeGXzTqfpSLJwsrJX4kGj&#xA;Ca7qDTviqcYq7FWDWn5H/lXbS3cyaBHLLfW8lpdyXEtxcM8Us3rvUzSSHn6vxCQfGD0YYq1c/lv5&#xA;K8t6V5l1bRtNFvqV/pk0F5dtLNNJJHHC1AxmeTdiKuert8TVO+Ks4ihihjEcSLHGv2UQBQKmuwGK&#xA;rsVdirsVdirsVdirsVdirsVdirsVdirFp55/Nc8lnZSPD5biYx31/ExR7xlNGgt3WhEQO0kq9fsr&#xA;3OYxJybD6O/v8h+t3MIR0QE5i9Qd4xPKH9KQ/nfzYnlzl0Cey/VtK0sR2sKxxW6LFa28a0WuyRoq&#xA;r2rQbZPLMY4WBy5Dz6B0Wt1UgJZJHimftkeXzKpp9p9Us4oCeTqCZX2+KRjydjQDdmJOODF4cBHr&#xA;18z1PxLDTYfCxiPM9fMncn4ndEZc3uxV2KpPrXlq31CVb62lbTtZhXjb6nAB6gHX05VPwyxE9Uf6&#xA;KHfKsmIS3G0u9z9Jr5YhwSHHiPOB5e8fzZeY+NjZR0rzFcC9XR9diWz1cgm3dCTbXar1e3dv2h+1&#xA;G3xL7j4sEMpvhltL7D7v1Nmp0MeDxcJ48XX+dDykPukNj5HZPsudY7FXYq7FXYq7FUnsYIYvNOp+&#xA;lGsfOysmfiAKsZrupNO+KpxirsVdiqVebP8AlFdZ/wCYG5/5Mtiqa4q7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FWL6hdT+ZL+fRdPkaLSLVvT1vUIyVMjU3s7dx+1/v5x9kfCPiPw48ich4R9I5n9A/S7nBjj&#xA;pIDNMXllvjien9OQ/wBwOvM+nnJLW1t7W2itraNYbeBRHDEgCqqKKKqgdABl4AAoOpyZJTkZSNyO&#xA;5KCkP1zVkhG9vYUll6EGdxSNe/2FJc+5U5iS/eZQP4Ybn+seQ+A3+MXWy/e5xH+HHuf6x5D4D1fG&#xA;JTHMxz3Yq7FXYq7FUHq2kafq1m1nfRerCSHUglXR13WSN1IZHU7qymoyE4CQot+m1OTDPjgaP2Ed&#xA;xHIg9QUlstWv9Eu4dK8wS+tbzsI9M1tgFWVj9mC5A2Sf+VvsydqN8OVRmYHhl8D+vz+92GXTQ1ET&#xA;lwCpDeePu/pR74945x8xuybMh1DsVdirsVdiqVW3/KVaj/zA2P8Ayeu8VTXFXGtDTr2xV435d1P/&#xA;AJyRMGs2eo6Nb8BYTSaNqN7cWKXf10lRGjfUzLbtxUsyhoVWoCs9PiKqL0h/zeNp5rXzdCRoq6TM&#xA;dNlmksfUeQwCislmlVkX4/XYsULEekoUVZV6patdNArXcccVwa844nMqDc0o7JETt/kjFVXFXYq7&#xA;FXYq7FXYq7FXYq7FXYqxm+1G71+7l0jRZzDYwMY9W1iI7qR9q2tm6Gb+d/8Adf8Ar9MeUjM8MeXU&#xA;/oHn9zt8OCOmiMuYXM7wgf8Adz/o9w/i/q8z+wsLPT7OGysoVgtYFCRRIKAAf57nvl0YiIocnW5s&#xA;08szOZuR5lbqF4tpbGTjzlYhIIgQC8jfZUVIyvPm8ON8zyA7y4Wpz+FC+Z5Ad56B2nWZtbVY3f1J&#xA;mJknl3+ORzVjvXauyjsKDHT4vDjRNnmT3k8/2dw2XS4PDhRNy5k95PP9ncKCJy5yHYq7FXYq7FXY&#xA;qo3tlaX1pLaXcSz2s6lJoXFVZT1BGCUQRR5NmLLLHITgakORY5b3t15XnjsdWuGuNDlYJYatMavA&#xA;xNFt7tz1B6Rynr9lvioWoEjjNS+nof0H9btZ4o6wGeIcOYfVAfxf0oD/AHUenOO1gSnMh0zsVdir&#xA;sVSTTXvG806r9aijiItLIRelI0nJPWu6M3JI+Lf5Ir88VTvFXYq7FUq82f8AKK6z/wAwNz/yZbFU&#xA;1xV2KuxV2KuxV2KuxV2KuxVL9W1/R9JVPr90sUkppBAKvNK38sUSBpJD7KpyE8kY8y5Wm0WXPfBG&#xA;wOZ5Ae8nYfEpQ8XmDzHVJ0l0PQ22eLkBf3K+DFCRbIfAH1D/AJGVVLJz9MftP6vv9znCWDS7xIzZ&#xA;u/8Agj8/rP8Asf6zIbKytLG1itLOFLe1gUJDDGAqqo7ADL4xAFDk6vLllkkZzPFI8yVV3VFLuQqK&#xA;CWYmgAHUk4kgCy1EgCzyS6yD31z+kZVKwIONjGwKniftSspANX6AHoB/lHMTCDll4h+n+EffL4/Y&#xA;B5uBpwc0/FP0j6B98j5npfID+kUyzMdg7FXYq7FXYq7FXYq7FVK6tba7tpbW6iWa3mUxzQyAMrKw&#xA;oVYHqDgIBFFnjyShISiakORY3BPP5Unjsr2RpfLcrCOxvpCWazZjRbe4Y7mInaOQ9Pst2OY4Ph7H&#xA;6Pu8j5dxdtOA1oM4CtQN5RH8f9KP9L+dHr9UeoZTmS6Z2KuxVKrb/lKtR/5gbH/k9d4qmuKuxVjt&#xA;l+Ynke+0+fULPW7W4tra3nvZvSkDyC1tpGilnEQ/eNGHjYBwtG/ZrUYqlt7588reYPL/AJgtdJu2&#xA;uLi2065eaNoLiEikFWX99HGC8fqIJEHxIWAYAnEpiLNJsfOFuaCPS9UkY9vqMyfTWQIv45T447pf&#xA;J2X8mS65MQ/z4/ot3+LP+1Nqn/SN/wA3Y+N5S+SP5N/2zF/pv2O/xWx2TRNUZuy/V1Wv0u6r95x8&#xA;b+jL5L/Jo65cX+m/UHf4nve3l3VGPYcbQVPzNwB95x8U/wA2X2frX+T4f6ti/wBn/wAQ7/EWtHZf&#xA;K2pBj0Ly6aF+kreOfwx8WX80/wCx/Wv5HD/q+P5Zf+qYd+mvM7f3flx1/wCM13brv/zzMu2PiT/m&#xA;/aE/lNMOeYfCEv0076754fZNI0+EfzS6hKx/4BLQg/8ABDHiydw+f7F8LRjnkyH3Yx95yfod6Hnu&#xA;b7V5plmO4S2nuW+hmmtx/wALjWQ9Yj4X+kLx6KP8OWf+dGP+9l97X+GdSuP+Olr99OveG29Kyj+h&#xA;oEE4/wCRuDwiecj937ftX+UMcf7vDAecrmf9keH/AGKN0ry3oelM0lhZxxTybS3JBed/9eZy0j/7&#xA;JsnDFGPIOPqddmzbTkSB05RHuiNh8AmWWOI07qil3IVFBLMTQADqScBIAsoJAFnklg56tIDQrpSG&#xA;tDUG4YHbw/dCnuHr4dcLfOf9qH+y/wCO/wC693PXb6k/7SP9n/xz58d93M0zOdk7FXYq7FXYq7FX&#xA;Yq7FXYq7FVk8EFxBJBPGssEqlJYnAZWVhQqwOxBGAi9iyhMxIlE0QxmCefypPHZXsjS+W5WEdjfS&#xA;Es1mzGi29wx3MRO0ch6fZbscxwfD2P0fd5Hy7i7ecBrQZwFagbyiP4/6Uf6X86PX6o9QynMl0zsV&#xA;Sq2/5SrUf+YGx/5PXeKprirsVYY35N/lk+oahqEmgQS3eqQy299JK0snqJPN9Yk+F3Kq/q/EHUBl&#xA;24kUGKoe6/LfyV5c0nzLquj6aLfUtQ0yaC8unlmnkkjjhagYzPJuxFXPV23ap3xVm1raWtpAtvaQ&#xA;x29uleEMShEWpJNFUACpNcVVcVdirsVdirsVdirsVdirsVQ15qFtacRIS0r/AN3Ag5SOaE/Co37Z&#xA;Tlzxx8+Z5Acz8HHz6mGPn9R5Abk+4IcWd1fOH1CkduDVLJDUGhBDSsPtdPsjbxrlPgyym8m0f5v/&#xA;ABR6+7l320eBPMby7R/mD/fHr7uXfaYgACg2A6DMxz3Yq7FXYq7FXYq7FXYq7FXYq7FXYqsngguI&#xA;JIJ41lglUpLE4DKysKFWB2IIwEXsWUJmJEomiGLxXcnlK4hsb6RpPLdwwi0+/kJZrN2NEt7hz/uo&#xA;9IpD0+y3Y5jiXhGj9HQ93kf0O5liGtiZwFaiO8oj+MdZRH87+dHr9Q6hleZLpEk02ys7XzTqotYI&#xA;4BLaWUsoiRU5u013V24gVY+JxVO8VdirsVSrzZ/yius/8wNz/wAmWxVNcVdirsVdirsVdirsVQ1x&#xA;qmm2+01zEjdlLjkaUrRep6jKJ6nHD6pAfFx8msxQ+qUR8VE6s0gP1S0nuD2Yr6KV37y8D1XsDlf5&#xA;q/ojKXw4R/sq+y2n86Zf3cJy+HCOv86u7oC5rfVriomnS1iNR6dvVpKbj+9cD2OyfTiceWf1ERH9&#xA;Hn/pj+r4qcWfJ9UhCPdHc9f4j8OUfir2lhaWgb0Uo7/bkYlnbcn4narHc5diwQx/SPj1+bfh00MX&#xA;0jc8zzJ955ojLW92KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KqV1a213bS2t1Es1vMpjmhkAZWVhQq&#xA;wPUHAQCKLPHklCQlE1Icixu0uZ/K08Om6hI0ugSssWmajIatbsx4pa3LHt2ikPX7LfFQtREnGaP0&#xA;9D3eR/QXbZccdZE5MYrMN5xH8XfOP++j/nDawDS2/wCUq1H/AJgbH/k9d5kOmTXFXYq7FWBatH52&#xA;l1LzhDqN1FY+VJdOkj0u8uWtkgike2jUSclrMAshmM3rfDThw/awG62QbrZO7fUfN9yJkhi0h57e&#xA;T0bhY7ueQRyAK/B6QAq3Bg1D/MPpxv3/APQ+38d7if4R/Q+3y/b9i/1PPtP959Kr/wAZ7j3/AOKv&#xA;l/mdjWfvh8j+v3Lw6jvh/pT5/wBL3fasL/mHz2h0kJXp6tzWnI9/SpXjt067+2PDm/nR/wBKf+L/&#xA;AB9ieDUX9cK/qH/i+7y8/JJn8y6/Ak+o3WsaDHpcUFtK8hvwkUazuVjmaRoCAs5+FCTQ0+HfEY8v&#xA;WY/0v7UDFm6zH+l93mfP5+SbRJ52ljWQSWrI6go8V2vEgg0YE2L7b1weBk65JfAR/UUDTZeuWXwE&#xA;P0xK42fmpjWSKJ6mtBqUyeO37uzT+bE6W+cp/OvupJ0d85zP+dX+5pBarBqdpapNPb6baqJ4B9Yv&#xA;dTnkU1mSsdZ7YjlKF4L3qdt8Ro8fUX7yT95KjQYeo4v6xlL/AHRPcjNF1G8vLGK+0Sz0e4sJgRDd&#xA;WV+zwuEPA8XitCp4leOx7Zdjwwh9IA9wb8eDHj+iIj7hSP8ArPmr/q3WP/SdN/2SZY2qV3qmv2dt&#xA;LdXdpptvawKXmnl1CRI0VdyzM1oAAPE4qk8PnWWE3IutQ0Fyl8bGh1YIYrhqlbNv9G/vvgb4D8Xt&#xA;iqe/WfNX/Vusf+k6b/skxV31nzV/1brH/pOm/wCyTFUu1fXNcsGglu20nToIvUuboXGotGHt4oyr&#xA;nlJajiscksbM3bYHriqMtdT8wXdrDd2lpptxa3CLLb3EWoSPHJG4DI6OtoVZWU1BHXFVX6z5q/6t&#xA;1j/0nTf9kmKqF5rGuWMInvbfTLWEssYlm1GSNecjBUXk1qBVmIAHc4qlel+cbmW100fXdCvZdUMo&#xA;06aLVRS7ML0kFuEtqSen9luFaHriqd/WfNX/AFbrH/pOm/7JMVd9Z81f9W6x/wCk6b/skxVL7vWt&#xA;etr9PXOk28UUarPay6gysXupkitXJa1BXk6vGg/bY0G4xVMPrPmr/q3WP/SdN/2SYq76z5q/6t1j&#xA;/wBJ03/ZJiqC1bVPMkFq8JTS7C7uUlSzmmv3FJFiaTkqva0f01UuR4A12xVbZ+aby9uxZ2Z0e5vG&#xA;t0vFtodUaSQ20v8AdzhFtS3pvX4X6HFUf9Z81f8AVusf+k6b/skxVQvY9fvrSazvNJ06e1nUxzQy&#xA;XsrKytsQQbTBKIIo8mzFlljkJwPDKO4IY/5PafRdcu7DX9Z04T3CwWGiaat6J7zha+rOySNKlvJL&#xA;II7yPoteHEnryMMcDEVdjo5Gt1EM0hMR4ZH6q+m++PdfUd/LbYTzLHDdirsVSvzP5c0zzL5fvtC1&#xA;NOdjqERimoFLLvVXTmrqHRgGU02YA4q7RPLmmaLNqklgnp/pe9fUrpAFCC4kijjkKhVX7foh2rUl&#xA;ixrviqaYqtkjjljaKVQ8bgq6MAVZSKEEHqDirAn/ACV8qDRbjSLae5tba7ttMtLt41s3eVNHLG1a&#xA;QTW8qM+68mK9EUCgFMVZzZWqWdnBaI7yJbxpEskrGSRgihQXdt2Y03J64qrYqknm7yjpXmnS49P1&#xA;HkqwXMN5bTxrE0kU9u/NHT1klTxVqrupI6HFVTyn5btvLWg2+j291cXsduZGN3eGN7iV5pGleSZ4&#xA;0iV3Z3JZuNWO5qanFU3xVK/M/lzTPMvl++0LU052OoRGKagUsu9VdOauodGAZTTZgDirFb38m9Ev&#xA;LmeefVtRJn1P9LlR9SBSYCRUSKT6t6sccazOE4uGXkWDciWxVn2KpVq3mry5o9/YWGq6jBYXWp8x&#xA;p6XDiITNEyKyIzUUvWZKLWprsDQ4qkt9ofk7z0V1fTtVS4kt7e401NS0qa2n9P1pIJ2/eFJ19SJ7&#xA;dGSv2a1pUg4qoeWPN3kPSW0zyJpt7cPNpkMemWzS2t16Z+qepaqHu/RS15l7ORPtjk6lV32xVm2K&#xA;pL5t8oaP5q0yLT9VQtFBcw3kDqsbOk1u/JSvqpIoqKo226kjvirH9L/KLRNPfQ5Bqeo3Emg3N5d2&#xA;sszW3qSPqEy3FwsskcEcnF5V5EIy1qVaqfDirOsVdirEPM/5WeVfMmqHVNRW4W7L6fKHtpjBSTS5&#xA;pZoHrHxZj/pDo3In4aceLANirL8VdirHPOX5feWfOCWaa5C8qWfrhPSdoXaO6ga3miaWPjKI3V6s&#xA;qsORUcqjbFUD5U/LDRvLOqwalZ317cS2+nR6Skdw0BQ28PpiIuYoYnkdFgVV5sQKtQVZiVWY4q7F&#xA;WH3H5W+XZfNcXmZJbi3v47x78xwmFI2llgtoHBPpGUKy2UZYK45fEGqp44qzDFXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYqkXmTyN5X8y3Wn3etWZup9LMpsnE00XEXChJlYROgkSRF4sr1UioI&#xA;oTirBtG/JHVtF/RH6M83Xlotlfx3upwR/WvRvI4liiSD02vGCAQwhPi5r/kcVVFVZRb/AJc6fDIs&#xA;nrFpm1A31xNxIeSFL+41K3t/t8VEVzdV5haso4nrUKsuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV&#xA;/9k=</xapGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xap:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xapMM:DocumentID>uuid:DDC4C9BDEC7ADB1188C7FE7CDF27E46F</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:DEC4C9BDEC7ADB1188C7FE7CDF27E46F</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:DCC4C9BDEC7ADB1188C7FE7CDF27E46F</stRef:instanceID>
            <stRef:documentID>uuid:DBC4C9BDEC7ADB1188C7FE7CDF27E46F</stRef:documentID>
         </xapMM:DerivedFrom>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>
%  &&end XMP packet marker&&
[{ai_metadata_stream_123}
<</Type /Metadata /Subtype /XML>>
/PUT AI11_PDFMark5
[/Document
1 dict begin /Metadata {ai_metadata_stream_123} def
currentdict end /BDC AI11_PDFMark5
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
Adobe_AGM_Utils begin
Adobe_AGM_Core/page_setup get exec
Adobe_AGM_Core/capture_currentpagedevice get exec
Adobe_CoolType_Core/page_setup get exec
Adobe_AGM_Image/page_setup get exec
%%EndPageSetup
Adobe_AGM_Core/AGMCORE_save save ddf
1 -1 scale 0 -173.455 translate
[1 0 0 1 0 0 ]  concat
% page clip
gsave
newpath
gsave % PSGState
0 0 mo
0 173.455 li
245.081 173.455 li
245.081 0 li
cp
clp
[1 0 0 1 0 0 ] concat
gsave % PSGState
245.081 173.455 mo
0 173.455 li
0 0 li
245.081 0 li
245.081 173.455 li
cp
clp
.4 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
30.3594 157.337 mo
32.5376 157.337 li
240.528 157.337 mo
238.351 157.337 li
false sop
/0 
[/DeviceRGB] /CSA add_res
0 0 0 rgb
@
30.3594 138.083 mo
32.5376 138.083 li
240.528 138.083 mo
238.351 138.083 li
@
30.3594 118.864 mo
32.5376 118.864 li
240.528 118.864 mo
238.351 118.864 li
@
30.3594 99.6099 mo
32.5376 99.6099 li
240.528 99.6099 mo
238.351 99.6099 li
@
30.3594 80.3901 mo
32.5376 80.3901 li
240.528 80.3901 mo
238.351 80.3901 li
@
30.3594 61.1367 mo
32.5376 61.1367 li
240.528 61.1367 mo
238.351 61.1367 li
@
30.3594 41.9175 mo
32.5376 41.9175 li
240.528 41.9175 mo
238.351 41.9175 li
@
30.3594 22.6982 mo
32.5376 22.6982 li
240.528 22.6982 mo
238.351 22.6982 li
@
30.3594 3.44385 mo
32.5376 3.44385 li
240.528 3.44385 mo
238.351 3.44385 li
@
30.3594 157.337 mo
30.3594 155.16 li
30.3594 3.44385 mo
30.3594 5.62158 li
@
56.6304 157.337 mo
56.6304 155.16 li
56.6304 3.44385 mo
56.6304 5.62158 li
@
82.9019 157.337 mo
82.9019 155.16 li
82.9019 3.44385 mo
82.9019 5.62158 li
@
109.173 157.337 mo
109.173 155.16 li
109.173 3.44385 mo
109.173 5.62158 li
@
135.444 157.337 mo
135.444 155.16 li
135.444 3.44385 mo
135.444 5.62158 li
@
161.715 157.337 mo
161.715 155.16 li
161.715 3.44385 mo
161.715 5.62158 li
@
187.987 157.337 mo
187.987 155.16 li
187.987 3.44385 mo
187.987 5.62158 li
@
214.257 157.337 mo
214.257 155.16 li
214.257 3.44385 mo
214.257 5.62158 li
@
240.528 157.337 mo
240.528 155.16 li
240.528 3.44385 mo
240.528 5.62158 li
@
30.3594 157.337 mo
240.528 157.337 li
240.528 3.44385 li
30.3594 3.44385 li
30.3594 157.337 li
@
0 0 0 rgb
%ADOBeginSubsetFont: Helvetica Initial
%ADOt1write: (1.0.24)
13 dict dup begin
/FontType 1 def
/FontName /Helvetica def
/FontInfo 6 dict dup begin
/Notice (Copyright (c) 1985, 1987, 1989, 1990, 1997 Adobe Systems Incorporated.  All Rights Reserved.Helvetica is a trademark of Linotype-Hell AG and/or its subsidiaries.) def
/Weight (Medium) def
/ItalicAngle 0 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 40 /parenleft put
dup 41 /parenright put
dup 45 /hyphen put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 66 /B put
dup 84 /T put
dup 89 /Y put
dup 101 /e put
dup 103 /g put
dup 108 /l put
dup 111 /o put
def
/UniqueID 43142 def
/FontBBox {-166 -225 1000 931} def
end
systemdict begin
dup /Private
13 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-19 0 718 737 523 538 688 703] def
/OtherBlues [270 281 -220 -207] def
/FamilyBlues [-19 0 718 737 523 538 688 703] def
/FamilyOtherBlues [270 281 -220 -207] def
/BlueScale 0.0437917 def
/StdHW [76] def
/StdVW [88] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
23 dict dup begin
/space <1C60D8A8C9B854D00D> |-
/parenleft <1C60D8A8C9B81F2C027D90222AF37AF8158DABD8A6A3309F2136
FACBE1848A44C17EBCB6720936CA51DBF738C2EEE54BA4F168ED7CF54A35C3CA
C2EC5792742EF714EF05> |-
/parenright <1C60D8A8C9B81F2C3A8416F95B41DEC1B2BC8682121EE1FC7A7
6516A86A96EAF9A7B20C852F99192A17B1BC2E1C3BBEEF7820FA171548238E9D
502CFB76D8CAB7DA316A1> |-
/hyphen <1C60D8A8C9B81F2C7AA0A4886749083959B4683A19B1432D49D2312
3C29302> |-
/period <1C60D8A8C9B854D0E112FCA896665672EF12164189457C7632C9> |-
/zero <1C60D8A8C9B7EF326C968E306016D52B972317960D8F5FD9CF1940741
2ACDAB79CA610AF5680AA7B72207450A6242E2E0D68A5786F14263E889E5C8F2
E3B1F3B57C131555AFBBA2F2574AAA6D70E3BCBA1C3BCCEEE066DF7> |-
/one <1C60D8A8C9B7EF322B88E7B3B83FEFDBAEDBDBF34DA8137760E7130B21
E4AD345C85AC723F334BEB61938BD65CFC89B4FB9FF8> |-
/two <1C60D8A8C9B7EF326B521ECF54C8B5A1823FE69FA06387976EF15912CA
2CDA2533C9465BA7A26890CB14E00D5302DA30754A8D882285488F566A848DB1
47F35FB324475F64975761151E92421F0A87A071DBDCE313F43B7ED0EE45382A
201B4EE4186F1FFE753A5DFF15AB1D98FE235181891E842EE4EC730EB3A21CE3
8A847AF33F417CDE> |-
/three <1C60D8A8C9B7EF32628E1261785C20D980324E75073C191110FF1DF4
F419F448F462DDCBF01F49514B54CF7F0EB797563420F11FA9B2A870CA2FAFCA
7BF082E8CA0E2FF35D921F9F1AC34584712B0A0077B0C704E6D603F8AD41559F
54EB34B872207887B41FB66A1203507BC16DAB327994FA639B9001AE05899646
700CF8E1B6168C5B7CF545795406B8E1F23BB3C2F5D73EC7968D39A5B597FC2B
C81D1DC416629EB76E1C99970D381D679CD5A57691EAF8> |-
/four <1C60D8A8C9B7EF322BF511E331CA00D363470942D767E1013D8E7F4F5
9F447A73A07F5975B5A79C571CD13B4D3557C550D5B9A82EC34D373E687DACA8
586AE16B88F81251D9B> |-
/five <1C60D8A8C9B7EF322448D34FC69162D5B3FA33847725A6C54ED91995E
45D690B7D0E476479D9EDB4F61F0B8E7F37F7415ECCEF12BD0BB3A993663B38C
8EEAA49F314551016ECC1F8DE4119690672560B970B6156CCA876B5A96262978
DF14B4FCFDE401A9555> |-
/six <1C60D8A8C9B7EF326DA8A82F3E3A701BDBF87B0445B24BB4A9441F8832
C322D1BC33CF817D969D30356F5A9C7B6A3BC04BCB60307EEA3C8DBDCAEDF63B
B0D16D5E88C603BCDDAF740BE4D413C23FF83ABB568EDD80EC21C6080EFCCE97
BC5B698D120BBDD3ACB1C21306A55CFC0AF870A681C2F910A278AFB09345386F
B78FE3E94B4F156D6934F4> |-
/seven <1C60D8A8C9B7EF326C870E8652BEFCCB487976E1FC9EBCEAD8672FA8
4A76756F796009EC7F1BB519EA4F5B9C83B4C0F2977A2F02FC5E02CF7C> |-
/eight <1C60D8A8C9B7EF3215BE57159D4F4BFA3C872F39ADA92BFE9288487A
97C6EFD98F578BBC2816F32D04509AD26EEA95F04BA1945FA81AF290563239CF
0739378BE51FE126D55A1BC75807D245336424C9214BC46BA6D4CEC05163B30F
75014D6052F2FC7397D286353B5ED17ABCA76ED3D83B8303060D3490C1FF5CCC
7BE6E338C40F50110AC16AF7E8E791FB357412BEC619138DE3107B599DC60AB8
D303142F26A30837419BF59F47881153A58F64FE59AE91D9C7C833E81BE56AAE
FBE2F7B6282D006375F76B8AD9A83CFA32DAD6A43E42C103A582803691A9856C
CFF6D9043F2C28AC> |-
/nine <1C60D8A8C9B7EF3269F2EE00CCC54AA901B58E3342A8ACDDA83E02894
7800007DD8FAB47CB83597A69284A9AD52682034EDE1FD4EE773D7A4C1499B5E
2843E7D4A9122F019423C7E9087E19CD704000BDD77D92B19B782B5E4EC4F94C
9D98FE9DEF57DE87BFD071B41B0BCB95F52B431132FC483CDBB2300794D70> |-
/B <1C60D8A8C9B64EDFD648E8F12844BAB7678042701BB2916C7BC8679C6855
3950BC14D94A3CBC5D4C2559D6E5E36884E4DA6B44D2380C4D784530BF751377
1135D2F850658069D14E045B56A5F39D1BDAE23F4A489678CA02277A9821F209
23F5BCDF40735FDE18D9971D512A39BBB51EBF6C587688335640A545901ACC4D
83FFDB2EEEF63C09F509388ABE57EB4F41444DDDE44783014ADB6D461B62C821
7726AFAEE59A45CC53478F4DF0160F6C1701DE8D61A697D3BCF661DE9EDE774D> |-
/T <1C60D8A8C9B7D8BE16B1D70AB2BD181F58DE40F0E3CD1A1D5C3F8A429EC8
AA52E3367E11FCDA163FA6821185> |-
/Y <1C60D8A8C9B64EDFF4647483CBEF782D0E8F5BD8B6A07FFF5A1B91EC4818
8F848372EF7CF2BD8B08FDFBE28F89A4D57E09E041D229E902063B> |-
/e <1C60D8A8C9B7EF326F03D0F4E599F9BA01540FB0E0E85D7F225CDC294805
3BFC3EBD8940FD214D65182E7E2A6BF280C1D3E71E32DCA4B45882394B8537B4
55EEE6231FF45D6BCFA8256009524D08C8BF5B282ED3F5CE087BE2CCF3F7D8A7
3D66E823FC9A9819C98A55> |-
/g <1C60D8A8C9B7EF326F0C168637D7A49AFFC209EC4BD7378EE8A777DA14ED
0433ABB575BAA4A098791F7EC46D250F5BCBA737E6ADD6E1EA28A72C69A1D253
4789ED43F588B444BB33EF91B59EF2C4FE743D22BB1490B1C3D985CEC86DB4CA
EC82645FBE79A010F5150407B5C45EDC871B2352EC6CDA69E6218B8BDC142A04
2A82C9883A9AD58050E49048D70FE68B76C0D9A131CC220EC7E7E2F97A2B0A63
67D497A8C9EC9D8ECB2B25078AAF1A> |-
/l <1C60D8A8C9B88C084B70B34E18F97D5BE3EC751C999BBCABC0C091C0A8BE
BF64> |-
/o <1C60D8A8C9B7EF3272B02106A74C8947A7F8FA1419E5E472F49BCDB7E37D
B09471BBF80EE42CCA6FD4E21D2814D7572265E2E4A9069CEBA0E56B55BD82CF
9D974E2C43A3987976A98AAD8BA603247E89D1475E7FEE31FC957BAD71> |-
/.notdef <1C60D8A8C9B854D00D> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/BIHLPJ+Helvetica /Helvetica findfont def
/BIHLPJ+Helvetica*1 
[
32{/.notdef}repeat /space 7{/.notdef}repeat /parenleft /parenright 3{/.notdef}repeat /hyphen /period 
/.notdef /zero /one /two /three /four /five /six 
/seven /eight /nine 8{/.notdef}repeat /B 17{/.notdef}repeat /T 4{/.notdef}repeat 
/Y 11{/.notdef}repeat /e /.notdef /g 4{/.notdef}repeat /l 2{/.notdef}repeat 
/o 144{/.notdef}repeat
] BIHLPJ+Helvetica nfnt
BIHLPJ+Helvetica*1  [4.83943 0 0 -4.83943 0 0 ]mfnt sfnt
23.4199 158.952 mov
( 0) sh
13.7368 139.699 mov
-0.000228882 0 101 ( 1e-) wsh
22.0752 139.699 mov
-0.000289917 0 (09) ash
13.7368 120.478 mov
-0.000228882 0 101 ( 2e-) wsh
22.0752 120.478 mov
-0.000289917 0 (09) ash
13.7368 101.225 mov
-0.000228882 0 101 ( 3e-) wsh
22.0752 101.225 mov
-0.000289917 0 (09) ash
13.7368 82.0054 mov
-0.000228882 0 101 ( 4e-) wsh
22.0752 82.0054 mov
-0.000289917 0 (09) ash
13.7368 62.7515 mov
-0.000228882 0 101 ( 5e-) wsh
22.0752 62.7515 mov
-0.000289917 0 (09) ash
13.7368 43.5313 mov
-0.000228882 0 101 ( 6e-) wsh
22.0752 43.5313 mov
-0.000289917 0 (09) ash
13.7368 24.3125 mov
-0.000228882 0 101 ( 7e-) wsh
22.0752 24.3125 mov
-0.000289917 0 (09) ash
13.7368 5.05859 mov
-0.000228882 0 101 ( 8e-) wsh
22.0752 5.05859 mov
-0.000289917 0 (09) ash
26.9961 163.792 mov
( 11) sh
51.2485 163.792 mov
( 11) sh
57.9751 163.792 mov
0.000350952 0 (.5) ash
79.5386 163.792 mov
( 12) sh
103.792 163.792 mov
-0.000228882 0 50 ( 12.) wsh
111.864 163.792 mov
(5) sh
132.081 163.792 mov
-0.000640869 0 49 0.000350952 0 ( 13) awsh
156.333 163.792 mov
-0.000640869 0 49 0.000350952 0 ( 13) awsh
163.06 163.792 mov
0.000350952 0 (.5) ash
184.624 163.792 mov
-0.000640869 0 49 0.000350952 0 ( 14) awsh
208.875 163.792 mov
-0.000640869 0 49 0.000350952 0 ( 14) awsh
215.602 163.792 mov
0.000350952 0 (.5) ash
237.166 163.792 mov
-0.000640869 0 49 0.000350952 0 ( 15) awsh
BIHLPJ+Helvetica*1  [-2.9632e-016 -4.83943 -4.83943 2.9632e-016 0 0 ]mfnt sfnt
5.83936 83.2949 mov
(Y) sh
BIHLPJ+Helvetica*1  [-2.44921e-016 -4 -4 2.44921e-016 0 0 ]mfnt sfnt
7.29151 80.0684 mov
(B) sh
BIHLPJ+Helvetica*1  [4.83943 0 0 -4.83943 0 0 ]mfnt sfnt
126.301 170.567 mov
-0.000350952 0 111 (log) wsh
BIHLPJ+Helvetica*1  [4 0 0 -4 0 0 ]mfnt sfnt
132.757 172.018 mov
-0.000366211 0 (10) ash
BIHLPJ+Helvetica*1  [4.83943 0 0 -4.83943 0 0 ]mfnt sfnt
137.063 170.567 mov
-0.00050354 0 40 0.000350952 0 ( \(T\)) awsh
1 0 0 rgb
BIHLPJ+Helvetica*1  [4.83943 0 0 -4.83943 0 0 ]mfnt sfnt
212.215 9.85498 mov
(Y) sh
BIHLPJ+Helvetica*1  [4 0 0 -4 0 0 ]mfnt sfnt
215.443 11.3066 mov
(B) sh
.864185 lw
220.929 8.04102 mo
234.721 8.04102 li
30.3594 136.114 mo
32.4678 136.079 li
34.6108 136.079 li
36.7197 136.044 li
38.8628 136.009 li
40.9717 136.009 li
43.0801 135.975 li
45.2231 135.94 li
47.332 135.906 li
49.4751 135.872 li
51.584 135.836 li
53.7271 135.767 li
55.8354 135.733 li
57.9438 135.665 li
60.0874 135.594 li
62.1958 135.526 li
64.3394 135.457 li
66.4478 135.387 li
68.5566 135.284 li
70.6992 135.18 li
72.8081 135.076 li
74.9512 134.938 li
77.0601 134.799 li
79.2031 134.662 li
81.312 134.489 li
83.4204 134.281 li
85.5635 134.074 li
87.6714 133.832 li
89.8154 133.555 li
91.9238 133.245 li
94.0327 132.864 li
96.1758 132.45 li
98.2837 131.931 li
100.427 131.342 li
102.536 130.652 li
104.645 129.822 li
106.788 128.82 li
108.896 127.679 li
111.04 126.365 li
113.148 124.844 li
115.291 123.185 li
117.4 121.318 li
119.509 119.314 li
121.651 117.17 li
123.76 114.958 li
125.904 112.677 li
128.011 110.326 li
130.121 108.044 li
132.264 105.763 li
134.373 103.585 li
136.516 101.546 li
138.625 99.6099 li
140.767 97.8813 li
142.876 96.3257 li
144.985 94.9438 li
147.128 93.8032 li
149.237 92.8696 li
151.379 92.1431 li
153.488 91.6245 li
155.597 91.3481 li
157.74 91.2446 li
159.849 91.3481 li
161.992 91.6245 li
164.1 92.1089 li
166.244 92.731 li
168.352 93.5259 li
170.461 94.4243 li
172.604 95.4966 li
174.712 96.6724 li
176.856 97.9507 li
178.964 99.3345 li
181.074 100.82 li
183.216 102.375 li
185.325 104 li
187.468 105.693 li
189.577 107.457 li
191.685 109.254 li
193.828 111.121 li
195.937 113.022 li
198.081 114.958 li
200.189 116.928 li
202.333 118.933 li
204.44 120.973 li
206.549 123.012 li
208.692 125.086 li
210.801 127.16 li
212.945 129.269 li
215.052 131.377 li
217.162 133.486 li
219.304 135.629 li
221.414 137.772 li
223.556 139.95 li
225.665 142.093 li
227.808 144.271 li
229.917 146.414 li
232.025 148.592 li
234.168 150.77 li
236.277 152.982 li
238.42 155.16 li
240.528 157.337 li
@
0 1 0 rgb
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
BIHLPJ+Helvetica dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/q <1C60D8A8C9B7EF3272B02106CF08D5008F2C7B5C8A9E114B257E751D0EE2
E0E889E013C54302409DAD4E6D23B15FB78D5F060BEB9C423829DC7C805B4072
3AE1214611FA3E3BE7E73C9A4AC39A13D58C83078721D53EED13089D735BBC4E
DDCEBC620368A1BF783774342A4B535057A642890CD57B3AEB75C87B92DEA681
35> |-
systemdict /gcheck known {setglobal} if end {end} if
end
BIHLPJ+Helvetica /Encoding get
dup 113 /q put
pop
%ADOEndSubsetFont
/BIHLPJ+Helvetica*1 
[
32{/.notdef}repeat /space 7{/.notdef}repeat /parenleft /parenright 3{/.notdef}repeat /hyphen /period 
/.notdef /zero /one /two /three /four /five /six 
/seven /eight /nine 8{/.notdef}repeat /B 17{/.notdef}repeat /T 4{/.notdef}repeat 
/Y 11{/.notdef}repeat /e /.notdef /g 4{/.notdef}repeat /l 2{/.notdef}repeat 
/o /.notdef /q 142{/.notdef}repeat
] BIHLPJ+Helvetica nfnt
BIHLPJ+Helvetica*1  [4.83943 0 0 -4.83943 0 0 ]mfnt sfnt
205.333 14.0112 mov
(Y) sh
BIHLPJ+Helvetica*1  [4 0 0 -4 0 0 ]mfnt sfnt
208.56 15.4624 mov
-0.000305176 0 101 (B\(eq) wsh
217.008 15.4624 mov
(\)) sh
[1.38269 .691346 ] 0 dsh
220.929 12.8809 mo
234.721 12.8809 li
30.3594 156.992 mo
32.4678 156.958 li
34.6108 156.922 li
36.7197 156.887 li
38.8628 156.819 li
40.9717 156.784 li
43.0801 156.715 li
45.2231 156.681 li
47.332 156.612 li
49.4751 156.542 li
51.584 156.473 li
53.7271 156.37 li
55.8354 156.266 li
57.9438 156.162 li
60.0874 156.059 li
62.1958 155.956 li
64.3394 155.817 li
66.4478 155.643 li
68.5566 155.505 li
70.6992 155.297 li
72.8081 155.125 li
74.9512 154.883 li
77.0601 154.641 li
79.2031 154.399 li
81.312 154.123 li
83.4204 153.777 li
85.5635 153.431 li
87.6714 153.086 li
89.8154 152.636 li
91.9238 152.187 li
94.0327 151.703 li
96.1758 151.15 li
98.2837 150.528 li
100.427 149.872 li
102.536 149.144 li
104.645 148.349 li
106.788 147.486 li
108.896 146.518 li
111.04 145.447 li
113.148 144.306 li
115.291 143.027 li
117.4 141.644 li
119.509 140.088 li
121.651 138.429 li
123.76 136.563 li
125.904 134.557 li
128.011 132.345 li
130.121 129.891 li
132.264 127.229 li
134.373 124.291 li
136.516 121.077 li
138.625 117.516 li
140.767 113.645 li
142.876 109.392 li
144.985 104.726 li
147.128 99.5757 li
149.237 93.9409 li
151.379 87.7534 li
153.488 80.979 li
155.597 73.5464 li
157.74 65.354 li
159.849 56.4004 li
161.992 46.5493 li
164.1 35.7642 li
166.244 23.9072 li
168.352 10.9102 li
169.458 3.44385 li
@
grestore % PSGState
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
% page clip
grestore
grestore % PSGState
Adobe_AGM_Core/AGMCORE_save get restore
%%PageTrailer
[/EMC AI11_PDFMark5
[/NamespacePop AI11_PDFMark5
[
[/CSA [/0 ]]
] del_res
/BIHLPJ+Helvetica*1 ufnt
Adobe_AGM_Image/page_trailer get exec
Adobe_CoolType_Core/page_trailer get exec
Adobe_AGM_Core/page_trailer get exec
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/doc_trailer get exec
Adobe_CoolType_Core/doc_trailer get exec
Adobe_AGM_Core/doc_trailer get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 12.0
%%AI8_CreatorVersion: 12.0.0
%%For: (Your User Name) (Your Organization Name)
%%Title: (4.eps)
%%CreationDate: 11/23/2006 5:50 PM
%AI9_DataStream
%Gb"07B6Pi9dO>$BT!e>(i(,VFU79/bN,>)+g,9daZ]+u!B$Pihgu!R]Us>CdHfj2XH=gZ^<i`$Z.]Q*E>qP[r]iM'*?KhD:(M:"A
%0ULn=!mcUTN"l,(Fg]d\Di^ub;N`U&=>Rqf$rl>V<#1AL*AJjO"nH-%s#TsjpVs,KrbHj;.e^LQi@#Kprb;#A7u__;dKna<]A<HN
%iBk$DqIt>TddN0hDQVan]05Sp2N5s7-A+Undr%1qamWl6/"LRidN<oq`o1`k+b_KA>aTWEXlIN)ZTWsBaB;Ed5EeiJNM&5W1&RN*
%9@*KB:it)+O($64".NFVY83"ZdCB3F.RG<S0D]YEId`68_oB48mleXSL+h:gK5P2S-4&WL0pN(:EX"c$^X]@2@8\\HiamiZ_Ac`,
%/2DTFA-')@<`85Iph]udC&aA)T,)/@0D?u^n3mQ^[M9eCLZ=<<s1k!iQ4$>@V\Gb!]'\HVY;946Pi%gA$V1.r]*il2?a"PjADlN5
%<rZ-6>W.?*m4g/NIWpD(L<_U?1Ve%EnY_@fbpbnQ#4:8Ys-iSKbt':T@:5'd9M4AJ1!HO@/s?aNX8ng9E3R%^4<Z84$=K/"=1a6i
%@9Y2qM(H,7R'Di`kIo?fAH@KO.[u\lANHm0:.q3RM$mt\#8pDhC\T9Xs-0)W*ld5`:W3dEUuIMF?,-^[&=4KC\9a,EU63WRAS<-3
%<Ii'9.lG<UQjZ2l@(#t]>kg*mO5M/`5<qF%,Du7FbP53kWhhh=^NglmniT+tH2=mG+g9AH6kQJV,(:1oX<rg,9b])m[8ESt*^?oi
%$pWfq=iP3^N7IDNr5<?h,$$30n^V(\T+m2cVc(@/Q&6uQf..T;:oVg.BW#R2BoaZ9q@m::TCY1XNk_e:NXJ(V)NIH2/U`A+_G@7c
%K>LD>Fql%iAK2M8i\qhkIUZ4i=gVl_'Rl4Miu_B^j$K[YVmH\2%>T\1=Jo'513JmRk:*8W/h*giPJ0XZ:Bs.s:O>UjPKp4-V,j9S
%=:N<,T@ajK831ef9URm<"0:AteX<;5TeGFCnIr[r!9lP[:SmYbKV)?Ua,$@01?ihQaJD$bR-IitSQAmU3d%ff'_b^h,#?/e*BbDC
%kre>OKhU6%Vi=_SJ$9Cm:gKhU5k6rV3IQir`)!I(f/eqSie>+*T3)='#d:;0>br^'4plqFFEKUEMagurV"8]McpaW@M)r*[qm:he
%pCoAO*pL<u1$\OIpT^.oT/KIaT[2k`dWnH`FCiq3V[0"k<6,SUau]4EGMmV/H?D8IOepM-?0NgJkUVe.Y-01;o(C[:ENROkp.7\#
%H!Npsg0M,0.V.6eI?e@]nq4[l<llgU*(M+8^Zge%d-pgLq?*p61:0UP9n+FFIb0(uT59gBcXo&u=lh$'ViUK-oVYNYht>n!#@9'K
%BT`:`rfkUu]De<!0\VT)kA_"%PKki[Y(!.\EK$Da'JbpdPH@f[;BA$nfmHgM<D$.1C1JjJ%%#p4WIe]W#(;N(.)SSU7T,/'^YR&_
%hrJqG,P@]#/+e%O2aF#'<>XlGeNAjeI@T9GYu3tmJ!8KT+6<eQS]`I&(!N-gPo)f8kk$(d(&T[sAc/Yqf;kjP48#G;f=k=nGut$a
%Bjt5AM39!tPflmd!G]anMFFok9I9XA_)t\*BZKY.HoYPg&gUGjQnKYUbJPiu,-NnU2,u?kF[=M`j64!$TL,W.X0J>ka9[OmN3WU`
%dKDg(=VU)#fMknkrs4M)<gXRD5,"P1nI&]T?[;Rf([+*3Vi'2Y]a+1P[I^1e['M)]).c>b/u+^eZEe<1I,\=.g(hktkur`TBV7I[
%:-qDf4/.]JBJXDX-H\,$9^66R7)S?Q:(jM"D5<orM07h5?d!-P6lSSu]'9]bXfmmW-)VRDJDkYL7>aeA]5h]l&]mTa=9f!#-=$*[
%ejWq6RQ>BU,-T7JA/gn$H\BbPc7d%M=kd`)L._#qXucMMcMZ>k.VVl5_(!#,*jXLuA\T$1ndlW,\l;!IWdGhV;+@'5,ELE>9"8ij
%^/A9-]5)*7JMAV`6bU.h4-`ea4.j!UOtf2M#=]N3g9-uG)/UdI)b)7@N%Zr\E<,bMC*?1O.aoS+L]oR&.XRgoe17PoV\P?o;f!CM
%9fc&nkj?i#&\lCs.B>^WK"mT6-(ZeFZ=r49+r*]'lcM9?n]mK/5nk=nYP"Q!73>mbn6WDp%kT,E2c&.MHo4hL,!u6p8$Sa#\Ojs5
%W;(r7PSZX&TQI/@Ab_`e(kinIRn)ZtQ"#FkBFJIPj3[6;U.QD<m4bNCLb*,oEUj[$!ei?aBUg?</@s8$"$lm^q7M8U1F5JU!_g%=
%-5V*q%#n(fQ+TA2P\)C5](4Ja[RBr%)]@Ve1Y<GM#s(M2*3CSWgZ[l@H+IZ(^;UEn-1I7\FAN"9N=k9KX==]nFO4**'P2MX',EuQ
%aHQJ+"0^`fm1hH."Bqph+aC6]>FqZl"0]F(ObZ)n@q0AMM6!RBA42-tPE?PZ\89.lKr\l0,Rm-Jl]\SPZrn1PrN3jdBeZm9TIRt5
%H)$m.<<;,(5r)GdOB#tX<A72ei4Kj3Z4\0AW_H"p$L5]3YdQ8&[!@`JLk==c"/e$7263o=qMM;1.$-#!(3uI`6m(SLc6?t4/__UJ
%:e=hV*ISAOb/mgc2V,gO3Wl'$KknE$o2u6'd0-YI.`Ok"(,Z$./'s.DS#>aH&+j!_la&-nSYsUcrkm@ZZm/81[Ro4#E-M_Lp4G3'
%YJ7`)3kEnd&k("q]lO%+.ph1WV"LgH3i"caGo25>/?5dK^+7unE-M..Dd8Z?%@6BsO"0I[k@j46Yu.i2'c.?5)9GjM'rk,07ANV:
%!m8W);(-h3go+b6?S\npRge6i,uJGY`Of`)R=l9p<YRoSE]/L#X.(%TS??\T.N&DATWWE1V[5jAlcmn.g?V(^&gs*E1=[l$:<m6i
%*lc@'^U%qb`stm#AKp0u=7mXlVp'B_;,XLq<3qsPh;bch1ZN]&l^GD%qkn1/k'u+NEaGiGj!KZs7nUg[^U*'P=>-j[cp4P*I?8<g
%Di+J5.X@=h+6UYBnPSgN?^J0\>94`uS*DG-=m<Ti33O#8huM(Ncmc)r9i)G=8]mL"Kp:.g;1[8[rcMEL?de87N_)nfr=rdP.dR6V
%;\W+5U/KI54<gi5N`L^"?7\oKMAZqNPFCCKN&G0GV4g"g'UH5&mn7c^E"$:$`.+J(;%dmJkn*&.<.WtCA5H7#<ZP>.;?^?_KX6b`
%=3J8mDRq6G(AhIKEAl6'A57pYDZ=!fWdc2<0&#@-+S=8QkV$7;Io#q$p8HGen$^->R!p,8rbgcq::`P*p;8H-(htlHUNZL9gE1Tb
%['\AZAaOBE1Dk67I(IjQIr>j_?gp2Vg)7V"^>?Hgs.fneiV904))Z`BoYkTUf^GZo-_2l(]A%cRVbbHD<liXrYlNK&Ih+X0+(Ga*
%WN(E@O.$_1*N.Z*<b(caDL[dUj%d)6:610i<r8pPr.N'Z(81<]IQQBNO1Xf,W"Wc!Er)rhBb+XjUMtN9BY4C-6m;Li)%PE7f0Aan
%9K.b*cZZMF(l&$!`GA_[T76/<r[;Un>Aro4:9W-!f-N$Yq!YjR]"S)&rUFOidI*idA5a4LCo+lbYLkEl.niied%--Rc,h@srhhuL
%!7Eq,@=%i+Cq$fjNRu:^Sc5(2fdraBAZ]%$J(!%d]@H.h@:c834oGiRcrX`L3pDeKA[D1$HdWbJ48@u/U\dMh.#"EM.s'r;=V&kY
%SjLX?Ai!6QS(C-%`rW"-j`FAa6Fois:RB2Hcq<!\H<GT5T@V_o+SH7ep9csCnONGC!/+rZkR/d1KbM?3-aZYsg3[1jm^P(:r^i`@
%]!s)ie,`k&Q`gfN?YOH7d>+&1r?88.p@&GjCpQ2q2^mU=3hD)bm03aMcl-U0F>V_9<tu`mqKeX>hUZ%gVV9aN*EoL2CNU%.3a/(4
%TVG!Xp1a36g8D[DKt^GRH`tuq]7U8$)&)l3KL2,pqD6OUq*Q6b#r;LY`M(%!bB13SF7=Q;RXDMaiF>t\b#U]72!*S0+(Hd@iFa`s
%_&1GdOOhV(H4@G1IX*"Z/HPlLgBm%IrFYrtcTmHk+AeX1lm^k=9ZZCA5b;PZ:V.9b=<7)_KDjY25P/$A]H'1QN'G150!L41/?G)`
%Y@787Ph%pGX+dNBB+XZKno>!D!P3L'r7ufB_u!&Wrn#,b1N!G3l4c2;LV8lmmH/@Cq?UI%qd$>)8d4==f&Q[I9],Zt!7<8X!J#t*
%hStH_&8+6HK9+<Y;u7'N2*`e_"p#)E&[Ca,dJQN;Aq/ju!='58f'0U#'sd=Obk8^T(hXStph1)?(i*.\21tP9e:-]o^C50V9$=o_
%gYMk%Xd<fL^q@QDNStukErLGDqq]Q]9?2m_7/K&:;jD61B]os%$GYKfG9AC&2L:?kQor`A6TEP/"1XnU>EL\SfaRFG,A5fanE$&n
%I>4Fqj$-fXi(5$aqZ$3/[r;g=f'<FRoProl*DXI])Npp[B>Q%kTa+OOiS+R&B]&gI[fcEk2jF7S(;`T#LF4G($Gj&i>4]0+%FYo,
%LAhOX@Ckt>Vlk\5hR>EmREGlA.E(P-q]tt2M.'OYb[;!Ja@KG7s'U,/b@o`0i@\aA-'S*(jUKS`Sq?W*%@!Xd3Oa,e5>=(>pMLUI
%!;\EHJj2ht2S]A[%1If[2Q`OV7T#==\,V(OY_H5N^;@X:%T@.g3r5sGUF$u8#=bc<a=^SL5,:jaS,307EbN[#l39Q=Zl8e?fX/t=
%[/cNnIdOclH5a[c["&I\pYfNp^p.=M0!T61og\CudWc"gfH27%9]?FB"0\6()dRh]%\HG7K?6*#hEVaUo03BP@6N=CH&9e5?92hR
%q"&id0m&B]^X;7;ODdMWhT"HG+ng]MAcoR?CKl3YHUSEsp!rCfL99qq`iU^*TZmOo?!:_<Z?$j(FhkG"(a.RP,Ufc]6Y\[qVj+Rn
%SWjVS[QPQ$a&[EoOET21YTlA4XGSKV#)uYV.GVjZL@^UK?UL,?d-/@Z(cmj6"5].50?.ZU3R;;+_r)s\*pmqa)25Ka(0nUt3s38?
%nr`s*dEq=U7R"!aYjikBdf/.ki;hK.qF:>TW.*N?[4,"Kb:TQ?L490c$S;0UHNQKYHM<p[r8$R3e/GVJ*QI:&56LR5R+0$.17OSI
%I'q"S((eY5HGRn^Mnd*LD)AjA83Zn%o]4oWOoNo*f[O]MIXp*9CqDG,6WI7f_bLm3qiO@\:5f,?go,eRK^ANL0\96^c-gTZ/O46L
%CVA-e/'34lFK'-D3qm!K(3M$#dmG2<rXLn_=J;L>pF(#0aabmap9i<8^OEUq!K[LHF8OjP06Ihd<8/5kYu5l3432#hj?KpLeq"_E
%oCHa-)SYb1Vl/GiZ_1b!p<S4iRZ=tMfDi<J.2gN%IklCgPFTO?n_br]Dt_3o+7&='1!N&Vn$o62s/S]-4q=K9qInnYT)TY<%%GE1
%]P7]MX%'+L_.e;sFB[]8s5EJc+XLaqm([Rgaqu*uU&_6XB2]\>PQ$h7qiC?QrWH>bJrnuuR=FD(rqtN(2b:IY=(M&7`Ra%'@ITZ:
%>VI`%lCd2!ZMgD8\D6A.)pM-e1KIS7R*"h8=8uBi%1b>hf=1&BYcWm/_[0T!]eX56f=.cb?/JC6oi:,.E7;N&Z/0`Xk`#cU)NaMR
%m'OVSh8dO&d&Z.ig_oc>>p#MO'1Lfjp1Fp&MZ.,pXnO[p.c]MMK6efEA.172Yj,n\+Z0$>!FGHQ+1BlTLF!^2+8<h<k9e5#oXfKs
%&ZuTup&b)NqgHsoCN[pkSA6ZlcL6PSfGiU#`ja#%oQc>r$h0UqNs&R8/t1r*6(KDP]@=+/)SP%(Nn%iXW'MQ\.N%-k)Kmf`Z_0=.
%dlQ0[#Oc#l.?(_Sp#"V(<7eE,@:Su^Y8$W/h9i`"J4>:uXX4D!ql87n"m2TNE(feT@K3IY2,K',+26\3?nDjm_bmG]lPY-4[MDH2
%[n6$gD:@2,m/c?6K9SZ$3Pg4arBY5Y=(C=G`bXJ;BIl$fS$(8&1<rnDgDNbJ#,B[`^GdL2'X(-R%PB]*nso#fgOH]E*mM@j`i7@]
%3O4g+[8*c<R!-Jlh#YQ4[qps_5^hZRFW<$bINA+eIW\2>*gM3KRt/$=<s*Y$D#D5^bn4gnH4e-#Po>8teg,q_(9u<OosHaL)CDRC
%ke@&d664YB&)U<8#H@@S"g0qWJt*Eq5(rVj(^s>2jEbtYCDdSEBO:04N@u,6B*HS#8O4ql*LDmE.F,?$Ym6;1%s=hGgRB@dqdKHn
%7sc)SlKd%DF^IsHW,5ee"IsTQ#%aB`atO`Z!%0WiV$Hj1q=(V;%j^)#WZBq);5n;,Ar%^VWqpTX2kG#g3j_n0*;b8Hgh5D=CXaD0
%.N6eNCYb%@$_oVn>O8Z*A(pE_=NJFqE5"h+*+kH#[GMq`cJMsLVEB)WI-^*E8HA9Feei"LaquZNS7@V>]\'En\S2lJNf&4j1%`CI
%<ZE$05lBmW)Xj=Q]r>J18T>X"hR;-VW7I@RP7Lm7f75H546(3D-;'%c#hql"+uRUZld"^F%(hKb!/[@J<!UK*;Z`4ONG_s9dC5k(
%U6F;`[0HS,a(NDr)GJ!*UHeYuT5+<J)@(^a!9K[cUsR&$ja8PY]Pl.=HS%ULKVZl4M!>U=lM@L2>/dAulh7F5C6(FE4UV<r7-t5@
%i2H$7gJfF'XCm^$*jW;.#NqLT6#VTR?a/aG?<-rkOB0bi!C=[?%K6](`hRNTU#No(9:fTUV.%&HJ@;.,.V;t]%kbY%\:!!to<s6`
%TBHZOl"(,UoWf2.h/8^L]B27G`CYb<JpFbI(_,MU7^CcP7sL#u+70KQe/=;#f\XtboN68.fbjcOk]uK%KHO^nJ3*Sq4N`;*'B>16
%A!D(jQJukVJR.MU)U2<e7^KY80J6%*++([F`bcHU\?0gNgfBNX0l4]W>g,/9iq!F:$Bp+\I1W4.>[nm."H7Sh_nEc*XVU?s8AlGS
%,^j"dbL$mXC5KJh'[gA_F9/?O1%u%s(lN@$k:__iqq4ZBNT<K2:@)L`T>L$<b7<!)]@\?8GN@K#DuB]DaRWL(?MqClg3BUhV&Q"?
%).'@,[u8/_c?UdE'9?pordFFO,-NP'm_)m9Yhm24J731GVo?UBa-b1@MQmh'lR^(&G-@BLL5E$C)4%fP(>l-QOo3>)bH&cd=nk^`
%VA&XME6+$Q+re5%AgGJunr^lhqGS[5ns57\YCDf^a[RVrUpofe3#WOKR5!Vi8(3K,]9uG)NXtgnjj?i3[WRdcd0S@ciT!("]!'mp
%<jqVSY5j<:kG=aOL0lr6'K>#?VR?D"<*FX*Ic8`VkmmD]TE?h=8&p@Xe%l?e%[4X*PUogR1u%3Qa7-A(+JedYG*:LW7b73OV:),T
%Q(-RB1uW5X$e'<$1:FeT\fEuR8k2QY\;6<>k[T<*'DK?VQ]'nZ[+<m$@9NrdV^o%5$8lnEIh(;-^'pXJa&a%TA-l)J`MRn:f\daC
%Nj:UF)q:<!YNA'?Tl)HaNRh2-(uag<gu7<?[1[>ZS3K&#9l+fl\$:h6bLcL/)%0CFL/-U]4]<ec-]U`(Wr1/Fo_?[0-`B`#mBu'`
%Fc@(&b*5"/L+D&eQtgbgk<-/;mjkPcfu/.NqR1ZTs2lce:Y42)<0[iQWTAoekmmh1(4!6&T%\tY;sF,mTuQF,8pCugWN-J@W.We)
%J?]+*To-n7k->rUfAWnaHg;+5\/\lT(+2U5;uiZq*\@m0'fW)!?*;6)4$s`lGDXT4eZfce=A@NePonnqM)UrZb>dQnNXJg+H0+%3
%\EO(fmYRo*e]r<93#^h/)JuX+VQVWmTiRA@@ooVpmJ":-B;f#H>gUC9i,f,'a)+@2X2K4Y]a,fb)H`]aV8Ac)okl!hJLY!U5HcNc
%o&FA:E+m..n+W4G6TO04FfG'tP!55Y6q=1GnR9HQ.Y-4LHnOQ(^a>uj1$0\3*]ZSNgitqt[?G)jW#*dlRlXN=)`-F4a4`hq%;M$9
%?GF`G6`i";0&E)"X:nQD2V3)[mlK7)C:`,AK6kUD&,8:(W4T>#?T0W`!YrLQLO6A^N4VE)Ia4!m>bF7fbgX[FbR#bL)(cl$]`5\t
%D8dNXr%q0>\O-6U9s!0^6*2ieBAZnrWi?FDLO6<C)a<=Q77X<<h]&9te8-^WF3N,_eAfqHW^B4d!W(Ii:2V*U"Iu\.ccP`im+:=a
%)5(jXX\`Bak:6nh:H<<ERe^&qNYKS;@(>m#B['5YWT!(>?l>YUfHj<V'mX%".fa^1A<X<[I@3FXNL#bh<92D^j@I"*Z;(C@:ZL5]
%R4hkm2J_%P#W6J^Mc]8"<+#M3:b*20e6uuK7\GpTado9P_l[2Z<nFbc<.=SA?8mjdq-fM%4qPiRfO]TG[WFSpgBXZ^bcYspL\YQN
%.^@-7=Xkgq$eb3bX8:k-j3pREZGl/p-H7Z6f+AGG(nE9@<If@n,U9@DPnH9'?uaG_-rj;MHtlkG9=9h3fNT/;o$hA>f6TgKjJeGb
%H$qg#Z9.fDo@*ZGaPP$5q98D/e'jWVa.%k]#Kn@Tf+4:IH6SK>\3(LuO8!fElRksDhZ1l7::f;$XH5TZB4K?FLF7J<Zu[g27@R$K
%_QSl5=,i"+%XI>m[/*hq]!umhkONpBI^:fr'O76\P0ZSeo$R#-8(phSnp<I<a.-L$56(C@H7gRMT&0JGi^[_.jltAUJE_!"[^46o
%m[d0R^"VH0;uApcjS#Lthq'>jF@KHoQJ5_<8epO@gUG4gn^:"`q<8jioWeCBJ&r.6X#F[nlY,@(fBMteE;THih`H`cnS-/FPUl*m
%S/&d-WJqu/o?V)sNZq9b-,%1@+LX/S%)i8+34d(%%95+Gc@J./-'\iYSS<Rn3_t[P%l`04Z?1Nt@*fh*La8TsQ]^K!Ck@/-7Y%ZY
%,9)Ea)2!dTZebY'1:GY%g"nblMmjA\mSVo-Dd+.0j`G.I)5FY';L+Ki9q*$ZE/@fV52Dl80:G33p:IZTY7j9nL_[:L5'>^tKIXn]
%#ulPKV?!JiQR]a.>bMcla9=&,]jM(.>G)TbM?:NhjYU3GC,M/oLPg8:#*h,5c.:6"GVnVueZKe3:I_;"`JO\2p2'3Q!4B5C[]DhB
%[XeT325:j2UMV](L+;!7\O0Z&]JH]eM/?YMds)7`d5G[L6#Cj3XYMmE<2+E3J;L#Z$5F;8.lRka]uIXuAn<m<,rQ'%"R-!`9::b!
%8LmWNPNB5O4mM,_<F%Z=NWa$93-kL.2=M%p[Hcj6fX4O0"d=l`*'Ndm&XBtVJfC2SXa5!tBKf$<+1ob2DUU*G-6[YPUoMm$i_M@T
%Ri:Gnk\@981PiIlX_\@&(XaDmdOK\sCCoK#ShfNT6]$d=ITN`\Y?B:7&)>heY8TU'hb2@o'jm?%o'+l;>"'=5hIG[jZaram!":Ie
%P:^5:'>bSYM4Gu#1Z6W1rT_o^HsK*Z15WX:M>D%%[mo618p?SB8b,/E9)UQA+aq%#XOeg8XD:?_+eF(O)pN;V&alr[Fh\NOO2c$.
%EHJ`e,JSSR8R-bX`uHFePXRrV*r?5B]\/5KR)VC4=M<oYX]"3]Y5%R$m<Z?$n)>H:pgW+2^Mi:<?eXN)'8p70]f%hC&bTj>eDh1/
%')Tr$oK5I&2g.Z4Qg@kc;#.@U0LF.+n'?\]c4n(iY;0=2)HF1'G\8!s&(_M,blN7Sa-3d)4#ZXTX?MI_%n9p,%=MfpPn./f\/T_5
%>aF-J1;C,?=J'YRO!ph&dCi"`afQpa]CC:14YF<q'3c\KF'eQaaal'(AfMH3:&2&Y19Ge\*_jk5BqM9Rb_j&QWckD'hl_c$GnUlN
%Dn5)FS)?KZ<fSfB'4)'8Gq5a5Ao,^]I8-k?W)%UKj.^3<e_LHoKc8=:BN=84)D)#56BgLVrD;X7m5_A0-GL7*8ekVs@>VpTmBGpr
%91Q(!C[$n/@b]bEgpa=:d,_pO_S(?T]P`peW.T9U2(bHRJ^+r9h*AI-orFc6k7,RfWed%"780]X2hA>-_^)^kAeo.u;^OmNG7*`$
%r0a*,7]E,:7l0.a0-"ESDrH,e94$%FmnnUQ!Pjb-[m'3D`+tc.UWR#87NYq)H*SK5%Z-pXaI==$kW+Dc_W"jj+tIN!elqC!o(3qI
%XOH$p=hr6=9X=.(L,<gcDd&s)3UaUO1NU#SLT.f"Pi]n"DXTIt<F*(OCIg5B"_c3A*<QO$8#A7K)UA!E?43o^KD+4sSi*Rb4u7Ju
%f=7_MiQuqJ=j:ZlZg3.7h,SA/X',Y_#RYGe3ic=>1,mb4YFr=WgN8Lhf`M98gR5%B5c:1b0[L\%=W!q^B!'P3';O.CK,-ZU?ni^l
%HqY>Y-?Tk*p0!d.FJml_RW$t("(-(Za8F_o5j_$6j67\r\3K]7$EgsU2GTd\Ki#Q]F-lc!IA1$X[r*dR(&ZoYbm(_pr2]lf\2La%
%^ib=B\[/%[pp\[!#C1r[_-;Jp/RB5NT6hK)YQh4NhPF5c)gLr[KfjM$aN\i,^!F?r96\kFM[\'N7NoLC,^']GAYtT]G'o^7I=&%/
%]@'jU?t(k'9[%)e?dsXlfU\Q^MT8$W5ZsBlHar'P=9_dnq3>3"/W_b7J0Xg(Wna'K8"D)EINB5;,<Cl17+'HnCm')K-dgNHdiNqo
%3"61VjtL@!6TUUYkgVDj1k%mm(?WGmMO<S#T6JZ!'GBg>o'l&!QicA`-Ei)*e)kj-a,F0G5.%?CSe-hm?1rQbSLr0G^-c0YC3*nP
%;..d23&JfIa(:sDK0H"aGI@dg3ODCI:CcL;PDE?[neS>`Qs5g4]isN1*0P;-+54Zk%'3iUBGH"dGr$1Q/0;e2C9F^[fFT;35Ys-l
%2\oE2Y4[3K(t\/ooE=BZi<)<Q\K>GQQD<>d,CoPf*F7M7&6hd4=_.<dUl1U_!GII\Qc0X>V0eCk*85JUP*qe;#3r;=g5t"?S:Q8_
%.gd<^lJS`QH0fV9XXM>oB1"R[35$H1\c?Hh][8]=CDM\OoqH*H7&g(BU?BQ]K"BaA.0oC<mh&7TUr!%Vll*G%'Y7uo\!I-#BiIbH
%\=66b0<r"hGIq#eGGB5#h4K&_()9SgI\]':K'E$^Res7M.sH&s2qT$-2g5AqiF6L%>i7([GOshr<t!u)=*+bmX_<ga/7KE^2"^.G
%rO0bRa&ctd+kcMjF&mrLDju]do>S'=l0P-C<eSnbFg.!Pi\mudELp8>oD#M3A(t!`pXe&:8qV.h*/u&hL"?0EIW(7IF(f6(mXPWQ
%!-5FreQptGKO'$X-)P;c%P%u,o$Qq.G/k.lTdmOX2&&SM`)_[M`M4T#$M)g#%8A8p,O?DP=g\4)K5eJs4Dch,s5UShE1Fcn6n?JO
%U:CV$9?aNd=s+L-:&?k.-!3=>1G-)U;L;sU@dRb>*\_^CbV(&V]S0j7Z$$d[qfceo@'GiLAsSMO8NYq5b[s'7Lf*A-Mf?$+e<m^H
%Vj3=P?I!4o>S](6/\8h7"jj_c<iaagRlY,lDrIBAiM1/m<e@"o+eTq`6Kbmm-324C7sB;&XV\eMmV[On(\DQ0MYGhZ"c@9iGoK,Q
%HmA>9Mp-fWX[K&3NMiRE3Cp0^WPfM4d&rP33V"la!eeQrquV)n&:QQ!$USBXgWu]bL%\tkhZ6+SPr%.L\8;1QCZDtVZ5I@Br6PY]
%_\VR:c_aX:YK%-bMr%<)V*-#NNQWNJpW78&Joo2PTcBTD'R,[2LSfXd%KMKfHdVF".?aW(I=XD)ouKUGj&o1@o?QGBnn&KuI,;D]
%+lrio\^U?oTk_,c]"FFeS^0Ba0;PHtcC<,BS]bYfVTb=NQgi5\$Q2hYk=XoYJZ@f%L"oQBVbQ@GcK,GuWJgAEo3(5+P#/&.JU,`?
%]Q<n)_7k_I54;`?7q]sql$V?uI#=9.1B?,l)/0Yt1:BU-]-eij\VIWtm1WW:Ve\Z7=Rkcj1dJ4<C[d9+Fthi,_!.:`r;%*;@R/K.
%2"Bn7e$m'P)Zpfh<EA'sO(4*s5ij+[Bo+99ASTAXYl_$R(UFr0)149d`\tng,>8:.;ogU(e%-JT>G!>0oPcqiTdj18SmMn*Y]Y;Z
%*-thD>)8nK)OGg)FJ/CAK6$ji4L_q**ScB,S&lrbc=_)pa-SahptmA&Xs#,jA.fg:bVM>:b>W9T(aJM:Bm8t\6,;:`5`Cgf!ui`X
%Xa+N8Kh0XT=)6pu0/.4C$+"5@nMB!RF6LWlXfD[VLh1D0UaoC*]m<,m2C]JCBG,)ZqZ&+;)rh-`MBr8B_q19[HW42!TK,[H2SD;\
%mKX7*9h#NT3J@uRD]L'I:8.W""cH_qML78<oVJ=s.Iu>j>N=NA(Vr+CStgMj]qutX9$i`&>j$([YQUHI1Y<Zc=f2R5IQ9DeXGH.1
%c_:fkeXB!cNZ*1-7;G*'r)4fa,ACfEN]dmhM)::B)?M),ln=ZZeqee!2=aHi$`8?ef6gMR<O-iAFo&$(H*or%m6#Y)Q(F<nrU?NP
%nZFsEHZ,/$[o[Df@1R_3;+9LPG=u_##L3%PEVga.WmPfqc<0V_g']T-er:D7H(u9Hm`BX$>egXd+_uBD2a'V]k\s^HQInKeaE,gC
%CB!D&/:2]n/]kS"ULqZM@IF#(l<6kYNs5J=l:p<s#aD9#h^irTC#.7DJu29>lY4]tT1%E6S"uLEp,%e58U!'lXZQ3t'V#jO<<7J5
%Q?D-FkgIrP!kKYiZKg#UD_8D1YiY,r-[n[mk1-T5]Jo7%nWjTs.8a[MhX%NQ,Pro7r/*W+1&HQIDg'f$a5^@#%"gX/d<jmjH2i#k
%+R]aJDLDQ%8I%Pp2\]sIq/CD%D_N&h1[qbso&9MZ2i?2NQRb&!pP-a.^s2KX6>d&AK.Z:p+bG%S>AA!B/.s(+4bt:F3*]"/jR*cK
%j2_[CLE'LQ5?=E$<$%^K@F-E.AO3ri_emHV:Lca0BU1T`V>(3Rp5I!$qP<o2S^DaS_9<l4BY]U?!_Z'W@.k*m+aJP)Sl79t<jb[q
%3$<`X?FT:COpcJGP^F8D7SV04FCq+mO!&]8aqU7h+i!Wt(6b.VQ[gYJDsC_4T?Ot+_6@uljr%Y60;dIAnEQ$n%W)Ds^kS`1b]DZD
%=_MDR8BJ`T3L(ALR:l-HcG";]Q'iGo*+N@fArFmW_d-NNONs7LoB[F;0%Ls;>o&Mt'$jWKIX,^[6SE:H.(a5b!D_K"g&`p>j8rES
%BE'2@$6!k$THTZ^2l>:[`eH%B*7$Ss9uD16JXWI0@-=SRm8^n4lRPa9>(A^>m5-e^*Z[-A0qE2cH?=-9iFL/\fPT%#P[f\?:J[&5
%a6N^>ADq7*oN6RTZ\E0i/H`0_1!Zi"UKCmI;9,K+C$F#":Dt-T!'OdA/f(orXSFdh+EQAAofFoJCs@>SNo*-**q9k&_F2Igm/\""
%Sq.Klm)C<LKd=c(IP3HJ(0XpMP3h6'!g7*I--**Z.D:?Z;(O^jmgIg4A>,\#0MuN&?t@M%"%=+8CgVn/P%91eFRA5l_mr'"nMgm,
%58q[:O1ArP6Au%@0'Y51!U7up.?F&,C%I%U:<FeS^]gD>9Zg:q(<H;-7oEZ4?ftZcGojEW,*VTQFb,5njWW(MPt&+"3($Rb9ihT7
%"cO(:f$j(.KlhBHNk(N7`D7B6VnDK#VZi)*_o+L;\3o'Y)8u'(Xa-JZ31X[1*1;jaSon[tjO,c;6\'PgF-.1SaP\[moOVG;+8+o"
%^h)IQ.s0sfi\<Kh=6V`JC/lW,=+En]%rYA1^2eY,QQ?t.jl*E1kO$I@-X/-t%rP"_m=U>FDW9Yr]Dn$*!=X@TSjM!#@cd<gdc/i%
%Q:b+?&MLE*&$>b@9"R1A2.hMEY0^Ce^,n1W_jXNOG&kQW41DT/>M$6oiT)<*3^F3(aaQp;M'!T[p!%2pdWt3$/a^h>fl+Z1[YZPL
%GK]_^Y#*aES#LV@N3J[J7T`3rV_H"+L20OQ)m)bKqN\SAZobo%[-NnR(@t;p>H0MXY#(P/iRXt9<,m1`3%hmh,l9`OV;880mSKrs
%bP*VcZaJ>Ic;>hIT'U[hEDPQ`iO(bsEqu_ET%=\qX+$K_?OV42PPB=T;Ur<!?Xs5f6_qE6F85f9'=n+PX:%rDopoJj;7-iUMh%Yh
%i,-lZm.-5+[05[5o9ktkMl@DrT)^ZgEm_=Bi0r'F)=.hiqk<6TqIGZNJo2<OY,DYoEB(7m;%('DccHt<qC@)7f_9^*^hu74i3mo.
%eRoj39D=AcSGHh\:Uf0H2sUVg+TW611>$MurjOB\mab?/$@8=\mY:e/l36X?k3C>nNZb%'Zero<EY'lNYqM3bB)]_4[B_Nf:I3\Y
%'Dn:(7uY=(-MBHrS#LsK$V]o.)Nl#/[(sUDpAk5I-MBGCL>"Qo:$hI9b[_lRI0#&o]SV&k5&&TUO1Tb)`',Q89Saa][E-9MVlW)F
%W1ga7qj]K49@V<4')S3)qEiJ?5Ko>DkJV"mgT(]SluVHU,&\6bf]SLLV^kRO9C-^t>8<'(ObnK]Eu57)g"(8%I83M]Z<?OXf]Ua`
%a>;^pVSkZBUb+F.DimT^dhr%F2Lf2.dk6ShjSaI_I83pn(=p$P`'1*#^6%*+A$[QV=c"-)qEfZ,T$o(\3Ao_0%m=E3T4P\IBk[-+
%0.=*O8^[(\pRF+Gc\r?OMIU^40bRIBWB2./9^Hg0)8U4d>Tr9K,OS#o6]6rF4cS==QCts['@e9-(8FagE6l6*S.P&Lq,'-D,&d#C
%<]Lq=Mk<p;R/?UBmsVrT4ag2(Ar*%-"m9TkK.Dqp0C2\_UD@m$T6m3SnqM7%hGpEGl.L@ena*4F]r'E(Cco;Zp,Nr-M1:u]V3D>,
%A28QRQq\o_fVTdo]Rtok>"s)6T:QeVFoU>u;3)dB`om?9\M+!3Ho?OrqIVqfg^pFNEW=o16ZTp=c\Zf@jZCbL.V3Zf3o9o"*So_l
%H]=BlGq\AhZ&Si;s"e@I;f+bh]2sjNTI[lbh@'l1PiK$<4'OX36I$DH"G=ldkKbIn*!V;hE*9%&2A,*D"hJcrkF+i+]I'E@)(_\(
%VFY3ToYc,IpW/HSpDI-JE^S,BkkPI_*DVmJ'QU^"bBi'ul'FQ0l1Aa@alfq<L:N2@79h"F^eh(iKn`c:bUEHAIK@7[4B/7*42ri+
%-r02c?k!91o[R.P\YW\B6]4JhN=e2[&3/h,:k1D"J:V4+[Fqj6<?Z5(p2r?G)9TD$"nr_O)e*SOa7Pe!<'Rc>0'H#&#%?YOc/7o5
%!,RB@pYpKfD1`T?Z_gPaREo_M2M9gCCAVbGHbE^u*$FefQ9ooR?f^=/fDV[H-sX<uk]>;oIJ)]Vk5cOjnX-AN+Lr><>Ml6Mq%HG9
%m,7"-Ouf6NF6:-sYf<ZJ-jZM?T0hME=c>CEgm6Bqrp;KZJXuPTX8h>(0@Pd*296sq4U/LlccX^Al#FFas0Sj5\#]P+9uM.fpWoFY
%iSVujA7RK9X]PPI0s8LV7SRsmT:]2u\<qXCFMl#XlG'm9I>o[XJZhlA8dk4r!=;JEQ7B?:*$@JtWr*_4!p8(&JUIoD.`@;f5;e4?
%&3#(@AGc4qd7#"CfD1-&O<lT1[P)aC1Pj1]Xnap:I^YeS,*a<P>pkm4ZL:MWg9D*0$(0uIFtrWF6YF&VRWgBL;eB3`N1#cN8pl05
%[+RelD0'd1YVY(>.Fl#%c.?Z!=o]4#T^@T(Vh$$=>nX+NIi9Xs?G!Q.kqklrP@[m!g^hlsh%ip.2N=u/ZM)r=:CEP6HPc<09Hmbi
%Keul@rGXnp,04>_(-Sdeo!+YcT;i&h=YjVpS</<mDMosa1BqL?ChuB\1[RkhZs+@0cb%0."'oGFaHhi,-rY5Fb:kf?We7h..@Eb/
%Si</>Wp+Egic)ENY0q.&b?aA8FC2Sj/DZYJHhj+TGu-&f?IAHt(=IsT07#?LA^P8Egd/mqA\"8tC=%BJcHP%#4BOB16M(7]m:s5f
%WGt4l1@l-JY:"5`J=2Jnl;j_LQ4Jell$B0/[aM<TREB+"bQY#V9X<2B/'SLt`<0jt6T.3;?;6bZN&7Ka*'#:jgQ23.9-W@ne29a6
%3-ergo)TM/RpUncp]u/6L?ijFTQ'Y`FWoV.HgW-LZqCAhdUfrJnlia*d;jlnp<!V&]/?oiCJ*OT6e)pnVL'>c:sWtL$8bB5LQjl$
%Zk]3SX_P#J)5s.r=L[@<\lXl^dO#^F=Vi+.;3c_`PHIoQU2r?UILF_ue$0Qmd?t=<$$iFar@-aT]YsJ1aZIG\d@'!cK(M3Sd&:He
%!-E"V&0(A607237!R+NT>Rr-q^c@SlR*L\\hs#5G8;pc'klWWg"`AU]a*GUZLSdb+o1P(IqTG/$64Tn>5\kga2"1d9(pLe!MB3uN
%YWtRQS'*t+jW#6]ZqpO!"Qf[g$j6+gP:[!_\EUCkHXo'hbcE>F\$<*JjM5!E%0aF"k#Zi"D,Ab,E'=,:lF?btPDsBe2M'-6?fa^m
%'>`TJkOkbO.dLuVH2MA1nNloa]jfM.ifPjorj;K@'0L3Xf;c[<bideVF"e2/!gZZI-J,`(nhug!hT'sJAi<A$Z5?6gabO\C2H0":
%=$38KX:>=qY1(>lK86D9+4M%Da/>&tG-;B9^VU\I;"[$j,)DCK/a6<d6X3BQd$>\6.4M.MW%%9MIsE-T0O:QB?SoL=L[3fpp6%qI
%H2pt$fI%((2^]o+%/5)Qa\+Iss1l1A:(#LKluO&l'Q\N4&]!lAhO76kO_PR7Cs@C/hRd:_DNq[hhj]d]GDofUdX5pPRhBF!2]YVL
%1r6RW>8FQWg1\]#eE+qK.>`5rEm@1^K_%m,P3B&\]:-79Ua/"-BmW&'m!e/t/fJiZ3eO:T#0fY;Ole^\/ng[DU-Zg"R,BEM61Y[U
%5&!2E.>^@^&Y0'@'Iem1q[8.+`5%\GgD6B)5,-IG/U#K`>AGs['tQ!\"^b:Ighf"%AVG6`dm&CmcH?Phbi\(@/+hSX>gR&9"DJnn
%""rfC6AJ['T=CsVjEPh"_CmE]cirRCXO,Cn]'sCd?8\b6=+N,m9c"kNH!nq,*?#T$k.:&$qLl-XSSD`KmEd`KEnUm3k6pYdI,UcC
%!h^HH2-9Vc??k]"KFF.d\VO1d(3&6+pMG]>rlr(l*dS&\)M@nK]("'NS$rSLc$\KD@DEA^*SNVPZX.n?*@muIhopT/U"A52A+TRY
%Pm\,9`te0Yr$:3SLYbBBRpM#_nB`tMA=@nl)=K_.acN#?"j6MH_iQ<]BoWQ39n>I9gC>h*BsV/kkj=03GoWD5eV/e8l4jnHMn&9'
%qmODX/'[P"_r*J<c#r!=W>1m2FEZNeE8dL7/']"_1L,1geYhOX&F0aFiF0Up[_n2>,3BRU*dVJ>QurGElkkck&)DCc'-;3N_hEm&
%[iMK2OE4cRka&D`F*GrSiM#ueZa*Lhs+Q6bHY"Ni0[GH.#)#&dpPrJ8ZWqb=h27DkCShIM*F$p-oXRjkN#*O]\)NTD@__DORZn1a
%B^bj8*h)?@H:k1=B)W/K[3RiSXoHc?l#F&JHl27?\Lp#:^?olg<F*0)E*cO-i.ZpemjVKA4aPn,(n1;m_O2rmMfS-&iSda;'O%!3
%*<J(dKnnNo*NIP/VL:;]Knja>[,;`AH7M3'jiH#,h=g2_gS&2VE:sYMVp<8PmD;5G<e;AI1!PE-hQ;HYmO=[`^*:$,LAl5Nad=jR
%b3QLR:p<mXXn6;AnBh'@6YGT\$l9sG-!iUDmH2"Ld/17=leK^HGia)&U#rlpS9X.9iF-\4k?JfEHH`8b+O(c:YETD*]pD1G&4O>A
%&%shiKr<1FiM!a#B\k2.j2+0]1c@Md_eEUlV@*pJGC2a.Pi#Us4S4Xt[X-J:^@9JUBmPMcpMSIp(ENcTq47,o6gm3QL<$qC*nk-n
%>tF4c63gF*4??3UK\snQlhlY<RC8WA7J9&2R#OnS^H%/!l2`]Q][eX'`@oUlUPk)8C$dMeP+SE0@:bF)EjN02Bk`^n6YmCg8?X,3
%pq"+I:t=m,iK,#?,OtNe=aFR8\&R;FAb$]n1&BNupEtsn>!"7TG99lRQQl=e=<q66:G:Q&&p#Q>2p8&Jce_*=^&9\<&23>+cdHI,
%rkA.&Er9q0^5un+F8T/;^:mt[LMmtNB:\Hj217<lI]g\bcd0Qum.XfJpW;$$@e4Gu\DJ59="g<6_]cc-=mEKnkuD?W@l&:8J%\Uu
%M50:[pW?R.Bs%)$_r5M$1_P;<*_!TU$!IIgbu\>7WA(qG9]biB_Glm!a%Z0epgZ;Mlu!4Z+$8e`p#L*+7itS`5BjibM='[""&;LB
%,iCE=C[$+(H9YMDdO/l^B<m1oOd+IgdC=:*ak&&tq<_8^JkUL.id0S\g_jI)<k.q7>596-ou,n3c1,4/+"MrJ%!V9*>)BGbhO^l\
%2nOdodu3M-qTHkW[NMaoM$Yb>'rL9$]HPhWI`'l1<(9NGrJen&o9@7RdW5sW-UY5J7]Ai.\mAFL-BB_C(lFZgTFXea7Rg)<9'a$q
%4suS5$K'H^l#FA#O9K)*'ZsZt%uQDXp>2r)O7P7!jZ"Dr[Wa7mb'C&_FKf!pA*"&AM)$AsE\?0Cod5PX1sn]?\N6]XC]"!Fq,_I7
%fP.-aS=j3ap%)C"d^Pin^F/b\CF,Bjj*LmirX&j4CuFV%6FZiar9i*5MX:)9XF>Gc=A)=K,K.Z)5h]Nd^?-'h.o>p72gjH9TO4<\
%m3M?4/-DBog3T_\`uY_Y[pOLNH^j]L&:/e=ltV^J]k@r9`WsK5VY2-HHuR'5a90$%%TCA[n(Vd798qiG`le:9qVX>&`l_?J9+A!S
%@AmH0Q$Ut%O@rF[cNZB6MpmQZa;d"'2"ei=`&`Z\3SJ`Lf;dEs=b9[g%TkhjjD73D4Y*aCU3JcF)*R@*CV>ToD!6g$BB6D&[1i+2
%C%q<"JL+n:PJ4(CdRP+G4?U;NP,DPYbdCEKQRN8rM61;+Y'[EW:<KhK!+p/5\R%"n9]2P-_%J9JDW3-t!1HSC2<iV^Z5!tE8]K+&
%RpI.Q-*B.]im*g.S<ogN;+ainqhp99N:.gtr)^WsarfKq]\kEF[`Gu2V"L^Irl20Q\5I/_<Q#ifaLTat5"et,l1H<sr7/L?PeSOU
%^Bi)*j]LQr*i2I4S0<H-Ha%6m!#g+eB)ifX$i\j@^q!$t#.oNrPU;C='1W77\R8NBLBh29dJu0G,6IsAG!JSVTiS`'7[?>A=r!uT
%-hB=7$L'tSqR2+aI8iP21Mi:\5Y<X9Ks+CEdXG]j66M8_c1A']#gbb,rC5W&*X)E6:c6na\$SU"kM'#)_9mT2SDd=J-/&Sf@$Bmu
%BdD`+OhTp33f":Ue4L.1H3+E=E.cS0ns@kW\,`lZ?.XreTD98&/_ra;WE6@q"'gFgqN*/%\C/AaJk9&<&iar&VYE!JZ'`cF^s-Rj
%dkS;dFUX6(@?Vd\Q*#KkL\sc)blYG*Q+31OrJA*["?:nT4"9BJG`4MoHjgp*.`\`X)OnqiqeLs]jr+uRha"BJI6Y!:XX<e[/sg+Z
%kPb&UA@2JC/_78`bOO8:Z5N,c#&/UiZ6ogY*%=GVg6PhB]1ppYZrh!lWp8GX`+0ENn(Z(&picqs!%%9E;8GHPO]AMZJP"tPSXT3j
%Z38hY/=ZQt<tMDF%&@.foB!)0>tY<sfU?Oh%@?jA*.-Uf0>Ah(Qa/0/q'G0rb&5'Oh?BtYY**nuV\sUJjg,Zm(9QpWmH-tPL9r;E
%$Mm*aAI5odPu;o)mQq#>:nT0($%0^An^/CjkY>Q&%Jh5b=nH\1keE^V6h[P(Q!/kdS<4fGXRF>;R6R![cjj*A.2S='9!0/;SPI^i
%Z%8rA*X(8F'bl6qOjCf/(7<#'f=n7M"^BO:!Nt]^IP#`+AN*YX&g3lMeeaS:C=6@eA5O[;:F^`84kYH7&!%='Rn+q\_%tPP"8<Gc
%..d8:npprbML?-@,JYI@2aN]GeaZ'&S;r^3kYSB=IP&j0dN<B6(s(,%el3J`dBSu@,%%<jZ2GEgJe"eG"i88C^K)+#Ci'?Z0]lh,
%(Oa%MZF)hm%"Jg6)"rJ?b^JT`f\T($2lV$S<Z;%*s'Q=h09F9+@CidD.H2Za&+\ju&#Q@S7%EUS#mA,$";?*Nk=YU`^du*H9fCl>
%'M!R:enK#SkE5A@ZEeC&I4'9MSF0pFg[+6`oK_P,nN]f)/P-PALfAs`2rK=k;FHsf=p2"@<B(&:EaG,B>'B3cr_spBE<`qW>[uWJ
%K-S?J'2T5cA`0!dBS10l0J+JVA>cr^(Y7/A!E\M1We5(kbT:l@<Q0YA+C!Z2%[rZ9,=[W\W,;E+rG">UV2jLskRH/H1H@OjNe=`5
%hg!+'.9e:aQf--[0il"HSM<Lf#r,ola\LO;!+DEK]@;UmVJD0Lb'1K^"f,sKBkOoTf_aG%\.LZmE.W4:=k+I!g.Rj@V#^R;H[D45
%g?:p6%N2Qn9rq!^=d:'f2u'f*#8T/4;A'EblB!3$>iGB;7E_8lcTG&X.qS,s$\(=#6cN%=WTHe`52tGFZt"0Kd.=K;T/hW!lOlCk
%1EY#NXpsV?r\3E&l3U+1o]2gl;31PhU:Uq3crHcS4afni<Lb#emU#X30U9PX;knJ2Y-J8Md%dVJK96/Xb4ukJbBiD**E$TnTag86
%h"-1lcZ?0NJ+7n[<gjTsAT5^5^5NaomSTbI%qn<pP\]_7hB3:<oS]AcI+m1kdPY;%K!%4(R_@n!N0DZ&3d.!O[-M7)Ag0Xg:NMt`
%=PV9Cl;lt7D.B'agP@ahc6(j\0]3\]Gk]+XNT='0^q$_ZYqb]4;AO(HMdX,I0J5/ec'diC4cj8YO3(qJ-FN9"b:D"dlrZE)m%(Ct
%XLof]pEftO1Wemck]0a"G<7?Z*Q73PTj'[/o@.e?)R8NmleWj6^D0H!5"-A$?FbKPs*>fRZq4&7(*(DE,>[VO`C8AQcDhA,55O\*
%iukDJ:4PfXdYdE"Cf3"I_#Pj[4$7?r-r50j4t=P^Z=e3d>03BO+%h=cOUGiM]/CYsCc>#!M2TR*DR=Q4Y)VH8IL[Fd022Wh9jAD)
%oo.m'=+)#)aWh)F\KG_$pi):cQ[>2-2;j/ajp-e:"TlInRSu'5/d=:5rA]^0]R(!>?>Z5SNb4UIgrl!g">g!8(%@kbSSWADY<l8)
%=;M']?)/1:;fD5cbaU)7#lO!>EJrNmPW7[]9HWr&&f5?*kb>+($.AUV:4H'UVRfL/>[@MTs/Vs,>ekSGgfuk9?DPG$?R*YM$X#[*
%q=O?-TY#/V*1%+`Aj_>=R`C\j5e'@:WS]bPmAH`\bkc4ib/I\*BdOp8ZfM;$S)?C6-HKR:&'<+90/nYD/fl/o?VCHbrW*fl(^b7L
%&!*`%(b^G_H\.o[JF6bl?j^bA&S"aOg8@7Y/?K@\\Ji(6/WGqQ5CaKM$NF;RKVE3*7.)BO`G#!gD1aH0A[r9**k7iC\LJScc?'Se
%8`an6kAS9'e+T*K158fZ!;l`V=OLL:#2aZ@/Hl9"GEPk7!1@$\C-,M@?`e2=<0-7^J8gKA\(Oq0-[d=P+Z3^JUXNef-]EAb9Mp_j
%1Ih80[oZSs=5S=(QT\0'3efU;2MuqUon%2T<Q,8jb-mQE2KV]mQ8J:'ShAhBGpMb"P=rdjVUk;1P_D4_o^DgP4Dj.^X+PQ0PXFn\
%%Z'I[#CTW!l7c>P.?rNJ5Xf5\Pf9CFTu*L>,gYrP!cr<a`1o+P1Mh3\W^&po@LpWZlKb)EZh247KBf3bPgC*@K_UGi?=+O]3f["0
%WSbC6Lh7DMTl3gH3`E3eUeKN,\]NW@.Me-r#`VK-ZPoa?FcoI$lE]##]r98hq%TT6T\CO"H^i_U.V-Ps/+)WNIIhZVRpF;P^VK7"
%13T?'8NsU9iT'SpZF51uT`I'[=;;[`E2H$@R_g)(QF)4CB^jnEQ(EXa<+a#XOKc=7;/QrGFpE#OD?Ngp]?i%l.l,_fhn@K<L`:2,
%RVnMZYA^.7NoPsmM8871mAD1C+jJ]UE%cY3leRTB1ZO,_@3,O,@Vh=3mrG8\&I[XV:8U+tWu^?\[M^Bk'Qn:7]e.@ipc_PB2==Bg
%e>b";E'`BLq8#(fBam@#Vp4_ao8P>7#cD;S>WI7SB`iEL:2^5$h'Y3Q%k8GOAN!\0llkc<Ce]fRnS?0@B*oNapaQj.IL6Zi8TurE
%>JOlP>!uk!fH*j>MD^Z,H(_jS15OOL)80nmJGm/%gelc,I,/[K]o(fiZ:`9V.f6dqWKZp%d,JZb,;&4<(XgU;Ro*($Vt2uOQPV"p
%R_^1(9p,1.QC.pa_DfQ)f1,q-Tu02[+fTFZ>@q"OHM/#V<>ALM@8?C:TF7,T(s&GMAP^3d;af<tGG50b&<nFid\niKS6mA#9jN[A
%O_].S$ocEY$.D=F#nk=YE*VMm<>(q5"F(*uH@AuZZkui<Ei]`1D*.^Qab0ZER1m<">tG]Wl1]L@`sDhA>T4Eg==V0l_-@CflNAji
%Nf&\Lh!)a&a-^&AF4VfR#9oc^*o_VK.g#1Mh$.':64G`q6'IQhdr&Ks7eme4V-n2$WO!VS:5WQqJU+<rg&oKVPT='8CFsj]7tV3'
%UX+&bQH44qFs$TfdA]Oqcp#%<K6*1Oc<bD&2I*4MImXZqnYMQMQtkfT(/5EqB$(Ur`CWTrO)pO61!Qr91,IJpnZ9F0UPMqAZ8cag
%DDUq/<NG^4-E<Zt@d!:og&WC=E$k[erUlYfk]J[2FTcEi?DmC7U=TDR#9E@ODpl4=2VCi7'Ocm)8Pc0XSJrI^k,6hq&AB%U28r+T
%=M%T_iqAu#9L.VEa3cuc5u8+02FdM[o5s0&<Mu<GalpVpFEP3O4-_fCf/=fcfJFbMh<X)g,cD=]N-Z?D'P)AsFfP_tg=nJ2Mo0#!
%KMHlc]"<f*QeI#uOd:W+(B\ZbQUeS>U/Dffo33/\<3Hb0e2[X])tgeI'M3cO5-cS\dqa,Ae.=*R/6gkm&'+n$?l'#l,7QbKs),kn
%D@."X)9bf`:KPoBbMoK,m\[cu;U&F%`$ekPX2%Et.K&KSP:M3$E1:#>aUibAb&&h2BHB5`Uu$LXD[NHT*n0JVZr+m@&#3/ek[h((
%A%e&2(d*E^*_25]1J%ZkP\i&HYZl;d-Ht4#;h;70[^,"p$_lk\(AmrIG_h,Ja[@.3ATtZI<eTbn\>m9mE#'Uo@["h5fA\hL"'@ea
%K9.sme.cW.E]665=ES$-S;kUC;Faf"oIrZG)'5N/s"9Nj^B9Os&-I']GY6-RbRQ2O)P3W@auQqRfh$$IIHoH[/WO@p60u"4b/@A[
%h[0%WGTnJ6/tg19XD;WM+pehgRj=nj=EM7%Uk[$\C^N,(kKNEG#pfu*!J6j0<3L'3=2kO.p(OXPr%JHk&mE_$$<_h[9G[Vr#`?Me
%M2Osq9_s"3%Vp;RK'mNZF<4lc[>92=6>B?7\B5c@4E8/^I%pb[I,f`D3/jGZ)**.Rm0soO$/LJ@J4/oA-Q%"i[kJ+28P"6_c]F)B
%e0Tt%nF.fnn]nV7ABm-EfLCcY@<lsGf3hk-JS$paCA@!:8;8m>$jYENa22tNno*iGNbTW1K]9Nf`XCJkT:KNb$NuG#;A`aA-Md>$
%BEU[nVAiaJP)MC>MbSR7M]a!?"=+j]^-H%;X&i/L6pIo.,5;#CX.8D]bN%HoN?*JU'`hbBYot:4*.`E[!`H)h@3lfN=X+niFft[r
%B5K<--L>gRD7Z-%$$2f0gh72/+ZnY66fV,TN:O@OPct-+=@bM0AI`@[^BS:mG<_s5C!0"kdT,"qKH]P9OQ'R'AA"]uO=9Wdp@We@
%/XIAX/p@g2(dTaZebZIdY.Sn%84+)l*1u\aMt$8BA[(C!`PsO/?;K`pQO.Ktb@=A^C5:G$:BDc/\*Jj#B$gq36*@.S:"_Ia$srUA
%@dtC,gZ^ilEk?qS>5IocOUbdRcf54.m2JPk=Q,:rT?@\Pb8tP_!@qStm[c*[2],#8Us*_\/>&!pYR\s]2D&p(KYBf!VpN<p[MUr*
%aDd6<UF.U[)iP,7G;kn`6Q72!f!PrZQ$B*'ZK=>'ONVJp69Ph75>@QjQq,q74Tlek0P@(%A2YC-.smqOXt/A3kkfW;pOupq?aB"`
%n8>nSel(Lqib1,GT>;[?3-6jHfK9WuS/YU%%,%QMZ"UL<()mht;U_nASRjV_d`5MQkp]9+OXW(HbOAo^@%kq3A)B6rCGu'%G%HYh
%o`4]F%Y7&kW.YY[XA)jPmXK4PUJJm%19pFAO\OupCNRTC+.!L'Lg6Y_.dU(;MCl-YpOiNG^mCJ,;P\4$R-bsS^<F%FA,DR-?o$Q.
%'/9Y/^re8\r8FKCjrE`Wp^\ljW2G3\`^EjS;YoQ52R8J6m5>pP-K`h1@Sts^4p1>nU.4k7Plj96:oa$\3QXWh>-L/WGpEoNESZ6R
%+F,YTMK=qCD"@NF9q)1RT#i6a^d(IHd)b&36a.hiN!gMkY\tj5=C:Ckka&DVaG;SjO+;i$OHHt!D)-I*78ja<c/Kbi(()g5YK#_W
%X,4g^'Z:\oRTi:l7D2>o%\*='BF7'[;t"0"UEJif0A*a8h01SH)hSdkrbn:A-sN)"#R"7bObn)X5IrN>CG24toT.+9hc%!gOt8*#
%-'0@WBXM'#_n_R\A5_0FCgH14qtr0_>Z]YoQ",QNbc0)MC3URQ2la<g%0oIB\JLMHUV"q0..;[eMse#4RU11GBpi:Be;i[;oEh(.
%Lms7Sp]"_K0rIVWA)==:;ZT3tVM^id+X:O/^DNOnHYp>?@pk5/+/&o-C3%-PDC2>4[sk#,3eZeO)Y^O;5'@9A;nN=bNsTto7;Q+t
%N/5;V+69tWAG6@j"m&Hh'['sIBn<Ar#-81M.G.^!D^6Rim5ePX?FFiID,4-5>n!CFOAX)Dig>o1Ul`uJ;j`>lLqF$6&jEYpUDP%I
%#10r)8BNIt"J(NTe)OmTk]CR'HT?Q0r=KCRQ)4eYr>5\ebU+AZpe6GsmVm"5H2YZKJ\0&ZH3=[cST2jS9]c]7o0'GF`Bq0UGn<37
%X4Q9\MlgBk9hIUY=\s++i1Glacj;8'hkE%oonY60c-MZ<1dp.O&Qu_oH(Apoe=]&U4/'G?DYGl>EeCYMEjUC<p&PI7*EXMa2ZcBD
%)l"JpK;`brjoRrD3VhLp$(I52`P3J0&Dic,fDWRCX5A4mVmR]D,'X[loM02=TiJibF`%DE*&pQf4/WT8kKP(55PPf?lZ[?@12`%>
%1M9CNaTsFB4HmCf?Z7;91[6D,&Mo;B&mp@,h9qOC7?^TiGda15R1C1cSu8;*,p(bpQ=+G79"7c\)D;XE%0;HCbo%sdmL_jNf#6dh
%g0#FqK,\S1s,7Yf)MKuE+U"Va23h_KSY)miIE6(u$lO8</-c?G<3LJOP2g$2<t42&Z;0.<5R6UdmcETmPjSsRhM:0kWdY?nAaa3!
%+TC8rS*W`mn[e6@ZBcnNK)-!E8s8P"gSU#1KAC3$C%39ue8mXIE5JHKpE-%58p);QCb>k63=F5i*B*^*W<\E72M(\7-tqFd@,3BB
%\.Il<Eo8?Zh"opG@'Y3=!iPHU_.]9)Y.XQViN=F6?ea]S:s0Fa4G]e^F;p',"OV3fj'q2`-hJ[D&k7!h5BoOn:WRi1"4($6oc3R(
%*+beNp`?fN=2m%T0PTb&/mDP>lmkEN/+(WfKrWfboBr>npZKMVFDYq\`c!U)9oC`:cQcOoI]Up6U3k>-n[uJ"lS(uB"'8ugg7BAZ
%&>j;\Qok_A`?=VZ-;G/69R(_<L1i^A/09MEN$1>8+h1$N@nL70HB2ABm^]`J!Y`MSgBA3:QVTAP`(LMb#Fa+2YI<Q^).He;15F93
%'V7F-MJ!+U;-D\O]"n1a?oiaMoP.U_)'7"#91>jK-Y*^e#nb\!)rge;J54b>A"HH5eYPtu,_%G0Vt'a-=`(L$[)dQ8q0atpU99rU
%k.J/RGGtT)Oe660Q.q]i/-0*RH_*VNYuULtaHaJS3R.8&878j7Af&mU2k2\$LGBf-c-A%YkU6le8A2l'^K)0Vo;Dm]5KITK5qmsr
%kq5$_+\^uLZFpSbig$)N`NR"98mL]jUCZ@oWHrbm`\T'91`OOl"[G1ik)dpHSB3\J<$)*ODNtb*l`$bC:GW>*?/B8cC&+6HF-TQ$
%kM4n"#Ud6r>@TQI39uY9dS@Z96kJ,!_cl\=OW"Q%;gUrjU5,M3=4^@c]t;"ZU).i0$7oK`JTQ*66+=]X(ch*n`e,64diHn6&<]EB
%+e5\o.O`l.:g'$=E2)b*.\C7YA9T^:,.hN\\%\!nj7=$5q3mEB`K[jlRH\5DPVBTNA<3a:RUaP]N[@Trk]Lh+X<2[g+]%./J*,e@
%R.bbXLKTY]4MEnXIIfh?41*S9O\aF6-\.g(6gBA#^@FjGY7KAml%-bmR"Z4"UVE>DRiQ_Xi=o0"3Q4\Y,$Y"J(G537K[mEZid8p-
%">t^K+r`$g)G`GAYF(1F'%pBFPZ#a%>JaB"W=Ip\o#^-lOoWOe!#WUF-'d6MP1rPSqB]V%P=bm9fsQg)TSfOk`9q_601>88Fbhe&
%T>BO?X5L8=3HB9P=,roD:[d3a6I-tR6Bca&ba;6p@<0bKRPC"_)+5)t5p7;[geob_0r18lSbH(&[oso)`[991b$3/_dJAcY2>2!S
%*/.eHosS8rG)K)GJ!F#Pq+:Zue]T9\P^mBfSC]HKoiK!Ege(?_;K`BN2Y">kNBnEpM2gV'i`d-A0%nk4&KZpZF5lO61aWOLPpG=g
%'Q`)iEhuVDs8"^RT?o+pI`tTdpc<$qek=#8q?bDd2N"+\)>Eh<Jl2i.p$2f9g]'oB9:4%$8@MYPHbJ6+E'GKMhfY6C"cSsZ9n'r)
%;FtGTcX4/GBKIS?/BMtZ[GM^^g4X1E,4o_^TB*lKc55pGDIe@!N=+)L'IuqsM3HYlmsG&`6!`WjZhu]$?u"_sA$S(:gBGqD*s^Y;
%,OX^_JPBFNC]-)CN8*Q.OXYa*5^1;2[l.gI3+Z2u.=QTa\Dg:WU+9l;0<EuBS\t0(E['pb$1nk4j;".>as@EGWZ/1a&R%Mr:aIJ$
%+;E!k1;:JVAXWZEIP`\_"7.;EbE^B7/-_SF9rHM@pO^JU`)ZSRIR;"WoA0VAhbU2(O3SY55t-CWdF])1-<i>?D>3@E6"cLng0rLF
%=m,kp:3IIc2RAi]?dRl^FoXTT6k3u8Q;m^t,O?Joa*(C_]T3(_&s5t-_F`a]n*_!s$#d/fh?UY9H:CsZ_"!QYp^'=-9BrV3JE>$S
%m_@m)%!:cqT6Dt]6Nq)m%Uq%p2/`*tB(:7KHLB^2=eoI,++:,=9tpR5(CV7P4rCa('S@,_W4IZQ=cWJYn3rF-Q2k8:Tm&TR9Bl2Z
%jpnI@@2)r3HW27.h1:luoJ\IG^L#IHJUG3'\uhJO\"(VT0\9Z+fBoSla<9mF%s:at'8<3SQ:gJQ4Fa?>koBB'l^=?PmJp0FmA?gK
%U_(H":q=S\*)5\)62(X_lNT[AVZVlIlC%&`g)nZF67s9/gcjYm7DQm,f.(KoGo1H#9<Nb,)m9aX>V2aWfO_^&#j4Lc%IA&OpqV:%
%OQ"$Kphg5P)Xe1eI%sY'2I:M1qRUk#fs1(IZg,/q?0?@#,,ZU%@K_f[mWY[J<:E0B@oeR3Ao#$A=E8"i]_S-ar154"qnlI1SAM=i
%8*&aR!gmfYGS^$V>.K0"G98P``[Yns?'.V@dJD$jG]`=n!nB5UmL3\@+To52i5U-gkBWbjH3]r%orV!7XS297XbQgq3rZS'`G1[?
%)4P__O/R\DokjT:U"T2<`FPfD^2KS%60af<^5TV#afdkhB"bf`]Xl0:"lj0(]99U/DDp"TiC[`O4=L5!P6Nt)HAq(tX/]5[`#.^u
%?Te:FZIm<@`["s?GW%!Wb!9;q,(=4:p.sC^3\B[P(NG/g@,6p&r_V?XP`,NYapl;iCcnU0bmn>-mD5UX;*e="Qda**=?pa(7O+uD
%Z@WA8iAJE[gAP;3<J4H%cF:f*p)2=&X8"t%lj-I]jZAVThhjmE$Dr#fA0=b0]nSUqK_D0u7,+]:1q*"/+W-jDShD3TVKB&mB;!BR
%X&\tl\Pt#,X4qV:XPZ)GEYG,AP*#\IVQc<0B#<4p<XPbN-f+LcACu1roYQ->c-Th^r'&;1oih=:Yhd$0s(>U%^J;Ms]l?"J:?O9f
%qto&?WVtOh[DPSB(Y:qd2Y_"T`NT0@NL*7E]&B'Ch07Z<<P-ktRt[3(Z[=siA"PZ'g$<Hg\MZ[R\l>ao4qYMCoZ8"g!kRYiDfYNW
%[X>gF.(q?Z4'!HUqV^o`cZcEY'!J974?iK_P2n)/O_ATbUVW*TH9Hu80^uV"Djl#.6[18UH<')9pLI1"S*rM.!(O^QoB5P`<(s<7
%jl""J\gK:%0BC^F`t.!iM0#FtQ2,LqAC?!Kjf6Os]-if<Q$D,#\X7_!%3]_BS"/H/9E:hpQ2,LqAE)BX=(VBd4djAP[Au'4m[d*0
%d[OL,q/c:@&hrTNR6PmkB#o(>m>p(e)7&(!VKtbgm`G+3F%[eeS($\Yn(]*'DMA'F>ab70GA`NN[tp@AUN^SnFq&rlc7N#urS]iI
%aG!hFs36V[\OE[8U+>UYn(c?oGl-/U[lggn>3)5Y1LF->h47cG!EF!gg0"-@>GM:W[%G!PbDNYK\oZ&6#f'6m\Y]/Re>cI(\Y\01
%)b=<`DBdQ[p-5:T;f@ojCAT+#f?pTV?Z#ffqDtc9o@<P!U9?(2l'3@Af0e7T76dfU>JdOl8m`r:1L4kt,Pnta$r]"JlWd`$CoSum
%o(H@R.`g_l4<_\R\i)/F8eiJXK]:,hU:Ml,kU'1;Zu,h\,NltX*:u#"XacP<n8[&U.296-GuCT@89CA#:hh=]qruDn3(:<K438JQ
%aRrG*S#?5353OeEUoSgLnj-_k'H+Y1`H5ILi`Y-k:)M-PH[2M[#X:qVM6D)&cdR?3aYXNP.4OOSoBu:ETN%oQ@Z!2Ta9=bkV:1$V
%?JHsWm_R/CD[D'Gd"Csqm^8#1,:HlPU5S_i1*BRPc\;(>VcRg7Bb*R\Z!mJN"97>X,_oMT)s/mnpl`JA3lmU8W?#S\iAt^ecft@H
%>jAt^48iJqpa;RVA[b2&X8PpU(T+U4U%W(X$@QBTTfP;n&]`EXp@LB;(DG*Sa6c*b^Zl!!B@'NHm`(!"='<sAkUudOmjU1q:V"8(
%"^W7Bi0SN_:m$M4h3'hQ[m0ZT!<2g8Al:tjT.nHAO2;E'9Xkgha7-[UM(,$[?lZJB&d4%%Ipo%4@P`t9(Y1s'?%i4:=:r]^P,U4W
%AlCfFb1=`*/&e!6lMu^aK[]-a7->a(N-oJi[J,$Mp4';s'>s'mEI[aR.tNg-_Z'oMiM-r%:b21)(llVQ[l<.lcitH;#09.r-&1MT
%"4RZ0"#O'0#&'tur;\W<4$[+EaW)Op#H/DA#AC';&("R,q>gpf42?f>@O315*hZ\M*MB+35!X2Nkm,<0li8@,6P_H>!NLk)!?*HR
%"#O)NIXpe2%T(HH6p\+0;74b35XT+2JEG#'&!6V7!=Goib)2@Ma_6Bo!?*J("12%!H@W*pZNK9B'U'78o)R<-lMqBZo`:L3:HuY]
%cOMYHVg*bI1E!=A3^?&DI=UJ&dgo:OM#k3[=Y"#]XN7a)JmK`sL/!N[bWLXY&NS/D>Y<pbbP:]roD$gUe+hG0H,oY(@\+5Jjhio=
%^!Jl*[G3T&[;b!mrJ6^$A0E6lS7R(oTm;$#\S6G+iOn4J&L#JACl/mNoCr`JVX\B^`pmbso8\n/Omr`U.`2UfH$jq3H$jA;Bma[S
%]]8l$*JTpUP`up-!l@cI*hQVR)P:1mn+_?$Kjg>_P7c(2B.,Tr:FeA,NG@FBj836g`['HL6M']:NFGnESSraOW\7:AG/rGXX`?K9
%l;#Jqh+7X?URc.q;sH)9[I(%_bh&_ugn(]DB3@6%S'LS=^,DO-k'V#,b8Cfl:,+:MM4$&]P!qj_$MXkL93aqjr,h1UotY/q[e7sf
%9M1OkT*?Ye[6gS*LkN,qpfh,Dc;M`7fTBm9^i6YS8;SOg]Id[t=t%8Ff!9*A/'.iAbVHIp$@+PKE6rAu#h23Lq%V#)DF"W+X@s!X
%.8CN>lS);l+^Re2=e=3/Ke2U'0;gRqLc(lG^_/(1J.qH>Q54(79"G([)58HC+j2UI9d,_CJltYQAVP@L"Kj:g=Am4OZLmeu"9$Hl
%RQQq5Y@fgk4X=3pQ_b*B'N0<J,\7hs9L_\^E]-;-6q1#<A`7QaG$Uj!,u+R_Af+]+.u4m.,+$GaA6KRKTq)lR.>HfcOFuN]ZqO)s
%/AWY)9?nq[asi?>oc5EEiG"tgr=ujo.?mp<3!`tZ@VAIrUL7BMUdS8!69`@SUU3ii8MH^2;!F#dVm6H;]]L^H/:lqT&.'cDl)RrD
%F*UZJc)>1t1lW-2b5bW*BS0Hp)`'H==N>r3;CKFT'a1*Bas'?la=shL5pT-o-n$r]WQH(uTq#S[$j@o7.82W/o/s1#=a<.<b=R;S
%YWcWLXoT5KN6D8E=J$J!/mt9%[43CN@=8KWR&,M)'[L<hT95e-'Z/`FUaT?;J3KP?_HP2L;`q/-/BSn_A9%/PPl_fQ\/\$_T?=IL
%$j9ZlF<5]c"/Gp&L4u`A,e@;"&[9>hOLA7H8u)tu6IO,?rmI5hVpGQ-#(a45NbG*dVB)9d3<0Z!TWVZs5RbO\2.<a^Le_'GC6&@O
%^l;``+tcnG+aG-[%]g0hKKlan*=q(diDIQ-@<F!3j:NXMPR'&kYS>!*/hW%b"j<AMPsGaJ>epBD:k0'[#kPpVZmK(1]RW1"@#sGr
%YZ,1LK<SBf,U`eTUV]?jAHl3OPVF&I:1FJK*NVO&X`=K9D.'%G*?h)._?O6OLb$CI/6t<GJ?'*_DLs]G+]<\\b[bsMhCMI[#+1Rp
%;su8?2l%!#X2L2.;cbge`6>I,>bG^2UJ.eC$k;A-BK;PZb'<"=,$c$@AUutj166!#I[,WW5g"U5GT4m9=Q-Uu<\4R46&`\9O>7qj
%$1JKqbY._q'_9?.Ab2)16AMm<j"QtU%!?:S5gI0dZ\2#X).gC1S:Q=aKV5WPZ7pg!@?$1uoH]8l$=US&)X0M_U.gt>/.1=.N(@Ve
%<%B/8#V9Bg)+7JqWo+",@5&,_+p&(E4I%@.PNh-85g:jt;[1J*1m(*2==Aqd*Jf/*FML)EH/L28MbJg)(P%kVOiN@#IH]Z,J=%dX
%B2PDOPpHDf9.\L)bJ9XP/1h"SE(Ee6+A:j]f4F.mZ6r*EhuXo1:br3;&4VtMAX"5:2,d8RCZ:BN0!SA@BQG;Y"N!m+;a`X#ou]"D
%_ARLl.4qgh[&5A&-T55XF=8$fZE,KKXL$=hIK3E4"d'*@(<dl)h_<^t2!Ot%baVQ\/5t07VFlt;;3B%Z.RhKZ/O<C5YRm1+etbp3
%af)-JRO3`"U<K)a.4?IbeYGcFTu:(j.4BkG`L/S4.-),KdkrQYLQF5@;@ITOXCtY1TMQZ&VFNoiOK<-HUQGC5R5O;-$q&XS8WSIg
%b:9e_e"`RpPE^W6MA-a3=c#'f;Rl-NPUYmd'GS[u/!r1CTRDpEU03\36Ju.4=d=S*1/B5s$E/tnPeLq5'GU,<7\cq\:oLZM?'Ska
%XIu4AWDZQ[OX8,F9E@(]Pa=75$HgG[(mQPCAjB)AX@tpRVE8S9'X0>)Lu5:-!P8qg<CKfN.H#+o=4EKai)\45BND!\lN((r-r[qJ
%i-32B9E?Z.1/c])9E?YSPqM=D'G-c_MnE2\_QAJb-=^)RJDrPKQ-@Ab._m%#1gQM9D24H6Ao.lG/h>D9TPIIG2GR>*Y"aIZ,KP`r
%e?gZt01jQ=1h@#Z(m,GhY"T-mSVeJf.8rJT+RVY(2MI#Z7X8:gVEck4Ztb4K"fkeaZPIBb6kjYBP;WRp0?Yd(dBk?ah3oOdBi?e6
%'sB$jW]l-rPKt^NXJ/Js\.X$dnP]!.!UVHQ+9m6$3!Cui7B]_a.096u,UaCY7H'uFC_/>B]FAn=7qFMmO]+lG/uR?@I\;N9-):VI
%7(!^=L(&<=Yn:C?0G%VB>%-5`-ig#nfq<@cIGM0Tq"dME09A<0csLGLY#>IcF8X8IC#cmT3G`fK(d7ISCAclt2gW1:\1qk3i)08t
%fH,U2CPPD%rI;$S?d`7_>qM[J6@\rPRRO;L~>
%AI9_PrivateDataEnd
%%EndDocument

ENDEPSFILE
0 0 10795 13970 C
0 0 0 SH
-1 SOB
/f14 /Times-Roman 166.945 0 0 -166.945 0 0 MF
75 45 SS1
sv 1811 Y -36(FIG.)D 365(4)D 144(\(color)D 460(online\).)D 683(Baryon)D 552(asymmetry)D
r
/f15 /BG-Maths-Italic 166.945 0 0 -166.945 0 0 MF
sv 805(Y)D r
/f16 /BG-Maths-Italic 116.86 0 0 -116.86 0 0 MF
sv 33 Y 97(b)D r
/f14 f
sv -33 Y 133(and)D 302(equilibrium)D 193 Y -3541(baryon)D 524(asymmetry)D 803(vs)D
207(temperature)D 858(with)D r
/f15 f
sv 356(CPT)D r
/f14 f
sv 390(violation)D 655(concen-)D 193 Y -3793(trated)D 436(in)D 183(the)D 258(baryon)D
517(sector)D 391(.)D 95(The)D 313(parameters)D r
/f15 f
sv 788(m)D r
/f17 /BG-Maths-Roman 116.86 0 0 -116.86 0 0 MF
sv -58 Y 129(eff)D r
/f16 f
sv 92 Y 0(\027)D r
/f18 /BG-Maths-Symbol 166.945 0 0 -166.945 0 0 MF
sv -34 Y 191(\210)D r
/f19 /BG-Maths-Roman 166.945 0 0 -166.945 0 0 MF
sv 186(0)D r
/f15 f
sv 83(:)D r
/f19 f
sv 42(05)D 222(eV)D r
/f14 f
sv 248(and)D r
/f15 f
sv 194 Y -4082(\021)D r
/f16 f
sv 33 Y 115(b)D r
/f18 f
sv -33 Y 120(\210)D 185(\377)D r
/f19 f
sv 139(1)D r
/f15 f
sv 84(:)D r
/f19 f
sv 41(5)D r
/f18 f
sv 121(\002)D r
/f19 f
sv 176(10)D r
/f20 /BG-Maths-Symbol 116.86 0 0 -116.86 0 0 MF
sv -59 Y 167(\377)D r
/f17 f
sv 97(23)D r
/f19 f
sv 59 Y 181(GeV)D r
/f20 f
sv -59 Y 315(\377)D r
/f17 f
sv 97(1)D r
/f14 f
sv 59 Y 135(are)D 272(chosen)D 531(to)D 197(match)D 477(the)D 272(observ)D
443(ed)D 193 Y -4165(asymmetry)D 734(.)D r
0 0 0 SH
sv -4272 Y -734(P)D 79(A)D 99(VEL)D 378(A.)D 216(BOLOKHO)D 806(V)D 153(AND)D
413(MAXIM)D 645(POSPELO)D 714(V)D 3546(PHYSICAL)D 867(REVIEW)D 704(D)D r
/f21 /Times-Bold 166.945 0 0 -166.945 0 0 MF
sv 174(00)D r
0 0 0 SH
/f22 /Times-Roman 158.155 0 0 -158.155 0 0 MF
sv 12671 Y -4353(6)D r

[/Dest /temp:intralink-f4 /View [/XYZ 52 746 0] /DEST pdfmark
pagesave restore
showpage
%%Page: 7 8
%%BeginPageSetup
0 0 0 SH
% End of font info
/pagesave save def
/XX 0 def /YY 0 def /OH 0 def /OS 0 def /OB -1 def /IN true def
/OT 0 def /OO false def false SO
/ET 0 def
/pagemx matrix currentmatrix def
0.0566929 -0.0566929 scale 0 -13970 translate gsave
%%EndPageSetup
0 0 10795 13970 C
0 0 0 SH
0 0 0 SH
75 45 SS1
0 0 0 SH
0 0 0 SH
-1 SOB
/f0 /Times-Roman 184.515 0 0 -184.515 0 0 MF
sv 1037 Y 916(extra)D 426(po)D 181(wer\(s\))D 527(of)D r
/f1 /BG-Maths-Symbol 184.515 0 0 -184.515 0 0 MF
sv 211(\205)D r
/f2 /BG-Maths-Roman 184.515 0 0 -184.515 0 0 MF
sv 62(\003)D r
/f3 /BG-Maths-Roman 129.16 0 0 -129.16 0 0 MF
sv 37 Y 142(QCD)D r
/f4 /BG-Maths-Italic 184.515 0 0 -184.515 0 0 MF
sv -37 Y 280(=)D r
/f2 f
sv 92(\003)D r
/f5 /BG-Maths-Italic 129.16 0 0 -129.16 0 0 MF
sv 37 Y 142(CPT)D r
/f1 f
sv -37 Y 264(\206)D r
/f3 f
sv -65 Y 62(2)D r
/f0 f
sv 65 Y 73(.)D 103(The)D 346(constraints)D 857(coming)D 223 Y -3768(from)D
425(the)D 292(propagation)D 949(of)D 219(the)D 293(high-ener)D 706(gy)D
250(cosmic)D 590(rays)D 373(are)D 211 Y -4097(harder)D 541(to)D 212(av)D 171(oid,)D
350(as)D 222(their)D 408(relati)D 378(ve)D 241(strength)D 664(scales)D
509(do)D 181(wn)D 293(as)D r
/f1 f
sv 211 Y -4170(\205)D r
/f4 f
sv 62(E)D r
/f3 f
sv 37 Y 121(max)D r
/f4 f
sv -37 Y 232(=)D r
/f2 f
sv 92(\003)D r
/f5 f
sv 37 Y 142(CPT)D r
/f1 f
sv -37 Y 264(\206)D r
/f3 f
sv -65 Y 62(2)D r
/f0 f
sv 65 Y 73(,)D 114(where)D r
/f4 f
sv 520(E)D r
/f3 f
sv 37 Y 120(max)D r
/f0 f
sv -37 Y 301(is)D 191(the)D 294(maximal)D 718(ener)D 316(gy)D 253(of)D 222(the)D
211 Y -4097(high-ener)D 707(gy)D 247(cosmic)D 587(rays)D r
/f4 f
sv 370(E)D r
/f3 f
sv 36 Y 121(max)D r
/f1 f
sv -36 Y 273(\030)D r
/f2 f
sv 194(10)D r
/f3 f
sv -65 Y 185(12)D r
/f2 f
sv 65 Y 199(GeV)D r
/f0 f
sv 348(.)D 109(In)D 216(fact,)D 387(since)D 210 Y -3943(the)D 317(decoupling)D
911(temperature)D r
/f4 f
sv 975(T)D r
/f5 f
sv 37 Y 107(R)D r
/f0 f
sv -37 Y 183(can)D 347(only)D 418(be)D 265(mar)D 286(ginally)D 211 Y -3809(lar)D
194(ger)D 273(than)D r
/f2 f
sv 355(10)D r
/f3 f
sv -64 Y 184(12)D r
/f2 f
sv 64 Y 200(GeV)D r
/f0 f
sv 347(,)D 83(the)D r
/f4 f
sv 263(CPT)D r
/f0 f
sv 364(-violating)D 757(sources)D 589(of)D 190(dimen-)D 211 Y -3799(sion)D
358(se)D 150(v)D 90(en)D 225(in)D 194(the)D 277(lepton)D 513(sector)D
492(allo)D 274(wed)D 357(by)D 235(the)D 277(cosmic)D 574(rays)D 211 Y -4016(would)D
550(not)D 326(be)D 264(able)D 398(to)D 233(produce)D 684(the)D 316(required)D
706(size)D 377(of)D 243(the)D 211 Y -4097(baryon)D 576(asymmetry)D 811(.)D
109(Ho)D 221(we)D 211(v)D 90(er)D 138(,)D 110(the)D 289(same)D 444(loophole)D
706(with)D 392(the)D 211 Y -4097(stability)D 653(of)D r
/f2 f
sv 209(\001)D r
/f6 /BG-Maths-Symbol 129.16 0 0 -129.16 0 0 MF
sv -65 Y 136(\207\207)D r
/f0 f
sv 65 Y 280(at)D 189(high-ener)D 707(gies)D 353(exists)D 474(for)D 270(the)D
282(dimension)D 211 Y -3553(se)D 150(v)D 90(en)D 233(operators,)D 792(and)D
325(the)D 285(right-handed)D 1003(up-quark)D r
/f4 f
sv 725(CPT)D r
/f0 f
sv 423(vio-)D 211 Y -4026(lation)D 476(at)D 188(the)D 281(le)D 130(v)D 90(el)D
188(of)D r
0 0 1 SH
/f7 /Times-Roman 0.184515 0 0 -0.184515 0 0 MF
sv 359 Y -327 ( )D r
[/Dest /temp:intralink-d23 /View [/XYZ 52 591 0] /DEST pdfmark
0 0 0 SH
/f4 f
sv 4(\021)D r
/f6 f
sv -87 Y 126(\205)D r
/f3 f
sv 43(7)D r
/f6 f
sv 65(\206)D r
/f5 f
sv 136 Y -108(U)D r
/f1 f
sv -49 Y 211(\210)D 205(\377\211\205)D r
/f2 f
sv 276(10)D r
/f3 f
sv -65 Y 184(17)D r
/f0 f
sv 65 Y 138(\261)D r
/f2 f
sv 92(10)D r
/f3 f
sv -65 Y 185(18)D r
/f1 f
sv 65 Y 138(\206)D r
/f2 f
sv 123(GeV)D r
/f1 f
sv 347(\212)D r
/f6 f
sv -65 Y 61(\377)D r
/f3 f
sv 108(3)D r
/f0 f
sv 65 Y 792(\(23\))D 331 Y -4016(results)D 546(in)D 208(the)D 290(right)D 413(magnitude)D
845(of)D 217(B)D 118(A)D 122(U)D 197(while)D 474(av)D 171(oiding)D 536(all)D
211 Y -4137(exp)D 265(erimental)D 755(constraints)D 854(on)D 238(Lorentz)D
630(and)D r
/f4 f
sv 320(CPT)D r
/f0 f
sv 418(violation.)D r
/f8 /Times-Bold 184.515 0 0 -184.515 0 0 MF
sv 456 Y -1982(V)D 107(.)D 100(DISCUSSION)D r
/f0 f
sv 317 Y -1520(W)D 161(e)D 127(ha)D 172(ve)D 217(seen)D 372(that)D 322(the)D
271(presence)D 690(of)D r
/f4 f
sv 198(CPT)D r
/f0 f
sv 365(-odd)D 379(interactions)D 211 Y -3459(is)D 213(theoretically)D 1016(capable)D
656(of)D 243(replacing)D r
/f9 /Times-Italic 184.515 0 0 -184.515 0 0 MF
sv 778(two)D r
/f0 f
sv 356(of)D 243(Sakharo)D 603(v')D 144(s)D 210 Y -4252(conditions)D 836(of)D
220(baryogenesis:)D 1082(nonconserv)D 847(ation)D 436(of)D r
/f4 f
sv 220(CP)D r
/f0 f
sv 314(sym-)D 211 Y -3955(metry)D 504(and)D 339(departure)D 771(from)D 431(thermodynamical)D
1368(equilibrium.)D 211 Y -3413(The)D 380(reason)D 573(for)D 307(this)D 358(is)D
214(that)D 370(nonzero)D 687(lepton)D 554(\(or)D 306(baryon\))D 211 Y -3749(asymmetry)D
913(can)D 347(de)D 171(v)D 90(elop)D 409(e)D 79(v)D 90(en)D 265(in)D
235(thermal)D 656(equilibrium)D 955(if)D 211 Y -4210(the)D r
/f4 f
sv 291(CPT)D r
/f0 f
sv 365(-violating)D 783(shifts)D 463(of)D 218(dispersion)D 822(relations)D
701(for)D 279(parti-)D 211 Y -3922(cles)D 357(and)D 335(antiparticles)D 975(and)D
335(fermion)D 654(number)D 633(violating)D 727(pro-)D 211 Y -4016(cesses)D
510(are)D 275(operati)D 510(ve)D 222(at)D 182(the)D 275(same)D 429(time)D
379([)D r
0.6666 1 1 SH

[/Dest /temp:intralink-c4 /Rect [3759 6987 3851 6802] /Border [0 0 0] /LNK pdfmark
sv 61(4)D r
0 0 0 SH
sv 92(].)D 156(In)D 202(this)D 316(paper)D 405(,)D 94(we)D 211 Y -4108(considered)D
890(in)D 233(detail)D 502(the)D 315(idea)D 398(of)D 243(leptogenesis)D
1002(dri)D 202(v)D 90(en)D 264(by)D r
/f4 f
sv 210 Y -4139(CPT)D r
/f0 f
sv 365(-violating)D 772(sources)D 605(in)D 195(the)D 279(fermionic)D 771(sector)D
494(of)D 205(the)D 278(stan-)D 211 Y -3964(dard)D 389(model.)D 569(In)D 213(this)D
327(scenario,)D 723(the)D 285(generation)D 841(of)D 214(the)D r
/f4 f
sv 287(B)D r
/f1 f
sv 162(\377)D r
/f4 f
sv 194(L)D r
/f0 f
sv 211 Y -4204(number)D 637(occurs)D 553(at)D 206(temperatures)D 1028(of)D 225(about)D
r
/f2 f
sv 483(10)D r
/f3 f
sv -64 Y 184(12)D r
/f0 f
sv 64 Y 138(\261)D r
/f2 f
sv 92(10)D r
/f3 f
sv -64 Y 184(14)D r
/f2 f
sv 64 Y 200(GeV)D r
/f0 f
sv 347(,)D 211 Y -4277(which)D 504(results)D 534(in)D 197(a)D 135(huge)D 411(enhancement)D
1030(of)D 206(the)D 279(asymmetry)D 874(as)D 211 Y -4170(compared)D 791(to)D
206(the)D r
/f4 f
sv 287(CPT)D r
/f0 f
sv 365(-odd)D 399(electro)D 502(weak)D 451(baryogenesis)D 1025(sce-)D 211 Y -4026(nario,)D
469(where)D r
/f4 f
sv 493(B)D r
/f1 f
sv 162(\377)D r
/f4 f
sv 194(L)D r
/f1 f
sv 171(\210)D r
/f2 f
sv 205(0)D r
/f0 f
sv 134(and)D 309(the)D 268(equilibrium)D 906(v)D 89(alue)D 351(for)D r
/f4 f
sv 257(B)D r
/f1 f
sv 162(\207)D r
/f4 f
sv 211 Y -4170(L)D r
/f0 f
sv 233(is)D 236(maintained)D 938(until)D 453(the)D 340(electro)D 501(weak)D
504(breaking,)D r
/f4 f
sv 806(T)D r
/f1 f
sv 159(\030)D r
/f2 f
sv 211 Y -4170(100)D 338(GeV)D r
/f0 f
sv 348(.)D 144(Consequently)D 1005(,)D 144(the)D r
/f4 f
sv 325(CPT)D r
/f0 f
sv 365(-odd)D 436(leptogenesis)D 1013(re-)D 210 Y -4118(quires)D 525(only)D
401(trans-Planckian)D 1223(size)D 361(of)D r
/f4 f
sv 226(CPT)D r
/f0 f
sv 438(violation,)D r
/f4 f
sv 778(\021)D r
/f5 f
sv 37 Y 126(i)D r
/f1 f
sv -37 Y 92(\030)D r
/f2 f
sv 211 Y -4170(10)D r
/f6 f
sv -64 Y 185(\377)D r
/f3 f
sv 107(22)D r
/f0 f
sv 64 Y 138(\261)D r
/f2 f
sv 92(10)D r
/f6 f
sv -64 Y 185(\377)D r
/f3 f
sv 107(24)D r
/f2 f
sv 64 Y 199(GeV)D r
/f6 f
sv -64 Y 348(\377)D r
/f3 f
sv 107(1)D r
/f0 f
sv 64 Y 74(.)D 211 Y -1357(W)D 161(e)D 137(belie)D 358(v)D 90(e)D 137(that)D
333(this)D 321(is)D 178(the)D 281(minimal)D 673(le)D 130(vel)D 280(of)D
r
/f4 f
sv 208(CPT)D r
/f0 f
sv 419(viola-)D 211 Y -3891(tion)D 398(required)D 725(to)D 254(reproduce)D
848(the)D 336(observ)D 487(able)D 419(asymmetry)D 810(.)D 211 Y -4277(Lo)D
202(wer)D 354(le)D 131(v)D 90(els)D 283(of)D r
/f4 f
sv 232(CPT)D r
/f0 f
sv 364(-breaking)D 787(may)D 396(generate)D 706(B)D 117(A)D 123(U)D 210(only)D
211 Y -3995(at)D 205(the)D 297(exp)D 265(ense)D 399(of)D 224(raising)D 574(the)D
297(decoupling)D 892(temperature)D 955(for)D r
/f4 f
sv 211 Y -4108(B)D r
/f1 f
sv 162(\377)D r
/f4 f
sv 195(L)D r
/f0 f
sv 206(processes,)D 839(to)D 230(the)D 313(range)D 498(of)D 240(the,)D 359(e.g.,)D
400(GUT)D 465(scale.)D 211 Y -3907(Models)D 615(with)D 391(such)D 400(a)D
144(high)D 391(initial)D 496(temperature)D 947(possess)D 613(v)D 90(ery)D
210 Y -4087(serious)D 578(cosmological)D 1043(problems)D 743(of)D 209(their)D
395(o)D 88(wn)D 281(related)D 560(to)D 200(the)D 211 Y -4097(ov)D 181(erproduction)D
1029(of)D 238(dangerous)D 843(relics)D 486(\(monopoles,)D 1003(gra)D 234(viti-)D
211 Y -4014(nos\),)D 417(and)D 320(are)D 281(dif\256cult)D 639(to)D 197(incorporate)D
897(into)D 341(in\257ation.)D 211 Y -2907(The)D 326(most)D 397(natural)D 552(models)D
572(of)D r
/f4 f
sv 192(CP)D r
/f0 f
sv 247(-odd)D 376(leptogenesis)D 952(require)D 211 Y -3799(two)D 334(heavy)D
498(neutrino)D 673(singlets)D 622(to)D 198(work.)D 482(W)D 161(e)D 140(hav)D
263(e)D 140(sho)D 252(wn)D 282(that)D 211 Y -4045(one)D 344(species)D 610(is)D
199(perfectly)D 735(suf\256cient)D 764(for)D 292(the)D r
/f4 f
sv 303(CPT)D r
/f0 f
sv 364(-odd)D 415(sce-)D 211 Y -4026(nario.)D 524(In)D 252(fact,)D 422(one)D
365(could)D 509(take)D 406(e)D 79(v)D 90(en)D 273(more)D 478(conserv)D
570(ati)D 183(v)D 90(e)D 211 Y -4241(approach)D 734(and)D 324(associate)D
724(the)D 283(majorana)D 745(masses)D 579(of)D 210(light)D 396(neu-)D 210 Y -3995(trinos)D
463(with)D 370(the)D 269(ef)D 140(fecti)D 327(v)D 90(e)D 124(Lorentz-conserving)D
1490(interaction)D 835(\()D r
0.6666 1 1 SH

[/Dest /temp:intralink-d5 /Rect [5086 12470 5178 12285] /Border [0 0 0] /LNK pdfmark
sv 62(5)D r
0 0 0 SH
sv 92(\))D 211 Y -4262(without)D 605(specifying)D 809(its)D 214(origin.)D
528(The)D r
/f4 f
sv 327(CPT)D r
/f0 f
sv 365(-odd)D 378(leptogenesis)D 953(in)D -11597 Y 461(this)D 316(case)D 365(will)D
337(proceed)D 636(e)D 80(xactly)D 503(as)D 203(described)D 758(in)D 194(the)D
276(paper)D 405(,)D 96(as)D 211 Y -4169(long)D 399(as)D 224(\()D r
0.6666 1 1 SH

[/Dest /temp:intralink-d5 /Rect [6241 1294 6333 1109] /Border [0 0 0] /LNK pdfmark
sv 62(5)D r
0 0 0 SH
sv 92(\))D 132(remains)D 657(unsuppressed)D 1064(at)D 205(high)D 399(ener)D
317(gies.)D 415(As)D 274(a)D 211 Y -4240(consequence)D 983(of)D 192(the)D
265(reduced)D 624(heavy)D 478(sector)D 436(,)D 85(the)D 265(connection)D
851(to)D 210 Y -4179(the)D 297(phenomenology)D 1260(of)D 224(light)D 410(neutrinos)D
758(becomes)D 718(more)D 450(di-)D 211 Y -4117(rect.)D 404(As)D 284(sho)D
251(wn,)D 351(the)D 307(rate)D 358(of)D 234(the)D 306(lepton-number)D 1169(violating)D
211 Y -3664(processes)D 771(is)D 188(directly)D 632(proportional)D 979(to)D
209(the)D 292(sum)D 372(of)D 219(the)D 292(mass)D 211 Y -3954(squared)D 627(of)D
208(all)D 239(light)D 394(neutrino)D 670(species.)D 211 Y -1954(Confronting)D
980(the)D 304(predicted)D 767(size)D 366(of)D r
/f4 f
sv 231(CPT)D r
/f0 f
sv 365(-violation)D 797(with)D 211 Y -3994(the)D 274(existing)D 632(exp)D 265(erimental)D
749(and)D 315(astrophysical)D 1024(constraints)D 849(we)D 211 Y -4108(\256nd)D
362(that)D 355(both)D 405(the)D 304(lo)D 140(w-ener)D 511(gy)D 261(precision)D
754(searches)D 703(of)D 230(pre-)D 211 Y -4025(ferred)D 497(directions)D 785(and)D
322(the)D 282(astrophysical)D 1031(constraints)D 856(deri)D 285(v)D 90(ed)D
210 Y -4148(from)D 443(the)D 311(exist)D 347(ence)D 425(of)D 237(char)D 317(ged)D
351(high-ener)D 707(gy)D 269(cosmic)D 608(rays)D 211 Y -4015(puts)D 409(se)D
150(v)D 90(ere)D 329(constraints)D 903(on)D r
/f4 f
sv 286(CPT)D r
/f0 f
sv 365(-odd)D 440(leptogenesis.)D 1062(The)D 211 Y -4034(latter)D 376(,)D 103(being)D
467(especially)D 798(stringent,)D 750(rules)D 416(out)D 293(a)D 139(possibility)D
827(of)D r
/f4 f
sv 211 Y -4169(CPT)D r
/f0 f
sv 364(-odd)D 423(leptogenesis)D 998(dri)D 201(ven)D 350(by)D r
/f4 f
sv 268(\021)D r
/f5 f
sv 37 Y 127(l)D r
/f0 f
sv -37 Y 135(when)D r
/f4 f
sv 483(\021)D r
/f5 f
sv 37 Y 127(b)D r
/f1 f
sv -37 Y 131(\210)D r
/f2 f
sv 205(0)D r
/f0 f
sv 92(.)D 130(The)D 211 Y -4034(in)D 138(v)D 90(erse)D 380(case,)D r
/f4 f
sv 447(\021)D r
/f5 f
sv 37 Y 126(l)D r
/f1 f
sv -37 Y 102(\210)D r
/f2 f
sv 205(0)D r
/f0 f
sv 92(;)D r
/f4 f
sv 134(\021)D r
/f5 f
sv 37 Y 127(b)D r
/f10 /MathematicalPi-One 184.515 0 0 -184.515 0 0 MF
sv -37 Y 131(\336)D r
/f2 f
sv 205(0)D r
/f0 f
sv 174(cannot)D 575(be)D 257(ruled)D 462(out)D 318(from)D 211 Y -3963(the)D
283(astrophysical)D 1032(considerations,)D 1171(as)D 210(the)D 284(bounds)D
589(would)D 517(not)D 211 Y -4086(apply)D 454(if)D 157(e.g.)D 310(the)D r
/f4 f
sv 270(CPT)D r
/f0 f
sv 405(violation)D 702(is)D 166(concentrated)D 990(in)D 188(the)D 270(right-)D
211 Y -3912(handed)D 588(up-quark)D 720(sector)D 432(.)D 101(In)D 208(this)D
321(case,)D 419(ho)D 181(we)D 211(v)D 90(er)D 138(,)D 101(one)D 321(should)D
210 Y -3831(e)D 80(xpect)D 438(sizable)D 551(ef)D 140(fects)D 386(in)D 180(the)D
263(clock)D 438(comparison)D 898(exp)D 265(eriments.)D 211 Y -3639(Current)D
657(sensiti)D 469(vity)D 381(to)D 238(such)D 431(operators)D 781(is)D 216(at)D
227(the)D 320(le)D 131(v)D 90(el)D 228(of)D r
/f2 f
sv 211 Y -4169(10)D r
/f6 f
sv -64 Y 184(\377)D r
/f3 f
sv 107(27)D r
/f2 f
sv 64 Y 200(GeV)D r
/f6 f
sv -64 Y 347(\377)D r
/f3 f
sv 108(1)D r
/f0 f
sv 64 Y 73(,)D 104(and)D 324(thus)D 365(would)D 518(require)D 582(at)D
192(least)D 397(4)D 150(orders)D 518(of)D 211 Y -4169(magnitude)D 831(\256ne-tuning)D
860(to)D 194(make)D 451(Eq.)D 301(\()D r
0.6666 1 1 SH

[/Dest /temp:intralink-d22 /Rect [8255 5722 8439 5538] /Border [0 0 0] /LNK pdfmark
sv 62(22)D r
0 0 0 SH
sv 184(\))D 111(e)D 79(v)D 88(ade)D 307(the)D 277(bounds.)D 211 Y -3561(The)D
r
/f4 f
sv 350(CPT)D r
/f0 f
sv 365(-odd)D 400(interactions)D 927(that)D 340(modify)D 596(dispersion)D
821(rela-)D 211 Y -3983(tions)D 415(represent)D 734(a)D 138(relati)D 378(vely)D
373(small)D 458(subset)D 516(of)D 210(dimension)D 826(\256v)D 192(e)D r
/f4 f
sv 211 Y -4240(CPT)D r
/f0 f
sv 364(-odd)D 396(interactions)D 921([)D r
0.6666 1 1 SH

[/Dest /temp:intralink-c28 /Rect [7299 6355 7483 6170] /Border [0 0 0] /LNK pdfmark
sv 62(28)D r
0 0 0 SH
sv 184(].)D 165(Is)D 190(it)D 161(feasible)D 634(that)D 336(other)D 437(opera-)D
211 Y -3850(tors)D 335(could)D 470(dri)D 202(v)D 90(e)D 142(\(baryo\)leptogen)D
1180(esis)D 336(while)D 470(e)D 79(v)D 88(ading)D 470(strong)D 210 Y -3862(astrophysical)D
1068(and)D 359(laboratory)D 853(constraints?)D 976(If)D 215(physics)D 646(re-)D
211 Y -4117(sponsible)D 800(for)D r
/f4 f
sv 319(CPT)D r
/f0 f
sv 469(violation)D 762(preserve)D 624(s)D 175(supersymmetry)D 1127(,)D 211 Y -4276(operators)D
753(that)D 344(modify)D 600(dispersion)D 824(relations)D 704(are)D 292(simply)D
569(not)D 211 Y -4086(allo)D 274(wed)D 400([)D r
0.6666 1 1 SH

[/Dest /temp:intralink-c29 /Rect [6291 7409 6475 7225] /Border [0 0 0] /LNK pdfmark
sv 61(29)D r
0 0 0 SH
sv 184(,)D r
0.6666 1 1 SH

[/Dest /temp:intralink-c30 /Rect [6522 7409 6706 7225] /Border [0 0 0] /LNK pdfmark
sv 47(30)D r
0 0 0 SH
sv 184(].)D 200(Instead,)D 672(a)D 175(dif)D 201(ferent)D 525(class)D 451(of)D
r
/f4 f
sv 246(CPT)D r
/f0 f
sv 365(-odd)D 211 Y -3985(operators)D 741(may)D 372(appear:)D r
0 0 1 SH
/f7 f
sv 412 Y -342 ( )D r
[/Dest /temp:intralink-d24 /View [/XYZ 316 363 0] /DEST pdfmark
0 0 0 SH
/f2 f
sv -39 Y 110(\026)D r
/f4 f
sv 39 Y -46(L\015)D r
/f5 f
sv 37 Y 237(\026)D r
/f4 f
sv -37 Y 108(LH)D r
/f6 f
sv -64 Y 267(y)D r
/f4 f
sv 64 Y 90(H)D 148(;)D r
/f2 f
sv -43 Y 504(\026)D r
/f4 f
sv 43 Y -58(Q\015)D r
/f5 f
sv 37 Y 259(\026)D r
/f4 f
sv -37 Y 109(QH)D r
/f6 f
sv -64 Y 290(y)D r
/f4 f
sv 64 Y 90(H)D 148(;)D r
/f2 f
sv 261(etc)D r
/f4 f
sv 217(:)D r
/f0 f
sv 510(\(24\))D 425 Y -4015(When)D 504(the)D 289(lepton)D 525(or)D 216(baryon)D
575(number)D 627(is)D 185(calculated)D 815(in)D 206(equi-)D 210 Y -3942(librium,)D
661(such)D 408(operators)D 758(will)D 358(create)D 513(an)D 245(ef)D 140(fecti)D
327(v)D 90(e)D 152(chemical)D 211 Y -3652(potential)D 709(that)D 338(gro)D
242(ws)D 264(with)D 389(temperature,)D r
/f4 f
sv 991(\026)D r
/f1 f
sv 183(\030)D r
/f4 f
sv 195(T)D r
/f3 f
sv -64 Y 117(2)D r
/f4 f
sv 64 Y 73(\020)D r
/f0 f
sv 102(,)D 106(where)D r
/f4 f
sv 512(\020)D r
/f0 f
sv 211 Y -4221(parametrizes)D 1025(the)D 305(strength)D 674(of)D r
/f4 f
sv 232(CPT)D r
/f0 f
sv 443(violation.)D 784(The)D 366(easiest)D 211 Y -3829(way)D 394(to)D 231(see)D
323(that)D 366(is)D 210(to)D 231(consider)D 713(the)D 313(thermal)D 654(\256eld)D
415(theory)D 211 Y -3850(correlator)D 781(between)D 677(the)D 288(baryon/lepton-number)D
1715(density)D 595(and)D 211 Y -4056(such)D r
/f4 f
sv 389(CPT)D r
/f0 f
sv 364(-odd)D 389(operators.)D 785(Inside)D 502(a)D 134(thermal)D 617(loop,)D
425(the)D 278(Higgs)D 211 Y -3883(\256eld)D 429(bilinear)D 668(will)D 389(produce)D
r
/f4 f
sv 696(T)D r
/f3 f
sv -65 Y 117(2)D r
/f0 f
sv 65 Y 74(,)D 147(and)D 368(the)D 328(scaling)D 625(of)D 255(the)D 211 Y -4096(ef)D
140(fecti)D 326(v)D 90(e)D 148(chemical)D 736(potential)D 714(with)D 394(temperature)D
947(will)D 353(be)D 240(ex-)D 210 Y -4088(actly)D 436(the)D 301(same)D 456(as)D
228(in)D 220(the)D 301(case)D 394(of)D r
/f4 f
sv 229(\021)D r
/f5 f
sv 37 Y 126(i)D r
/f0 f
sv -37 Y 126(operators.)D 809(Although)D 211 Y -3626(operators)D 726(\()D r
0.6666 1 1 SH

[/Dest /temp:intralink-d24 /Rect [6343 10565 6528 10381] /Border [0 0 0] /LNK pdfmark
sv 61(24)D r
0 0 0 SH
sv 185(\))D 100(do)D 223(not)D 275(in\257uence)D 717(the)D 266(propagation)D
922(of)D 192(the)D 266(high-)D 211 Y -3933(ener)D 316(gy)D 231(cosmic)D 570(rays,)D
400(they)D 363(hav)D 263(e)D 129(a)D 129(phenomenological)D 1413(`)D 48(`prob-)D
211 Y -3862(lem')D 326(')D 157(of)D 249(their)D 435(o)D 88(wn.)D 367(Inside)D
546(loops)D 495(such)D 433(operators)D 783(create)D 211 Y -3879(quadratic)D
823(di)D 140(ver)D 233(gencies)D 689(and)D 401(generate)D 762(dimension)D
904(three)D r
/f4 f
sv 211 Y -3952(CPT)D r
/f0 f
sv 364(-odd)D 387(operators)D 735(proportional)D 962(to)D 192(the)D 275(square)D
530(of)D 202(the)D 274(ultra-)D 211 Y -3921(violet)D 460(cutof)D 376(f.)D
146(In)D 191(the)D 265(most)D 397(UV)D 247(-protected)D 789(case,)D 403(the)D
264(role)D 326(of)D 192(this)D 211 Y -4056(cutof)D 376(f)D 151(is)D 215(assumed)D
728(by)D 276(the)D 319(supersymmetric)D 1272(soft-breaking)D 210 Y -3337(scale.)D
498(Still,)D 437(the)D 308(strength)D 677(of)D 236(typical)D 587(constraints)D
882(is)D 205(on)D 266(the)D 211 Y -4096(order)D 464(of)D r
/f2 f
sv 229(10)D r
/f6 f
sv -64 Y 184(\377)D r
/f3 f
sv 108(10)D r
/f4 f
sv 64 Y 138(M)D r
/f6 f
sv -64 Y 167(\377)D r
/f3 f
sv 107(1)D 117 Y -111(Pl)D r
/f0 f
sv -53 Y 260([)D r
0.6666 1 1 SH

[/Dest /temp:intralink-c30 /Rect [7163 12252 7347 12068] /Border [0 0 0] /LNK pdfmark
sv 61(30)D r
0 0 0 SH
sv 184(],)D 183(making)D 630(the)D 301(scenario)D 692(dri)D 201(ven)D 340(by)D
217 Y -4138(Eq.)D 331(\()D r
0.6666 1 1 SH

[/Dest /temp:intralink-d24 /Rect [5948 12470 6132 12285] /Border [0 0 0] /LNK pdfmark
sv 61(24)D r
0 0 0 SH
sv 184(\))D 141(\256ne-tuned)D 829(belo)D 314(w)D 212(1)D 172(ppm)D 408(le)D
130(vel.)D 351(Finally)D 512(,)D 126(what)D 438(if)D r
/f4 f
sv 211 Y -4209(CPT)D r
/f0 f
sv 364(-violation)D 789(is)D 192(concentrated)D 1016(in)D 213(the)D 295(heavy)D
509(right-handed)D r
0 0 0 SH
/f11 /BG-Maths-Italic 166.945 0 0 -166.945 0 0 MF
sv -11914 Y -8018(CPT)D r
/f12 /Times-Roman 166.945 0 0 -166.945 0 0 MF
sv 330(-ODD)D 469(LEPTOGENE)D 963(SIS)D 5287(PHYSICAL)D 867(REVIEW)D 704(D)D
r
/f13 /Times-Bold 166.945 0 0 -166.945 0 0 MF
sv 174(00)D r
0 0 0 SH
/f14 /Times-Roman 158.155 0 0 -158.155 0 0 MF
sv 12671 Y -4353(7)D r

pagesave restore
showpage
%%Page: 8 9
%%BeginPageSetup
0 0 0 SH
% End of font info
/pagesave save def
/XX 0 def /YY 0 def /OH 0 def /OS 0 def /OB -1 def /IN true def
/OT 0 def /OO false def false SO
/ET 0 def
/pagemx matrix currentmatrix def
0.0566929 -0.0566929 scale 0 -13970 translate gsave
%%EndPageSetup
0 0 10795 13970 C
0 0 0 SH
0 0 0 SH
75 45 SS1
0 0 0 SH
0 0 0 SH
3236 4802 7559 4807 BX
-1 SOB
/f0 /Times-Roman 184.515 0 0 -184.515 0 0 MF
sv 1037 Y 916(neutrino)D 689(sector?)D 596(Phenomenology)D 1273(of)D 226(such)D
410(model)D 535(was)D 358(ad-)D 211 Y -4087(dressed)D 608(in)D 199(Ref.)D
367([)D r
0.6666 1 1 SH

[/Dest /temp:intralink-c31 /Rect [2152 1294 2336 1109] /Border [0 0 0] /LNK pdfmark
sv 62(31)D r
0 0 0 SH
sv 184(],)D 162(where)D 506(it)D 158(was)D 341(sho)D 251(wn)D 280(that)D
333(loop)D 383(ef)D 140(fects)D 211 Y -3974(reintroduce)D r
/f1 /BG-Maths-Italic 184.515 0 0 -184.515 0 0 MF
sv 885(CPT)D r
/f0 f
sv 402(violation)D 700(in)D 185(the)D 268(sector)D 483(of)D 195(char)D 317(ged)D
309(leptons.)D 210 Y -3744(Upon)D 473(inte)D 276(grating)D 587(out)D 300(hea)D
255(vy)D 248(neutrino)D 679(\256elds,)D 509(one)D 330(produces)D 211 Y -3657(operators)D
729(similar)D 556(to)D 185(Eq.)D 293(\()D r
0.6666 1 1 SH

[/Dest /temp:intralink-d24 /Rect [2740 1926 2924 1742] /Border [0 0 0] /LNK pdfmark
sv 61(24)D r
0 0 0 SH
sv 184(\),)D 149(and)D 308(therefore)D 709(such)D 379(possibility)D 211 Y -3553(is)D
177(also)D 351(\256ne-tuned.)D 211 Y -343(Our)D 406(main)D 490(conclusion)D
921(is)D 242(that)D 399(the)D 346(natural)D 635(le)D 130(v)D 90(els)D
326(of)D r
/f1 f
sv 211 Y -4170(CPT)D 365(=)D r
/f0 f
sv 92(Lorentz)D 650(violation)D 732(suggested)D 801(by)D 258(the)D r
/f1 f
sv 300(CPT)D r
/f0 f
sv 365(-odd)D 411(\(lep-)D 211 Y -3974(to\)baryogenesis)D 1272(scenario)D 719(are)D
r
/f2 /BG-Maths-Roman 184.515 0 0 -184.515 0 0 MF
sv 329(10)D r
/f3 /BG-Maths-Symbol 129.16 0 0 -129.16 0 0 MF
sv -65 Y 184(\377)D r
/f4 /BG-Maths-Roman 129.16 0 0 -129.16 0 0 MF
sv 108(3)D r
/f0 f
sv 65 Y 73(\261)D r
/f2 f
sv 92(10)D r
/f3 f
sv -65 Y 185(\377)D r
/f4 f
sv 107(5)D r
/f0 f
sv 65 Y 176(in)D 246(the)D 329(Planck)D 211 Y -3820(mass)D 426(units,)D 461(which)D
508(is)D 180(well)D 375(within)D 529(the)D 283(ranges)D 539(already)D 602(disfa-)D
211 Y -3903(vor)D 244(ed)D 244(by)D 253(the)D 295(laboratory)D 829(exp)D 265(eriments)D
706(and)D 336(observ)D 487(ations)D 511(of)D 210 Y -4170(the)D 301(high-ener)D
707(gy)D 258(cosmic)D 598(rays.)D 427(This)D 403(analysis)D 669(relies)D
475(on)D 259(the)D 211 Y -4097(spurion)D 592(approach)D 717(to)D r
/f1 f
sv 182(CPT)D r
/f0 f
sv 402(violation,)D 743(which)D 490(assumes)D 654(that)D 317(the)D 211 Y -4097(strength)D
634(of)D 193(the)D r
/f1 f
sv 265(CPT)D r
/f0 f
sv 365(-odd)D 376(source)D 517(was)D 325(essentially)D 820(the)D 265(same)D
419(in)D 211 Y -4179(the)D 294(early)D 438(Uni)D 272(verse)D 455(and)D 334(today)D
400(.)D 113(It)D 180(is)D 190(of)D 221(course)D 549(concei)D 480(v)D 88(able)D
211 Y -4014(that)D 328(the)D 276(dynamical)D 821(ef)D 140(fects)D 399(could)D
460(hav)D 263(e)D 132(been)D 399(responsible)D 890(for)D -3163 Y 532(the)D
r
/f1 f
sv 284(CPT)D r
/f0 f
sv 422(breaking)D 705(at)D 192(high)D 386(temperatures,)D 1060(sourcing)D
694(the)D 284(bar)D 234(-)D 211 Y -4261(yogenesis,)D 838(with)D 394(relaxation)D
806(of)D r
/f1 f
sv 218(CPT)D r
/f0 f
sv 430(sources)D 618(to)D 209(zero)D 384(at)D 199(the)D 211 Y -4096(later)D
383(stage)D 434([)D r
0.6666 1 1 SH

[/Dest /temp:intralink-c32 /Rect [6435 1505 6619 1320] /Border [0 0 0] /LNK pdfmark
sv 62(32)D r
0 0 0 SH
sv 184(].)D r
/f5 /Times-Bold 184.515 0 0 -184.515 0 0 MF
sv 421 Y 83(A)D 123(CKNO)D 546(WLEDGMENTS)D r
/f0 f
sv 317 Y -1631(The)D 384(authors)D 638(would)D 557(like)D 373(to)D 240(thank)D
506(A.)D 274(Ritz)D 405(for)D 310(useful)D 210 Y -3871(discussions.)D 1014(This)D
458(work)D 508(is)D 253(supported)D 857(in)D 274(part)D 418(by)D 314(the)D
211 Y -4096(NSERC)D 654(of)D 214(Canada.)D 662(Research)D 739(at)D 195(the)D
287(Perimeter)D 781(Institute)D 668(is)D 211 Y -4200(supported)D 796(in)D
213(part)D 357(by)D 253(the)D 295(Gov)D 313(ernment)D 675(of)D 223(Canada)D
623(through)D 211 Y -3748(NSERC)D 662(and)D 335(by)D 253(the)D 296(Pro)D 253(vince)D
470(of)D 223(Ontario)D 633(through)D 643(MEDT)D 508(.)D 211 Y -4276(M.)D 240(P)D
82(.)D 118(would)D 533(like)D 350(to)D 216(thank)D 482(the)D 299(Aspen)D
542(Center)D 565(for)D 287(Physics,)D 211 Y -3714(where)D 497(part)D 333(of)D
200(this)D 312(research)D 662(project)D 561(was)D 332(carried)D 560(out.)D
328(P)D 83(.)D 76(A.)D 210(B.)D 211 Y -4154(thanks)D 540(the)D 285(Pac)D
265(i\256c)D 295(Institute)D 665(for)D 274(Mathematical)D 1078(Sciences)D
705(for)D 211 Y -4107(its)D 228(support)D 607(enabling)D 691(the)D 280(participation)D
990(in)D 198(the)D 280(2006)D 423(Summer)D 210 Y -3697(School)D 566(on)D 238(Strings,)D
622(Gra)D 274(vity)D 277(,)D 99(and)D 321(Cosmology)D 839(.)D r
/f6 /Times-Roman 166.945 0 0 -166.945 0 0 MF
sv 1433 Y -7754([1])D r
0.6666 1 1 SH
sv -583(1)D r
0 0 0 SH
sv 883(A.)D 190(D.)D 211(Sakharov)D 619(,)D 92(Pis'ma)D 514(Zh.)D 277(Eksp.)D
426(T)D 92(eor)D 205(.)D 91(Fiz.)D r
/f7 /Times-Bold 166.945 0 0 -166.945 0 0 MF
sv 306(5)D r
/f6 f
sv 83(,)D 92(32)D 217(\(1967\).)D 193 Y -3715([2])D 300(F)D 80(.)D 70(R.)D
191(Klinkhamer)D 839(and)D 280(N.)D 189(S.)D 173(Manton,)D 600(Phys.)D
404(Re)D 182(v)D 73(.)D 81(D)D r
/f7 f
sv 158(30)D r
/f6 f
sv 167(,)D 81(2212)D 194 Y -3568(\(1984\).)D 193 Y -300([3])D 300(V)D 99(.)D
70(A.)D 237(Ku)D 201(zmin,)D 453(V)D 99(.)D 69(A.)D 237(Rubakov)D 591(,)D
117(and)D 317(M.)D 217(E.)D 219(Shaposhnikov)D 934(,)D 193 Y -3860(Phys.)D
419(Lett.)D 366(B)D r
/f7 f
sv 165(155)D r
/f6 f
sv 250(,)D 96(36)D 220(\(1985\).)D 194 Y -1816([4])D 300(A.)D 190(D.)D 213(Dolgo)D
415(v)D 131(and)D 293(Y)D 99(.)D 70(B.)D 204(Zeldo)D 389(vich,)D 382(Re)D
182(v)D 73(.)D 93(Mod.)D 408(Phys.)D r
/f7 f
sv 416(53)D r
/f6 f
sv 167(,)D 93(1)D 193 Y -3818(\(1981\).)D 193 Y -300([5])D 300(A.)D 190(D.)D
215(Dolgo)D 415(v)D 73(,)D 96(Phys.)D 418(Rep.)D r
/f7 f
sv 365(222)D r
/f6 f
sv 250(,)D 96(309)D 303(\(1992\).)D 194 Y -2721([6])D 300(D.)D 213(Colladay)D
656(and)D 293(V)D 99(.)D 70(A.)D 213(K)D 114(ostelecky)D 621(,)D 93(Phys.)D
416(Re)D 183(v)D 73(.)D 93(D)D r
/f7 f
sv 171(55)D r
/f6 f
sv 167(,)D 93(6760)D 193 Y -3568(\(1997\).)D 193 Y -300([7])D 300(D.)D 261(Colladay)D
704(and)D 341(V)D 99(.)D 70(A.)D 261(K)D 115(osteleck)D 547(y)D 73(,)D
141(Phys.)D 465(Re)D 182(v)D 73(.)D 141(D)D r
/f7 f
sv 220(58)D r
/f6 f
sv 167(,)D 194 Y -3860(116002)D 554(\(1998\).)D 193 Y -854([8])D 300(O.)D 266(Bertolami,)D
816(D.)D 266(Colladay)D 594(,)D 146(V)D 99(.)D 69(A.)D 266(K)D 115(osteleck)D
547(y)D 73(,)D 146(and)D 345(R.)D 193 Y -3748(Potting,)D 579(Phys.)D 418(Lett.)D
367(B)D r
/f7 f
sv 165(395)D r
/f6 f
sv 250(,)D 95(178)D 304(\(1997\).)D 193 Y -2478([9])D 300(S.)D 162(M.)D 234(Carroll)D
520(and)D 286(J.)D 151(Shu,)D 346(Phys.)D 410(Re)D 182(v)D 73(.)D 87(D)D
r
/f7 f
sv 165(73)D r
/f6 f
sv 167(,)D 86(103515)D 546(\(2006\).)D 194 Y -3798([10])D 383(U.)D 238(Debnath,)D
684(B.)D 229(Mukhopadhyay)D 1037(,)D 118(and)D 317(N.)D 238(Dadhich,)D 684(Mod.)D
193 Y -3545(Phys.)D 419(Lett.)D 366(A)D r
/f7 f
sv 174(21)D r
/f6 f
sv 167(,)D 95(399)D 304(\(2006\).)D 193 Y -1908([11])D 383(M.)D 282(Fukugita)D
686(and)D 334(T)D 90(.)D 134(Y)D 104(anagida,)D 655(Phys.)D 457(Lett.)D
405(B)D r
/f7 f
sv 203(174)D r
/f6 f
sv 251(,)D 133(45)D 194 Y -3734(\(1986\).)D 193 Y -383([12])D 383(R.)D 181(C.)D
196(Myers)D 468(and)D 285(M.)D 232(Pospelov)D 600(,)D 84(Phys.)D 408(Re)D
182(v)D 73(.)D 85(Lett.)D r
/f7 f
sv 355(90)D r
/f6 f
sv 167(,)D 85(211601)D 193 Y -3401(\(2003\);)D 546(gr)D 137(-qc/0402028)D
836(.)D 194 Y -1902([13])D 383(O.)D 233(Gagnon)D 600(and)D 312(G.)D 190(D.)D
233(Moore,)D 557(Phys.)D 437(Re)D 182(v)D 73(.)D 113(D)D r
/f7 f
sv 191(70)D r
/f6 f
sv 167(,)D 113(065002)D 193 Y -3401(\(2004\).)D 193 Y -383([14])D 383(M.)D 217(A.)D
216(Luty)D 306(,)D 95(Phys.)D 419(Re)D 182(v)D 73(.)D 95(D)D r
/f7 f
sv 174(45)D r
/f6 f
sv 167(,)D 95(455)D 304(\(1992\).)D 193 Y -2726([15])D 383(M.)D 243(Plumacher)D
711(,)D 95(Z.)D 198(Phys.)D 419(C)D r
/f7 f
sv 165(74)D r
/f6 f
sv 167(,)D 95(549)D 304(\(1997\).)D 194 Y -2780([16])D 383(S.)D 162(Y)D 99(.)D
126(Khlebniko)D 704(v)D 164(and)D 325(M.)D 218(E.)D 228(Shaposhniko)D 860(v)D
73(,)D 126(Nucl.)D 451(Phys.)D r
/f7 f
sv 193 Y -3536(B308)D r
/f6 f
sv 362(,)D 95(885)D 304(\(1988\).)D 193 Y -1144([17])D 383(G.)D 190(D.)D 215(Moore,)D
540(Phys.)D 419(Re)D 182(v)D 73(.)D 96(D)D r
/f7 f
sv 173(62)D r
/f6 f
sv 167(,)D 95(085011)D 554(\(2000\).)D -5219 Y 1552([18])D 383(G.)D 190(D.)D
215(Moore,)D 540(hep-ph/0009161.)D 193 Y -1328([19])D 383(J.)D 134(A.)D 241(Harve)D
405(y)D 163(and)D 321(M.)D 218(S.)D 213(T)D 95(urner)D 348(,)D 121(Phys.)D
445(Re)D 182(v)D 73(.)D 121(D)D r
/f7 f
sv 200(42)D r
/f6 f
sv 167(,)D 121(3344)D 194 Y -3568(\(1990\).)D 193 Y -383([20])D 383(E.)D 172(W)D
145(.)D 108(K)D 115(olb)D 281(and)D 308(M.)D 218(S.)D 200(T)D 96(urner)D
348(,)D 108(Frontiers)D 670(in)D 197(Physics)D r
/f7 f
sv 577(69)D r
/f6 f
sv 167(,)D 108(1)D 193 Y -3818(\(1990\).)D 194 Y -383([21])D 383(W)D 145(.)D
69(M.)D 249(Y)D 104(ao)D r
/f8 /Times-Italic 166.945 0 0 -166.945 0 0 MF
sv 218(et)D 181(al.)D r
/f6 f
sv 231(\(Part)D 323(icle)D 303(Data)D 376(Group\),)D 582(J.)D 166(Phys.)D
424(G)D r
/f7 f
sv 179(33)D r
/f6 f
sv 167(,)D 101(1)D 193 Y -3818(\(2006\).)D 193 Y -383([22])D 383(S.)D 175(Hannestad)D
746(and)D 282(G.)D 203(Raf)D 238(felt,)D 306(J.)D 147(Cosmol.)D 602(Astrpart.)D
630(Phys.)D 406(04)D 194 Y -3735(\()D r
/f7 f
sv 56(2004)D r
/f6 f
sv 334(\))D 109(008)D 242(.)D 193 Y -1124([23])D 383(W)D 145(.)D 81(Buchmuller)D
785(,)D 82(R.)D 180(D.)D 201(Peccei,)D 520(and)D 281(T)D 90(.)D 81(Y)D
104(anagida,)D 603(Annu.)D 451(Re)D 183(v)D 73(.)D 193 Y -3860(Nucl.)D 421(P)D
90(art.)D 273(Sci.)D r
/f7 f
sv 309(55)D r
/f6 f
sv 167(,)D 95(311)D 304(\(2005\).)D 194 Y -2042([24])D r
0.6666 1 1 SH
sv 4683(2)D r
0 0 0 SH
sv -4300(C.)D 207(Berg)D 323(lund)D r
/f8 f
sv 351(et)D 175(al.)D r
/f6 f
sv 172(,)D 96(Phys.)D 418(Re)D 183(v)D 73(.)D 95(Lett.)D r
/f7 f
sv 367(75)D r
/f6 f
sv 166(,)D 96(1879)D 387(\(1995\).)D 193 Y -3492([25])D 383(D.)D 218(Bear)D
311(,)D 98(R.)D 181(E.)D 201(Stoner)D 431(,)D 98(R.)D 180(L.)D 201(W)D
146(alsworth,)D 673(V)D 99(.)D 70(A.)D 218(K)D 114(ostelecky)D 621(,)D
193 Y -3860(and)D 296(C.)D 180(D.)D 216(Lane,)D 430(Phys.)D 419(Re)D 182(v)D
73(.)D 96(Lett.)D r
/f7 f
sv 366(85)D r
/f6 f
sv 167(,)D 95(5038)D 388(\(2000\).)D 193 Y -3291([26])D 383(T)D 91(.)D 101(Jacobson,)D
713(S.)D 193(Liberati,)D 633(and)D 301(D.)D 221(Mattingly)D 650(,)D 101(Annals)D
533(Phys.)D r
/f7 f
sv 194 Y -3537(321)D r
/f6 f
sv 251(,)D 95(150)D 304(\(2006\).)D 193 Y -1033([27])D 383(D.)D 207(Sudarsky)D
609(,)D 87(L.)D 189(Urrutia,)D 570(and)D 287(H.)D 207(V)D 108(ucetich,)D
572(Phys.)D 410(Re)D 183(v)D 73(.)D 87(Lett.)D r
/f7 f
sv 193 Y -3589(89)D r
/f6 f
sv 167(,)D 96(231301)D 554(\(2002\).)D 194 Y -1200([28])D 383(P)D 75(.)D
70(A.)D 215(Bolokho)D 573(v)D 134(and)D 295(M.)D 243(Pospelov)D 664(\(unpublished\).)D
193 Y -2652([29])D 383(S.)D 185(Groot)D 439(Nibbelink)D 720(and)D 292(M.)D
239(Pospelov)D 600(,)D 92(Phys.)D 415(Re)D 183(v)D 73(.)D 92(Lett.)D
r
/f7 f
sv 363(94)D r
/f6 f
sv 167(,)D 193 Y -3860(081601)D 555(\(2005\).)D 194 Y -938([30])D 383(P)D 75(.)D
70(A.)D 224(Bolokho)D 573(v)D 73(,)D 104(S.)D 162(G.)D 223(Nibbelink,)D
774(and)D 303(M.)D 252(Pospelov)D 600(,)D 104(Phys.)D 193 Y -3537(Re)D 183(v)D
73(.)D 95(D)D r
/f7 f
sv 174(72)D r
/f6 f
sv 167(,)D 95(015013)D 554(\(2005\).)D 193 Y -1724([31])D 383(I.)D 190(Mocioiu)D
660(and)D 334(M.)D 282(Pospelo)D 526(v)D 73(,)D 135(Phys.)D 457(Lett.)D
406(B)D r
/f7 f
sv 203(534)D r
/f6 f
sv 251(,)D 134(114)D 193 Y -3651(\(2002\).)D 194 Y -383([32])D 383(A.)D 190(G.)D
236(Cohen)D 511(and)D 317(D.)D 189(B.)D 228(Kaplan,)D 600(Phys.)D 440(Lett.)D
387(B)D r
/f7 f
sv 186(199)D r
/f6 f
sv 251(,)D 116(251)D 193 Y -3651(\(1987\).)D r
0 0 0 SH
sv -9833 Y -5061(P)D 79(A)D 99(VEL)D 378(A.)D 216(BOLOKHO)D 806(V)D 153(AND)D
413(MAXIM)D 645(POSPELO)D 714(V)D 3546(PHYSICAL)D 867(REVIEW)D 704(D)D r
/f7 f
sv 174(00)D r
0 0 0 SH
/f9 /Times-Roman 158.155 0 0 -158.155 0 0 MF
sv 12671 Y -4353(8)D r

[/Dest /temp:intralink-c1 /View [/XYZ 52 490 0] /DEST pdfmark
[/Dest /query_position_1 /View [/XYZ 52 490 0] /DEST pdfmark
[/Dest /temp:intralink-c2 /View [/XYZ 52 479 0] /DEST pdfmark
[/Dest /temp:intralink-c3 /View [/XYZ 52 457 0] /DEST pdfmark
[/Dest /temp:intralink-c4 /View [/XYZ 52 435 0] /DEST pdfmark
[/Dest /temp:intralink-c5 /View [/XYZ 52 413 0] /DEST pdfmark
[/Dest /temp:intralink-c6 /View [/XYZ 52 402 0] /DEST pdfmark
[/Dest /temp:intralink-c7 /View [/XYZ 52 380 0] /DEST pdfmark
[/Dest /temp:intralink-c8 /View [/XYZ 52 359 0] /DEST pdfmark
[/Dest /temp:intralink-c9 /View [/XYZ 52 337 0] /DEST pdfmark
[/Dest /temp:intralink-c10 /View [/XYZ 52 326 0] /DEST pdfmark
[/Dest /temp:intralink-c11 /View [/XYZ 52 304 0] /DEST pdfmark
[/Dest /temp:intralink-c12 /View [/XYZ 52 282 0] /DEST pdfmark
[/Dest /temp:intralink-c13 /View [/XYZ 52 260 0] /DEST pdfmark
[/Dest /temp:intralink-c14 /View [/XYZ 52 238 0] /DEST pdfmark
[/Dest /temp:intralink-c15 /View [/XYZ 52 227 0] /DEST pdfmark
[/Dest /temp:intralink-c16 /View [/XYZ 52 216 0] /DEST pdfmark
[/Dest /temp:intralink-c17 /View [/XYZ 52 194 0] /DEST pdfmark
[/Dest /temp:intralink-c18 /View [/XYZ 315 490 0] /DEST pdfmark
[/Dest /temp:intralink-c19 /View [/XYZ 315 479 0] /DEST pdfmark
[/Dest /temp:intralink-c20 /View [/XYZ 315 457 0] /DEST pdfmark
[/Dest /temp:intralink-c21 /View [/XYZ 315 435 0] /DEST pdfmark
[/Dest /temp:intralink-c22 /View [/XYZ 315 413 0] /DEST pdfmark
[/Dest /temp:intralink-c23 /View [/XYZ 315 391 0] /DEST pdfmark
[/Dest /temp:intralink-c24 /View [/XYZ 315 370 0] /DEST pdfmark
[/Dest /query_position_2 /View [/XYZ 315 370 0] /DEST pdfmark
[/Dest /temp:intralink-c25 /View [/XYZ 315 359 0] /DEST pdfmark
[/Dest /temp:intralink-c26 /View [/XYZ 315 337 0] /DEST pdfmark
[/Dest /temp:intralink-c27 /View [/XYZ 315 315 0] /DEST pdfmark
[/Dest /temp:intralink-c28 /View [/XYZ 315 293 0] /DEST pdfmark
[/Dest /temp:intralink-c29 /View [/XYZ 315 282 0] /DEST pdfmark
[/Dest /temp:intralink-c30 /View [/XYZ 315 260 0] /DEST pdfmark
[/Dest /temp:intralink-c31 /View [/XYZ 315 238 0] /DEST pdfmark
[/Dest /temp:intralink-c32 /View [/XYZ 315 216 0] /DEST pdfmark
pagesave restore
showpage
%%Trailer
%%DocumentNeededResources: font Helvetica-Bold
%%+ font Times-Roman
%%+ font Times-Italic
%%+ font Symbol
%%+ font Times-BoldItalic
%%+ font BG-Maths-Italic-Bold
%%+ font Times-Bold
%%+ font BG-Maths-Italic
%%+ font BG-Maths-Symbol
%%+ font BG-Maths-Roman
%%+ font BG-Maths-Calligraphic
%%+ font BG-Maths-Extension
%%+ font BG-Maths-Symbol-Bold
%%+ font BG-Maths-Extension-Bold
%%+  -->
%%+ font BG-Maths-Fraktur
%%+ font MathematicalPi-One
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.19 0
%%+ procset Adobe_CoolType_Core 2.23 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%Pages: 9
end
%%EOF
